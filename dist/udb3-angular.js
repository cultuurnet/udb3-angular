// Source: .tmp/udb3-angular.modules.js
(function () {
'use strict';

/**
 * @ngdoc module
 * @name udb.core
 * @description
 * The udb core module
 */
angular
    .module('udb.core', [
        'ngCookies',
        'ngSanitize',
        'ui.bootstrap',
        'ui.select',
        'udb.config',
        'udb.search',
        'udb.entry',
        'udb.event-form',
        'udb.offer-translate',
        'udb.export',
        'udb.event-detail',
        'udb.place-detail',
        'udb.organizers',
        'udb.dashboard',
        'udb.saved-searches',
        'udb.media',
        'udb.management',
        'udb.uitpas',
        'udb.cultuurkuur',
        'btford.socket-io',
        'pascalprecht.translate',
        'angular.filter',
        'angular-jwt'
    ])
    .constant('Levenshtein', window.Levenshtein);

'use strict';

/**
 * @ngdoc module
 * @name udb.router
 * @description
 * The udb routing module
 */
angular
  .module('udb.router', [
    'udb.core'
  ]);

angular.module('udb.config', [])

.constant('appConfig', {})

.constant('taxonomyTerms', [{id:'0.50.4.0.0',domain:'eventtype',name:{nl:'Concert',fr:'Concert',de:'Konzert',en:'Concert'},scope:['events'],otherSuggestedTerms:[{id:'1.8.3.5.0',domain:'theme',name:{nl:'Amusementsmuziek',fr:'Cabaret',de:'Schlager',en:'Cabaret music'},scope:['events']},{id:'1.8.3.3.0',domain:'theme',name:{nl:'Dance muziek',fr:'Musique de danse',de:'Tanzmusik',en:'Dance music'},scope:['events']},{id:'1.8.4.0.0',domain:'theme',name:{nl:'Folk en wereldmuziek',fr:'Musique folklorique et mondiale',de:'Folk und World',en:'Folk and world music'},scope:['events']},{id:'1.8.3.2.0',domain:'theme',name:{nl:'Hip hop, rnb en rap',fr:'Hip hop, rnb et rap',de:'Hip-Hop, R und B und Rap',en:'Hip hop, rnb and rap'},scope:['events']},{id:'1.8.2.0.0',domain:'theme',name:{nl:'Jazz en blues',fr:'Jazz et blues',de:'Jazz und Blues',en:'Jazz and blues'},scope:['events']},{id:'1.8.1.0.0',domain:'theme',name:{nl:'Klassieke muziek',fr:'Musique classique',de:'Klassische Musik',en:'Classical music'},scope:['events']},{id:'1.8.3.1.0',domain:'theme',name:{nl:'Pop en rock',fr:'Pop et rock',de:'Pop und Rock',en:'Pop and rock'},scope:['events']}],label:'Concert',labelnl:'Concert',labelfr:'Concert',labelen:'Concert',labelde:'Konzert'},{id:'0.52.0.0.0',domain:'theme',name:{nl:'Circus',fr:'Cirque',de:'Zirkus',en:'Circus'},scope:['events'],label:'Circus',labelnl:'Circus',labelfr:'Cirque',labelen:'Circus',labelde:'Zirkus'},{id:'0.54.0.0.0',domain:'eventtype',name:{nl:'Dansvoorstelling',fr:'Spectacle de danse',de:'Tanz-Performance',en:'Dance performance'},scope:['events'],otherSuggestedTerms:[{id:'1.9.1.0.0',domain:'theme',name:{nl:'Ballet en klassieke dans',fr:'Ballet et danse classique',de:'Ballett und klassischer Tanz',en:'Classical dance and ballet'},scope:['events']},{id:'1.9.2.0.0',domain:'theme',name:{nl:'Moderne dans',fr:'Danse moderne',de:'Modern Dance',en:'Modern dance'},scope:['events']},{id:'1.9.5.0.0',domain:'theme',name:{nl:'Stijl en salondansen',fr:'Danse de salon et stylée',de:'Stil-und Gesellschaftstanz',en:'Ballroom dancing'},scope:['events']},{id:'1.9.3.0.0',domain:'theme',name:{nl:'Volksdans en werelddans',fr:'Danse folklorique et mondiale',de:'Folk-und World Dance',en:'Folk dance'},scope:['events']}],label:'Dansvoorstelling',labelnl:'Dansvoorstelling',labelfr:'Spectacle de danse',labelen:'Dance performance',labelde:'Tanz-Performance'},{id:'0.5.0.0.0',domain:'eventtype',name:{nl:'Festival',fr:'Festival',de:'Festival',en:'Festival'},scope:['events'],otherSuggestedTerms:[{id:'1.8.3.5.0',domain:'theme',name:{nl:'Amusementsmuziek',fr:'Cabaret',de:'Schlager',en:'Cabaret music'},scope:['events']},{id:'0.52.0.0.0',domain:'theme',name:{nl:'Circus',fr:'Cirque',de:'Zirkus',en:'Circus'},scope:['events']},{id:'1.8.3.3.0',domain:'theme',name:{nl:'Dance muziek',fr:'Musique de danse',de:'Tanzmusik',en:'Dance music'},scope:['events']},{id:'1.8.4.0.0',domain:'theme',name:{nl:'Folk en wereldmuziek',fr:'Musique folklorique et mondiale',de:'Folk und World',en:'Folk and world music'},scope:['events']},{id:'1.3.10.0.0',domain:'theme',name:{nl:'Humor en comedy',fr:'L\'humour et la comédie',de:'Humor und comedy',en:'Humor and comedy'},scope:['events']},{id:'1.8.2.0.0',domain:'theme',name:{nl:'Jazz en blues',fr:'Jazz et blues',de:'Jazz und Blues',en:'Jazz and blues'},scope:['events']},{id:'1.8.1.0.0',domain:'theme',name:{nl:'Klassieke muziek',fr:'Musique classique',de:'Klassische Musik',en:'Classical music'},scope:['events']},{id:'1.41.0.0.0',domain:'theme',name:{nl:'Kunst en kunsteducatie',fr:'Arts et formation artistique',de:'Kunst und Kunsterziehung',en:'Arts education'},scope:['events']},{id:'1.10.0.0.0',domain:'theme',name:{nl:'Literatuur',fr:'Litérature',de:'Literatur',en:'Literature'},scope:['events']},{id:'1.7.14.0.0',domain:'theme',name:{nl:'Meerdere filmgenres',fr:'Films de tous genres',de:'Mehrere Filmgenres',en:'Multiple film genres'},scope:['events']},{id:'1.0.9.0.0',domain:'theme',name:{nl:'Meerdere kunstvormen',fr:'Arts multiples',de:'Mehrere Formen der Kunst',en:'Multiple art forms'},scope:['events']},{id:'1.8.3.1.0',domain:'theme',name:{nl:'Pop en rock',fr:'Pop et rock',de:'Pop und Rock',en:'Pop and rock'},scope:['events']},{id:'1.37.2.0.0',domain:'theme',name:{nl:'Samenleving',fr:'Vivre en société',de:'Gesellschaft',en:'Society'},scope:['events']},{id:'1.3.1.0.0',domain:'theme',name:{nl:'Tekst en muziektheater',fr:'Théâtre dramatique et musical',de:'Text und Musik',en:'Theatre and Musical theatre'},scope:['events']},{id:'1.25.0.0.0',domain:'theme',name:{nl:'Wetenschap',fr:'Science',de:'Wissenschaft',en:'Science'},scope:['events']}],label:'Festival',labelnl:'Festival',labelfr:'Festival',labelen:'Festival',labelde:'Festival'},{id:'0.50.6.0.0',domain:'eventtype',name:{nl:'Film',fr:'Cinéma',de:'Film',en:'Film'},scope:['events'],otherSuggestedTerms:[{id:'1.7.2.0.0',domain:'theme',name:{nl:'Actie- en avonturenfilm',fr:'Film d\'action et d\'aventure',de:'Action- und Abenteuerfilm',en:'Action and adventure film'},scope:['events']},{id:'1.7.12.0.0',domain:'theme',name:{nl:'Animatie en kinderfilms',fr:'Films animés et films pour enfants',de:'Animations-und Kinderfilme',en:'Animation and children\'s films'},scope:['events']},{id:'1.7.11.0.0',domain:'theme',name:{nl:'Cinefiel',fr:'Cinéphile',de:'Cinephile',en:'Independent'},scope:['events']},{id:'1.7.1.0.0',domain:'theme',name:{nl:'Documentaires en reportages',fr:'Documentaires et reportages',de:'Dokumentationen und Reportagen',en:'Documentary'},scope:['events']},{id:'1.7.4.0.0',domain:'theme',name:{nl:'Drama',fr:'Films dramatiques',de:'Drama',en:'Drama'},scope:['events']},{id:'1.7.10.0.0',domain:'theme',name:{nl:'Filmmusical',fr:'Comédie musicale',de:'Musical',en:'Musical'},scope:['events']},{id:'1.7.6.0.0',domain:'theme',name:{nl:'Griezelfilm of horror',fr:'Films d\'épouvantes ou orreurs',de:'Horror',en:'Horror'},scope:['events']},{id:'1.7.8.0.0',domain:'theme',name:{nl:'Historische film',fr:'Films historiques',de:'Historische Film',en:'Historical film'},scope:['events']},{id:'1.7.3.0.0',domain:'theme',name:{nl:'Komedie',fr:'Comédie',de:'Komödie',en:'Comedy'},scope:['events']},{id:'1.7.13.0.0',domain:'theme',name:{nl:'Kortfilm',fr:'Court métrage',de:'Kurzfilm',en:'Short film'},scope:['events']},{id:'1.7.7.0.0',domain:'theme',name:{nl:'Science fiction',fr:'Science fiction',de:'Science-Fiction',en:'Science fiction'},scope:['events']},{id:'1.7.15.0.0',domain:'theme',name:{nl:'Thriller',fr:'Films à suspense',de:'Thriller',en:'Thriller'},scope:['events']}],label:'Film',labelnl:'Film',labelfr:'Cinéma',labelen:'Film',labelde:'Film'},{id:'0.3.2.0.0',domain:'eventtype',name:{nl:'Lezing of congres',fr:'Conférence ou congrès',de:'Vortrag oder Gespräch',en:'Lecture or conference'},scope:['events'],otherSuggestedTerms:[{id:'1.21.0.0.0',domain:'theme',name:{nl:'Computer en techniek',fr:'Ordinateurs et technologie',de:'Computer-und Technik',en:'Computer and technology'},scope:['events']},{id:'1.42.0.0.0',domain:'theme',name:{nl:'Creativiteit',fr:'Créativité',de:'Kreativität',en:'Creativity'},scope:['events']},{id:'1.40.0.0.0',domain:'theme',name:{nl:'Erfgoed',fr:'Patrimoine',de:'Kulturerben',en:'Heritage'},scope:['events']},{id:'1.11.0.0.0',domain:'theme',name:{nl:'Geschiedenis',fr:'Histoire',de:'Geschichte',en:'History'},scope:['events']},{id:'1.37.1.0.0',domain:'theme',name:{nl:'Gezondheid en zorg',fr:'Santé et soins',de:'Gesundheit und Pflege',en:'Health and care'},scope:['events']},{id:'1.41.0.0.0',domain:'theme',name:{nl:'Kunst en kunsteducatie',fr:'Arts et formation artistique',de:'Kunst und Kunsterziehung',en:'Arts education'},scope:['events']},{id:'1.10.0.0.0',domain:'theme',name:{nl:'Literatuur',fr:'Litérature',de:'Literatur',en:'Literature'},scope:['events']},{id:'1.64.0.0.0',domain:'theme',name:{nl:'Milieu en natuur',fr:'Environnement et nature',de:'Umwelt und Natur',en:'Environment and nature'},scope:['events']},{id:'1.37.0.0.0',domain:'theme',name:{nl:'Opvoeding',fr:'Éducation',de:'Bildung',en:'Education'},scope:['events']},{id:'1.61.0.0.0',domain:'theme',name:{nl:'Persoon en relaties',fr:'Hommes et relations',de:'Person und Gesellschaft',en:'People and society'},scope:['events']},{id:'1.10.5.0.0',domain:'theme',name:{nl:'Poezie',fr:'Poésie',de:'Poesie',en:'Poetry'},scope:['events']},{id:'1.37.2.0.0',domain:'theme',name:{nl:'Samenleving',fr:'Vivre en société',de:'Gesellschaft',en:'Society'},scope:['events']},{id:'1.25.0.0.0',domain:'theme',name:{nl:'Wetenschap',fr:'Science',de:'Wissenschaft',en:'Science'},scope:['events']},{id:'1.44.0.0.0',domain:'theme',name:{nl:'Zingeving, filosofie en religie',fr:'Sense de la vie, philosophie et religion',de:'Philosophie und Religion',en:'Philosophy and religion'},scope:['events']}],label:'Lezing of congres',labelnl:'Lezing of congres',labelfr:'Conférence ou congrès',labelen:'Lecture or conference',labelde:'Vortrag oder Gespräch'},{id:'0.55.0.0.0',domain:'eventtype',name:{nl:'Theatervoorstelling',fr:'Théâtre',de:'Theater',en:'Theatre'},scope:['events'],otherSuggestedTerms:[{id:'0.52.0.0.0',domain:'theme',name:{nl:'Circus',fr:'Cirque',de:'Zirkus',en:'Circus'},scope:['events']},{id:'1.3.5.0.0',domain:'theme',name:{nl:'Figuren en poppentheater',fr:'Théâtre de marionnettes',de:'Figuren und Marionetten',en:'Puppetry'},scope:['events']},{id:'1.3.10.0.0',domain:'theme',name:{nl:'Humor en comedy',fr:'L\'humour et la comédie',de:'Humor und comedy',en:'Humor and comedy'},scope:['events']},{id:'1.3.4.0.0',domain:'theme',name:{nl:'Mime en bewegingstheater',fr:'Mime et theéâtre de mouvements',de:'Mime und Bewegungstheater',en:'Mime '},scope:['events']},{id:'1.4.0.0.0',domain:'theme',name:{nl:'Musical',fr:'Comédie musicale',de:'Musical',en:'Musical'},scope:['events']},{id:'1.5.0.0.0',domain:'theme',name:{nl:'Opera en operette',fr:'Opéra et opérette',de:'Oper und Operette',en:'Opera and operetta'},scope:['events']},{id:'1.3.1.0.0',domain:'theme',name:{nl:'Tekst en muziektheater',fr:'Théâtre dramatique et musical',de:'Text und Musik',en:'Theatre and Musical theatre'},scope:['events']}],label:'Theatervoorstelling',labelnl:'Theatervoorstelling',labelfr:'Théâtre',labelen:'Theatre',labelde:'Theater'},{id:'0.19.0.0.0',domain:'eventtype',name:{nl:'Sportwedstrijd bekijken',fr:'Assister à une compétition sportive',de:'Sport Antzeigen',en:'Sports Viewing'},scope:['events'],otherSuggestedTerms:[{id:'1.51.14.0.0',domain:'theme',name:{nl:'Atletiek, wandelen en fietsen',fr:'Athlétisme, marche et cyclisme',de:'Leichtathletik, Wandern und Radfahren',en:'Athletics, running and cycling'},scope:['events']},{id:'1.51.13.0.0',domain:'theme',name:{nl:'Bal en racketsport',fr:'Sports au ballons et raquettes',de:'Ball und Schläger',en:'Ball and racket sports'},scope:['events']},{id:'1.51.6.0.0',domain:'theme',name:{nl:'Fitness, gymnastiek, dans en vechtsport',fr:'Fitness, gymnastique, danse et arts martiaux',de:'Fitness, Tanz und Kampfkunst',en:'Fitness, gymnastics, dance and martial arts'},scope:['events']},{id:'1.58.8.0.0',domain:'theme',name:{nl:'Lucht en motorsport',fr:'Sports aero et moteurs',de:'Luft-und Motorsport',en:'Air and motorsports'},scope:['events']},{id:'1.51.12.0.0',domain:'theme',name:{nl:'Omnisport en andere',fr:'Omnisports et autres',de:'Omnisport und andere',en:'Other sports'},scope:['events']},{id:'1.51.11.0.0',domain:'theme',name:{nl:'Outdoor en Adventure sport',fr:'Sports de plein air et d\'aventure',de:'Outdoor- und Abenteuersport',en:'Outdoor and Adventure sports'},scope:['events']},{id:'1.51.10.0.0',domain:'theme',name:{nl:'Volkssporten',fr:'Sports folkloriques',de:'Sport Menschen',en:'Folklore sports'},scope:['events']},{id:'1.51.3.0.0',domain:'theme',name:{nl:'Zwemmen en watersport',fr:'Natation et sports nautiques',de:'Schwimmen und Wassersport',en:'Swimming and water sports'},scope:['events']}],label:'Sportwedstrijd bekijken',labelnl:'Sportwedstrijd bekijken',labelfr:'Assister à une compétition sportive',labelen:'Sports Viewing',labelde:'Sport Antzeigen'},{id:'0.37.0.0.0',domain:'eventtype',name:{nl:'Markt, braderie of kermis',fr:'Marché, foire ou fête foraine',de:'Markt oder Messe',en:'Market, fair or funfair'},scope:['events'],otherSuggestedTerms:[{id:'1.17.0.0.0',domain:'theme',name:{nl:'Antiek en brocante',fr:'Antiquités ou brocantes',de:'Antik-und Flohmarkt',en:'Antiques'},scope:['events']},{id:'1.66.0.0.0',domain:'theme',name:{nl:'Economie',fr:'Économie',de:'Wirtschaft',en:'Economy'},scope:['events']},{id:'1.62.0.0.0',domain:'theme',name:{nl:'Gezondheid en wellness',fr:'Santé et bien-être',de:'Gesundheit und Wellness',en:'Health and wellness'},scope:['events']},{id:'1.63.0.0.0',domain:'theme',name:{nl:'Landbouw en platteland',fr:'Agriculture et campagne',de:'Landwirtschaft ',en:'Agriculture'},scope:['events']},{id:'1.10.0.0.0',domain:'theme',name:{nl:'Literatuur',fr:'Litérature',de:'Literatur',en:'Literature'},scope:['events']},{id:'1.0.9.0.0',domain:'theme',name:{nl:'Meerdere kunstvormen',fr:'Arts multiples',de:'Mehrere Formen der Kunst',en:'Multiple art forms'},scope:['events']},{id:'1.64.0.0.0',domain:'theme',name:{nl:'Milieu en natuur',fr:'Environnement et nature',de:'Umwelt und Natur',en:'Environment and nature'},scope:['events']},{id:'1.37.2.0.0',domain:'theme',name:{nl:'Samenleving',fr:'Vivre en société',de:'Gesellschaft',en:'Society'},scope:['events']}],label:'Markt, braderie of kermis',labelnl:'Markt, braderie of kermis',labelfr:'Marché, foire ou fête foraine',labelen:'Market, fair or funfair',labelde:'Markt oder Messe'},{id:'0.15.0.0.0',domain:'eventtype',name:{nl:'Natuurgebied of park',fr:'Zone naturel ou parc',de:'Landschaft oder Natur',en:'Landscape or nature reserve'},scope:['places'],label:'Natuurgebied of park',labelnl:'Natuurgebied of park',labelfr:'Zone naturel ou parc',labelen:'Landscape or nature reserve',labelde:'Landschaft oder Natur'},{id:'0.14.0.0.0',domain:'eventtype',name:{nl:'Monument',fr:'Monument',de:'Denkmal',en:'Monument'},scope:['places'],label:'Monument',labelnl:'Monument',labelfr:'Monument',labelen:'Monument',labelde:'Denkmal'},{id:'0.12.0.0.0',domain:'eventtype',name:{nl:'Opendeurdag',fr:'Journée portes ouvertes',de:'Tag der offenen Tür',en:'Open house'},scope:['events'],otherSuggestedTerms:[{id:'1.2.1.0.0',domain:'theme',name:{nl:'Architectuur',fr:'Architecture',de:'Architektur',en:'Architecture'},scope:['events']},{id:'1.21.0.0.0',domain:'theme',name:{nl:'Computer en techniek',fr:'Ordinateurs et technologie',de:'Computer-und Technik',en:'Computer and technology'},scope:['events']},{id:'1.40.0.0.0',domain:'theme',name:{nl:'Erfgoed',fr:'Patrimoine',de:'Kulturerben',en:'Heritage'},scope:['events']},{id:'1.41.0.0.0',domain:'theme',name:{nl:'Kunst en kunsteducatie',fr:'Arts et formation artistique',de:'Kunst und Kunsterziehung',en:'Arts education'},scope:['events']},{id:'1.63.0.0.0',domain:'theme',name:{nl:'Landbouw en platteland',fr:'Agriculture et campagne',de:'Landwirtschaft ',en:'Agriculture'},scope:['events']},{id:'1.10.0.0.0',domain:'theme',name:{nl:'Literatuur',fr:'Litérature',de:'Literatur',en:'Literature'},scope:['events']},{id:'1.0.9.0.0',domain:'theme',name:{nl:'Meerdere kunstvormen',fr:'Arts multiples',de:'Mehrere Formen der Kunst',en:'Multiple art forms'},scope:['events']},{id:'1.37.2.0.0',domain:'theme',name:{nl:'Samenleving',fr:'Vivre en société',de:'Gesellschaft',en:'Society'},scope:['events']},{id:'1.25.0.0.0',domain:'theme',name:{nl:'Wetenschap',fr:'Science',de:'Wissenschaft',en:'Science'},scope:['events']}],label:'Opendeurdag',labelnl:'Opendeurdag',labelfr:'Journée portes ouvertes',labelen:'Open house',labelde:'Tag der offenen Tür'},{id:'0.6.0.0.0',domain:'eventtype',name:{nl:'Beurs',fr:'Foire',de:'Aktienmarkt',en:'Fair'},scope:['events'],otherSuggestedTerms:[{id:'1.17.0.0.0',domain:'theme',name:{nl:'Antiek en brocante',fr:'Antiquités ou brocantes',de:'Antik-und Flohmarkt',en:'Antiques'},scope:['events']},{id:'1.7.2.0.0',domain:'theme',name:{nl:'Actie- en avonturenfilm',fr:'Film d\'action et d\'aventure',de:'Action- und Abenteuerfilm',en:'Action and adventure film'},scope:['events']},{id:'1.62.0.0.0',domain:'theme',name:{nl:'Gezondheid en wellness',fr:'Santé et bien-être',de:'Gesundheit und Wellness',en:'Health and wellness'},scope:['events']},{id:'1.10.0.0.0',domain:'theme',name:{nl:'Literatuur',fr:'Litérature',de:'Literatur',en:'Literature'},scope:['events']},{id:'1.0.9.0.0',domain:'theme',name:{nl:'Meerdere kunstvormen',fr:'Arts multiples',de:'Mehrere Formen der Kunst',en:'Multiple art forms'},scope:['events']},{id:'1.64.0.0.0',domain:'theme',name:{nl:'Milieu en natuur',fr:'Environnement et nature',de:'Umwelt und Natur',en:'Environment and nature'},scope:['events']},{id:'1.37.2.0.0',domain:'theme',name:{nl:'Samenleving',fr:'Vivre en société',de:'Gesellschaft',en:'Society'},scope:['events']},{id:'1.10.8.0.0',domain:'theme',name:{nl:'Strips',fr:'Bandes dessinés',de:'Comics',en:'Comic books'},scope:['events']},{id:'1.65.0.0.0',domain:'theme',name:{nl:'Voeding',fr:'Nutrition',de:'Ernährung',en:'Nutrition'},scope:['events']},{id:'1.25.0.0.0',domain:'theme',name:{nl:'Wetenschap',fr:'Science',de:'Wissenschaft',en:'Science'},scope:['events']}],label:'Beurs',labelnl:'Beurs',labelfr:'Foire',labelen:'Fair',labelde:'Aktienmarkt'},{id:'0.0.0.0.0',domain:'eventtype',name:{nl:'Tentoonstelling',fr:'Exposition',de:'Ausstellung',en:'Exhibition'},scope:['events'],otherSuggestedTerms:[{id:'1.2.1.0.0',domain:'theme',name:{nl:'Architectuur',fr:'Architecture',de:'Architektur',en:'Architecture'},scope:['events']},{id:'1.21.0.0.0',domain:'theme',name:{nl:'Computer en techniek',fr:'Ordinateurs et technologie',de:'Computer-und Technik',en:'Computer and technology'},scope:['events']},{id:'1.1.0.0.0',domain:'theme',name:{nl:'Audiovisuele kunst',fr:'Arts audiovisuels',de:'Audiovisuelle Kunst',en:'Audiovisual arts'},scope:['events']},{id:'1.0.2.0.0',domain:'theme',name:{nl:'Beeldhouwkunst',fr:'Sculpture',de:'Skulptur',en:'Sculpture'},scope:['events']},{id:'1.0.5.0.0',domain:'theme',name:{nl:'Decoratieve kunst',fr:'Arts décoratives',de:'Angewandte Kunst',en:'Decorative arts'},scope:['events']},{id:'1.2.2.0.0',domain:'theme',name:{nl:'Design',fr:'Design',de:'Design',en:'Design'},scope:['events']},{id:'1.40.0.0.0',domain:'theme',name:{nl:'Erfgoed',fr:'Patrimoine',de:'Kulturerben',en:'Heritage'},scope:['events']},{id:'1.0.6.0.0',domain:'theme',name:{nl:'Fotografie',fr:'Photographie',de:'Fotografie',en:'Photography'},scope:['events']},{id:'1.11.0.0.0',domain:'theme',name:{nl:'Geschiedenis',fr:'Histoire',de:'Geschichte',en:'History'},scope:['events']},{id:'1.0.4.0.0',domain:'theme',name:{nl:'Grafiek',fr:'Art grafique',de:'Grafik',en:'Graphics'},scope:['events']},{id:'1.0.3.0.0',domain:'theme',name:{nl:'Installatiekunst',fr:'Art d\'installation',de:'Installation Art',en:'Installation art'},scope:['events']},{id:'1.10.0.0.0',domain:'theme',name:{nl:'Literatuur',fr:'Litérature',de:'Literatur',en:'Literature'},scope:['events']},{id:'1.0.9.0.0',domain:'theme',name:{nl:'Meerdere kunstvormen',fr:'Arts multiples',de:'Mehrere Formen der Kunst',en:'Multiple art forms'},scope:['events']},{id:'1.64.0.0.0',domain:'theme',name:{nl:'Milieu en natuur',fr:'Environnement et nature',de:'Umwelt und Natur',en:'Environment and nature'},scope:['events']},{id:'1.49.0.0.0',domain:'theme',name:{nl:'Mode',fr:'Mode',de:'Mode',en:'Fashion'},scope:['events']},{id:'1.37.2.0.0',domain:'theme',name:{nl:'Samenleving',fr:'Vivre en société',de:'Gesellschaft',en:'Society'},scope:['events']},{id:'1.0.1.0.0',domain:'theme',name:{nl:'Schilderkunst',fr:'Peinture',de:'Malerei',en:'Painting'},scope:['events']},{id:'1.25.0.0.0',domain:'theme',name:{nl:'Wetenschap',fr:'Science',de:'Wissenschaft',en:'Science'},scope:['events']}],label:'Tentoonstelling',labelnl:'Tentoonstelling',labelfr:'Exposition',labelen:'Exhibition',labelde:'Ausstellung'},{id:'0.7.0.0.0',domain:'eventtype',name:{nl:'Begeleide uitstap of rondleiding',fr:'Tour ou excursion guidée',de:'Geführte Wanderung oder Tour',en:'Guided tour'},scope:['events'],otherSuggestedTerms:[{id:'1.2.1.0.0',domain:'theme',name:{nl:'Architectuur',fr:'Architecture',de:'Architektur',en:'Architecture'},scope:['events']},{id:'1.40.0.0.0',domain:'theme',name:{nl:'Erfgoed',fr:'Patrimoine',de:'Kulturerben',en:'Heritage'},scope:['events']},{id:'1.11.0.0.0',domain:'theme',name:{nl:'Geschiedenis',fr:'Histoire',de:'Geschichte',en:'History'},scope:['events']},{id:'1.41.0.0.0',domain:'theme',name:{nl:'Kunst en kunsteducatie',fr:'Arts et formation artistique',de:'Kunst und Kunsterziehung',en:'Arts education'},scope:['events']},{id:'1.63.0.0.0',domain:'theme',name:{nl:'Landbouw en platteland',fr:'Agriculture et campagne',de:'Landwirtschaft ',en:'Agriculture'},scope:['events']},{id:'1.0.9.0.0',domain:'theme',name:{nl:'Meerdere kunstvormen',fr:'Arts multiples',de:'Mehrere Formen der Kunst',en:'Multiple art forms'},scope:['events']},{id:'1.64.0.0.0',domain:'theme',name:{nl:'Milieu en natuur',fr:'Environnement et nature',de:'Umwelt und Natur',en:'Environment and nature'},scope:['events']},{id:'1.37.2.0.0',domain:'theme',name:{nl:'Samenleving',fr:'Vivre en société',de:'Gesellschaft',en:'Society'},scope:['events']},{id:'1.25.0.0.0',domain:'theme',name:{nl:'Wetenschap',fr:'Science',de:'Wissenschaft',en:'Science'},scope:['events']},{id:'1.44.0.0.0',domain:'theme',name:{nl:'Zingeving, filosofie en religie',fr:'Sense de la vie, philosophie et religion',de:'Philosophie und Religion',en:'Philosophy and religion'},scope:['events']}],label:'Begeleide uitstap of rondleiding',labelnl:'Begeleide uitstap of rondleiding',labelfr:'Tour ou excursion guidée',labelen:'Guided tour',labelde:'Geführte Wanderung oder Tour'},{id:'0.3.1.0.0',domain:'eventtype',name:{nl:'Lessenreeks',fr:'Série de cours',de:'Unterrichtsreihe',en:'Course series'},scope:['events'],otherSuggestedTerms:[{id:'1.9.1.0.0',domain:'theme',name:{nl:'Ballet en klassieke dans',fr:'Ballet et danse classique',de:'Ballett und klassischer Tanz',en:'Classical dance and ballet'},scope:['events']},{id:'1.9.2.0.0',domain:'theme',name:{nl:'Moderne dans',fr:'Danse moderne',de:'Modern Dance',en:'Modern dance'},scope:['events']},{id:'1.9.5.0.0',domain:'theme',name:{nl:'Stijl en salondansen',fr:'Danse de salon et stylée',de:'Stil-und Gesellschaftstanz',en:'Ballroom dancing'},scope:['events']},{id:'1.9.3.0.0',domain:'theme',name:{nl:'Volksdans en werelddans',fr:'Danse folklorique et mondiale',de:'Folk-und World Dance',en:'Folk dance'},scope:['events']},{id:'1.1.0.0.0',domain:'theme',name:{nl:'Audiovisuele kunst',fr:'Arts audiovisuels',de:'Audiovisuelle Kunst',en:'Audiovisual arts'},scope:['events']},{id:'1.0.2.0.0',domain:'theme',name:{nl:'Beeldhouwkunst',fr:'Sculpture',de:'Skulptur',en:'Sculpture'},scope:['events']},{id:'0.52.0.0.0',domain:'theme',name:{nl:'Circus',fr:'Cirque',de:'Zirkus',en:'Circus'},scope:['events']},{id:'1.42.0.0.0',domain:'theme',name:{nl:'Creativiteit',fr:'Créativité',de:'Kreativität',en:'Creativity'},scope:['events']},{id:'1.0.5.0.0',domain:'theme',name:{nl:'Decoratieve kunst',fr:'Arts décoratives',de:'Angewandte Kunst',en:'Decorative arts'},scope:['events']},{id:'1.2.2.0.0',domain:'theme',name:{nl:'Design',fr:'Design',de:'Design',en:'Design'},scope:['events']},{id:'1.40.0.0.0',domain:'theme',name:{nl:'Erfgoed',fr:'Patrimoine',de:'Kulturerben',en:'Heritage'},scope:['events']},{id:'1.0.6.0.0',domain:'theme',name:{nl:'Fotografie',fr:'Photographie',de:'Fotografie',en:'Photography'},scope:['events']},{id:'1.0.4.0.0',domain:'theme',name:{nl:'Grafiek',fr:'Art grafique',de:'Grafik',en:'Graphics'},scope:['events']},{id:'1.10.0.0.0',domain:'theme',name:{nl:'Literatuur',fr:'Litérature',de:'Literatur',en:'Literature'},scope:['events']},{id:'1.0.9.0.0',domain:'theme',name:{nl:'Meerdere kunstvormen',fr:'Arts multiples',de:'Mehrere Formen der Kunst',en:'Multiple art forms'},scope:['events']},{id:'1.49.0.0.0',domain:'theme',name:{nl:'Mode',fr:'Mode',de:'Mode',en:'Fashion'},scope:['events']},{id:'1.10.5.0.0',domain:'theme',name:{nl:'Poezie',fr:'Poésie',de:'Poesie',en:'Poetry'},scope:['events']},{id:'1.0.1.0.0',domain:'theme',name:{nl:'Schilderkunst',fr:'Peinture',de:'Malerei',en:'Painting'},scope:['events']},{id:'1.3.1.0.0',domain:'theme',name:{nl:'Tekst en muziektheater',fr:'Théâtre dramatique et musical',de:'Text und Musik',en:'Theatre and Musical theatre'},scope:['events']},{id:'1.8.3.5.0',domain:'theme',name:{nl:'Amusementsmuziek',fr:'Cabaret',de:'Schlager',en:'Cabaret music'},scope:['events']},{id:'1.8.3.3.0',domain:'theme',name:{nl:'Dance muziek',fr:'Musique de danse',de:'Tanzmusik',en:'Dance music'},scope:['events']},{id:'1.8.4.0.0',domain:'theme',name:{nl:'Folk en wereldmuziek',fr:'Musique folklorique et mondiale',de:'Folk und World',en:'Folk and world music'},scope:['events']},{id:'1.8.3.2.0',domain:'theme',name:{nl:'Hip hop, rnb en rap',fr:'Hip hop, rnb et rap',de:'Hip-Hop, R und B und Rap',en:'Hip hop, rnb and rap'},scope:['events']},{id:'1.8.2.0.0',domain:'theme',name:{nl:'Jazz en blues',fr:'Jazz et blues',de:'Jazz und Blues',en:'Jazz and blues'},scope:['events']},{id:'1.8.1.0.0',domain:'theme',name:{nl:'Klassieke muziek',fr:'Musique classique',de:'Klassische Musik',en:'Classical music'},scope:['events']},{id:'1.8.3.1.0',domain:'theme',name:{nl:'Pop en rock',fr:'Pop et rock',de:'Pop und Rock',en:'Pop and rock'},scope:['events']},{id:'1.51.14.0.0',domain:'theme',name:{nl:'Atletiek, wandelen en fietsen',fr:'Athlétisme, marche et cyclisme',de:'Leichtathletik, Wandern und Radfahren',en:'Athletics, running and cycling'},scope:['events']},{id:'1.51.13.0.0',domain:'theme',name:{nl:'Bal en racketsport',fr:'Sports au ballons et raquettes',de:'Ball und Schläger',en:'Ball and racket sports'},scope:['events']},{id:'1.51.6.0.0',domain:'theme',name:{nl:'Fitness, gymnastiek, dans en vechtsport',fr:'Fitness, gymnastique, danse et arts martiaux',de:'Fitness, Tanz und Kampfkunst',en:'Fitness, gymnastics, dance and martial arts'},scope:['events']},{id:'1.58.8.0.0',domain:'theme',name:{nl:'Lucht en motorsport',fr:'Sports aero et moteurs',de:'Luft-und Motorsport',en:'Air and motorsports'},scope:['events']},{id:'1.51.12.0.0',domain:'theme',name:{nl:'Omnisport en andere',fr:'Omnisports et autres',de:'Omnisport und andere',en:'Other sports'},scope:['events']},{id:'1.51.11.0.0',domain:'theme',name:{nl:'Outdoor en Adventure sport',fr:'Sports de plein air et d\'aventure',de:'Outdoor- und Abenteuersport',en:'Outdoor and Adventure sports'},scope:['events']},{id:'1.51.10.0.0',domain:'theme',name:{nl:'Volkssporten',fr:'Sports folkloriques',de:'Sport Menschen',en:'Folklore sports'},scope:['events']},{id:'1.51.3.0.0',domain:'theme',name:{nl:'Zwemmen en watersport',fr:'Natation et sports nautiques',de:'Schwimmen und Wassersport',en:'Swimming and water sports'},scope:['events']},{id:'1.37.1.0.0',domain:'theme',name:{nl:'Gezondheid en zorg',fr:'Santé et soins',de:'Gesundheit und Pflege',en:'Health and care'},scope:['events']},{id:'1.43.0.0.0',domain:'theme',name:{nl:'Interculturele vorming',fr:'Formation interculturelle',de:'Interkulturelle Erziehung',en:'Cross-cultural education'},scope:['events']},{id:'1.64.0.0.0',domain:'theme',name:{nl:'Milieu en natuur',fr:'Environnement et nature',de:'Umwelt und Natur',en:'Environment and nature'},scope:['events']},{id:'1.37.0.0.0',domain:'theme',name:{nl:'Opvoeding',fr:'Éducation',de:'Bildung',en:'Education'},scope:['events']},{id:'1.61.0.0.0',domain:'theme',name:{nl:'Persoon en relaties',fr:'Hommes et relations',de:'Person und Gesellschaft',en:'People and society'},scope:['events']},{id:'1.37.2.0.0',domain:'theme',name:{nl:'Samenleving',fr:'Vivre en société',de:'Gesellschaft',en:'Society'},scope:['events']},{id:'1.65.0.0.0',domain:'theme',name:{nl:'Voeding',fr:'Nutrition',de:'Ernährung',en:'Nutrition'},scope:['events']},{id:'1.25.0.0.0',domain:'theme',name:{nl:'Wetenschap',fr:'Science',de:'Wissenschaft',en:'Science'},scope:['events']},{id:'1.44.0.0.0',domain:'theme',name:{nl:'Zingeving, filosofie en religie',fr:'Sense de la vie, philosophie et religion',de:'Philosophie und Religion',en:'Philosophy and religion'},scope:['events']},{id:'1.21.0.0.0',domain:'theme',name:{nl:'Computer en techniek',fr:'Ordinateurs et technologie',de:'Computer-und Technik',en:'Computer and technology'},scope:['events']}],label:'Lessenreeks',labelnl:'Lessenreeks',labelfr:'Série de cours',labelen:'Course series',labelde:'Unterrichtsreihe'},{id:'0.57.0.0.0',domain:'eventtype',name:{nl:'Kamp of vakantie',fr:'Camp de vacance',de:'Camp oder Urlaub',en:'Camping'},scope:['events'],otherSuggestedTerms:[{id:'1.51.11.0.0',domain:'theme',name:{nl:'Outdoor en Adventure sport',fr:'Sports de plein air et d\'aventure',de:'Outdoor- und Abenteuersport',en:'Outdoor and Adventure sports'},scope:['events']},{id:'1.42.0.0.0',domain:'theme',name:{nl:'Creativiteit',fr:'Créativité',de:'Kreativität',en:'Creativity'},scope:['events']},{id:'1.65.0.0.0',domain:'theme',name:{nl:'Voeding',fr:'Nutrition',de:'Ernährung',en:'Nutrition'},scope:['events']},{id:'1.64.0.0.0',domain:'theme',name:{nl:'Milieu en natuur',fr:'Environnement et nature',de:'Umwelt und Natur',en:'Environment and nature'},scope:['events']},{id:'1.51.12.0.0',domain:'theme',name:{nl:'Omnisport en andere',fr:'Omnisports et autres',de:'Omnisport und andere',en:'Other sports'},scope:['events']},{id:'1.21.0.0.0',domain:'theme',name:{nl:'Computer en techniek',fr:'Ordinateurs et technologie',de:'Computer-und Technik',en:'Computer and technology'},scope:['events']},{id:'1.11.2.0.0',domain:'theme',name:{nl:'Themakamp',fr:'Camp thématique',de:'Themencamp',en:'Theme camp'},scope:['events']},{id:'1.11.1.0.0',domain:'theme',name:{nl:'Taal en communicatie',fr:'Langue et communication',de:'Sprache und Kommunikation',en:'Language and communication'},scope:['events']}],label:'Kamp of vakantie',labelnl:'Kamp of vakantie',labelfr:'Camp de vacance',labelen:'Camping',labelde:'Camp oder Urlaub'},{id:'0.28.0.0.0',domain:'eventtype',name:{nl:'Festiviteit',fr:'Festivité',de:'Fest',en:'Festivity'},scope:['events'],label:'Festiviteit',labelnl:'Festiviteit',labelfr:'Festivité',labelen:'Festivity',labelde:'Fest'},{id:'0.53.0.0.0',domain:'eventtype',name:{nl:'Recreatiedomein of centrum',fr:'Centre de loisirs ou centre de récréation',de:'Recreation Area oder ûcentrum',en:'Recreation center'},scope:['places'],label:'Recreatiedomein of centrum',labelnl:'Recreatiedomein of centrum',labelfr:'Centre de loisirs ou centre de récréation',labelen:'Recreation center',labelde:'Recreation Area oder ûcentrum'},{id:'0.17.0.0.0',domain:'eventtype',name:{nl:'Fiets- of wandelroute',fr:'Randonnée pédestre ou cycliste',de:'Route',en:'Cycling or hiking tour'},scope:['events'],label:'Fiets- of wandelroute',labelnl:'Fiets- of wandelroute',labelfr:'Randonnée pédestre ou cycliste',labelen:'Cycling or hiking tour',labelde:'Route'},{id:'0.49.0.0.0',domain:'eventtype',name:{nl:'Party of fuif',fr:'Soirée',de:'Ausgehen',en:'Party or nightlife'},scope:['events'],label:'Party of fuif',labelnl:'Party of fuif',labelfr:'Soirée',labelen:'Party or nightlife',labelde:'Ausgehen'},{id:'1.50.0.0.0',domain:'eventtype',name:{nl:'Eet- of drankfestijn',fr:'Festin de nourriture ou de boisson',de:'Essen oder Trinken Fest',en:'Food or beverage feast'},scope:['events'],label:'Eet- of drankfestijn',labelnl:'Eet- of drankfestijn',labelfr:'Festin de nourriture ou de boisson',labelen:'Food or beverage feast',labelde:'Essen oder Trinken Fest'},{id:'0.50.21.0.0',domain:'eventtype',name:{nl:'Spel of quiz',fr:'Jeu ou quiz',de:'Spiel oder Quiz',en:'Game or quiz'},scope:['events'],label:'Spel of quiz',labelnl:'Spel of quiz',labelfr:'Jeu ou quiz',labelen:'Game or quiz',labelde:'Spiel oder Quiz'},{id:'0.41.0.0.0',domain:'eventtype',name:{nl:'Thema of pretpark',fr:'Parc à thème ou parc d\'attractions',de:'Unterhaltungspark',en:'Theme park'},scope:['places'],label:'Thema of pretpark',labelnl:'Thema of pretpark',labelfr:'Parc à thème ou parc d\'attractions',labelen:'Theme park',labelde:'Unterhaltungspark'},{id:'0.59.0.0.0',domain:'eventtype',name:{nl:'Sportactiviteit',fr:'Activité sportive',de:'Sportliche Aktivität',en:'Sports activity'},scope:['events'],otherSuggestedTerms:[{id:'1.51.14.0.0',domain:'theme',name:{nl:'Atletiek, wandelen en fietsen',fr:'Athlétisme, marche et cyclisme',de:'Leichtathletik, Wandern und Radfahren',en:'Athletics, running and cycling'},scope:['events']},{id:'1.51.13.0.0',domain:'theme',name:{nl:'Bal en racketsport',fr:'Sports au ballons et raquettes',de:'Ball und Schläger',en:'Ball and racket sports'},scope:['events']},{id:'1.51.6.0.0',domain:'theme',name:{nl:'Fitness, gymnastiek, dans en vechtsport',fr:'Fitness, gymnastique, danse et arts martiaux',de:'Fitness, Tanz und Kampfkunst',en:'Fitness, gymnastics, dance and martial arts'},scope:['events']},{id:'1.58.8.0.0',domain:'theme',name:{nl:'Lucht en motorsport',fr:'Sports aero et moteurs',de:'Luft-und Motorsport',en:'Air and motorsports'},scope:['events']},{id:'1.51.12.0.0',domain:'theme',name:{nl:'Omnisport en andere',fr:'Omnisports et autres',de:'Omnisport und andere',en:'Other sports'},scope:['events']},{id:'1.51.11.0.0',domain:'theme',name:{nl:'Outdoor en Adventure sport',fr:'Sports de plein air et d\'aventure',de:'Outdoor- und Abenteuersport',en:'Outdoor and Adventure sports'},scope:['events']},{id:'1.51.10.0.0',domain:'theme',name:{nl:'Volkssporten',fr:'Sports folkloriques',de:'Sport Menschen',en:'Folklore sports'},scope:['events']},{id:'1.51.3.0.0',domain:'theme',name:{nl:'Zwemmen en watersport',fr:'Natation et sports nautiques',de:'Schwimmen und Wassersport',en:'Swimming and water sports'},scope:['events']}],label:'Sportactiviteit',labelnl:'Sportactiviteit',labelfr:'Activité sportive',labelen:'Sports activity',labelde:'Sportliche Aktivität'},{id:'1.17.0.0.0',domain:'theme',name:{nl:'Antiek en brocante',fr:'Antiquités ou brocantes',de:'Antik-und Flohmarkt',en:'Antiques'},scope:['events'],label:'Antiek en brocante',labelnl:'Antiek en brocante',labelfr:'Antiquités ou brocantes',labelen:'Antiques',labelde:'Antik-und Flohmarkt'},{id:'1.2.1.0.0',domain:'theme',name:{nl:'Architectuur',fr:'Architecture',de:'Architektur',en:'Architecture'},scope:['events'],label:'Architectuur',labelnl:'Architectuur',labelfr:'Architecture',labelen:'Architecture',labelde:'Architektur'},{id:'1.1.0.0.0',domain:'theme',name:{nl:'Audiovisuele kunst',fr:'Arts audiovisuels',de:'Audiovisuelle Kunst',en:'Audiovisual arts'},scope:['events'],label:'Audiovisuele kunst',labelnl:'Audiovisuele kunst',labelfr:'Arts audiovisuels',labelen:'Audiovisual arts',labelde:'Audiovisuelle Kunst'},{id:'1.0.2.0.0',domain:'theme',name:{nl:'Beeldhouwkunst',fr:'Sculpture',de:'Skulptur',en:'Sculpture'},scope:['events'],label:'Beeldhouwkunst',labelnl:'Beeldhouwkunst',labelfr:'Sculpture',labelen:'Sculpture',labelde:'Skulptur'},{id:'1.0.6.0.0',domain:'theme',name:{nl:'Fotografie',fr:'Photographie',de:'Fotografie',en:'Photography'},scope:['events'],label:'Fotografie',labelnl:'Fotografie',labelfr:'Photographie',labelen:'Photography',labelde:'Fotografie'},{id:'1.0.4.0.0',domain:'theme',name:{nl:'Grafiek',fr:'Art grafique',de:'Grafik',en:'Graphics'},scope:['events'],label:'Grafiek',labelnl:'Grafiek',labelfr:'Art grafique',labelen:'Graphics',labelde:'Grafik'},{id:'1.0.3.0.0',domain:'theme',name:{nl:'Installatiekunst',fr:'Art d\'installation',de:'Installation Art',en:'Installation art'},scope:['events'],label:'Installatiekunst',labelnl:'Installatiekunst',labelfr:'Art d\'installation',labelen:'Installation art',labelde:'Installation Art'},{id:'1.0.1.0.0',domain:'theme',name:{nl:'Schilderkunst',fr:'Peinture',de:'Malerei',en:'Painting'},scope:['events'],label:'Schilderkunst',labelnl:'Schilderkunst',labelfr:'Peinture',labelen:'Painting',labelde:'Malerei'},{id:'1.0.5.0.0',domain:'theme',name:{nl:'Decoratieve kunst',fr:'Arts décoratives',de:'Angewandte Kunst',en:'Decorative arts'},scope:['events'],label:'Decoratieve kunst',labelnl:'Decoratieve kunst',labelfr:'Arts décoratives',labelen:'Decorative arts',labelde:'Angewandte Kunst'},{id:'1.2.2.0.0',domain:'theme',name:{nl:'Design',fr:'Design',de:'Design',en:'Design'},scope:['events'],label:'Design',labelnl:'Design',labelfr:'Design',labelen:'Design',labelde:'Design'},{id:'1.49.0.0.0',domain:'theme',name:{nl:'Mode',fr:'Mode',de:'Mode',en:'Fashion'},scope:['events'],label:'Mode',labelnl:'Mode',labelfr:'Mode',labelen:'Fashion',labelde:'Mode'},{id:'1.9.1.0.0',domain:'theme',name:{nl:'Ballet en klassieke dans',fr:'Ballet et danse classique',de:'Ballett und klassischer Tanz',en:'Classical dance and ballet'},scope:['events'],label:'Ballet en klassieke dans',labelnl:'Ballet en klassieke dans',labelfr:'Ballet et danse classique',labelen:'Classical dance and ballet',labelde:'Ballett und klassischer Tanz'},{id:'1.9.3.0.0',domain:'theme',name:{nl:'Volksdans en werelddans',fr:'Danse folklorique et mondiale',de:'Folk-und World Dance',en:'Folk dance'},scope:['events'],label:'Volksdans en werelddans',labelnl:'Volksdans en werelddans',labelfr:'Danse folklorique et mondiale',labelen:'Folk dance',labelde:'Folk-und World Dance'},{id:'1.9.5.0.0',domain:'theme',name:{nl:'Stijl en salondansen',fr:'Danse de salon et stylée',de:'Stil-und Gesellschaftstanz',en:'Ballroom dancing'},scope:['events'],label:'Stijl en salondansen',labelnl:'Stijl en salondansen',labelfr:'Danse de salon et stylée',labelen:'Ballroom dancing',labelde:'Stil-und Gesellschaftstanz'},{id:'1.9.2.0.0',domain:'theme',name:{nl:'Moderne dans',fr:'Danse moderne',de:'Modern Dance',en:'Modern dance'},scope:['events'],label:'Moderne dans',labelnl:'Moderne dans',labelfr:'Danse moderne',labelen:'Modern dance',labelde:'Modern Dance'},{id:'1.40.0.0.0',domain:'theme',name:{nl:'Erfgoed',fr:'Patrimoine',de:'Kulturerben',en:'Heritage'},scope:['events'],label:'Erfgoed',labelnl:'Erfgoed',labelfr:'Patrimoine',labelen:'Heritage',labelde:'Kulturerben'},{id:'1.7.2.0.0',domain:'theme',name:{nl:'Actie- en avonturenfilm',fr:'Film d\'action et d\'aventure',de:'Action- und Abenteuerfilm',en:'Action and adventure film'},scope:['events'],label:'Actie- en avonturenfilm',labelnl:'Actie- en avonturenfilm',labelfr:'Film d\'action et d\'aventure',labelen:'Action and adventure film',labelde:'Action- und Abenteuerfilm'},{id:'1.7.12.0.0',domain:'theme',name:{nl:'Animatie en kinderfilms',fr:'Films animés et films pour enfants',de:'Animations-und Kinderfilme',en:'Animation and children\'s films'},scope:['events'],label:'Animatie en kinderfilms',labelnl:'Animatie en kinderfilms',labelfr:'Films animés et films pour enfants',labelen:'Animation and children\'s films',labelde:'Animations-und Kinderfilme'},{id:'1.7.1.0.0',domain:'theme',name:{nl:'Documentaires en reportages',fr:'Documentaires et reportages',de:'Dokumentationen und Reportagen',en:'Documentary'},scope:['events'],label:'Documentaires en reportages',labelnl:'Documentaires en reportages',labelfr:'Documentaires et reportages',labelen:'Documentary',labelde:'Dokumentationen und Reportagen'},{id:'1.7.6.0.0',domain:'theme',name:{nl:'Griezelfilm of horror',fr:'Films d\'épouvantes ou orreurs',de:'Horror',en:'Horror'},scope:['events'],label:'Griezelfilm of horror',labelnl:'Griezelfilm of horror',labelfr:'Films d\'épouvantes ou orreurs',labelen:'Horror',labelde:'Horror'},{id:'1.7.8.0.0',domain:'theme',name:{nl:'Historische film',fr:'Films historiques',de:'Historische Film',en:'Historical film'},scope:['events'],label:'Historische film',labelnl:'Historische film',labelfr:'Films historiques',labelen:'Historical film',labelde:'Historische Film'},{id:'1.7.3.0.0',domain:'theme',name:{nl:'Komedie',fr:'Comédie',de:'Komödie',en:'Comedy'},scope:['events'],label:'Komedie',labelnl:'Komedie',labelfr:'Comédie',labelen:'Comedy',labelde:'Komödie'},{id:'1.7.13.0.0',domain:'theme',name:{nl:'Kortfilm',fr:'Court métrage',de:'Kurzfilm',en:'Short film'},scope:['events'],label:'Kortfilm',labelnl:'Kortfilm',labelfr:'Court métrage',labelen:'Short film',labelde:'Kurzfilm'},{id:'1.7.10.0.0',domain:'theme',name:{nl:'Filmmusical',fr:'Comédie musicale',de:'Musical',en:'Musical'},scope:['events'],label:'Filmmusical',labelnl:'Filmmusical',labelfr:'Comédie musicale',labelen:'Musical',labelde:'Musical'},{id:'1.7.4.0.0',domain:'theme',name:{nl:'Drama',fr:'Films dramatiques',de:'Drama',en:'Drama'},scope:['events'],label:'Drama',labelnl:'Drama',labelfr:'Films dramatiques',labelen:'Drama',labelde:'Drama'},{id:'1.7.7.0.0',domain:'theme',name:{nl:'Science fiction',fr:'Science fiction',de:'Science-Fiction',en:'Science fiction'},scope:['events'],label:'Science fiction',labelnl:'Science fiction',labelfr:'Science fiction',labelen:'Science fiction',labelde:'Science-Fiction'},{id:'1.7.11.0.0',domain:'theme',name:{nl:'Cinefiel',fr:'Cinéphile',de:'Cinephile',en:'Independent'},scope:['events'],label:'Cinefiel',labelnl:'Cinefiel',labelfr:'Cinéphile',labelen:'Independent',labelde:'Cinephile'},{id:'1.11.0.0.0',domain:'theme',name:{nl:'Geschiedenis',fr:'Histoire',de:'Geschichte',en:'History'},scope:['events'],label:'Geschiedenis',labelnl:'Geschiedenis',labelfr:'Histoire',labelen:'History',labelde:'Geschichte'},{id:'1.62.0.0.0',domain:'theme',name:{nl:'Gezondheid en wellness',fr:'Santé et bien-être',de:'Gesundheit und Wellness',en:'Health and wellness'},scope:['events'],label:'Gezondheid en wellness',labelnl:'Gezondheid en wellness',labelfr:'Santé et bien-être',labelen:'Health and wellness',labelde:'Gesundheit und Wellness'},{id:'1.63.0.0.0',domain:'theme',name:{nl:'Landbouw en platteland',fr:'Agriculture et campagne',de:'Landwirtschaft ',en:'Agriculture'},scope:['events'],label:'Landbouw en platteland',labelnl:'Landbouw en platteland',labelfr:'Agriculture et campagne',labelen:'Agriculture',labelde:'Landwirtschaft '},{id:'1.10.0.0.0',domain:'theme',name:{nl:'Literatuur',fr:'Litérature',de:'Literatur',en:'Literature'},scope:['events'],label:'Literatuur',labelnl:'Literatuur',labelfr:'Litérature',labelen:'Literature',labelde:'Literatur'},{id:'1.10.5.0.0',domain:'theme',name:{nl:'Poezie',fr:'Poésie',de:'Poesie',en:'Poetry'},scope:['events'],label:'Poezie',labelnl:'Poezie',labelfr:'Poésie',labelen:'Poetry',labelde:'Poesie'},{id:'1.10.11.0.0',domain:'theme',name:{nl:'Fictie',fr:'Fiction',de:'Fiktion',en:'Fiction'},scope:['events'],label:'Fictie',labelnl:'Fictie',labelfr:'Fiction',labelen:'Fiction',labelde:'Fiktion'},{id:'1.10.12.0.0',domain:'theme',name:{nl:'Non fictie',fr:'Non fiction',de:'Sachbücher',en:'Non fiction'},scope:['events'],label:'Non fictie',labelnl:'Non fictie',labelfr:'Non fiction',labelen:'Non fiction',labelde:'Sachbücher'},{id:'1.10.8.0.0',domain:'theme',name:{nl:'Strips',fr:'Bandes dessinés',de:'Comics',en:'Comic books'},scope:['events'],label:'Strips',labelnl:'Strips',labelfr:'Bandes dessinés',labelen:'Comic books',labelde:'Comics'},{id:'1.64.0.0.0',domain:'theme',name:{nl:'Milieu en natuur',fr:'Environnement et nature',de:'Umwelt und Natur',en:'Environment and nature'},scope:['events'],label:'Milieu en natuur',labelnl:'Milieu en natuur',labelfr:'Environnement et nature',labelen:'Environment and nature',labelde:'Umwelt und Natur'},{id:'1.8.1.0.0',domain:'theme',name:{nl:'Klassieke muziek',fr:'Musique classique',de:'Klassische Musik',en:'Classical music'},scope:['events'],label:'Klassieke muziek',labelnl:'Klassieke muziek',labelfr:'Musique classique',labelen:'Classical music',labelde:'Klassische Musik'},{id:'1.8.2.0.0',domain:'theme',name:{nl:'Jazz en blues',fr:'Jazz et blues',de:'Jazz und Blues',en:'Jazz and blues'},scope:['events'],label:'Jazz en blues',labelnl:'Jazz en blues',labelfr:'Jazz et blues',labelen:'Jazz and blues',labelde:'Jazz und Blues'},{id:'1.8.3.1.0',domain:'theme',name:{nl:'Pop en rock',fr:'Pop et rock',de:'Pop und Rock',en:'Pop and rock'},scope:['events'],label:'Pop en rock',labelnl:'Pop en rock',labelfr:'Pop et rock',labelen:'Pop and rock',labelde:'Pop und Rock'},{id:'1.8.3.2.0',domain:'theme',name:{nl:'Hip hop, rnb en rap',fr:'Hip hop, rnb et rap',de:'Hip-Hop, R und B und Rap',en:'Hip hop, rnb and rap'},scope:['events'],label:'Hip hop, rnb en rap',labelnl:'Hip hop, rnb en rap',labelfr:'Hip hop, rnb et rap',labelen:'Hip hop, rnb and rap',labelde:'Hip-Hop, R und B und Rap'},{id:'1.8.3.3.0',domain:'theme',name:{nl:'Dance muziek',fr:'Musique de danse',de:'Tanzmusik',en:'Dance music'},scope:['events'],label:'Dance muziek',labelnl:'Dance muziek',labelfr:'Musique de danse',labelen:'Dance music',labelde:'Tanzmusik'},{id:'1.8.4.0.0',domain:'theme',name:{nl:'Folk en wereldmuziek',fr:'Musique folklorique et mondiale',de:'Folk und World',en:'Folk and world music'},scope:['events'],label:'Folk en wereldmuziek',labelnl:'Folk en wereldmuziek',labelfr:'Musique folklorique et mondiale',labelen:'Folk and world music',labelde:'Folk und World'},{id:'1.8.3.5.0',domain:'theme',name:{nl:'Amusementsmuziek',fr:'Cabaret',de:'Schlager',en:'Cabaret music'},scope:['events'],label:'Amusementsmuziek',labelnl:'Amusementsmuziek',labelfr:'Cabaret',labelen:'Cabaret music',labelde:'Schlager'},{id:'1.52.0.0.0',domain:'theme',name:{nl:'Politiek en maatschappij',fr:'Politique et société',de:'Politik und Gesellschaft',en:'Politics and society'},scope:['events'],label:'Politiek en maatschappij',labelnl:'Politiek en maatschappij',labelfr:'Politique et société',labelen:'Politics and society',labelde:'Politik und Gesellschaft'},{id:'1.42.0.0.0',domain:'theme',name:{nl:'Creativiteit',fr:'Créativité',de:'Kreativität',en:'Creativity'},scope:['events'],label:'Creativiteit',labelnl:'Creativiteit',labelfr:'Créativité',labelen:'Creativity',labelde:'Kreativität'},{id:'1.21.0.0.0',domain:'theme',name:{nl:'Computer en techniek',fr:'Ordinateurs et technologie',de:'Computer-und Technik',en:'Computer and technology'},scope:['events'],label:'Computer en techniek',labelnl:'Computer en techniek',labelfr:'Ordinateurs et technologie',labelen:'Computer and technology',labelde:'Computer-und Technik'},{id:'1.37.0.0.0',domain:'theme',name:{nl:'Opvoeding',fr:'Éducation',de:'Bildung',en:'Education'},scope:['events'],label:'Opvoeding',labelnl:'Opvoeding',labelfr:'Éducation',labelen:'Education',labelde:'Bildung'},{id:'1.61.0.0.0',domain:'theme',name:{nl:'Persoon en relaties',fr:'Hommes et relations',de:'Person und Gesellschaft',en:'People and society'},scope:['events'],label:'Persoon en relaties',labelnl:'Persoon en relaties',labelfr:'Hommes et relations',labelen:'People and society',labelde:'Person und Gesellschaft'},{id:'1.43.0.0.0',domain:'theme',name:{nl:'Interculturele vorming',fr:'Formation interculturelle',de:'Interkulturelle Erziehung',en:'Cross-cultural education'},scope:['events'],label:'Interculturele vorming',labelnl:'Interculturele vorming',labelfr:'Formation interculturelle',labelen:'Cross-cultural education',labelde:'Interkulturelle Erziehung'},{id:'1.41.0.0.0',domain:'theme',name:{nl:'Kunst en kunsteducatie',fr:'Arts et formation artistique',de:'Kunst und Kunsterziehung',en:'Arts education'},scope:['events'],label:'Kunst en kunsteducatie',labelnl:'Kunst en kunsteducatie',labelfr:'Arts et formation artistique',labelen:'Arts education',labelde:'Kunst und Kunsterziehung'},{id:'1.51.13.0.0',domain:'theme',name:{nl:'Bal en racketsport',fr:'Sports au ballons et raquettes',de:'Ball und Schläger',en:'Ball and racket sports'},scope:['events'],label:'Bal en racketsport',labelnl:'Bal en racketsport',labelfr:'Sports au ballons et raquettes',labelen:'Ball and racket sports',labelde:'Ball und Schläger'},{id:'1.51.14.0.0',domain:'theme',name:{nl:'Atletiek, wandelen en fietsen',fr:'Athlétisme, marche et cyclisme',de:'Leichtathletik, Wandern und Radfahren',en:'Athletics, running and cycling'},scope:['events'],label:'Atletiek, wandelen en fietsen',labelnl:'Atletiek, wandelen en fietsen',labelfr:'Athlétisme, marche et cyclisme',labelen:'Athletics, running and cycling',labelde:'Leichtathletik, Wandern und Radfahren'},{id:'1.51.3.0.0',domain:'theme',name:{nl:'Zwemmen en watersport',fr:'Natation et sports nautiques',de:'Schwimmen und Wassersport',en:'Swimming and water sports'},scope:['events'],label:'Zwemmen en watersport',labelnl:'Zwemmen en watersport',labelfr:'Natation et sports nautiques',labelen:'Swimming and water sports',labelde:'Schwimmen und Wassersport'},{id:'1.51.6.0.0',domain:'theme',name:{nl:'Fitness, gymnastiek, dans en vechtsport',fr:'Fitness, gymnastique, danse et arts martiaux',de:'Fitness, Tanz und Kampfkunst',en:'Fitness, gymnastics, dance and martial arts'},scope:['events'],label:'Fitness, gymnastiek, dans en vechtsport',labelnl:'Fitness, gymnastiek, dans en vechtsport',labelfr:'Fitness, gymnastique, danse et arts martiaux',labelen:'Fitness, gymnastics, dance and martial arts',labelde:'Fitness, Tanz und Kampfkunst'},{id:'1.51.11.0.0',domain:'theme',name:{nl:'Outdoor en Adventure sport',fr:'Sports de plein air et d\'aventure',de:'Outdoor- und Abenteuersport',en:'Outdoor and Adventure sports'},scope:['events'],label:'Outdoor en Adventure sport',labelnl:'Outdoor en Adventure sport',labelfr:'Sports de plein air et d\'aventure',labelen:'Outdoor and Adventure sports',labelde:'Outdoor- und Abenteuersport'},{id:'1.58.8.0.0',domain:'theme',name:{nl:'Lucht en motorsport',fr:'Sports aero et moteurs',de:'Luft-und Motorsport',en:'Air and motorsports'},scope:['events'],label:'Lucht en motorsport',labelnl:'Lucht en motorsport',labelfr:'Sports aero et moteurs',labelen:'Air and motorsports',labelde:'Luft-und Motorsport'},{id:'1.51.10.0.0',domain:'theme',name:{nl:'Volkssporten',fr:'Sports folkloriques',de:'Sport Menschen',en:'Folklore sports'},scope:['events'],label:'Volkssporten',labelnl:'Volkssporten',labelfr:'Sports folkloriques',labelen:'Folklore sports',labelde:'Sport Menschen'},{id:'1.51.12.0.0',domain:'theme',name:{nl:'Omnisport en andere',fr:'Omnisports et autres',de:'Omnisport und andere',en:'Other sports'},scope:['events'],label:'Omnisport en andere',labelnl:'Omnisport en andere',labelfr:'Omnisports et autres',labelen:'Other sports',labelde:'Omnisport und andere'},{id:'1.3.1.0.0',domain:'theme',name:{nl:'Tekst en muziektheater',fr:'Théâtre dramatique et musical',de:'Text und Musik',en:'Theatre and Musical theatre'},scope:['events'],label:'Tekst en muziektheater',labelnl:'Tekst en muziektheater',labelfr:'Théâtre dramatique et musical',labelen:'Theatre and Musical theatre',labelde:'Text und Musik'},{id:'1.3.10.0.0',domain:'theme',name:{nl:'Humor en comedy',fr:'L\'humour et la comédie',de:'Humor und comedy',en:'Humor and comedy'},scope:['events'],label:'Humor en comedy',labelnl:'Humor en comedy',labelfr:'L\'humour et la comédie',labelen:'Humor and comedy',labelde:'Humor und comedy'},{id:'1.4.0.0.0',domain:'theme',name:{nl:'Musical',fr:'Comédie musicale',de:'Musical',en:'Musical'},scope:['events'],label:'Musical',labelnl:'Musical',labelfr:'Comédie musicale',labelen:'Musical',labelde:'Musical'},{id:'1.3.5.0.0',domain:'theme',name:{nl:'Figuren en poppentheater',fr:'Théâtre de marionnettes',de:'Figuren und Marionetten',en:'Puppetry'},scope:['events'],label:'Figuren en poppentheater',labelnl:'Figuren en poppentheater',labelfr:'Théâtre de marionnettes',labelen:'Puppetry',labelde:'Figuren und Marionetten'},{id:'1.5.0.0.0',domain:'theme',name:{nl:'Opera en operette',fr:'Opéra et opérette',de:'Oper und Operette',en:'Opera and operetta'},scope:['events'],label:'Opera en operette',labelnl:'Opera en operette',labelfr:'Opéra et opérette',labelen:'Opera and operetta',labelde:'Oper und Operette'},{id:'1.3.4.0.0',domain:'theme',name:{nl:'Mime en bewegingstheater',fr:'Mime et theéâtre de mouvements',de:'Mime und Bewegungstheater',en:'Mime '},scope:['events'],label:'Mime en bewegingstheater',labelnl:'Mime en bewegingstheater',labelfr:'Mime et theéâtre de mouvements',labelen:'Mime ',labelde:'Mime und Bewegungstheater'},{id:'1.25.0.0.0',domain:'theme',name:{nl:'Wetenschap',fr:'Science',de:'Wissenschaft',en:'Science'},scope:['events'],label:'Wetenschap',labelnl:'Wetenschap',labelfr:'Science',labelen:'Science',labelde:'Wissenschaft'},{id:'1.44.0.0.0',domain:'theme',name:{nl:'Zingeving, filosofie en religie',fr:'Sense de la vie, philosophie et religion',de:'Philosophie und Religion',en:'Philosophy and religion'},scope:['events'],label:'Zingeving, filosofie en religie',labelnl:'Zingeving, filosofie en religie',labelfr:'Sense de la vie, philosophie et religion',labelen:'Philosophy and religion',labelde:'Philosophie und Religion'},{id:'1.58.0.0.0',domain:'theme',name:{nl:'Thema onbepaald',fr:'Thème non défini',de:'unbestimmt',en:'Theme undefined'},scope:['events'],label:'Thema onbepaald',labelnl:'Thema onbepaald',labelfr:'Thème non défini',labelen:'Theme undefined',labelde:'unbestimmt'},{id:'3.14.0.0.0',domain:'facility',name:{nl:'Educatieve dienstverlening',fr:'Services éducatifs',de:'Bildungsleistungen',en:'Educational service'},scope:['events'],label:'Educatieve dienstverlening',labelnl:'Educatieve dienstverlening',labelfr:'Services éducatifs',labelen:'Educational service',labelde:'Bildungsleistungen'},{id:'0.51.0.0.0',domain:'eventtype',name:{nl:'Type onbepaald',fr:'Catégorie non déterminé',de:'unbestimmt',en:'Type undefined'},scope:['events'],label:'Type onbepaald',labelnl:'Type onbepaald',labelfr:'Catégorie non déterminé',labelen:'Type undefined',labelde:'unbestimmt'},{id:'1.0.9.0.0',domain:'theme',name:{nl:'Meerdere kunstvormen',fr:'Arts multiples',de:'Mehrere Formen der Kunst',en:'Multiple art forms'},scope:['events'],label:'Meerdere kunstvormen',labelnl:'Meerdere kunstvormen',labelfr:'Arts multiples',labelen:'Multiple art forms',labelde:'Mehrere Formen der Kunst'},{id:'1.7.14.0.0',domain:'theme',name:{nl:'Meerdere filmgenres',fr:'Films de tous genres',de:'Mehrere Filmgenres',en:'Multiple film genres'},scope:['events'],label:'Meerdere filmgenres',labelnl:'Meerdere filmgenres',labelfr:'Films de tous genres',labelen:'Multiple film genres',labelde:'Mehrere Filmgenres'},{id:'1.37.1.0.0',domain:'theme',name:{nl:'Gezondheid en zorg',fr:'Santé et soins',de:'Gesundheit und Pflege',en:'Health and care'},scope:['events'],label:'Gezondheid en zorg',labelnl:'Gezondheid en zorg',labelfr:'Santé et soins',labelen:'Health and care',labelde:'Gesundheit und Pflege'},{id:'1.37.2.0.0',domain:'theme',name:{nl:'Samenleving',fr:'Vivre en société',de:'Gesellschaft',en:'Society'},scope:['events'],label:'Samenleving',labelnl:'Samenleving',labelfr:'Vivre en société',labelen:'Society',labelde:'Gesellschaft'},{id:'3.23.1.0.0',domain:'facility',name:{nl:'Voorzieningen voor rolstoelgebruikers',fr:'Facilités pour fauteuils roulants',de:'EInrichtung für Rollstuhlfahrer',en:'Wheelchair facilities'},scope:['events'],label:'Voorzieningen voor rolstoelgebruikers',labelnl:'Voorzieningen voor rolstoelgebruikers',labelfr:'Facilités pour fauteuils roulants',labelen:'Wheelchair facilities',labelde:'EInrichtung für Rollstuhlfahrer'},{id:'3.23.2.0.0',domain:'facility',name:{nl:'Assistentie',fr:'Assistance',de:'Hilfe',en:'Assistance'},scope:['events'],label:'Assistentie',labelnl:'Assistentie',labelfr:'Assistance',labelen:'Assistance',labelde:'Hilfe'},{id:'3.23.3.0.0',domain:'facility',name:{nl:'Rolstoel ter beschikking',fr:'Disponibilité de fauteuils roulants',de:'Rollstuhl verfügbar',en:'Wheelchair available'},scope:['events','places'],label:'Rolstoel ter beschikking',labelnl:'Rolstoel ter beschikking',labelfr:'Disponibilité de fauteuils roulants',labelen:'Wheelchair available',labelde:'Rollstuhl verfügbar'},{id:'3.13.1.0.0',domain:'facility',name:{nl:'Voorzieningen voor assistentiehonden',fr:'Facilités de chiens d\'assistance',de:'Einrichtung für Begleithunden',en:'Facilities for guide dogs'},scope:['events','places'],label:'Voorzieningen voor assistentiehonden',labelnl:'Voorzieningen voor assistentiehonden',labelfr:'Facilités de chiens d\'assistance',labelen:'Facilities for guide dogs',labelde:'Einrichtung für Begleithunden'},{id:'3.13.2.0.0',domain:'facility',name:{nl:'Audiodescriptie',fr:'Audiodéscription',de:'Audio-Beschreibung',en:'Audiodescription'},scope:['events'],label:'Audiodescriptie',labelnl:'Audiodescriptie',labelfr:'Audiodéscription',labelen:'Audiodescription',labelde:'Audio-Beschreibung'},{id:'3.17.1.0.0',domain:'facility',name:{nl:'Ringleiding',fr:'Boucle auditive',de:'Audio Induktionsschleife',en:'Audio induction loop'},scope:['events'],label:'Ringleiding',labelnl:'Ringleiding',labelfr:'Boucle auditive',labelen:'Audio induction loop',labelde:'Audio Induktionsschleife'},{id:'3.17.3.0.0',domain:'facility',name:{nl:'Boven- of ondertiteling',fr:'Soustitrages',de:'Untertitel',en:'Subtitles'},scope:['events'],label:'Boven- of ondertiteling',labelnl:'Boven- of ondertiteling',labelfr:'Soustitrages',labelen:'Subtitles',labelde:'Untertitel'},{id:'1.7.15.0.0',domain:'theme',name:{nl:'Thriller',fr:'Films à suspense',de:'Thriller',en:'Thriller'},scope:['events'],label:'Thriller',labelnl:'Thriller',labelfr:'Films à suspense',labelen:'Thriller',labelde:'Thriller'},{id:'1.65.0.0.0',domain:'theme',name:{nl:'Voeding',fr:'Nutrition',de:'Ernährung',en:'Nutrition'},scope:['events'],label:'Voeding',labelnl:'Voeding',labelfr:'Nutrition',labelen:'Nutrition',labelde:'Ernährung'},{id:'1.66.0.0.0',domain:'theme',name:{nl:'Economie',fr:'Économie',de:'Wirtschaft',en:'Economy'},scope:['events'],label:'Economie',labelnl:'Economie',labelfr:'Économie',labelen:'Economy',labelde:'Wirtschaft'},{id:'3CuHvenJ+EGkcvhXLg9Ykg',domain:'eventtype',name:{nl:'Archeologische site',fr:'Site archéologique',de:'Archäologische Stätte',en:'Archaeological site'},scope:['places'],label:'Archeologische site',labelnl:'Archeologische site',labelfr:'Site archéologique',labelen:'Archaeological site',labelde:'Archäologische Stätte'},{id:'rJRFUqmd6EiqTD4c7HS90w',domain:'eventtype',name:{nl:'School of onderwijscentrum',fr:'École ou centre éducatif',de:'Schule oder Bildungszentrum',en:'School or educational centre'},scope:['places'],label:'School of onderwijscentrum',labelnl:'School of onderwijscentrum',labelfr:'École ou centre éducatif',labelen:'School or educational centre',labelde:'Schule oder Bildungszentrum'},{id:'eBwaUAAhw0ur0Z02i5ttnw',domain:'eventtype',name:{nl:'Sportcentrum',fr:'Centre sportif',de:'Sportzentrum',en:'Sports Centre'},scope:['places'],label:'Sportcentrum',labelnl:'Sportcentrum',labelfr:'Centre sportif',labelen:'Sports Centre',labelde:'Sportzentrum'},{id:'VRC6HX0Wa063sq98G5ciqw',domain:'eventtype',name:{nl:'Winkel',fr:'Magasin',de:'Laden',en:'Shop'},scope:['places'],label:'Winkel',labelnl:'Winkel',labelfr:'Magasin',labelen:'Shop',labelde:'Laden'},{id:'GnPFp9uvOUyqhOckIFMKmg',domain:'eventtype',name:{nl:'Museum of galerij',fr:'Musée ou galerie',de:'Museum oder Galerie',en:'Museum or gallery'},scope:['places'],label:'Museum of galerij',labelnl:'Museum of galerij',labelfr:'Musée ou galerie',labelen:'Museum or gallery',labelde:'Museum oder Galerie'},{id:'JCjA0i5COUmdjMwcyjNAFA',domain:'eventtype',name:{nl:'Jeugdhuis of jeugdcentrum',fr:'Maison de jeunes ou centre de jeunesse',de:'Jugendzentrum',en:'Youth centre'},scope:['places'],label:'Jeugdhuis of jeugdcentrum',labelnl:'Jeugdhuis of jeugdcentrum',labelfr:'Maison de jeunes ou centre de jeunesse',labelen:'Youth centre',labelde:'Jugendzentrum'},{id:'Yf4aZBfsUEu2NsQqsprngw',domain:'eventtype',name:{nl:'Cultuur- of ontmoetingscentrum',fr:'Centre culturel ou centre de réunion',de:'Kultur- oder Begegnungszentrum',en:'Cultural centre'},scope:['places'],label:'Cultuur- of ontmoetingscentrum',labelnl:'Cultuur- of ontmoetingscentrum',labelfr:'Centre culturel ou centre de réunion',labelen:'Cultural centre',labelde:'Kultur- oder Begegnungszentrum'},{id:'YVBc8KVdrU6XfTNvhMYUpg',domain:'eventtype',name:{nl:'Discotheek',fr:'Discothèque',de:'Diskothek',en:'Nightclub'},scope:['places'],label:'Discotheek',labelnl:'Discotheek',labelfr:'Discothèque',labelen:'Nightclub',labelde:'Diskothek'},{id:'kI7uAyn2uUu9VV6Z3uWZTA',domain:'eventtype',name:{nl:'Bibliotheek of documentatiecentrum',fr:'Bibliothèque ou centre de documentation',de:'Bibliothek oder Dokumentationszentrum',en:'Library or documentation centre'},scope:['places'],label:'Bibliotheek of documentatiecentrum',labelnl:'Bibliotheek of documentatiecentrum',labelfr:'Bibliothèque ou centre de documentation',labelen:'Library or documentation centre',labelde:'Bibliothek oder Dokumentationszentrum'},{id:'BtVNd33sR0WntjALVbyp3w',domain:'eventtype',name:{nl:'Bioscoop',fr:'Cinéma',de:'Kino',en:'Cinema'},scope:['places'],label:'Bioscoop',labelnl:'Bioscoop',labelfr:'Cinéma',labelen:'Cinema',labelde:'Kino'},{id:'ekdc4ATGoUitCa0e6me6xA',domain:'eventtype',name:{nl:'Horeca',fr:'Horeca',de:'Gastgewerbe',en:'Hospitality'},scope:['places'],label:'Horeca',labelnl:'Horeca',labelfr:'Horeca',labelen:'Hospitality',labelde:'Gastgewerbe'},{id:'wwjRVmExI0w6xfQwT1KWpx',domain:'eventtype',name:{nl:'Speeltuin',fr:'Aire de jeu',de:'Spielplatz',en:'Playground'},scope:['places'],label:'Speeltuin',labelnl:'Speeltuin',labelfr:'Aire de jeu',labelen:'Playground',labelde:'Spielplatz'},{id:'OyaPaf64AEmEAYXHeLMAtA',domain:'eventtype',name:{nl:'Zaal of expohal',fr:'Hall ou salle d\'expo',de:'Saal oder Expo-Halle',en:'Hall or exhibition hall'},scope:['places'],label:'Zaal of expohal',labelnl:'Zaal of expohal',labelfr:'Hall ou salle d\'expo',labelen:'Hall or exhibition hall',labelde:'Saal oder Expo-Halle'},{id:'0.8.0.0.0',domain:'eventtype',name:{nl:'Openbare ruimte',fr:'Espace public',de:'Der öffentliche Raum',en:'Public space'},scope:['places'],label:'Openbare ruimte',labelnl:'Openbare ruimte',labelfr:'Espace public',labelen:'Public space',labelde:'Der öffentliche Raum'},{id:'3.25.0.0.0',domain:'facility',name:{nl:'Contactpunt voor personen met handicap',fr:'point de contact pour les personnes avec un handicap',de:'Kontakpunkt für Menschen mit Behinderung',en:'Point of contact for people with a disability'},scope:['events','places'],label:'Contactpunt voor personen met handicap',labelnl:'Contactpunt voor personen met handicap',labelfr:'point de contact pour les personnes avec un handicap',labelen:'Point of contact for people with a disability',labelde:'Kontakpunkt für Menschen mit Behinderung'},{id:'3.26.0.0.0',domain:'facility',name:{nl:'Parkeerplaats',fr:'Place de parking',de:'Behindertenparkplatz',en:'Parking area'},scope:['events','places'],label:'Parkeerplaats',labelnl:'Parkeerplaats',labelfr:'Place de parking',labelen:'Parking area',labelde:'Behindertenparkplatz'},{id:'3.27.0.0.0',domain:'facility',name:{nl:'Rolstoeltoegankelijk',fr:'Accessible en fauteuil roulant',de:'Rollstuhlgerecht',en:'Accessible for wheelchairs'},scope:['events'],label:'Rolstoeltoegankelijk',labelnl:'Rolstoeltoegankelijk',labelfr:'Accessible en fauteuil roulant',labelen:'Accessible for wheelchairs',labelde:'Rollstuhlgerecht'},{id:'3.28.0.0.0',domain:'facility',name:{nl:'Alternatieve ingang',fr:'Entrée alternative',de:'Alternativer Eingang',en:'Alternative entrance'},scope:['events'],label:'Alternatieve ingang',labelnl:'Alternatieve ingang',labelfr:'Entrée alternative',labelen:'Alternative entrance',labelde:'Alternativer Eingang'},{id:'3.29.0.0.0',domain:'facility',name:{nl:'Gegarandeerd zicht',fr:'Vue garantie',de:'Gewährleistete Aussicht',en:'Guaranteed view'},scope:['events'],label:'Gegarandeerd zicht',labelnl:'Gegarandeerd zicht',labelfr:'Vue garantie',labelen:'Guaranteed view',labelde:'Gewährleistete Aussicht'},{id:'3.30.0.0.0',domain:'facility',name:{nl:'Rolstoelpodium',fr:'Podium surélevé',de:'Rollstuhlpodest',en:'Viewing platform'},scope:['events'],label:'Rolstoelpodium',labelnl:'Rolstoelpodium',labelfr:'Podium surélevé',labelen:'Viewing platform',labelde:'Rollstuhlpodest'},{id:'3.31.0.0.0',domain:'facility',name:{nl:'Toegankelijk sanitair',fr:'Installations sanitaires accesibles',de:'Sanitäranlage für Rollstuhlbenutzer',en:'Accessible sanitary facilities'},scope:['events'],label:'Toegankelijk sanitair',labelnl:'Toegankelijk sanitair',labelfr:'Installations sanitaires accesibles',labelen:'Accessible sanitary facilities',labelde:'Sanitäranlage für Rollstuhlbenutzer'},{id:'3.32.0.0.0',domain:'facility',name:{nl:'Voorbehouden camping',fr:'Camping réservé',de:'Reservierter Campingplatz',en:'Reserved campsite'},scope:['events'],label:'Voorbehouden camping',labelnl:'Voorbehouden camping',labelfr:'Camping réservé',labelen:'Reserved campsite',labelde:'Reservierter Campingplatz'},{id:'3.33.0.0.0',domain:'facility',name:{nl:'Tolken Vlaamse Gebarentaal',fr:'Interprètes de langue de signes',de:'Gebärdensprachdolmetscher',en:'Sign language interpreting service'},scope:['events'],label:'Tolken Vlaamse Gebarentaal',labelnl:'Tolken Vlaamse Gebarentaal',labelfr:'Interprètes de langue de signes',labelen:'Sign language interpreting service',labelde:'Gebärdensprachdolmetscher'},{id:'3.34.0.0.0',domain:'facility',name:{nl:'Vereenvoudigde informatie',fr:'Information simplifiée',de:'Vereinfachte Information',en:'Simplified information'},scope:['events'],label:'Vereenvoudigde informatie',labelnl:'Vereenvoudigde informatie',labelfr:'Information simplifiée',labelen:'Simplified information',labelde:'Vereinfachte Information'},{id:'3.36.0.0.0',domain:'facility',name:{nl:'Verzorgingsruimte',fr:'Salle de soins',de:'Pflegeraum',en:'Care room'},scope:['events'],label:'Verzorgingsruimte',labelnl:'Verzorgingsruimte',labelfr:'Salle de soins',labelen:'Care room',labelde:'Pflegeraum'},{id:'3.37.0.0.0',domain:'facility',name:{nl:'Oplaadzone rolstoelen',fr:'Zone de chargement pour fauteuils roulants',de:'Aufladungsmöglichkeit für Rollstuhle',en:'Charging facility for wheelchairs'},scope:['events'],label:'Oplaadzone rolstoelen',labelnl:'Oplaadzone rolstoelen',labelfr:'Zone de chargement pour fauteuils roulants',labelen:'Charging facility for wheelchairs',labelde:'Aufladungsmöglichkeit für Rollstuhle'},{id:'3.38.0.0.0',domain:'facility',name:{nl:'Inter-assistentie',fr:'Assistance spéciale',de:'Spezialhilfe',en:'Special assistance'},scope:['events'],label:'Inter-assistentie',labelnl:'Inter-assistentie',labelfr:'Assistance spéciale',labelen:'Special assistance',labelde:'Spezialhilfe'},{id:'3.39.0.0.0',domain:'facility',name:{nl:'Begeleiderspas bij gehandicapten',fr:'Carte d\'accompagnateur',de:'Ausweis Begleitperson',en:'Carer pass'},scope:['events'],label:'Begeleiderspas bij gehandicapten',labelnl:'Begeleiderspas bij gehandicapten',labelfr:'Carte d\'accompagnateur',labelen:'Carer pass',labelde:'Ausweis Begleitperson'},{id:'3.40.0.0.0',domain:'facility',name:{nl:'Inter-Toegankelijkheidsgarantie',fr:'Accessibilité garantie',de:'Zertifizierte Zugänglichkeit',en:'Certified accessibility'},scope:['events'],label:'Inter-Toegankelijkheidsgarantie',labelnl:'Inter-Toegankelijkheidsgarantie',labelfr:'Accessibilité garantie',labelen:'Certified accessibility',labelde:'Zertifizierte Zugänglichkeit'},{id:'H28fcfRKFQAQs00K9NF9hh',domain:'facility',name:{nl:'Prikkelarm aanbod',fr:'Offre faiblement incitative',de:'Anreizarmes Angebot',en:'Low incentive'},scope:['events'],label:'Prikkelarm aanbod',labelnl:'Prikkelarm aanbod',labelfr:'Offre faiblement incitative',labelen:'Low incentive',labelde:'Anreizarmes Angebot'},{id:'4Vz9eZf0cnQmtfqcGGnNMF',domain:'facility',name:{nl:'Afspraken en voorspelbaarheid',fr:'Accords et prévisibilité',de:'Vereinbarungen und Vorhersehbarkeit',en:'Agreements and predictability'},scope:['events'],label:'Afspraken en voorspelbaarheid',labelnl:'Afspraken en voorspelbaarheid',labelfr:'Accords et prévisibilité',labelen:'Agreements and predictability',labelde:'Vereinbarungen und Vorhersehbarkeit'},{id:'1.11.1.0.0',domain:'theme',name:{nl:'Taal en communicatie',fr:'Langue et communication',de:'Sprache und Kommunikation',en:'Language and communication'},scope:['events'],label:'Taal en communicatie',labelnl:'Taal en communicatie',labelfr:'Langue et communication',labelen:'Language and communication',labelde:'Sprache und Kommunikation'},{id:'1.11.2.0.0',domain:'theme',name:{nl:'Themakamp',fr:'Camp thématique',de:'Themencamp',en:'Theme camp'},scope:['events'],label:'Themakamp',labelnl:'Themakamp',labelfr:'Camp thématique',labelen:'Theme camp',labelde:'Themencamp'},{id:'0.3.1.0.1',domain:'eventtype',name:{nl:'Cursus met open sessies',fr:'Cours avec sessions ouvertes',de:'Kurs mit offenen Sitzungen',en:'Course with open sessions'},scope:['events'],otherSuggestedTerms:[{id:'1.9.1.0.0',domain:'theme',name:{nl:'Ballet en klassieke dans',fr:'Ballet et danse classique',de:'Ballett und klassischer Tanz',en:'Classical dance and ballet'},scope:['events']},{id:'1.9.2.0.0',domain:'theme',name:{nl:'Moderne dans',fr:'Danse moderne',de:'Modern Dance',en:'Modern dance'},scope:['events']},{id:'1.9.5.0.0',domain:'theme',name:{nl:'Stijl en salondansen',fr:'Danse de salon et stylée',de:'Stil-und Gesellschaftstanz',en:'Ballroom dancing'},scope:['events']},{id:'1.9.3.0.0',domain:'theme',name:{nl:'Volksdans en werelddans',fr:'Danse folklorique et mondiale',de:'Folk-und World Dance',en:'Folk dance'},scope:['events']},{id:'1.1.0.0.0',domain:'theme',name:{nl:'Audiovisuele kunst',fr:'Arts audiovisuels',de:'Audiovisuelle Kunst',en:'Audiovisual arts'},scope:['events']},{id:'1.0.2.0.0',domain:'theme',name:{nl:'Beeldhouwkunst',fr:'Sculpture',de:'Skulptur',en:'Sculpture'},scope:['events']},{id:'0.52.0.0.0',domain:'theme',name:{nl:'Circus',fr:'Cirque',de:'Zirkus',en:'Circus'},scope:['events']},{id:'1.42.0.0.0',domain:'theme',name:{nl:'Creativiteit',fr:'Créativité',de:'Kreativität',en:'Creativity'},scope:['events']},{id:'1.0.5.0.0',domain:'theme',name:{nl:'Decoratieve kunst',fr:'Arts décoratives',de:'Angewandte Kunst',en:'Decorative arts'},scope:['events']},{id:'1.2.2.0.0',domain:'theme',name:{nl:'Design',fr:'Design',de:'Design',en:'Design'},scope:['events']},{id:'1.40.0.0.0',domain:'theme',name:{nl:'Erfgoed',fr:'Patrimoine',de:'Kulturerben',en:'Heritage'},scope:['events']},{id:'1.0.6.0.0',domain:'theme',name:{nl:'Fotografie',fr:'Photographie',de:'Fotografie',en:'Photography'},scope:['events']},{id:'1.0.4.0.0',domain:'theme',name:{nl:'Grafiek',fr:'Art grafique',de:'Grafik',en:'Graphics'},scope:['events']},{id:'1.10.0.0.0',domain:'theme',name:{nl:'Literatuur',fr:'Litérature',de:'Literatur',en:'Literature'},scope:['events']},{id:'1.0.9.0.0',domain:'theme',name:{nl:'Meerdere kunstvormen',fr:'Arts multiples',de:'Mehrere Formen der Kunst',en:'Multiple art forms'},scope:['events']},{id:'1.49.0.0.0',domain:'theme',name:{nl:'Mode',fr:'Mode',de:'Mode',en:'Fashion'},scope:['events']},{id:'1.10.5.0.0',domain:'theme',name:{nl:'Poezie',fr:'Poésie',de:'Poesie',en:'Poetry'},scope:['events']},{id:'1.0.1.0.0',domain:'theme',name:{nl:'Schilderkunst',fr:'Peinture',de:'Malerei',en:'Painting'},scope:['events']},{id:'1.3.1.0.0',domain:'theme',name:{nl:'Tekst en muziektheater',fr:'Théâtre dramatique et musical',de:'Text und Musik',en:'Theatre and Musical theatre'},scope:['events']},{id:'1.8.3.5.0',domain:'theme',name:{nl:'Amusementsmuziek',fr:'Cabaret',de:'Schlager',en:'Cabaret music'},scope:['events']},{id:'1.8.3.3.0',domain:'theme',name:{nl:'Dance muziek',fr:'Musique de danse',de:'Tanzmusik',en:'Dance music'},scope:['events']},{id:'1.8.4.0.0',domain:'theme',name:{nl:'Folk en wereldmuziek',fr:'Musique folklorique et mondiale',de:'Folk und World',en:'Folk and world music'},scope:['events']},{id:'1.8.3.2.0',domain:'theme',name:{nl:'Hip hop, rnb en rap',fr:'Hip hop, rnb et rap',de:'Hip-Hop, R und B und Rap',en:'Hip hop, rnb and rap'},scope:['events']},{id:'1.8.2.0.0',domain:'theme',name:{nl:'Jazz en blues',fr:'Jazz et blues',de:'Jazz und Blues',en:'Jazz and blues'},scope:['events']},{id:'1.8.1.0.0',domain:'theme',name:{nl:'Klassieke muziek',fr:'Musique classique',de:'Klassische Musik',en:'Classical music'},scope:['events']},{id:'1.8.3.1.0',domain:'theme',name:{nl:'Pop en rock',fr:'Pop et rock',de:'Pop und Rock',en:'Pop and rock'},scope:['events']},{id:'1.51.14.0.0',domain:'theme',name:{nl:'Atletiek, wandelen en fietsen',fr:'Athlétisme, marche et cyclisme',de:'Leichtathletik, Wandern und Radfahren',en:'Athletics, running and cycling'},scope:['events']},{id:'1.51.13.0.0',domain:'theme',name:{nl:'Bal en racketsport',fr:'Sports au ballons et raquettes',de:'Ball und Schläger',en:'Ball and racket sports'},scope:['events']},{id:'1.51.6.0.0',domain:'theme',name:{nl:'Fitness, gymnastiek, dans en vechtsport',fr:'Fitness, gymnastique, danse et arts martiaux',de:'Fitness, Tanz und Kampfkunst',en:'Fitness, gymnastics, dance and martial arts'},scope:['events']},{id:'1.58.8.0.0',domain:'theme',name:{nl:'Lucht en motorsport',fr:'Sports aero et moteurs',de:'Luft-und Motorsport',en:'Air and motorsports'},scope:['events']},{id:'1.51.12.0.0',domain:'theme',name:{nl:'Omnisport en andere',fr:'Omnisports et autres',de:'Omnisport und andere',en:'Other sports'},scope:['events']},{id:'1.51.11.0.0',domain:'theme',name:{nl:'Outdoor en Adventure sport',fr:'Sports de plein air et d\'aventure',de:'Outdoor- und Abenteuersport',en:'Outdoor and Adventure sports'},scope:['events']},{id:'1.51.10.0.0',domain:'theme',name:{nl:'Volkssporten',fr:'Sports folkloriques',de:'Sport Menschen',en:'Folklore sports'},scope:['events']},{id:'1.51.3.0.0',domain:'theme',name:{nl:'Zwemmen en watersport',fr:'Natation et sports nautiques',de:'Schwimmen und Wassersport',en:'Swimming and water sports'},scope:['events']},{id:'1.37.1.0.0',domain:'theme',name:{nl:'Gezondheid en zorg',fr:'Santé et soins',de:'Gesundheit und Pflege',en:'Health and care'},scope:['events']},{id:'1.43.0.0.0',domain:'theme',name:{nl:'Interculturele vorming',fr:'Formation interculturelle',de:'Interkulturelle Erziehung',en:'Cross-cultural education'},scope:['events']},{id:'1.64.0.0.0',domain:'theme',name:{nl:'Milieu en natuur',fr:'Environnement et nature',de:'Umwelt und Natur',en:'Environment and nature'},scope:['events']},{id:'1.37.0.0.0',domain:'theme',name:{nl:'Opvoeding',fr:'Éducation',de:'Bildung',en:'Education'},scope:['events']},{id:'1.61.0.0.0',domain:'theme',name:{nl:'Persoon en relaties',fr:'Hommes et relations',de:'Person und Gesellschaft',en:'People and society'},scope:['events']},{id:'1.37.2.0.0',domain:'theme',name:{nl:'Samenleving',fr:'Vivre en société',de:'Gesellschaft',en:'Society'},scope:['events']},{id:'1.65.0.0.0',domain:'theme',name:{nl:'Voeding',fr:'Nutrition',de:'Ernährung',en:'Nutrition'},scope:['events']},{id:'1.25.0.0.0',domain:'theme',name:{nl:'Wetenschap',fr:'Science',de:'Wissenschaft',en:'Science'},scope:['events']},{id:'1.44.0.0.0',domain:'theme',name:{nl:'Zingeving, filosofie en religie',fr:'Sense de la vie, philosophie et religion',de:'Philosophie und Religion',en:'Philosophy and religion'},scope:['events']},{id:'1.21.0.0.0',domain:'theme',name:{nl:'Computer en techniek',fr:'Ordinateurs et technologie',de:'Computer-und Technik',en:'Computer and technology'},scope:['events']}],label:'Cursus met open sessies',labelnl:'Cursus met open sessies',labelfr:'Cours avec sessions ouvertes',labelen:'Course with open sessions',labelde:'Kurs mit offenen Sitzungen'},{id:'8.70.0.0.0',domain:'eventtype',name:{nl:'Theater',fr:'Théâtre',de:'Theater',en:'Theatre'},scope:['places'],label:'Theater',labelnl:'Theater',labelfr:'Théâtre',labelen:'Theatre',labelde:'Theater'}])

.constant('eventCategories', [{label:'Begeleide uitstap of rondleiding',id:'0.7.0.0.0',primary:true,themes:[{id:'1.2.1.0.0',label:'Architectuur'},{id:'1.40.0.0.0',label:'Erfgoed'},{id:'1.11.0.0.0',label:'Geschiedenis'},{id:'1.41.0.0.0',label:'Kunst en kunsteducatie'},{id:'1.63.0.0.0',label:'Landbouw en platteland'},{id:'1.0.9.0.0',label:'Meerdere kunstvormen'},{id:'1.64.0.0.0',label:'Milieu en natuur'},{id:'1.37.2.0.0',label:'Samenleving'},{id:'1.25.0.0.0',label:'Wetenschap'},{id:'1.44.0.0.0',label:'Zingeving, filosofie en religie'}]},{label:'Beurs',id:'0.6.0.0.0',primary:false,themes:[{id:'1.17.0.0.0',label:'Antiek en brocante'},{id:'1.7.2.0.0',label:'Erfgoed'},{id:'1.62.0.0.0',label:'Gezondheid en wellness'},{id:'1.10.0.0.0',label:'Literatuur'},{id:'1.0.9.0.0',label:'Meerdere kunstvormen'},{id:'1.64.0.0.0',label:'Milieu en natuur'},{id:'1.37.2.0.0',label:'Samenleving'},{id:'1.10.8.0.0',label:'Strips'},{id:'1.65.0.0.0',label:'Voeding'},{id:'1.25.0.0.0',label:'Wetenschap'}]},{label:'Concert',id:'0.50.4.0.0',primary:true,themes:[{id:'1.8.3.5.0',label:'Amusementsmuziek'},{id:'1.8.3.3.0',label:'Dance muziek'},{id:'1.8.4.0.0',label:'Folk en wereldmuziek'},{id:'1.8.3.2.0',label:'Hiphop, r&b en rap'},{id:'1.8.2.0.0',label:'Jazz en blues'},{id:'1.8.1.0.0',label:'Klassieke muziek'},{id:'1.8.3.1.0',label:'Pop en rock'}]},{label:'Lessenreeks',id:'0.3.1.0.0',primary:true,themes:[{id:'1.9.1.0.0',label:'Ballet en klassieke dans',group:'Dans'},{id:'1.9.2.0.0',label:'Moderne dans',group:'Dans'},{id:'1.9.5.0.0',label:'Stijl en salondansen',group:'Dans'},{id:'1.9.3.0.0',label:'Volksdans en werelddans',group:'Dans'},{id:'1.1.0.0.0',label:'Audiovisuele kunst',group:'Kunst en erfgoed'},{id:'1.0.2.0.0',label:'Beeldhouwkunst',group:'Kunst en erfgoed'},{id:'0.52.0.0.0',label:'Circus',group:'Kunst en erfgoed'},{id:'1.42.0.0.0',label:'Creativiteit',group:'Kunst en erfgoed'},{id:'1.0.5.0.0',label:'Decoratieve kunst',group:'Kunst en erfgoed'},{id:'1.2.2.0.0',label:'Design',group:'Kunst en erfgoed'},{id:'1.40.0.0.0',label:'Erfgoed',group:'Kunst en erfgoed'},{id:'1.0.6.0.0',label:'Fotografie',group:'Kunst en erfgoed'},{id:'1.0.4.0.0',label:'Grafiek',group:'Kunst en erfgoed'},{id:'1.10.0.0.0',label:'Literatuur',group:'Kunst en erfgoed'},{id:'1.0.9.0.0',label:'Meerdere kunstvormen',group:'Kunst en erfgoed'},{id:'1.49.0.0.0',label:'Mode',group:'Kunst en erfgoed'},{id:'1.10.5.0.0',label:'Poëzie',group:'Kunst en erfgoed'},{id:'1.0.1.0.0',label:'Schilderkunst',group:'Kunst en erfgoed'},{id:'1.3.1.0.0',label:'Tekst- en muziektheater',group:'Kunst en erfgoed'},{id:'1.8.3.5.0',label:'Amusementsmuziek',group:'Muziek'},{id:'1.8.3.3.0',label:'Dance muziek',group:'Muziek'},{id:'1.8.4.0.0',label:'Folk en wereldmuziek',group:'Muziek'},{id:'1.8.3.2.0',label:'Hiphop, r&b en rap',group:'Muziek'},{id:'1.8.2.0.0',label:'Jazz en blues',group:'Muziek'},{id:'1.8.1.0.0',label:'Klassieke muziek',group:'Muziek'},{id:'1.8.3.1.0',label:'Pop en rock',group:'Muziek'},{id:'1.51.14.0.0',label:'Atletiek, wandelen en fietsen',group:'Sport'},{id:'1.51.13.0.0',label:'Bal en racketsport',group:'Sport'},{id:'1.51.6.0.0',label:'Fitness, gymnastiek, dans en vechtsport',group:'Sport'},{id:'1.58.8.0.0',label:'Lucht en motorsport',group:'Sport'},{id:'1.51.12.0.0',label:'Omnisport en andere',group:'Sport'},{id:'1.51.11.0.0',label:'Outdoor en Adventure sport',group:'Sport'},{id:'1.51.10.0.0',label:'Volkssporten',group:'Sport'},{id:'1.51.3.0.0',label:'Zwemmen en watersport',group:'Sport'},{id:'1.37.1.0.0',label:'Gezondheid en wellness',group:'Varia'},{id:'1.43.0.0.0',label:'Interculturele vorming',group:'Varia'},{id:'1.64.0.0.0',label:'Milieu en natuur',group:'Varia'},{id:'1.37.0.0.0',label:'Opvoeding',group:'Varia'},{id:'1.61.0.0.0',label:'Persoon en relaties',group:'Varia'},{id:'1.37.2.0.0',label:'Samenleving',group:'Varia'},{id:'1.65.0.0.0',label:'Voeding',group:'Varia'},{id:'1.25.0.0.0',label:'Wetenschap',group:'Varia'},{id:'1.44.0.0.0',label:'Zingeving, filosofie en religie',group:'Varia'}]},{label:'Cursus met open sessies',id:'0.3.1.0.1',primary:true,themes:[{id:'1.9.1.0.0',label:'Ballet en klassieke dans',group:'Dans'},{id:'1.9.2.0.0',label:'Moderne dans',group:'Dans'},{id:'1.9.5.0.0',label:'Stijl en salondansen',group:'Dans'},{id:'1.9.3.0.0',label:'Volksdans en werelddans',group:'Dans'},{id:'1.1.0.0.0',label:'Audiovisuele kunst',group:'Kunst en erfgoed'},{id:'1.0.2.0.0',label:'Beeldhouwkunst',group:'Kunst en erfgoed'},{id:'0.52.0.0.0',label:'Circus',group:'Kunst en erfgoed'},{id:'1.42.0.0.0',label:'Creativiteit',group:'Kunst en erfgoed'},{id:'1.0.5.0.0',label:'Decoratieve kunst',group:'Kunst en erfgoed'},{id:'1.2.2.0.0',label:'Design',group:'Kunst en erfgoed'},{id:'1.40.0.0.0',label:'Erfgoed',group:'Kunst en erfgoed'},{id:'1.0.6.0.0',label:'Fotografie',group:'Kunst en erfgoed'},{id:'1.0.4.0.0',label:'Grafiek',group:'Kunst en erfgoed'},{id:'1.10.0.0.0',label:'Literatuur',group:'Kunst en erfgoed'},{id:'1.0.9.0.0',label:'Meerdere kunstvormen',group:'Kunst en erfgoed'},{id:'1.49.0.0.0',label:'Mode',group:'Kunst en erfgoed'},{id:'1.10.5.0.0',label:'Poëzie',group:'Kunst en erfgoed'},{id:'1.0.1.0.0',label:'Schilderkunst',group:'Kunst en erfgoed'},{id:'1.3.1.0.0',label:'Tekst- en muziektheater',group:'Kunst en erfgoed'},{id:'1.8.3.5.0',label:'Amusementsmuziek',group:'Muziek'},{id:'1.8.3.3.0',label:'Dance muziek',group:'Muziek'},{id:'1.8.4.0.0',label:'Folk en wereldmuziek',group:'Muziek'},{id:'1.8.3.2.0',label:'Hiphop, r&b en rap',group:'Muziek'},{id:'1.8.2.0.0',label:'Jazz en blues',group:'Muziek'},{id:'1.8.1.0.0',label:'Klassieke muziek',group:'Muziek'},{id:'1.8.3.1.0',label:'Pop en rock',group:'Muziek'},{id:'1.51.14.0.0',label:'Atletiek, wandelen en fietsen',group:'Sport'},{id:'1.51.13.0.0',label:'Bal en racketsport',group:'Sport'},{id:'1.51.6.0.0',label:'Fitness, gymnastiek, dans en vechtsport',group:'Sport'},{id:'1.58.8.0.0',label:'Lucht en motorsport',group:'Sport'},{id:'1.51.12.0.0',label:'Omnisport en andere',group:'Sport'},{id:'1.51.11.0.0',label:'Outdoor en Adventure sport',group:'Sport'},{id:'1.51.10.0.0',label:'Volkssporten',group:'Sport'},{id:'1.51.3.0.0',label:'Zwemmen en watersport',group:'Sport'},{id:'1.37.1.0.0',label:'Gezondheid en wellness',group:'Varia'},{id:'1.43.0.0.0',label:'Interculturele vorming',group:'Varia'},{id:'1.64.0.0.0',label:'Milieu en natuur',group:'Varia'},{id:'1.37.0.0.0',label:'Opvoeding',group:'Varia'},{id:'1.61.0.0.0',label:'Persoon en relaties',group:'Varia'},{id:'1.37.2.0.0',label:'Samenleving',group:'Varia'},{id:'1.65.0.0.0',label:'Voeding',group:'Varia'},{id:'1.25.0.0.0',label:'Wetenschap',group:'Varia'},{id:'1.44.0.0.0',label:'Zingeving, filosofie en religie',group:'Varia'}]},{label:'Dansvoorstelling',id:'0.54.0.0.0',primary:false,themes:[{id:'1.9.1.0.0',label:'Ballet en klassieke dans'},{id:'1.9.2.0.0',label:'Moderne dans'},{id:'1.9.5.0.0',label:'Stijl en salondansen'},{id:'1.9.3.0.0',label:'Volksdans en werelddans'}]},{label:'Eet- of drankfestijn',id:'1.50.0.0.0',primary:false},{label:'Festival',id:'0.5.0.0.0',primary:false,themes:[{id:'1.8.3.5.0',label:'Amusementsmuziek'},{id:'0.52.0.0.0',label:'Circus'},{id:'1.8.3.3.0',label:'Dance muziek'},{id:'1.8.4.0.0',label:'Folk en wereldmuziek'},{id:'1.3.10.0.0',label:'Humor en comedy'},{id:'1.8.2.0.0',label:'Jazz en blues'},{id:'1.8.1.0.0',label:'Klassieke muziek'},{id:'1.41.0.0.0',label:'Kunst en kunsteducatie'},{id:'1.10.0.0.0',label:'Literatuur'},{id:'1.7.14.0.0',label:'Meerdere filmgenres'},{id:'1.0.9.0.0',label:'Meerdere kunstvormen'},{id:'1.8.3.1.0',label:'Pop en rock'},{id:'1.37.2.0.0',label:'Samenleving'},{id:'1.3.1.0.0',label:'Tekst- en muziektheater'},{id:'1.25.0.0.0',label:'Wetenschap'}]},{label:'Film',id:'0.50.6.0.0',primary:true,themes:[{id:'1.7.2.0.0',label:'Actie- en avonturenfilm'},{id:'1.7.12.0.0',label:'Animatie en kinderfilms'},{id:'1.7.11.0.0',label:'Cinefiel'},{id:'1.7.1.0.0',label:'Documentaires en reportages'},{id:'1.7.4.0.0',label:'Drama'},{id:'1.7.10.0.0',label:'Filmmusical'},{id:'1.7.6.0.0',label:'Griezelfilm of horror'},{id:'1.7.8.0.0',label:'Historische film'},{id:'1.7.3.0.0',label:'Komedie'},{id:'1.7.13.0.0',label:'Kortfilm'},{id:'1.7.7.0.0',label:'Science fiction'},{id:'1.7.15.0.0',label:'Thriller'}]},{label:'Kamp of vakantie',id:'0.57.0.0.0',primary:false,themes:[{id:'1.51.11.0.0',label:'Avontuur'},{id:'1.42.0.0.0',label:'Creativiteit'},{id:'1.65.0.0.0',label:'Koken'},{id:'1.64.0.0.0',label:'Natuur'},{id:'1.51.12.0.0',label:'Sport'},{id:'1.21.0.0.0',label:'Technologie'},{id:'1.11.2.0.0',label:'Themakamp'},{id:'1.11.1.0.0',label:'Taal en communicatie'}]},{label:'Festiviteit',id:'0.28.0.0.0',primary:false},{label:'Lezing of congres',id:'0.3.2.0.0',primary:'false',themes:[{id:'1.21.0.0.0',label:'Computer en techniek'},{id:'1.42.0.0.0',label:'Creativiteit'},{id:'1.40.0.0.0',label:'Erfgoed'},{id:'1.11.0.0.0',label:'Geschiedenis'},{id:'1.37.1.0.0',label:'Gezondheid en zorg'},{id:'1.41.0.0.0',label:'Kunst en kunsteducatie'},{id:'1.10.0.0.0',label:'Literatuur'},{id:'1.64.0.0.0',label:'Milieu en natuur'},{id:'1.37.0.0.0',label:'Opvoeding'},{id:'1.61.0.0.0',label:'Persoon en relaties'},{id:'1.10.5.0.0',label:'Poëzie'},{id:'1.37.2.0.0',label:'Samenleving'},{id:'1.25.0.0.0',label:'Wetenschap'},{id:'1.44.0.0.0',label:'Zingeving, filosofie en religie'}]},{label:'Markt, braderie of kermis',id:'0.37.0.0.0',primary:false,themes:[{id:'1.17.0.0.0',label:'Antiek en brocante'},{id:'1.66.0.0.0',label:'Economie'},{id:'1.62.0.0.0',label:'Gezondheid en wellness'},{id:'1.63.0.0.0',label:'Landbouw en platteland'},{id:'1.10.0.0.0',label:'Literatuur'},{id:'1.0.9.0.0',label:'Meerdere kunstvormen'},{id:'1.64.0.0.0',label:'Milieu en natuur'},{id:'1.37.2.0.0',label:'Samenleving'}]},{label:'Opendeurdag',id:'0.12.0.0.0',primary:true,themes:[{id:'1.2.1.0.0',label:'Architectuur'},{id:'1.21.0.0.0',label:'Computer en techniek'},{id:'1.40.0.0.0',label:'Erfgoed'},{id:'1.41.0.0.0',label:'Kunst en kunsteducatie'},{id:'1.63.0.0.0',label:'Landbouw en platteland'},{id:'1.10.0.0.0',label:'Literatuur'},{id:'1.0.9.0.0',label:'Meerdere kunstvormen'},{id:'1.37.2.0.0',label:'Samenleving'},{id:'1.25.0.0.0',label:'Wetenschap'}]},{label:'Party of fuif',id:'0.49.0.0.0',primary:false},{label:'Route',id:'0.17.0.0.0',primary:true},{label:'Spel of quiz',id:'0.50.21.0.0',primary:false},{label:'Sport en beweging',id:'0.59.0.0.0',primary:false,themes:[{id:'1.51.14.0.0',label:'Atletiek, wandelen en fietsen'},{id:'1.51.13.0.0',label:'Bal en racketsport'},{id:'1.51.6.0.0',label:'Fitness, gymnastiek, dans en vechtsport'},{id:'1.58.8.0.0',label:'Lucht en motorsport'},{id:'1.51.12.0.0',label:'Omnisport en andere'},{id:'1.51.11.0.0',label:'Outdoor en Adventure sport'},{id:'1.51.10.0.0',label:'Volkssporten'},{id:'1.51.3.0.0',label:'Zwemmen en watersport'}]},{label:'Sportwedstrijd bekijken',id:'0.19.0.0.0',primary:false,themes:[{id:'1.51.14.0.0',label:'Atletiek, wandelen en fietsen'},{id:'1.51.13.0.0',label:'Bal en racketsport'},{id:'1.51.6.0.0',label:'Fitness, gymnastiek, dans en vechtsport'},{id:'1.58.8.0.0',label:'Lucht en motorsport'},{id:'1.51.12.0.0',label:'Omnisport en andere'},{id:'1.51.11.0.0',label:'Outdoor en Adventure sport'},{id:'1.51.10.0.0',label:'Volkssporten'},{id:'1.51.3.0.0',label:'Zwemmen en watersport'}]},{label:'Tentoonstelling',id:'0.0.0.0.0',primary:true,themes:[{id:'1.2.1.0.0',label:'Architectuur'},{id:'1.1.0.0.0',label:'Audiovisuele kunst'},{id:'1.0.2.0.0',label:'Beeldhouwkunst'},{id:'1.0.5.0.0',label:'Decoratieve kunst'},{id:'1.2.2.0.0',label:'Design'},{id:'1.40.0.0.0',label:'Erfgoed'},{id:'1.0.6.0.0',label:'Fotografie'},{id:'1.11.0.0.0',label:'Geschiedenis'},{id:'1.0.4.0.0',label:'Grafiek'},{id:'1.0.3.0.0',label:'Installatiekunst'},{id:'1.10.0.0.0',label:'Literatuur'},{id:'1.0.9.0.0',label:'Meerdere kunstvormen'},{id:'1.64.0.0.0',label:'Milieu en natuur'},{id:'1.49.0.0.0',label:'Mode'},{id:'1.37.2.0.0',label:'Samenleving'},{id:'1.0.1.0.0',label:'Schilderkunst'},{id:'1.25.0.0.0',label:'Wetenschap'}]},{label:'Theatervoorstelling',id:'0.55.0.0.0',primary:false,themes:[{id:'0.52.0.0.0',label:'Circus'},{id:'1.3.5.0.0',label:'Figuren en poppentheater'},{id:'1.3.10.0.0',label:'Humor en comedy'},{id:'1.3.4.0.0',label:'Mime en bewegingstheater'},{id:'1.4.0.0.0',label:'Musical'},{id:'1.5.0.0.0',label:'Opera en operette'},{id:'1.3.1.0.0',label:'Tekst- en muziektheater'}]}])

.constant('placeCategories', [{label:'Archeologische Site',id:'3CuHvenJ+EGkcvhXLg9Ykg',primary:true},{label:'Bibliotheek of documentatiecentrum',id:'kI7uAyn2uUu9VV6Z3uWZTA',primary:true},{label:'Bioscoop',id:'BtVNd33sR0WntjALVbyp3w',primary:false},{label:'Cultuur- of ontmoetingscentrum',id:'Yf4aZBfsUEu2NsQqsprngw',primary:false},{label:'Discotheek',id:'YVBc8KVdrU6XfTNvhMYUpg',primary:false},{label:'Horeca',id:'ekdc4ATGoUitCa0e6me6xA',primary:false},{label:'Jeugdhuis of jeugdcentrum',id:'JCjA0i5COUmdjMwcyjNAFA',primary:false},{label:'Monument',id:'0.14.0.0.0',primary:true},{label:'Museum of galerij',id:'GnPFp9uvOUyqhOckIFMKmg',primary:true},{label:'Natuur, park of tuin',id:'0.15.0.0.0',primary:true},{label:'Openbare ruimte',id:'0.8.0.0.0',primary:false},{label:'Recreatiedomein of centrum',id:'0.53.0.0.0',primary:false},{label:'School of onderwijscentrum',id:'rJRFUqmd6EiqTD4c7HS90w',primary:false},{label:'Sportcentrum',id:'eBwaUAAhw0ur0Z02i5ttnw',primary:false},{label:'Theater',id:'8.70.0.0.0',primary:false},{label:'Thema of pretpark',id:'0.41.0.0.0',primary:false},{label:'Winkel',id:'VRC6HX0Wa063sq98G5ciqw',primary:false},{label:'Speeltuin',id:'wwjRVmExI0w6xfQwT1KWpx',primary:false},{label:'Zaal of expohal',id:'OyaPaf64AEmEAYXHeLMAtA',primary:false}])

.constant('facilities', {motor:[{label:'Assistentie',id:'3.23.2.0.0'},{label:'Parkeerplaats',id:'3.26.0.0.0'},{label:'Rolstoel ter beschikking',id:'3.23.3.0.0'},{label:'Rolstoelpodium',id:'3.30.0.0.0'},{label:'Rolstoeltoegankelijk',id:'3.27.0.0.0'},{label:'Toegankelijk sanitair',id:'3.31.0.0.0'}],visual:[{label:'Audiodescriptie',id:'3.13.2.0.0'},{label:'Voorzieningen voor assistentiehonden',id:'3.13.1.0.0'}],hearing:[{label:'Boven- of ondertiteling',id:'3.17.3.0.0'},{label:'Ringleiding',id:'3.17.1.0.0'},{label:'Tolken Vlaamse Gebarentaal',id:'3.33.0.0.0'}],mental:[{label:'Vereenvoudigde informatie',id:'3.34.0.0.0'}],neurodivers:[{label:'Prikkelarm aanbod',id:'H28fcfRKFQAQs00K9NF9hh'},{label:'Afspraken en voorspelbaarheid',id:'4Vz9eZf0cnQmtfqcGGnNMF'}],other:[{label:'Alternatieve ingang',id:'3.28.0.0.0'},{label:'Begeleiderspas',id:'3.39.0.0.0'},{label:'Contactpunt voor personen met handicap',id:'3.25.0.0.0'},{label:'Gegarandeerd zicht',id:'3.29.0.0.0'},{label:'Inter-assistentie',id:'3.38.0.0.0'},{label:'Inter-events',id:'3.40.0.0.0'},{label:'Stroomvoorziening voor handicap',id:'3.37.0.0.0'},{label:'Verzorgingsruimte',id:'3.36.0.0.0'},{label:'Voorbehouden camping',id:'3.32.0.0.0'}],place:[{label:'Contactpunt voor personen met handicap',id:'3.25.0.0.0'},{label:'Rolstoel ter beschikking',id:'3.23.3.0.0'},{label:'Parkeerplaats',id:'3.26.0.0.0'},{label:'Voorzieningen voor assistentiehonden',id:'3.13.1.0.0'}]})

.constant('citiesBE', [{label:'5680 Vodelée',name:'Vodelée',zip:'5680'},{label:'5680 Vaucelles',name:'Vaucelles',zip:'5680'},{label:'5680 Soulme',name:'Soulme',zip:'5680'},{label:'5680 Romerée',name:'Romerée',zip:'5680'},{label:'5680 Niverlée',name:'Niverlée',zip:'5680'},{label:'5680 Matagne-la-Petite',name:'Matagne-la-Petite',zip:'5680'},{label:'5680 Matagne-la-Grande',name:'Matagne-la-Grande',zip:'5680'},{label:'5680 Gochenée',name:'Gochenée',zip:'5680'},{label:'5680 Gimnée',name:'Gimnée',zip:'5680'},{label:'5680 Doische',name:'Doische',zip:'5680'},{label:'5670 Viroinval',name:'Viroinval',zip:'5670'},{label:'5670 Vierves-sur-Viroin',name:'Vierves-sur-Viroin',zip:'5670'},{label:'5670 Treignes',name:'Treignes',zip:'5670'},{label:'5670 Olloy-sur-Viroin',name:'Olloy-sur-Viroin',zip:'5670'},{label:'5670 Oignies-en-Thiérache',name:'Oignies-en-Thiérache',zip:'5670'},{label:'5670 Nismes',name:'Nismes',zip:'5670'},{label:'5670 Mazée',name:'Mazée',zip:'5670'},{label:'5670 Le Mesnil',name:'Le Mesnil',zip:'5670'},{label:'5670 Dourbes',name:'Dourbes',zip:'5670'},{label:'5660 Presgaux',name:'Presgaux',zip:'5660'},{label:'5660 Petite-Chapelle',name:'Petite-Chapelle',zip:'5660'},{label:'5660 Petigny',name:'Petigny',zip:'5660'},{label:'5660 Pesche',name:'Pesche',zip:'5660'},{label:'5660 Mariembourg',name:'Mariembourg',zip:'5660'},{label:'5660 Gonrieux',name:'Gonrieux',zip:'5660'},{label:'5660 Frasnes Namur',name:'Frasnes Namur',zip:'5660'},{label:'5660 Dailly',name:'Dailly',zip:'5660'},{label:'5660 Cul-des-Sarts',name:'Cul-des-Sarts',zip:'5660'},{label:'5660 Couvin',name:'Couvin',zip:'5660'},{label:'5660 Brûly-de-Pesche',name:'Brûly-de-Pesche',zip:'5660'},{label:'5660 Brûly',name:'Brûly',zip:'5660'},{label:'5660 Boussu-en-Fagne',name:'Boussu-en-Fagne',zip:'5660'},{label:'5660 Aublain',name:'Aublain',zip:'5660'},{label:'5651 Thy-le-Château',name:'Thy-le-Château',zip:'5651'},{label:'5651 Tarcienne',name:'Tarcienne',zip:'5651'},{label:'5651 Somzée',name:'Somzée',zip:'5651'},{label:'5651 Rognée',name:'Rognée',zip:'5651'},{label:'5651 Laneffe',name:'Laneffe',zip:'5651'},{label:'5651 Gourdinne',name:'Gourdinne',zip:'5651'},{label:'5651 Berzée',name:'Berzée',zip:'5651'},{label:'5650 Yves-Gomezée',name:'Yves-Gomezée',zip:'5650'},{label:'5650 Walcourt',name:'Walcourt',zip:'5650'},{label:'5650 Vogenée',name:'Vogenée',zip:'5650'},{label:'5650 Pry',name:'Pry',zip:'5650'},{label:'5650 Fraire',name:'Fraire',zip:'5650'},{label:'5650 Fontenelle',name:'Fontenelle',zip:'5650'},{label:'5650 Clermont Namur',name:'Clermont Namur',zip:'5650'},{label:'5650 Chastrès',name:'Chastrès',zip:'5650'},{label:'5650 Castillon',name:'Castillon',zip:'5650'},{label:'5646 Stave',name:'Stave',zip:'5646'},{label:'5644 Ermeton-sur-Biert',name:'Ermeton-sur-Biert',zip:'5644'},{label:'5641 Furnaux',name:'Furnaux',zip:'5641'},{label:'5640 Saint-Gérard',name:'Saint-Gérard',zip:'5640'},{label:'5640 Oret',name:'Oret',zip:'5640'},{label:'5640 Mettet',name:'Mettet',zip:'5640'},{label:'5640 Graux',name:'Graux',zip:'5640'},{label:'5640 Biesmerée',name:'Biesmerée',zip:'5640'},{label:'5640 Biesme',name:'Biesme',zip:'5640'},{label:'5630 Villers-Deux-Eglises',name:'Villers-Deux-Eglises',zip:'5630'},{label:'5630 Soumoy',name:'Soumoy',zip:'5630'},{label:'5630 Silenrieux',name:'Silenrieux',zip:'5630'},{label:'5630 Senzeille',name:'Senzeille',zip:'5630'},{label:'5630 Daussois',name:'Daussois',zip:'5630'},{label:'5630 Cerfontaine',name:'Cerfontaine',zip:'5630'},{label:'5621 Thy-le-Bauduin',name:'Thy-le-Bauduin',zip:'5621'},{label:'5621 Morialmé',name:'Morialmé',zip:'5621'},{label:'5621 Hanzinne',name:'Hanzinne',zip:'5621'},{label:'5621 Hanzinelle',name:'Hanzinelle',zip:'5621'},{label:'5620 Saint-Aubin',name:'Saint-Aubin',zip:'5620'},{label:'5620 Rosée',name:'Rosée',zip:'5620'},{label:'5620 Morville',name:'Morville',zip:'5620'},{label:'5620 Hemptinne-lez-Florennes',name:'Hemptinne-lez-Florennes',zip:'5620'},{label:'5620 Florennes',name:'Florennes',zip:'5620'},{label:'5620 Flavion',name:'Flavion',zip:'5620'},{label:'5620 Corenne',name:'Corenne',zip:'5620'},{label:'5600 Vodecée',name:'Vodecée',zip:'5600'},{label:'5600 Villers-le-Gambon',name:'Villers-le-Gambon',zip:'5600'},{label:'5600 Villers-en-Fagne',name:'Villers-en-Fagne',zip:'5600'},{label:'5600 Surice',name:'Surice',zip:'5600'},{label:'5600 Sautour',name:'Sautour',zip:'5600'},{label:'5600 Sart-en-Fagne',name:'Sart-en-Fagne',zip:'5600'},{label:'5600 Samart',name:'Samart',zip:'5600'},{label:'5600 Romedenne',name:'Romedenne',zip:'5600'},{label:'5600 Roly',name:'Roly',zip:'5600'},{label:'5600 Philippeville',name:'Philippeville',zip:'5600'},{label:'5600 Omezée',name:'Omezée',zip:'5600'},{label:'5600 Neuville Philippeville',name:'Neuville Philippeville',zip:'5600'},{label:'5600 Merlemont',name:'Merlemont',zip:'5600'},{label:'5600 Jamiolle',name:'Jamiolle',zip:'5600'},{label:'5600 Jamagne',name:'Jamagne',zip:'5600'},{label:'5600 Franchimont',name:'Franchimont',zip:'5600'},{label:'5600 Fagnolle',name:'Fagnolle',zip:'5600'},{label:'5590 Sovet',name:'Sovet',zip:'5590'},{label:'5590 Serinchamps',name:'Serinchamps',zip:'5590'},{label:'5590 Pessoux',name:'Pessoux',zip:'5590'},{label:'5590 Leignon',name:'Leignon',zip:'5590'},{label:'5590 Haversin',name:'Haversin',zip:'5590'},{label:'5590 Conneux',name:'Conneux',zip:'5590'},{label:'5590 Ciney',name:'Ciney',zip:'5590'},{label:'5590 Chevetogne',name:'Chevetogne',zip:'5590'},{label:'5590 Braibant',name:'Braibant',zip:'5590'},{label:'5590 Achêne',name:'Achêne',zip:'5590'},{label:'5580 Wavreille',name:'Wavreille',zip:'5580'},{label:'5580 Villers-sur-Lesse',name:'Villers-sur-Lesse',zip:'5580'},{label:'5580 Rochefort',name:'Rochefort',zip:'5580'},{label:'5580 Mont-Gauthier',name:'Mont-Gauthier',zip:'5580'},{label:'5580 Lessive',name:'Lessive',zip:'5580'},{label:'5580 Lavaux-Sainte-Anne',name:'Lavaux-Sainte-Anne',zip:'5580'},{label:'5580 Jemelle',name:'Jemelle',zip:'5580'},{label:'5580 Han-sur-Lesse',name:'Han-sur-Lesse',zip:'5580'},{label:'5580 Eprave',name:'Eprave',zip:'5580'},{label:'5580 Buissonville',name:'Buissonville',zip:'5580'},{label:'5580 Ave-et-Auffe',name:'Ave-et-Auffe',zip:'5580'},{label:'5575 Willerzie',name:'Willerzie',zip:'5575'},{label:'5575 Vencimont',name:'Vencimont',zip:'5575'},{label:'5575 Sart-Custinne',name:'Sart-Custinne',zip:'5575'},{label:'5575 Rienne',name:'Rienne',zip:'5575'},{label:'5575 Patignies',name:'Patignies',zip:'5575'},{label:'5575 Malvoisin',name:'Malvoisin',zip:'5575'},{label:'5575 Louette-Saint-Pierre',name:'Louette-Saint-Pierre',zip:'5575'},{label:'5575 Louette-Saint-Denis',name:'Louette-Saint-Denis',zip:'5575'},{label:'5575 Houdremont',name:'Houdremont',zip:'5575'},{label:'5575 Gedinne',name:'Gedinne',zip:'5575'},{label:'5575 Bourseigne-Vieille',name:'Bourseigne-Vieille',zip:'5575'},{label:'5575 Bourseigne-Neuve',name:'Bourseigne-Neuve',zip:'5575'},{label:'5576 Froidfontaine',name:'Froidfontaine',zip:'5576'},{label:'5574 Pondrôme',name:'Pondrôme',zip:'5574'},{label:'5573 Martouzin-Neuville',name:'Martouzin-Neuville',zip:'5573'},{label:'5572 Focant',name:'Focant',zip:'5572'},{label:'5571 Wiesme',name:'Wiesme',zip:'5571'},{label:'5570 Winenne',name:'Winenne',zip:'5570'},{label:'5570 Wancennes',name:'Wancennes',zip:'5570'},{label:'5570 Vonêche',name:'Vonêche',zip:'5570'},{label:'5570 Javingue',name:'Javingue',zip:'5570'},{label:'5570 Honnay',name:'Honnay',zip:'5570'},{label:'5570 Feschaux',name:'Feschaux',zip:'5570'},{label:'5570 Felenne',name:'Felenne',zip:'5570'},{label:'5570 Dion',name:'Dion',zip:'5570'},{label:'5570 Beauraing',name:'Beauraing',zip:'5570'},{label:'5570 Baronville',name:'Baronville',zip:'5570'},{label:'5564 Wanlin',name:'Wanlin',zip:'5564'},{label:'5563 Hour',name:'Hour',zip:'5563'},{label:'5562 Custinne',name:'Custinne',zip:'5562'},{label:'5561 Celles Namur',name:'Celles Namur',zip:'5561'},{label:'5560 Mesnil-Saint-Blaise',name:'Mesnil-Saint-Blaise',zip:'5560'},{label:'5560 Mesnil-Eglise',name:'Mesnil-Eglise',zip:'5560'},{label:'5560 Hulsonniaux',name:'Hulsonniaux',zip:'5560'},{label:'5560 Houyet',name:'Houyet',zip:'5560'},{label:'5560 Finnevaux',name:'Finnevaux',zip:'5560'},{label:'5560 Ciergnon',name:'Ciergnon',zip:'5560'},{label:'5555 Petit-Fays',name:'Petit-Fays',zip:'5555'},{label:'5555 Oizy',name:'Oizy',zip:'5555'},{label:'5555 Naomé',name:'Naomé',zip:'5555'},{label:'5555 Monceau-en-Ardenne',name:'Monceau-en-Ardenne',zip:'5555'},{label:'5555 Gros-Fays',name:'Gros-Fays',zip:'5555'},{label:'5555 Graide',name:'Graide',zip:'5555'},{label:'5555 Cornimont',name:'Cornimont',zip:'5555'},{label:'5555 Bièvre',name:'Bièvre',zip:'5555'},{label:'5555 Bellefontaine Namur',name:'Bellefontaine Namur',zip:'5555'},{label:'5555 Baillamont',name:'Baillamont',zip:'5555'},{label:'5550 Vresse-sur-Semois',name:'Vresse-sur-Semois',zip:'5550'},{label:'5550 Sugny',name:'Sugny',zip:'5550'},{label:'5550 Pussemange',name:'Pussemange',zip:'5550'},{label:'5550 Orchimont',name:'Orchimont',zip:'5550'},{label:'5550 Nafraiture',name:'Nafraiture',zip:'5550'},{label:'5550 Mouzaive',name:'Mouzaive',zip:'5550'},{label:'5550 Membre',name:'Membre',zip:'5550'},{label:'5550 Laforêt',name:'Laforêt',zip:'5550'},{label:'5550 Chairière',name:'Chairière',zip:'5550'},{label:'5550 Bohan',name:'Bohan',zip:'5550'},{label:'5550 Bagimont',name:'Bagimont',zip:'5550'},{label:'5550 Alle',name:'Alle',zip:'5550'},{label:'5544 Agimont',name:'Agimont',zip:'5544'},{label:'5543 Heer',name:'Heer',zip:'5543'},{label:'5542 Blaimont',name:'Blaimont',zip:'5542'},{label:'5541 Hastière-par-Delà',name:'Hastière-par-Delà',zip:'5541'},{label:'5540 Waulsort',name:'Waulsort',zip:'5540'},{label:'5540 Hermeton-sur-Meuse',name:'Hermeton-sur-Meuse',zip:'5540'},{label:'5540 Hastière-Lavaux',name:'Hastière-Lavaux',zip:'5540'},{label:'5540 Hastière',name:'Hastière',zip:'5540'},{label:'5537 Warnant',name:'Warnant',zip:'5537'},{label:'5537 Sosoye',name:'Sosoye',zip:'5537'},{label:'5537 Haut-le-Wastia',name:'Haut-le-Wastia',zip:'5537'},{label:'5537 Denée',name:'Denée',zip:'5537'},{label:'5537 Bioul',name:'Bioul',zip:'5537'},{label:'5537 Annevoie-Rouillon',name:'Annevoie-Rouillon',zip:'5537'},{label:'5537 Anhée',name:'Anhée',zip:'5537'},{label:'5530 Yvoir',name:'Yvoir',zip:'5530'},{label:'5530 Spontin',name:'Spontin',zip:'5530'},{label:'5530 Purnode',name:'Purnode',zip:'5530'},{label:'5530 Mont Namur',name:'Mont Namur',zip:'5530'},{label:'5530 Houx',name:'Houx',zip:'5530'},{label:'5530 Godinne',name:'Godinne',zip:'5530'},{label:'5530 Evrehailles',name:'Evrehailles',zip:'5530'},{label:'5530 Durnal',name:'Durnal',zip:'5530'},{label:'5530 Dorinne',name:'Dorinne',zip:'5530'},{label:'5524 Gerin',name:'Gerin',zip:'5524'},{label:'5523 Weillen',name:'Weillen',zip:'5523'},{label:'5523 Sommière',name:'Sommière',zip:'5523'},{label:'5522 Falaën',name:'Falaën',zip:'5522'},{label:'5521 Serville',name:'Serville',zip:'5521'},{label:'5520 Onhaye',name:'Onhaye',zip:'5520'},{label:'5520 Anthée',name:'Anthée',zip:'5520'},{label:'5504 Foy-Notre-Dame',name:'Foy-Notre-Dame',zip:'5504'},{label:'5503 Sorinnes',name:'Sorinnes',zip:'5503'},{label:'5502 Thynes',name:'Thynes',zip:'5502'},{label:'5501 Lisogne',name:'Lisogne',zip:'5501'},{label:'5500 Furfooz',name:'Furfooz',zip:'5500'},{label:'5500 Falmignoul',name:'Falmignoul',zip:'5500'},{label:'5500 Falmagne',name:'Falmagne',zip:'5500'},{label:'5500 Dréhance',name:'Dréhance',zip:'5500'},{label:'5500 Dinant',name:'Dinant',zip:'5500'},{label:'5500 Bouvignes-sur-Meuse',name:'Bouvignes-sur-Meuse',zip:'5500'},{label:'5500 Anseremme',name:'Anseremme',zip:'5500'},{label:'5380 Tillier',name:'Tillier',zip:'5380'},{label:'5380 Pontillas',name:'Pontillas',zip:'5380'},{label:'5380 Noville-les-Bois',name:'Noville-les-Bois',zip:'5380'},{label:'5380 Marchovelette',name:'Marchovelette',zip:'5380'},{label:'5380 Hingeon',name:'Hingeon',zip:'5380'},{label:'5380 Hemptinne Fernelmont',name:'Hemptinne Fernelmont',zip:'5380'},{label:'5380 Franc-Waret',name:'Franc-Waret',zip:'5380'},{label:'5380 Forville',name:'Forville',zip:'5380'},{label:'5380 Fernelmont',name:'Fernelmont',zip:'5380'},{label:'5380 Cortil-Wodon',name:'Cortil-Wodon',zip:'5380'},{label:'5380 Bierwart',name:'Bierwart',zip:'5380'},{label:'5377 Waillet',name:'Waillet',zip:'5377'},{label:'5377 Somme-Leuze',name:'Somme-Leuze',zip:'5377'},{label:'5377 Sinsin',name:'Sinsin',zip:'5377'},{label:'5377 Noiseux',name:'Noiseux',zip:'5377'},{label:'5377 Nettinne',name:'Nettinne',zip:'5377'},{label:'5377 Hogne',name:'Hogne',zip:'5377'},{label:'5377 Heure Namur',name:'Heure Namur',zip:'5377'},{label:'5377 Bonsin',name:'Bonsin',zip:'5377'},{label:'5377 Baillonville',name:'Baillonville',zip:'5377'},{label:'5376 Miécret',name:'Miécret',zip:'5376'},{label:'5374 Maffe',name:'Maffe',zip:'5374'},{label:'5372 Méan',name:'Méan',zip:'5372'},{label:'5370 Verlée',name:'Verlée',zip:'5370'},{label:'5370 Porcheresse Namur',name:'Porcheresse Namur',zip:'5370'},{label:'5370 Jeneffe  Namur',name:'Jeneffe  Namur',zip:'5370'},{label:'5370 Havelange',name:'Havelange',zip:'5370'},{label:'5370 Flostoy',name:'Flostoy',zip:'5370'},{label:'5370 Barvaux-Condroz',name:'Barvaux-Condroz',zip:'5370'},{label:'5364 Schaltin',name:'Schaltin',zip:'5364'},{label:'5363 Emptinne',name:'Emptinne',zip:'5363'},{label:'5362 Achet',name:'Achet',zip:'5362'},{label:'5361 Scy',name:'Scy',zip:'5361'},{label:'5361 Mohiville',name:'Mohiville',zip:'5361'},{label:'5360 Natoye',name:'Natoye',zip:'5360'},{label:'5360 Hamois',name:'Hamois',zip:'5360'},{label:'5354 Jallet',name:'Jallet',zip:'5354'},{label:'5353 Goesnes',name:'Goesnes',zip:'5353'},{label:'5352 Perwez-Haillot',name:'Perwez-Haillot',zip:'5352'},{label:'5351 Haillot',name:'Haillot',zip:'5351'},{label:'5350 Ohey',name:'Ohey',zip:'5350'},{label:'5350 Evelette',name:'Evelette',zip:'5350'},{label:'5340 Sorée',name:'Sorée',zip:'5340'},{label:'5340 Mozet',name:'Mozet',zip:'5340'},{label:'5340 Haltinne',name:'Haltinne',zip:'5340'},{label:'5340 Gesves',name:'Gesves',zip:'5340'},{label:'5340 Faulx-les-Tombes',name:'Faulx-les-Tombes',zip:'5340'},{label:'5336 Courrière',name:'Courrière',zip:'5336'},{label:'5334 Florée',name:'Florée',zip:'5334'},{label:'5333 Sorinne-la-Longue',name:'Sorinne-la-Longue',zip:'5333'},{label:'5332 Crupet',name:'Crupet',zip:'5332'},{label:'5330 Sart-Bernard',name:'Sart-Bernard',zip:'5330'},{label:'5330 Maillen',name:'Maillen',zip:'5330'},{label:'5330 Assesse',name:'Assesse',zip:'5330'},{label:'5310 Waret-la-Chaussée',name:'Waret-la-Chaussée',zip:'5310'},{label:'5310 Upigny',name:'Upigny',zip:'5310'},{label:'5310 Taviers Namur',name:'Taviers Namur',zip:'5310'},{label:'5310 Saint-Germain',name:'Saint-Germain',zip:'5310'},{label:'5310 Noville-sur-Méhaigne',name:'Noville-sur-Méhaigne',zip:'5310'},{label:'5310 Mehaigne',name:'Mehaigne',zip:'5310'},{label:'5310 Longchamps',name:'Longchamps',zip:'5310'},{label:'5310 Liernu',name:'Liernu',zip:'5310'},{label:'5310 Leuze Namur',name:'Leuze Namur',zip:'5310'},{label:'5310 Hanret',name:'Hanret',zip:'5310'},{label:'5310 Eghezée',name:'Eghezée',zip:'5310'},{label:'5310 Dhuy',name:'Dhuy',zip:'5310'},{label:'5310 Branchon',name:'Branchon',zip:'5310'},{label:'5310 Boneffe',name:'Boneffe',zip:'5310'},{label:'5310 Bolinne',name:'Bolinne',zip:'5310'},{label:'5310 Aische-en-Refail',name:'Aische-en-Refail',zip:'5310'},{label:'5300 Vezin',name:'Vezin',zip:'5300'},{label:'5300 Thon',name:'Thon',zip:'5300'},{label:'5300 Seilles',name:'Seilles',zip:'5300'},{label:'5300 Sclayn',name:'Sclayn',zip:'5300'},{label:'5300 Namêche',name:'Namêche',zip:'5300'},{label:'5300 Maizeret',name:'Maizeret',zip:'5300'},{label:'5300 Landenne',name:'Landenne',zip:'5300'},{label:'5300 Coutisse',name:'Coutisse',zip:'5300'},{label:'5300 Bonneville',name:'Bonneville',zip:'5300'},{label:'5300 Andenne',name:'Andenne',zip:'5300'},{label:'5190 Spy',name:'Spy',zip:'5190'},{label:'5190 Saint-Martin',name:'Saint-Martin',zip:'5190'},{label:'5190 Onoz',name:'Onoz',zip:'5190'},{label:'5190 Moustier-sur-Sambre',name:'Moustier-sur-Sambre',zip:'5190'},{label:'5190 Mornimont',name:'Mornimont',zip:'5190'},{label:'5190 Jemeppe-sur-Sambre',name:'Jemeppe-sur-Sambre',zip:'5190'},{label:'5190 Ham-sur-Sambre',name:'Ham-sur-Sambre',zip:'5190'},{label:'5190 Balâtre',name:'Balâtre',zip:'5190'},{label:'5170 Rivière',name:'Rivière',zip:'5170'},{label:'5170 Profondeville',name:'Profondeville',zip:'5170'},{label:'5170 Lustin',name:'Lustin',zip:'5170'},{label:'5170 Lesve',name:'Lesve',zip:'5170'},{label:'5170 Bois-de-Villers',name:'Bois-de-Villers',zip:'5170'},{label:'5170 Arbre Namur',name:'Arbre Namur',zip:'5170'},{label:'5150 Soye Namur',name:'Soye Namur',zip:'5150'},{label:'5150 Franière',name:'Franière',zip:'5150'},{label:'5150 Floriffoux',name:'Floriffoux',zip:'5150'},{label:'5150 Floreffe',name:'Floreffe',zip:'5150'},{label:'5140 Tongrinne',name:'Tongrinne',zip:'5140'},{label:'5140 Sombreffe',name:'Sombreffe',zip:'5140'},{label:'5140 Ligny',name:'Ligny',zip:'5140'},{label:'5140 Boignée',name:'Boignée',zip:'5140'},{label:'5081 Saint-Denis-Bovesse',name:'Saint-Denis-Bovesse',zip:'5081'},{label:'5081 Meux',name:'Meux',zip:'5081'},{label:'5081 Bovesse',name:'Bovesse',zip:'5081'},{label:'5080 Warisoulx',name:'Warisoulx',zip:'5080'},{label:'5080 Villers-lez-Heest',name:'Villers-lez-Heest',zip:'5080'},{label:'5080 Rhisnes',name:'Rhisnes',zip:'5080'},{label:'5080 La Bruyère',name:'La Bruyère',zip:'5080'},{label:'5080 Emines',name:'Emines',zip:'5080'},{label:'5070 Vitrival',name:'Vitrival',zip:'5070'},{label:'5070 Sart-Saint-Laurent',name:'Sart-Saint-Laurent',zip:'5070'},{label:'5070 Sart-Eustache',name:'Sart-Eustache',zip:'5070'},{label:'5070 Le Roux',name:'Le Roux',zip:'5070'},{label:'5070 Fosses-la-Ville',name:'Fosses-la-Ville',zip:'5070'},{label:'5070 Aisemont',name:'Aisemont',zip:'5070'},{label:'5060 Velaine-sur-Sambre',name:'Velaine-sur-Sambre',zip:'5060'},{label:'5060 Tamines',name:'Tamines',zip:'5060'},{label:'5060 Sambreville',name:'Sambreville',zip:'5060'},{label:'5060 Moignelée',name:'Moignelée',zip:'5060'},{label:'5060 Keumiée',name:'Keumiée',zip:'5060'},{label:'5060 Falisolle',name:'Falisolle',zip:'5060'},{label:'5060 Auvelais',name:'Auvelais',zip:'5060'},{label:'5060 Arsimont',name:'Arsimont',zip:'5060'},{label:'5032 Mazy',name:'Mazy',zip:'5032'},{label:'5032 Isnes',name:'Isnes',zip:'5032'},{label:'5032 Corroy-le-Château',name:'Corroy-le-Château',zip:'5032'},{label:'5032 Bothey',name:'Bothey',zip:'5032'},{label:'5032 Bossière',name:'Bossière',zip:'5032'},{label:'5031 Grand-Leez',name:'Grand-Leez',zip:'5031'},{label:'5030 Sauvenière',name:'Sauvenière',zip:'5030'},{label:'5030 Lonzée',name:'Lonzée',zip:'5030'},{label:'5030 Grand-Manil',name:'Grand-Manil',zip:'5030'},{label:'5030 Gembloux',name:'Gembloux',zip:'5030'},{label:'5030 Ernage',name:'Ernage',zip:'5030'},{label:'5030 Beuzet',name:'Beuzet',zip:'5030'},{label:'5101 Loyers',name:'Loyers',zip:'5101'},{label:'5101 Lives-sur-Meuse',name:'Lives-sur-Meuse',zip:'5101'},{label:'5101 Erpent',name:'Erpent',zip:'5101'},{label:'5100 Wierde',name:'Wierde',zip:'5100'},{label:'5100 Wépion',name:'Wépion',zip:'5100'},{label:'5100 Naninne',name:'Naninne',zip:'5100'},{label:'5100 Jambes',name:'Jambes',zip:'5100'},{label:'5100 Dave',name:'Dave',zip:'5100'},{label:'5024 Marche-les-Dames',name:'Marche-les-Dames',zip:'5024'},{label:'5024 Gelbressée',name:'Gelbressée',zip:'5024'},{label:'5022 Cognelée',name:'Cognelée',zip:'5022'},{label:'5021 Boninne',name:'Boninne',zip:'5021'},{label:'5020 Vedrin',name:'Vedrin',zip:'5020'},{label:'5020 Temploux',name:'Temploux',zip:'5020'},{label:'5020 Suarlée',name:'Suarlée',zip:'5020'},{label:'5020 Malonne',name:'Malonne',zip:'5020'},{label:'5020 Flawinne',name:'Flawinne',zip:'5020'},{label:'5020 Daussoulx',name:'Daussoulx',zip:'5020'},{label:'5020 Champion',name:'Champion',zip:'5020'},{label:'5004 Bouge',name:'Bouge',zip:'5004'},{label:'5003 Saint-Marc',name:'Saint-Marc',zip:'5003'},{label:'5002 Saint-Servais',name:'Saint-Servais',zip:'5002'},{label:'5001 Belgrade',name:'Belgrade',zip:'5001'},{label:'5000 Namur',name:'Namur',zip:'5000'},{label:'5000 Beez',name:'Beez',zip:'5000'},{label:'6997 Soy',name:'Soy',zip:'6997'},{label:'6997 Mormont',name:'Mormont',zip:'6997'},{label:'6997 Erezée',name:'Erezée',zip:'6997'},{label:'6997 Amonines',name:'Amonines',zip:'6997'},{label:'6990 Marenne',name:'Marenne',zip:'6990'},{label:'6990 Hotton',name:'Hotton',zip:'6990'},{label:'6990 Hampteau',name:'Hampteau',zip:'6990'},{label:'6990 Fronville',name:'Fronville',zip:'6990'},{label:'6987 Rendeux',name:'Rendeux',zip:'6987'},{label:'6987 Marcourt',name:'Marcourt',zip:'6987'},{label:'6987 Hodister',name:'Hodister',zip:'6987'},{label:'6987 Beffe',name:'Beffe',zip:'6987'},{label:'6986 Halleux',name:'Halleux',zip:'6986'},{label:'6984 Hives',name:'Hives',zip:'6984'},{label:'6983 Ortho',name:'Ortho',zip:'6983'},{label:'6982 Samrée',name:'Samrée',zip:'6982'},{label:'6980 La-Roche-en-Ardenne',name:'La-Roche-en-Ardenne',zip:'6980'},{label:'6980 Beausaint',name:'Beausaint',zip:'6980'},{label:'6972 Erneuville',name:'Erneuville',zip:'6972'},{label:'6971 Champlon',name:'Champlon',zip:'6971'},{label:'6970 Tenneville',name:'Tenneville',zip:'6970'},{label:'6960 Vaux-Chavanne',name:'Vaux-Chavanne',zip:'6960'},{label:'6960 Odeigne',name:'Odeigne',zip:'6960'},{label:'6960 Manhay',name:'Manhay',zip:'6960'},{label:'6960 Malempré',name:'Malempré',zip:'6960'},{label:'6960 Harre',name:'Harre',zip:'6960'},{label:'6960 Grandmenil',name:'Grandmenil',zip:'6960'},{label:'6960 Dochamps',name:'Dochamps',zip:'6960'},{label:'6953 Masbourg',name:'Masbourg',zip:'6953'},{label:'6953 Lesterny',name:'Lesterny',zip:'6953'},{label:'6953 Forrières',name:'Forrières',zip:'6953'},{label:'6953 Ambly',name:'Ambly',zip:'6953'},{label:'6952 Grune',name:'Grune',zip:'6952'},{label:'6951 Bande',name:'Bande',zip:'6951'},{label:'6950 Nassogne',name:'Nassogne',zip:'6950'},{label:'6950 Harsin',name:'Harsin',zip:'6950'},{label:'6941 Villers-Sainte-Gertrude',name:'Villers-Sainte-Gertrude',zip:'6941'},{label:'6941 Tohogne',name:'Tohogne',zip:'6941'},{label:'6941 Izier',name:'Izier',zip:'6941'},{label:'6941 Heyd',name:'Heyd',zip:'6941'},{label:'6941 Borlon',name:'Borlon',zip:'6941'},{label:'6941 Bomal-sur-Ourthe',name:'Bomal-sur-Ourthe',zip:'6941'},{label:'6941 Bende',name:'Bende',zip:'6941'},{label:'6940 Wéris',name:'Wéris',zip:'6940'},{label:'6940 Septon',name:'Septon',zip:'6940'},{label:'6940 Grandhan',name:'Grandhan',zip:'6940'},{label:'6940 Durbuy',name:'Durbuy',zip:'6940'},{label:'6940 Barvaux-sur-Ourthe',name:'Barvaux-sur-Ourthe',zip:'6940'},{label:'6929 Porcheresse Luxembourg',name:'Porcheresse Luxembourg',zip:'6929'},{label:'6929 Haut-Fays',name:'Haut-Fays',zip:'6929'},{label:'6929 Gembes',name:'Gembes',zip:'6929'},{label:'6929 Daverdisse',name:'Daverdisse',zip:'6929'},{label:'6927 Tellin',name:'Tellin',zip:'6927'},{label:'6927 Resteigne',name:'Resteigne',zip:'6927'},{label:'6927 Grupont',name:'Grupont',zip:'6927'},{label:'6927 Bure',name:'Bure',zip:'6927'},{label:'6924 Lomprez',name:'Lomprez',zip:'6924'},{label:'6922 Halma',name:'Halma',zip:'6922'},{label:'6921 Chanly',name:'Chanly',zip:'6921'},{label:'6920 Wellin',name:'Wellin',zip:'6920'},{label:'6920 Sohier',name:'Sohier',zip:'6920'},{label:'6900 Waha',name:'Waha',zip:'6900'},{label:'6900 Roy',name:'Roy',zip:'6900'},{label:'6900 On',name:'On',zip:'6900'},{label:'6900 Marche-en-Famenne',name:'Marche-en-Famenne',zip:'6900'},{label:'6900 Humain',name:'Humain',zip:'6900'},{label:'6900 Hargimont',name:'Hargimont',zip:'6900'},{label:'6900 Aye',name:'Aye',zip:'6900'},{label:'6890 Villance',name:'Villance',zip:'6890'},{label:'6890 Transinne',name:'Transinne',zip:'6890'},{label:'6890 Smuid',name:'Smuid',zip:'6890'},{label:'6890 Redu',name:'Redu',zip:'6890'},{label:'6890 Ochamps',name:'Ochamps',zip:'6890'},{label:'6890 Libin',name:'Libin',zip:'6890'},{label:'6890 Anloy',name:'Anloy',zip:'6890'},{label:'6887 Straimont',name:'Straimont',zip:'6887'},{label:'6887 Saint-Médard',name:'Saint-Médard',zip:'6887'},{label:'6887 Herbeumont',name:'Herbeumont',zip:'6887'},{label:'6880 Orgeo',name:'Orgeo',zip:'6880'},{label:'6880 Jehonville',name:'Jehonville',zip:'6880'},{label:'6880 Cugnon',name:'Cugnon',zip:'6880'},{label:'6880 Bertrix',name:'Bertrix',zip:'6880'},{label:'6880 Auby-sur-Semois',name:'Auby-sur-Semois',zip:'6880'},{label:'6870 Vesqueville',name:'Vesqueville',zip:'6870'},{label:'6870 Saint-Hubert',name:'Saint-Hubert',zip:'6870'},{label:'6870 Mirwart',name:'Mirwart',zip:'6870'},{label:'6870 Hatrival',name:'Hatrival',zip:'6870'},{label:'6870 Awenne',name:'Awenne',zip:'6870'},{label:'6870 Arville',name:'Arville',zip:'6870'},{label:'6860 Witry',name:'Witry',zip:'6860'},{label:'6860 Mellier',name:'Mellier',zip:'6860'},{label:'6860 Léglise',name:'Léglise',zip:'6860'},{label:'6860 Ebly',name:'Ebly',zip:'6860'},{label:'6860 Assenois',name:'Assenois',zip:'6860'},{label:'6856 Fays-les-Veneurs',name:'Fays-les-Veneurs',zip:'6856'},{label:'6853 Framont',name:'Framont',zip:'6853'},{label:'6852 Opont',name:'Opont',zip:'6852'},{label:'6852 Maissin',name:'Maissin',zip:'6852'},{label:'6851 Nollevaux',name:'Nollevaux',zip:'6851'},{label:'6850 Paliseul',name:'Paliseul',zip:'6850'},{label:'6850 Offagne',name:'Offagne',zip:'6850'},{label:'6850 Carlsbourg',name:'Carlsbourg',zip:'6850'},{label:'6840 Tournay',name:'Tournay',zip:'6840'},{label:'6840 Neufchâteau',name:'Neufchâteau',zip:'6840'},{label:'6840 Longlier',name:'Longlier',zip:'6840'},{label:'6840 Hamipré',name:'Hamipré',zip:'6840'},{label:'6840 Grapfontaine',name:'Grapfontaine',zip:'6840'},{label:'6840 Grandvoir',name:'Grandvoir',zip:'6840'},{label:'6838 Corbion',name:'Corbion',zip:'6838'},{label:'6836 Dohan',name:'Dohan',zip:'6836'},{label:'6834 Bellevaux',name:'Bellevaux',zip:'6834'},{label:'6833 Vivy',name:'Vivy',zip:'6833'},{label:'6833 Ucimont',name:'Ucimont',zip:'6833'},{label:'6832 Sensenruth',name:'Sensenruth',zip:'6832'},{label:'6831 Noirefontaine',name:'Noirefontaine',zip:'6831'},{label:'6830 Rochehaut',name:'Rochehaut',zip:'6830'},{label:'6830 Poupehan',name:'Poupehan',zip:'6830'},{label:'6830 Les Hayons',name:'Les Hayons',zip:'6830'},{label:'6830 Bouillon',name:'Bouillon',zip:'6830'},{label:'6824 Chassepierre',name:'Chassepierre',zip:'6824'},{label:'6823 Villers-devant-Orval',name:'Villers-devant-Orval',zip:'6823'},{label:'6821 Lacuisine',name:'Lacuisine',zip:'6821'},{label:'6820 Sainte-Cécile',name:'Sainte-Cécile',zip:'6820'},{label:'6820 Muno',name:'Muno',zip:'6820'},{label:'6820 Fontenoille',name:'Fontenoille',zip:'6820'},{label:'6820 Florenville',name:'Florenville',zip:'6820'},{label:'6813 Termes',name:'Termes',zip:'6813'},{label:'6812 Suxy',name:'Suxy',zip:'6812'},{label:'6811 Les Bulles',name:'Les Bulles',zip:'6811'},{label:'6810 Jamoigne',name:'Jamoigne',zip:'6810'},{label:'6810 Izel',name:'Izel',zip:'6810'},{label:'6810 Chiny',name:'Chiny',zip:'6810'},{label:'6800 Saint-Pierre',name:'Saint-Pierre',zip:'6800'},{label:'6800 Sainte-Marie-Chevigny',name:'Sainte-Marie-Chevigny',zip:'6800'},{label:'6800 Remagne',name:'Remagne',zip:'6800'},{label:'6800 Recogne',name:'Recogne',zip:'6800'},{label:'6800 Moircy',name:'Moircy',zip:'6800'},{label:'6800 Libramont-Chevigny',name:'Libramont-Chevigny',zip:'6800'},{label:'6800 Libramont',name:'Libramont',zip:'6800'},{label:'6800 Freux',name:'Freux',zip:'6800'},{label:'6800 Bras',name:'Bras',zip:'6800'},{label:'6792 Rachecourt',name:'Rachecourt',zip:'6792'},{label:'6792 Halanzy',name:'Halanzy',zip:'6792'},{label:'6791 Athus',name:'Athus',zip:'6791'},{label:'6790 Aubange',name:'Aubange',zip:'6790'},{label:'6782 Habergy',name:'Habergy',zip:'6782'},{label:'6781 Sélange',name:'Sélange',zip:'6781'},{label:'6780 Wolkrange',name:'Wolkrange',zip:'6780'},{label:'6780 Messancy',name:'Messancy',zip:'6780'},{label:'6780 Hondelange',name:'Hondelange',zip:'6780'},{label:'6769 Villers-la-Loue',name:'Villers-la-Loue',zip:'6769'},{label:'6769 Sommethonne',name:'Sommethonne',zip:'6769'},{label:'6769 Robelmont',name:'Robelmont',zip:'6769'},{label:'6769 Meix-devant-Virton',name:'Meix-devant-Virton',zip:'6769'},{label:'6769 Gérouville',name:'Gérouville',zip:'6769'},{label:'6767 Torgny',name:'Torgny',zip:'6767'},{label:'6767 Rouvroy',name:'Rouvroy',zip:'6767'},{label:'6767 Lamorteau',name:'Lamorteau',zip:'6767'},{label:'6767 Harnoncourt',name:'Harnoncourt',zip:'6767'},{label:'6767 Dampicourt',name:'Dampicourt',zip:'6767'},{label:'6762 Saint-Mard',name:'Saint-Mard',zip:'6762'},{label:'6761 Latour',name:'Latour',zip:'6761'},{label:'6760 Virton',name:'Virton',zip:'6760'},{label:'6760 Ruette',name:'Ruette',zip:'6760'},{label:'6760 Ethe',name:'Ethe',zip:'6760'},{label:'6760 Bleid',name:'Bleid',zip:'6760'},{label:'6750 Signeulx',name:'Signeulx',zip:'6750'},{label:'6750 Mussy-la-Ville',name:'Mussy-la-Ville',zip:'6750'},{label:'6750 Musson',name:'Musson',zip:'6750'},{label:'6747 Saint-Léger Luxembourg',name:'Saint-Léger Luxembourg',zip:'6747'},{label:'6747 Meix-le-Tige',name:'Meix-le-Tige',zip:'6747'},{label:'6747 Châtillon',name:'Châtillon',zip:'6747'},{label:'6743 Buzenol',name:'Buzenol',zip:'6743'},{label:'6742 Chantemelle',name:'Chantemelle',zip:'6742'},{label:'6741 Vance',name:'Vance',zip:'6741'},{label:'6740 Villers-sur-Semois',name:'Villers-sur-Semois',zip:'6740'},{label:'6740 Sainte-Marie-sur-Semois',name:'Sainte-Marie-sur-Semois',zip:'6740'},{label:'6740 Etalle',name:'Etalle',zip:'6740'},{label:'6730 Tintigny',name:'Tintigny',zip:'6730'},{label:'6730 Saint-Vincent',name:'Saint-Vincent',zip:'6730'},{label:'6730 Rossignol',name:'Rossignol',zip:'6730'},{label:'6730 Bellefontaine Luxembourg',name:'Bellefontaine Luxembourg',zip:'6730'},{label:'6724 Rulles',name:'Rulles',zip:'6724'},{label:'6724 Marbehan Luxembourg',name:'Marbehan Luxembourg',zip:'6724'},{label:'6724 Houdemont',name:'Houdemont',zip:'6724'},{label:'6723 Habay-la-Vieille',name:'Habay-la-Vieille',zip:'6723'},{label:'6721 Anlier',name:'Anlier',zip:'6721'},{label:'6720 Hachy',name:'Hachy',zip:'6720'},{label:'6720 Habay-la-Neuve',name:'Habay-la-Neuve',zip:'6720'},{label:'6720 Habay',name:'Habay',zip:'6720'},{label:'6717 Tontelange',name:'Tontelange',zip:'6717'},{label:'6717 Thiaumont',name:'Thiaumont',zip:'6717'},{label:'6717 Nothomb',name:'Nothomb',zip:'6717'},{label:'6717 Nobressart',name:'Nobressart',zip:'6717'},{label:'6717 Attert',name:'Attert',zip:'6717'},{label:'6706 Autelbas',name:'Autelbas',zip:'6706'},{label:'6704 Guirsch',name:'Guirsch',zip:'6704'},{label:'6700 Toernich',name:'Toernich',zip:'6700'},{label:'6700 Heinsch',name:'Heinsch',zip:'6700'},{label:'6700 Bonnert',name:'Bonnert',zip:'6700'},{label:'6700 Arlon',name:'Arlon',zip:'6700'},{label:'6698 Grand-Halleux',name:'Grand-Halleux',zip:'6698'},{label:'6692 Petit-Thier',name:'Petit-Thier',zip:'6692'},{label:'6690 Vielsalm',name:'Vielsalm',zip:'6690'},{label:'6690 Bihain',name:'Bihain',zip:'6690'},{label:'6688 Longchamps Luxembourg',name:'Longchamps Luxembourg',zip:'6688'},{label:'6687 Bertogne (Bastogne)',name:'Bertogne (Bastogne)',zip:'6687'},{label:'6686 Flamierge',name:'Flamierge',zip:'6686'},{label:'6681 Lavacherie',name:'Lavacherie',zip:'6681'},{label:'6680 Tillet',name:'Tillet',zip:'6680'},{label:'6680 Sainte-Ode',name:'Sainte-Ode',zip:'6680'},{label:'6680 Amberloup',name:'Amberloup',zip:'6680'},{label:'6674 Montleban',name:'Montleban',zip:'6674'},{label:'6673 Cherain',name:'Cherain',zip:'6673'},{label:'6672 Beho',name:'Beho',zip:'6672'},{label:'6671 Bovigny',name:'Bovigny',zip:'6671'},{label:'6670 Limerlé',name:'Limerlé',zip:'6670'},{label:'6670 Gouvy',name:'Gouvy',zip:'6670'},{label:'6666 Wibrin',name:'Wibrin',zip:'6666'},{label:'6663 Mabompré',name:'Mabompré',zip:'6663'},{label:'6662 Tavigny',name:'Tavigny',zip:'6662'},{label:'6661 Tailles',name:'Tailles',zip:'6661'},{label:'6661 Mont Luxembourg',name:'Mont Luxembourg',zip:'6661'},{label:'6660 Nadrin',name:'Nadrin',zip:'6660'},{label:'6660 Houffalize',name:'Houffalize',zip:'6660'},{label:'6642 Juseret',name:'Juseret',zip:'6642'},{label:'6640 Vaux-sur-Sûre',name:'Vaux-sur-Sûre',zip:'6640'},{label:'6640 Vaux-lez-Rosières',name:'Vaux-lez-Rosières',zip:'6640'},{label:'6640 Sibret',name:'Sibret',zip:'6640'},{label:'6640 Nives',name:'Nives',zip:'6640'},{label:'6640 Morhet',name:'Morhet',zip:'6640'},{label:'6640 Hompré',name:'Hompré',zip:'6640'},{label:'6637 Tintange',name:'Tintange',zip:'6637'},{label:'6637 Hollange',name:'Hollange',zip:'6637'},{label:'6637 Fauvillers',name:'Fauvillers',zip:'6637'},{label:'6630 Martelange',name:'Martelange',zip:'6630'},{label:'6600 Wardin',name:'Wardin',zip:'6600'},{label:'6600 Villers-la-Bonne-Eau',name:'Villers-la-Bonne-Eau',zip:'6600'},{label:'6600 Noville Luxembourg',name:'Noville Luxembourg',zip:'6600'},{label:'6600 Longvilly',name:'Longvilly',zip:'6600'},{label:'6600 Bastogne',name:'Bastogne',zip:'6600'},{label:'1495 Villers-la-Ville',name:'Villers-la-Ville',zip:'1495'},{label:'1495 Tilly',name:'Tilly',zip:'1495'},{label:'1495 Sart-Dames-Avelines',name:'Sart-Dames-Avelines',zip:'1495'},{label:'1495 Mellery',name:'Mellery',zip:'1495'},{label:'1495 Marbais Br.W.',name:'Marbais Br.W.',zip:'1495'},{label:'1490 Court-Saint-Etienne',name:'Court-Saint-Etienne',zip:'1490'},{label:'1480 Tubize',name:'Tubize',zip:'1480'},{label:'1480 Saintes',name:'Saintes',zip:'1480'},{label:'1480 Oisquercq',name:'Oisquercq',zip:'1480'},{label:'1480 Clabecq',name:'Clabecq',zip:'1480'},{label:'1476 Houtain-le-Val',name:'Houtain-le-Val',zip:'1476'},{label:'1474 Ways',name:'Ways',zip:'1474'},{label:'1473 Glabais',name:'Glabais',zip:'1473'},{label:'1472 Vieux-Genappe',name:'Vieux-Genappe',zip:'1472'},{label:'1471 Loupoigne',name:'Loupoigne',zip:'1471'},{label:'1470 Genappe',name:'Genappe',zip:'1470'},{label:'1470 Bousval',name:'Bousval',zip:'1470'},{label:'1470 Baisy-Thy',name:'Baisy-Thy',zip:'1470'},{label:'1461 Haut-Ittre',name:'Haut-Ittre',zip:'1461'},{label:'1460 Virginal-Samme',name:'Virginal-Samme',zip:'1460'},{label:'1460 Ittre',name:'Ittre',zip:'1460'},{label:'1457 Walhain-Saint-Paul',name:'Walhain-Saint-Paul',zip:'1457'},{label:'1457 Walhain',name:'Walhain',zip:'1457'},{label:'1457 Tourinnes-Saint-Lambert',name:'Tourinnes-Saint-Lambert',zip:'1457'},{label:'1457 Nil-Saint-Vincent-Saint-Martin',name:'Nil-Saint-Vincent-Saint-Martin',zip:'1457'},{label:'1450 Saint-Géry',name:'Saint-Géry',zip:'1450'},{label:'1450 Gentinnes',name:'Gentinnes',zip:'1450'},{label:'1450 Cortil-Noirmont',name:'Cortil-Noirmont',zip:'1450'},{label:'1450 Chastre-Villeroux-Blanmont',name:'Chastre-Villeroux-Blanmont',zip:'1450'},{label:'1450 Chastre',name:'Chastre',zip:'1450'},{label:'1440 Wauthier-Braine',name:'Wauthier-Braine',zip:'1440'},{label:'1440 Braine-le-Château',name:'Braine-le-Château',zip:'1440'},{label:'1435 Mont-Saint-Guibert',name:'Mont-Saint-Guibert',zip:'1435'},{label:'1435 Hévillers',name:'Hévillers',zip:'1435'},{label:'1435 Corbais',name:'Corbais',zip:'1435'},{label:'1430 Rebecq-Rognon',name:'Rebecq-Rognon',zip:'1430'},{label:'1430 Rebecq',name:'Rebecq',zip:'1430'},{label:'1430 Quenast',name:'Quenast',zip:'1430'},{label:'1430 Bierghes',name:'Bierghes',zip:'1430'},{label:'1428 Lillois-Witterzée',name:'Lillois-Witterzée',zip:'1428'},{label:'1421 Ophain-Bois-Seigneur-Isaac',name:'Ophain-Bois-Seigneur-Isaac',zip:'1421'},{label:'1410 Waterloo',name:'Waterloo',zip:'1410'},{label:'1404 Bornival',name:'Bornival',zip:'1404'},{label:'1402 Thines',name:'Thines',zip:'1402'},{label:'1401 Baulers',name:'Baulers',zip:'1401'},{label:'1400 Nivelles',name:'Nivelles',zip:'1400'},{label:'1400 Monstreux',name:'Monstreux',zip:'1400'},{label:'1390 Nethen',name:'Nethen',zip:'1390'},{label:'1390 Grez-Doiceau',name:'Grez-Doiceau',zip:'1390'},{label:'1390 Bossut-Gottechain',name:'Bossut-Gottechain',zip:'1390'},{label:'1390 Biez',name:'Biez',zip:'1390'},{label:'1390 Archennes',name:'Archennes',zip:'1390'},{label:'1380 Plancenoit',name:'Plancenoit',zip:'1380'},{label:'1380 Ohain',name:'Ohain',zip:'1380'},{label:'1380 Maransart',name:'Maransart',zip:'1380'},{label:'1380 Lasne-Chapelle-Saint-Lambert',name:'Lasne-Chapelle-Saint-Lambert',zip:'1380'},{label:'1380 Lasne',name:'Lasne',zip:'1380'},{label:'1380 Couture-Saint-Germain',name:'Couture-Saint-Germain',zip:'1380'},{label:'1370 Zétrud-Lumay',name:'Zétrud-Lumay',zip:'1370'},{label:'1370 Saint-Remy-Geest',name:'Saint-Remy-Geest',zip:'1370'},{label:'1370 Saint-Jean-Geest',name:'Saint-Jean-Geest',zip:'1370'},{label:'1370 Piétrain',name:'Piétrain',zip:'1370'},{label:'1370 Mélin',name:'Mélin',zip:'1370'},{label:'1370 Lathuy',name:'Lathuy',zip:'1370'},{label:'1370 Jodoigne-Souveraine',name:'Jodoigne-Souveraine',zip:'1370'},{label:'1370 Jodoigne',name:'Jodoigne',zip:'1370'},{label:'1370 Jauchelette',name:'Jauchelette',zip:'1370'},{label:'1370 Dongelberg',name:'Dongelberg',zip:'1370'},{label:'1367 Ramillies-Offus',name:'Ramillies-Offus',zip:'1367'},{label:'1367 Mont-Saint-André',name:'Mont-Saint-André',zip:'1367'},{label:'1367 Huppaye',name:'Huppaye',zip:'1367'},{label:'1367 Grand-Rosière-Hottomont',name:'Grand-Rosière-Hottomont',zip:'1367'},{label:'1367 Gérompont',name:'Gérompont',zip:'1367'},{label:'1367 Geest-Gérompont-Petit-Rosière',name:'Geest-Gérompont-Petit-Rosière',zip:'1367'},{label:'1367 Bomal Br.W.',name:'Bomal Br.W.',zip:'1367'},{label:'1367 Autre-Eglise',name:'Autre-Eglise',zip:'1367'},{label:'1360 Thorembais-Saint-Trond',name:'Thorembais-Saint-Trond',zip:'1360'},{label:'1360 Thorembais-les-Béguines',name:'Thorembais-les-Béguines',zip:'1360'},{label:'1360 Perwez',name:'Perwez',zip:'1360'},{label:'1360 Orbais',name:'Orbais',zip:'1360'},{label:'1360 Malèves-Sainte-Marie-Wastines',name:'Malèves-Sainte-Marie-Wastines',zip:'1360'},{label:'1357 Opheylissem',name:'Opheylissem',zip:'1357'},{label:'1357 Neerheylissem',name:'Neerheylissem',zip:'1357'},{label:'1357 Linsmeau',name:'Linsmeau',zip:'1357'},{label:'1357 Hélécine',name:'Hélécine',zip:'1357'},{label:'1350 Orp-le-Grand',name:'Orp-le-Grand',zip:'1350'},{label:'1350 Orp-Jauche',name:'Orp-Jauche',zip:'1350'},{label:'1350 Noduwez',name:'Noduwez',zip:'1350'},{label:'1350 Marilles',name:'Marilles',zip:'1350'},{label:'1350 Jauche',name:'Jauche',zip:'1350'},{label:'1350 Jandrain-Jandrenouille',name:'Jandrain-Jandrenouille',zip:'1350'},{label:'1350 Folx-les-Caves',name:'Folx-les-Caves',zip:'1350'},{label:'1350 Enines',name:'Enines',zip:'1350'},{label:'1348 Louvain-la-Neuve',name:'Louvain-la-Neuve',zip:'1348'},{label:'1342 Limelette',name:'Limelette',zip:'1342'},{label:'1341 Céroux-Mousty',name:'Céroux-Mousty',zip:'1341'},{label:'1340 Ottignies-Louvain-la-Neuve',name:'Ottignies-Louvain-la-Neuve',zip:'1340'},{label:'1340 Ottignies',name:'Ottignies',zip:'1340'},{label:'1332 Genval',name:'Genval',zip:'1332'},{label:'1331 Rosières',name:'Rosières',zip:'1331'},{label:'1330 Rixensart',name:'Rixensart',zip:'1330'},{label:'1325 Longueville',name:'Longueville',zip:'1325'},{label:'1325 Dion-Valmont',name:'Dion-Valmont',zip:'1325'},{label:'1325 Corroy-le-Grand',name:'Corroy-le-Grand',zip:'1325'},{label:'1325 Chaumont-Gistoux',name:'Chaumont-Gistoux',zip:'1325'},{label:'1325 Bonlez',name:'Bonlez',zip:'1325'},{label:'1320 Tourinnes-la-Grosse',name:'Tourinnes-la-Grosse',zip:'1320'},{label:'1320 Nodebais',name:'Nodebais',zip:'1320'},{label:'1320 Hamme-Mille',name:'Hamme-Mille',zip:'1320'},{label:'1320 Beauvechain',name:'Beauvechain',zip:'1320'},{label:'1315 Roux-Miroir',name:'Roux-Miroir',zip:'1315'},{label:'1315 Piétrebais',name:'Piétrebais',zip:'1315'},{label:'1315 Opprebais',name:'Opprebais',zip:'1315'},{label:'1315 Incourt',name:'Incourt',zip:'1315'},{label:'1315 Glimes',name:'Glimes',zip:'1315'},{label:'1310 La Hulpe',name:'La Hulpe',zip:'1310'},{label:'1301 Bierges',name:'Bierges',zip:'1301'},{label:'1300 Wavre',name:'Wavre',zip:'1300'},{label:'1300 Limal',name:'Limal',zip:'1300'},{label:'4990 Lierneux',name:'Lierneux',zip:'4990'},{label:'4990 Bra',name:'Bra',zip:'4990'},{label:'4990 Arbrefontaine',name:'Arbrefontaine',zip:'4990'},{label:'4987 Stoumont',name:'Stoumont',zip:'4987'},{label:'4987 Rahier',name:'Rahier',zip:'4987'},{label:'4987 Lorcé',name:'Lorcé',zip:'4987'},{label:'4987 La Gleize',name:'La Gleize',zip:'4987'},{label:'4987 Chevron',name:'Chevron',zip:'4987'},{label:'4983 Basse-Bodeux',name:'Basse-Bodeux',zip:'4983'},{label:'4980 Wanne',name:'Wanne',zip:'4980'},{label:'4980 Trois-Ponts',name:'Trois-Ponts',zip:'4980'},{label:'4980 Fosse Liège',name:'Fosse Liège',zip:'4980'},{label:'4970 Stavelot',name:'Stavelot',zip:'4970'},{label:'4970 Francorchamps',name:'Francorchamps',zip:'4970'},{label:'4960 Malmedy',name:'Malmedy',zip:'4960'},{label:'4960 Bevercé',name:'Bevercé',zip:'4960'},{label:'4960 Bellevaux-Ligneuville',name:'Bellevaux-Ligneuville',zip:'4960'},{label:'4950 Waimes/Weismes',name:'Waimes/Weismes',zip:'4950'},{label:'4950 Sourbrodt',name:'Sourbrodt',zip:'4950'},{label:'4950 Robertville',name:'Robertville',zip:'4950'},{label:'4950 Faymonville',name:'Faymonville',zip:'4950'},{label:'4920 Sougné-Remouchamps',name:'Sougné-Remouchamps',zip:'4920'},{label:'4920 Harzé',name:'Harzé',zip:'4920'},{label:'4920 Ernonheid',name:'Ernonheid',zip:'4920'},{label:'4920 Aywaille',name:'Aywaille',zip:'4920'},{label:'4910 Theux',name:'Theux',zip:'4910'},{label:'4910 Polleur',name:'Polleur',zip:'4910'},{label:'4910 La Reid',name:'La Reid',zip:'4910'},{label:'4900 Spa',name:'Spa',zip:'4900'},{label:'4890 Thimister-Clermont',name:'Thimister-Clermont',zip:'4890'},{label:'4890 Thimister',name:'Thimister',zip:'4890'},{label:'4890 Clermont Liège',name:'Clermont Liège',zip:'4890'},{label:'4880 Aubel',name:'Aubel',zip:'4880'},{label:'4877 Olne',name:'Olne',zip:'4877'},{label:'4870 Trooz',name:'Trooz',zip:'4870'},{label:'4870 Nessonvaux',name:'Nessonvaux',zip:'4870'},{label:'4870 Fraipont',name:'Fraipont',zip:'4870'},{label:'4870 Forêt',name:'Forêt',zip:'4870'},{label:'4861 Soiron',name:'Soiron',zip:'4861'},{label:'4860 Wegnez',name:'Wegnez',zip:'4860'},{label:'4860 Pepinster',name:'Pepinster',zip:'4860'},{label:'4860 Cornesse',name:'Cornesse',zip:'4860'},{label:'4852 Hombourg',name:'Hombourg',zip:'4852'},{label:'4851 Sippenaeken',name:'Sippenaeken',zip:'4851'},{label:'4851 Gemmenich',name:'Gemmenich',zip:'4851'},{label:'4850 Plombières',name:'Plombières',zip:'4850'},{label:'4850 Moresnet',name:'Moresnet',zip:'4850'},{label:'4850 Montzen',name:'Montzen',zip:'4850'},{label:'4845 Sart-lez-Spa',name:'Sart-lez-Spa',zip:'4845'},{label:'4845 Jalhay',name:'Jalhay',zip:'4845'},{label:'4841 Henri-Chapelle',name:'Henri-Chapelle',zip:'4841'},{label:'4840 Welkenraedt',name:'Welkenraedt',zip:'4840'},{label:'4837 Membach',name:'Membach',zip:'4837'},{label:'4837 Baelen Liège',name:'Baelen Liège',zip:'4837'},{label:'4834 Goé',name:'Goé',zip:'4834'},{label:'4831 Bilstain',name:'Bilstain',zip:'4831'},{label:'4830 Limbourg',name:'Limbourg',zip:'4830'},{label:'4821 Andrimont',name:'Andrimont',zip:'4821'},{label:'4820 Dison',name:'Dison',zip:'4820'},{label:'4802 Heusy',name:'Heusy',zip:'4802'},{label:'4801 Stembert',name:'Stembert',zip:'4801'},{label:'4800 Verviers',name:'Verviers',zip:'4800'},{label:'4800 Petit-Rechain',name:'Petit-Rechain',zip:'4800'},{label:'4800 Lambermont',name:'Lambermont',zip:'4800'},{label:'4800 Ensival',name:'Ensival',zip:'4800'},{label:'4791 Thommen',name:'Thommen',zip:'4791'},{label:'4790 Reuland',name:'Reuland',zip:'4790'},{label:'4790 Burg-Reuland',name:'Burg-Reuland',zip:'4790'},{label:'4784 Crombach',name:'Crombach',zip:'4784'},{label:'4783 Lommersweiler',name:'Lommersweiler',zip:'4783'},{label:'4782 Schönberg/Schoenberg',name:'Schönberg/Schoenberg',zip:'4782'},{label:'4780 Sankt Vith/Saint-Vith',name:'Sankt Vith/Saint-Vith',zip:'4780'},{label:'4780 Recht',name:'Recht',zip:'4780'},{label:'4771 Heppenbach',name:'Heppenbach',zip:'4771'},{label:'4770 Meyerode',name:'Meyerode',zip:'4770'},{label:'4770 Amel/Amblève',name:'Amel/Amblève',zip:'4770'},{label:'4761 Rocherath',name:'Rocherath',zip:'4761'},{label:'4760 Manderfeld',name:'Manderfeld',zip:'4760'},{label:'4760 Büllingen/Bullange',name:'Büllingen/Bullange',zip:'4760'},{label:'4750 Elsenborn',name:'Elsenborn',zip:'4750'},{label:'4750 Bütgenbach/Butgenbach',name:'Bütgenbach/Butgenbach',zip:'4750'},{label:'4731 Eynatten',name:'Eynatten',zip:'4731'},{label:'4730 Raeren',name:'Raeren',zip:'4730'},{label:'4730 Hauset',name:'Hauset',zip:'4730'},{label:'4728 Hergenrath',name:'Hergenrath',zip:'4728'},{label:'4721 Neu-Moresnet',name:'Neu-Moresnet',zip:'4721'},{label:'4720 Kelmis/La Calamine',name:'Kelmis/La Calamine',zip:'4720'},{label:'4711 Walhorn',name:'Walhorn',zip:'4711'},{label:'4710 Lontzen',name:'Lontzen',zip:'4710'},{label:'4701 Kettenis',name:'Kettenis',zip:'4701'},{label:'4700 Eupen',name:'Eupen',zip:'4700'},{label:'4690 Wonck',name:'Wonck',zip:'4690'},{label:'4690 Roclenge-sur-Geer',name:'Roclenge-sur-Geer',zip:'4690'},{label:'4690 Glons',name:'Glons',zip:'4690'},{label:'4690 Eben-Emael',name:'Eben-Emael',zip:'4690'},{label:'4690 Boirs',name:'Boirs',zip:'4690'},{label:'4690 Bassenge',name:'Bassenge',zip:'4690'},{label:'4684 Haccourt',name:'Haccourt',zip:'4684'},{label:'4683 Vivegnis',name:'Vivegnis',zip:'4683'},{label:'4682 Houtain-Saint-Siméon',name:'Houtain-Saint-Siméon',zip:'4682'},{label:'4682 Heure-le-Romain',name:'Heure-le-Romain',zip:'4682'},{label:'4681 Hermalle-sous-Argenteau',name:'Hermalle-sous-Argenteau',zip:'4681'},{label:'4680 Oupeye',name:'Oupeye',zip:'4680'},{label:'4680 Hermée',name:'Hermée',zip:'4680'},{label:'4672 Saint-Remy Liège',name:'Saint-Remy Liège',zip:'4672'},{label:'4671 Saive',name:'Saive',zip:'4671'},{label:'4671 Housse',name:'Housse',zip:'4671'},{label:'4671 Barchon',name:'Barchon',zip:'4671'},{label:'4670 Trembleur',name:'Trembleur',zip:'4670'},{label:'4670 Mortier',name:'Mortier',zip:'4670'},{label:'4670 Blégny',name:'Blégny',zip:'4670'},{label:'4654 Charneux',name:'Charneux',zip:'4654'},{label:'4653 Bolland',name:'Bolland',zip:'4653'},{label:'4652 Xhendelesse',name:'Xhendelesse',zip:'4652'},{label:'4651 Battice',name:'Battice',zip:'4651'},{label:'4650 Julémont',name:'Julémont',zip:'4650'},{label:'4650 Herve',name:'Herve',zip:'4650'},{label:'4650 Grand-Rechain',name:'Grand-Rechain',zip:'4650'},{label:'4650 Chaineux',name:'Chaineux',zip:'4650'},{label:'4633 Melen',name:'Melen',zip:'4633'},{label:'4632 Cérexhe-Heuseux',name:'Cérexhe-Heuseux',zip:'4632'},{label:'4631 Evegnée',name:'Evegnée',zip:'4631'},{label:'4630 Tignée',name:'Tignée',zip:'4630'},{label:'4630 Soumagne',name:'Soumagne',zip:'4630'},{label:'4630 Micheroux',name:'Micheroux',zip:'4630'},{label:'4630 Ayeneux',name:'Ayeneux',zip:'4630'},{label:'4624 Romsée',name:'Romsée',zip:'4624'},{label:'4623 Magnée',name:'Magnée',zip:'4623'},{label:'4621 Retinne',name:'Retinne',zip:'4621'},{label:'4620 Fléron',name:'Fléron',zip:'4620'},{label:'4610 Queue-du-Bois',name:'Queue-du-Bois',zip:'4610'},{label:'4610 Beyne-Heusay',name:'Beyne-Heusay',zip:'4610'},{label:'4610 Bellaire',name:'Bellaire',zip:'4610'},{label:'4608 Warsage',name:'Warsage',zip:'4608'},{label:'4608 Neufchâteau Liège',name:'Neufchâteau Liège',zip:'4608'},{label:'4607 Mortroux',name:'Mortroux',zip:'4607'},{label:'4607 Feneur',name:'Feneur',zip:'4607'},{label:'4607 Dalhem',name:'Dalhem',zip:'4607'},{label:'4607 Bombaye',name:'Bombaye',zip:'4607'},{label:'4607 Berneau',name:'Berneau',zip:'4607'},{label:'4606 Saint-André',name:'Saint-André',zip:'4606'},{label:'4602 Cheratte',name:'Cheratte',zip:'4602'},{label:'4601 Argenteau',name:'Argenteau',zip:'4601'},{label:'4600 Visé',name:'Visé',zip:'4600'},{label:'4600 Richelle',name:'Richelle',zip:'4600'},{label:'4600 Lixhe',name:'Lixhe',zip:'4600'},{label:'4600 Lanaye',name:'Lanaye',zip:'4600'},{label:'4590 Warzée',name:'Warzée',zip:'4590'},{label:'4590 Ouffet',name:'Ouffet',zip:'4590'},{label:'4590 Ellemelle',name:'Ellemelle',zip:'4590'},{label:'4577 Vierset-Barse',name:'Vierset-Barse',zip:'4577'},{label:'4577 Strée-lez-Huy',name:'Strée-lez-Huy',zip:'4577'},{label:'4577 Outrelouxhe',name:'Outrelouxhe',zip:'4577'},{label:'4577 Modave',name:'Modave',zip:'4577'},{label:'4570 Vyle-et-Tharoul',name:'Vyle-et-Tharoul',zip:'4570'},{label:'4570 Marchin',name:'Marchin',zip:'4570'},{label:'4560 Terwagne',name:'Terwagne',zip:'4560'},{label:'4560 Pailhe',name:'Pailhe',zip:'4560'},{label:'4560 Ocquier',name:'Ocquier',zip:'4560'},{label:'4560 Les Avins',name:'Les Avins',zip:'4560'},{label:'4560 Clavier',name:'Clavier',zip:'4560'},{label:'4560 Bois-et-Borsu',name:'Bois-et-Borsu',zip:'4560'},{label:'4557 Tinlot',name:'Tinlot',zip:'4557'},{label:'4557 Soheit-Tinlot',name:'Soheit-Tinlot',zip:'4557'},{label:'4557 Seny',name:'Seny',zip:'4557'},{label:'4557 Ramelot',name:'Ramelot',zip:'4557'},{label:'4557 Fraiture',name:'Fraiture',zip:'4557'},{label:'4557 Abée',name:'Abée',zip:'4557'},{label:'4550 Yernée-Fraineux',name:'Yernée-Fraineux',zip:'4550'},{label:'4550 Villers-le-Temple',name:'Villers-le-Temple',zip:'4550'},{label:'4550 Saint-Séverin',name:'Saint-Séverin',zip:'4550'},{label:'4550 Nandrin',name:'Nandrin',zip:'4550'},{label:'4540 Ombret',name:'Ombret',zip:'4540'},{label:'4540 Jehay',name:'Jehay',zip:'4540'},{label:'4540 Flône',name:'Flône',zip:'4540'},{label:'4540 Ampsin',name:'Ampsin',zip:'4540'},{label:'4540 Amay',name:'Amay',zip:'4540'},{label:'4537 Verlaine',name:'Verlaine',zip:'4537'},{label:'4537 Seraing-le-Château',name:'Seraing-le-Château',zip:'4537'},{label:'4537 Chapon-Seraing',name:'Chapon-Seraing',zip:'4537'},{label:'4530 Warnant-Dreye',name:'Warnant-Dreye',zip:'4530'},{label:'4530 Villers-le-Bouillet',name:'Villers-le-Bouillet',zip:'4530'},{label:'4530 Vieux-Waleffe',name:'Vieux-Waleffe',zip:'4530'},{label:'4530 Vaux-et-Borset',name:'Vaux-et-Borset',zip:'4530'},{label:'4530 Fize-Fontaine',name:'Fize-Fontaine',zip:'4530'},{label:'4520 Wanze',name:'Wanze',zip:'4520'},{label:'4520 Vinalmont',name:'Vinalmont',zip:'4520'},{label:'4520 Moha',name:'Moha',zip:'4520'},{label:'4520 Huccorgne',name:'Huccorgne',zip:'4520'},{label:'4520 Bas-Oha',name:'Bas-Oha',zip:'4520'},{label:'4520 Antheit',name:'Antheit',zip:'4520'},{label:'4500 Tihange',name:'Tihange',zip:'4500'},{label:'4500 Huy',name:'Huy',zip:'4500'},{label:'4500 Ben-Ahin',name:'Ben-Ahin',zip:'4500'},{label:'4480 Hermalle-sous-Huy',name:'Hermalle-sous-Huy',zip:'4480'},{label:'4480 Engis',name:'Engis',zip:'4480'},{label:'4480 Clermont-sous-Huy',name:'Clermont-sous-Huy',zip:'4480'},{label:'4470 Saint-Georges-sur-Meuse',name:'Saint-Georges-sur-Meuse',zip:'4470'},{label:'4460 Velroux',name:'Velroux',zip:'4460'},{label:'4460 Horion-Hozémont',name:'Horion-Hozémont',zip:'4460'},{label:'4460 Hollogne-aux-Pierres',name:'Hollogne-aux-Pierres',zip:'4460'},{label:'4460 Grâce-Hollogne',name:'Grâce-Hollogne',zip:'4460'},{label:'4460 Grâce-Berleur',name:'Grâce-Berleur',zip:'4460'},{label:'4460 Bierset',name:'Bierset',zip:'4460'},{label:'4458 Fexhe-Slins',name:'Fexhe-Slins',zip:'4458'},{label:'4453 Villers-Saint-Siméon',name:'Villers-Saint-Siméon',zip:'4453'},{label:'4452 Wihogne',name:'Wihogne',zip:'4452'},{label:'4452 Paifve',name:'Paifve',zip:'4452'},{label:'4451 Voroux-lez-Liers',name:'Voroux-lez-Liers',zip:'4451'},{label:'4450 Slins',name:'Slins',zip:'4450'},{label:'4450 Lantin',name:'Lantin',zip:'4450'},{label:'4450 Juprelle',name:'Juprelle',zip:'4450'},{label:'4432 Xhendremael',name:'Xhendremael',zip:'4432'},{label:'4432 Alleur',name:'Alleur',zip:'4432'},{label:'4431 Loncin',name:'Loncin',zip:'4431'},{label:'4430 Ans',name:'Ans',zip:'4430'},{label:'4420 Tilleur',name:'Tilleur',zip:'4420'},{label:'4420 Saint-Nicolas Liège',name:'Saint-Nicolas Liège',zip:'4420'},{label:'4420 Montegnée',name:'Montegnée',zip:'4420'},{label:'4400 Mons-lez-Liège',name:'Mons-lez-Liège',zip:'4400'},{label:'4400 Ivoz-Ramet',name:'Ivoz-Ramet',zip:'4400'},{label:'4400 Gleixhe',name:'Gleixhe',zip:'4400'},{label:'4400 Flémalle-Haute',name:'Flémalle-Haute',zip:'4400'},{label:'4400 Flémalle-Grande',name:'Flémalle-Grande',zip:'4400'},{label:'4400 Flémalle',name:'Flémalle',zip:'4400'},{label:'4400 Chokier',name:'Chokier',zip:'4400'},{label:'4400 Awirs',name:'Awirs',zip:'4400'},{label:'4367 Thys',name:'Thys',zip:'4367'},{label:'4367 Odeur',name:'Odeur',zip:'4367'},{label:'4367 Kemexhe',name:'Kemexhe',zip:'4367'},{label:'4367 Fize-le-Marsal',name:'Fize-le-Marsal',zip:'4367'},{label:'4367 Crisnée',name:'Crisnée',zip:'4367'},{label:'4360 Otrange',name:'Otrange',zip:'4360'},{label:'4360 Oreye',name:'Oreye',zip:'4360'},{label:'4360 Lens-sur-Geer',name:'Lens-sur-Geer',zip:'4360'},{label:'4360 Grandville',name:'Grandville',zip:'4360'},{label:'4360 Bergilers',name:'Bergilers',zip:'4360'},{label:'4357 Limont',name:'Limont',zip:'4357'},{label:'4357 Jeneffe Liège',name:'Jeneffe Liège',zip:'4357'},{label:'4357 Haneffe',name:'Haneffe',zip:'4357'},{label:'4357 Donceel',name:'Donceel',zip:'4357'},{label:'4351 Hodeige',name:'Hodeige',zip:'4351'},{label:'4350 Remicourt',name:'Remicourt',zip:'4350'},{label:'4350 Pousset',name:'Pousset',zip:'4350'},{label:'4350 Momalle',name:'Momalle',zip:'4350'},{label:'4350 Lamine',name:'Lamine',zip:'4350'},{label:'4347 Voroux-Goreux',name:'Voroux-Goreux',zip:'4347'},{label:'4347 Roloux',name:'Roloux',zip:'4347'},{label:'4347 Noville Liège',name:'Noville Liège',zip:'4347'},{label:'4347 Freloux',name:'Freloux',zip:'4347'},{label:'4347 Fexhe-le-Haut-Clocher',name:'Fexhe-le-Haut-Clocher',zip:'4347'},{label:'4342 Hognoul',name:'Hognoul',zip:'4342'},{label:'4340 Othée',name:'Othée',zip:'4340'},{label:'4340 Fooz',name:'Fooz',zip:'4340'},{label:'4340 Awans',name:'Awans',zip:'4340'},{label:'4317 Viemme',name:'Viemme',zip:'4317'},{label:'4317 Les Waleffes',name:'Les Waleffes',zip:'4317'},{label:'4317 Faimes',name:'Faimes',zip:'4317'},{label:'4317 Celles Liège',name:'Celles Liège',zip:'4317'},{label:'4317 Borlez',name:'Borlez',zip:'4317'},{label:'4317 Aineffe',name:'Aineffe',zip:'4317'},{label:'4300 Waremme',name:'Waremme',zip:'4300'},{label:'4300 Oleye',name:'Oleye',zip:'4300'},{label:'4300 Lantremange',name:'Lantremange',zip:'4300'},{label:'4300 Grand-Axhe',name:'Grand-Axhe',zip:'4300'},{label:'4300 Bovenistier',name:'Bovenistier',zip:'4300'},{label:'4300 Bleret',name:'Bleret',zip:'4300'},{label:'4300 Bettincourt',name:'Bettincourt',zip:'4300'},{label:'4287 Racour',name:'Racour',zip:'4287'},{label:'4287 Pellaines',name:'Pellaines',zip:'4287'},{label:'4287 Lincent',name:'Lincent',zip:'4287'},{label:'4280 Wansin',name:'Wansin',zip:'4280'},{label:'4280 Villers-le-Peuplier',name:'Villers-le-Peuplier',zip:'4280'},{label:'4280 Trognée',name:'Trognée',zip:'4280'},{label:'4280 Thisnes',name:'Thisnes',zip:'4280'},{label:'4280 Poucet',name:'Poucet',zip:'4280'},{label:'4280 Petit-Hallet',name:'Petit-Hallet',zip:'4280'},{label:'4280 Moxhe',name:'Moxhe',zip:'4280'},{label:'4280 Merdorp',name:'Merdorp',zip:'4280'},{label:'4280 Lens-Saint-Remy',name:'Lens-Saint-Remy',zip:'4280'},{label:'4280 Hannut',name:'Hannut',zip:'4280'},{label:'4280 Grand-Hallet',name:'Grand-Hallet',zip:'4280'},{label:'4280 Crehen',name:'Crehen',zip:'4280'},{label:'4280 Cras-Avernas',name:'Cras-Avernas',zip:'4280'},{label:'4280 Blehen',name:'Blehen',zip:'4280'},{label:'4280 Bertrée',name:'Bertrée',zip:'4280'},{label:'4280 Avin',name:'Avin',zip:'4280'},{label:'4280 Avernas-le-Bauduin',name:'Avernas-le-Bauduin',zip:'4280'},{label:'4280 Abolens',name:'Abolens',zip:'4280'},{label:'4263 Tourinne Liège',name:'Tourinne Liège',zip:'4263'},{label:'4261 Latinne',name:'Latinne',zip:'4261'},{label:'4260 Ville-en-Hesbaye',name:'Ville-en-Hesbaye',zip:'4260'},{label:'4260 Fumal',name:'Fumal',zip:'4260'},{label:'4260 Fallais',name:'Fallais',zip:'4260'},{label:'4260 Ciplet',name:'Ciplet',zip:'4260'},{label:'4260 Braives',name:'Braives',zip:'4260'},{label:'4260 Avennes',name:'Avennes',zip:'4260'},{label:'4257 Rosoux-Crenwick',name:'Rosoux-Crenwick',zip:'4257'},{label:'4257 Corswarem',name:'Corswarem',zip:'4257'},{label:'4257 Berloz',name:'Berloz',zip:'4257'},{label:'4254 Ligney',name:'Ligney',zip:'4254'},{label:'4253 Darion',name:'Darion',zip:'4253'},{label:'4252 Omal',name:'Omal',zip:'4252'},{label:'4250 Lens-Saint-Servais',name:'Lens-Saint-Servais',zip:'4250'},{label:'4250 Hollogne-sur-Geer',name:'Hollogne-sur-Geer',zip:'4250'},{label:'4250 Geer',name:'Geer',zip:'4250'},{label:'4250 Boëlhe',name:'Boëlhe',zip:'4250'},{label:'4219 Wasseiges',name:'Wasseiges',zip:'4219'},{label:'4219 Meeffe',name:'Meeffe',zip:'4219'},{label:'4219 Ambresin',name:'Ambresin',zip:'4219'},{label:'4219 Acosse',name:'Acosse',zip:'4219'},{label:'4218 Couthuin',name:'Couthuin',zip:'4218'},{label:'4217 Lavoir',name:'Lavoir',zip:'4217'},{label:'4217 Héron',name:'Héron',zip:'4217'},{label:'4210 Oteppe',name:'Oteppe',zip:'4210'},{label:'4210 Marneffe',name:'Marneffe',zip:'4210'},{label:'4210 Lamontzée',name:'Lamontzée',zip:'4210'},{label:'4210 Hannêche',name:'Hannêche',zip:'4210'},{label:'4210 Burdinne',name:'Burdinne',zip:'4210'},{label:'4190 Xhoris',name:'Xhoris',zip:'4190'},{label:'4190 Werbomont',name:'Werbomont',zip:'4190'},{label:'4190 Vieuxville',name:'Vieuxville',zip:'4190'},{label:'4190 My',name:'My',zip:'4190'},{label:'4190 Ferrières',name:'Ferrières',zip:'4190'},{label:'4181 Filot',name:'Filot',zip:'4181'},{label:'4180 Hamoir',name:'Hamoir',zip:'4180'},{label:'4180 Comblain-la-Tour',name:'Comblain-la-Tour',zip:'4180'},{label:'4180 Comblain-Fairon',name:'Comblain-Fairon',zip:'4180'},{label:'4171 Poulseur',name:'Poulseur',zip:'4171'},{label:'4170 Comblain-au-Pont',name:'Comblain-au-Pont',zip:'4170'},{label:'4163 Tavier',name:'Tavier',zip:'4163'},{label:'4162 Hody',name:'Hody',zip:'4162'},{label:'4161 Villers-aux-Tours',name:'Villers-aux-Tours',zip:'4161'},{label:'4160 Anthisnes',name:'Anthisnes',zip:'4160'},{label:'4141 Louveigné',name:'Louveigné',zip:'4141'},{label:'4140 Sprimont',name:'Sprimont',zip:'4140'},{label:'4140 Rouvreux',name:'Rouvreux',zip:'4140'},{label:'4140 Gomzé-Andoumont',name:'Gomzé-Andoumont',zip:'4140'},{label:'4140 Dolembreux',name:'Dolembreux',zip:'4140'},{label:'4130 Tilff',name:'Tilff',zip:'4130'},{label:'4130 Esneux',name:'Esneux',zip:'4130'},{label:'4122 Plainevaux',name:'Plainevaux',zip:'4122'},{label:'4121 Neuville-en-Condroz',name:'Neuville-en-Condroz',zip:'4121'},{label:'4120 Rotheux-Rimière',name:'Rotheux-Rimière',zip:'4120'},{label:'4120 Neupré',name:'Neupré',zip:'4120'},{label:'4120 Ehein',name:'Ehein',zip:'4120'},{label:'4102 Ougrée',name:'Ougrée',zip:'4102'},{label:'4101 Jemeppe-sur-Meuse',name:'Jemeppe-sur-Meuse',zip:'4101'},{label:'4100 Seraing',name:'Seraing',zip:'4100'},{label:'4100 Boncelles',name:'Boncelles',zip:'4100'},{label:'4053 Embourg',name:'Embourg',zip:'4053'},{label:'4052 Beaufays',name:'Beaufays',zip:'4052'},{label:'4051 Vaux-sous-Chèvremont',name:'Vaux-sous-Chèvremont',zip:'4051'},{label:'4050 Chaudfontaine',name:'Chaudfontaine',zip:'4050'},{label:'4042 Liers',name:'Liers',zip:'4042'},{label:'4041 Vottem',name:'Vottem',zip:'4041'},{label:'4041 Milmort',name:'Milmort',zip:'4041'},{label:'4040 Herstal',name:'Herstal',zip:'4040'},{label:'4032 Chênée',name:'Chênée',zip:'4032'},{label:'4031 Angleur',name:'Angleur',zip:'4031'},{label:'4030 Grivegnée',name:'Grivegnée',zip:'4030'},{label:'4020 Wandre',name:'Wandre',zip:'4020'},{label:'4020 Liège',name:'Liège',zip:'4020'},{label:'4020 Jupille-sur-Meuse',name:'Jupille-sur-Meuse',zip:'4020'},{label:'4020 Bressoux',name:'Bressoux',zip:'4020'},{label:'4000 Rocourt',name:'Rocourt',zip:'4000'},{label:'4000 Liège',name:'Liège',zip:'4000'},{label:'4000 Glain',name:'Glain',zip:'4000'},{label:'7973 Stambruges',name:'Stambruges',zip:'7973'},{label:'7973 Grandglise',name:'Grandglise',zip:'7973'},{label:'7972 Quevaucamps',name:'Quevaucamps',zip:'7972'},{label:'7972 Ellignies-Sainte-Anne',name:'Ellignies-Sainte-Anne',zip:'7972'},{label:'7972 Aubechies',name:'Aubechies',zip:'7972'},{label:'7971 Wadelincourt',name:'Wadelincourt',zip:'7971'},{label:'7971 Thumaide',name:'Thumaide',zip:'7971'},{label:'7971 Ramegnies',name:'Ramegnies',zip:'7971'},{label:'7971 Basècles',name:'Basècles',zip:'7971'},{label:'7970 Beloeil',name:'Beloeil',zip:'7970'},{label:'7951 Tongre-Notre-Dame',name:'Tongre-Notre-Dame',zip:'7951'},{label:'7950 Tongre-Saint-Martin',name:'Tongre-Saint-Martin',zip:'7950'},{label:'7950 Ladeuze',name:'Ladeuze',zip:'7950'},{label:'7950 Huissignies',name:'Huissignies',zip:'7950'},{label:'7950 Grosage',name:'Grosage',zip:'7950'},{label:'7950 Chièvres',name:'Chièvres',zip:'7950'},{label:'7943 Gages',name:'Gages',zip:'7943'},{label:'7942 Mévergnies-lez-Lens',name:'Mévergnies-lez-Lens',zip:'7942'},{label:'7941 Attre',name:'Attre',zip:'7941'},{label:'7940 Cambron-Casteau',name:'Cambron-Casteau',zip:'7940'},{label:'7940 Brugelette',name:'Brugelette',zip:'7940'},{label:'7912 Saint-Sauveur',name:'Saint-Sauveur',zip:'7912'},{label:'7912 Dergneau',name:'Dergneau',zip:'7912'},{label:'7911 Oeudeghien',name:'Oeudeghien',zip:'7911'},{label:'7911 Moustier Ht.',name:'Moustier Ht.',zip:'7911'},{label:'7911 Montroeul-au-Bois',name:'Montroeul-au-Bois',zip:'7911'},{label:'7911 Herquegies',name:'Herquegies',zip:'7911'},{label:'7911 Hacquegnies',name:'Hacquegnies',zip:'7911'},{label:'7911 Frasnes-lez-Buissenal',name:'Frasnes-lez-Buissenal',zip:'7911'},{label:'7911 Buissenal',name:'Buissenal',zip:'7911'},{label:'7910 Wattripont',name:'Wattripont',zip:'7910'},{label:'7910 Frasnes-lez-Anvaing',name:'Frasnes-lez-Anvaing',zip:'7910'},{label:'7910 Forest Ht.',name:'Forest Ht.',zip:'7910'},{label:'7910 Ellignies-lez-Frasnes',name:'Ellignies-lez-Frasnes',zip:'7910'},{label:'7910 Cordes',name:'Cordes',zip:'7910'},{label:'7910 Arc-Wattripont',name:'Arc-Wattripont',zip:'7910'},{label:'7910 Arc-Ainières',name:'Arc-Ainières',zip:'7910'},{label:'7910 Anvaing',name:'Anvaing',zip:'7910'},{label:'7906 Gallaix',name:'Gallaix',zip:'7906'},{label:'7904 Willaupuis',name:'Willaupuis',zip:'7904'},{label:'7904 Tourpes',name:'Tourpes',zip:'7904'},{label:'7904 Pipaix',name:'Pipaix',zip:'7904'},{label:'7903 Chapelle-à-Wattines',name:'Chapelle-à-Wattines',zip:'7903'},{label:'7903 Chapelle-à-Oie',name:'Chapelle-à-Oie',zip:'7903'},{label:'7903 Blicquy',name:'Blicquy',zip:'7903'},{label:'7901 Thieulain',name:'Thieulain',zip:'7901'},{label:'7900 Leuze-en-Hainaut',name:'Leuze-en-Hainaut',zip:'7900'},{label:'7900 Grandmetz',name:'Grandmetz',zip:'7900'},{label:'7890 Wodecq',name:'Wodecq',zip:'7890'},{label:'7890 Lahamaide',name:'Lahamaide',zip:'7890'},{label:'7890 Ellezelles',name:'Ellezelles',zip:'7890'},{label:'7880 Flobecq/Vloesberg',name:'Flobecq/Vloesberg',zip:'7880'},{label:'7870 Montignies-lez-Lens',name:'Montignies-lez-Lens',zip:'7870'},{label:'7870 Lombise',name:'Lombise',zip:'7870'},{label:'7870 Lens',name:'Lens',zip:'7870'},{label:'7870 Cambron-Saint-Vincent',name:'Cambron-Saint-Vincent',zip:'7870'},{label:'7870 Bauffe',name:'Bauffe',zip:'7870'},{label:'7866 Ollignies',name:'Ollignies',zip:'7866'},{label:'7866 Bois-de-Lessines',name:'Bois-de-Lessines',zip:'7866'},{label:'7864 Deux-Acren',name:'Deux-Acren',zip:'7864'},{label:'7863 Ghoy',name:'Ghoy',zip:'7863'},{label:'7862 Ogy',name:'Ogy',zip:'7862'},{label:'7861 Wannebecq',name:'Wannebecq',zip:'7861'},{label:'7861 Papignies',name:'Papignies',zip:'7861'},{label:'7860 Lessines',name:'Lessines',zip:'7860'},{label:'7850 Petit-Enghien/Lettelingen',name:'Petit-Enghien/Lettelingen',zip:'7850'},{label:'7850 Marcq/Mark',name:'Marcq/Mark',zip:'7850'},{label:'7850 Enghien/Edingen',name:'Enghien/Edingen',zip:'7850'},{label:'7830 Thoricourt',name:'Thoricourt',zip:'7830'},{label:'7830 Silly',name:'Silly',zip:'7830'},{label:'7830 Hoves Ht.',name:'Hoves Ht.',zip:'7830'},{label:'7830 Hellebecq',name:'Hellebecq',zip:'7830'},{label:'7830 Graty',name:'Graty',zip:'7830'},{label:'7830 Gondregnies',name:'Gondregnies',zip:'7830'},{label:'7830 Fouleng',name:'Fouleng',zip:'7830'},{label:'7830 Bassilly',name:'Bassilly',zip:'7830'},{label:'7823 Gibecq',name:'Gibecq',zip:'7823'},{label:'7822 Isières',name:'Isières',zip:'7822'},{label:'7822 Ghislenghien',name:'Ghislenghien',zip:'7822'},{label:'7812 Villers-Saint-Amand',name:'Villers-Saint-Amand',zip:'7812'},{label:'7812 Villers-Notre-Dame',name:'Villers-Notre-Dame',zip:'7812'},{label:'7812 Moulbaix',name:'Moulbaix',zip:'7812'},{label:'7812 Mainvault',name:'Mainvault',zip:'7812'},{label:'7812 Ligne',name:'Ligne',zip:'7812'},{label:'7812 Houtaing',name:'Houtaing',zip:'7812'},{label:'7811 Arbre Ht.',name:'Arbre Ht.',zip:'7811'},{label:'7810 Maffle',name:'Maffle',zip:'7810'},{label:'7804 Rebaix',name:'Rebaix',zip:'7804'},{label:'7804 Ostiches',name:'Ostiches',zip:'7804'},{label:'7803 Bouvignies',name:'Bouvignies',zip:'7803'},{label:'7802 Ormeignies',name:'Ormeignies',zip:'7802'},{label:'7801 Irchonwelz',name:'Irchonwelz',zip:'7801'},{label:'7800 Lanquesaint',name:'Lanquesaint',zip:'7800'},{label:'7800 Ath',name:'Ath',zip:'7800'},{label:'7784 Warneton/Waasten',name:'Warneton/Waasten',zip:'7784'},{label:'7784 Bas-Warneton/Neerwaasten',name:'Bas-Warneton/Neerwaasten',zip:'7784'},{label:'7783 Bizet',name:'Bizet',zip:'7783'},{label:'7782 Ploegsteert',name:'Ploegsteert',zip:'7782'},{label:'7781 Houthem Comines/Komen',name:'Houthem Comines/Komen',zip:'7781'},{label:'7780 Comines-Warneton/Komen-Waasten',name:'Comines-Warneton/Komen-Waasten',zip:'7780'},{label:'7780 Comines/Komen',name:'Comines/Komen',zip:'7780'},{label:'7760 Velaines',name:'Velaines',zip:'7760'},{label:'7760 Pottes',name:'Pottes',zip:'7760'},{label:'7760 Popuelles',name:'Popuelles',zip:'7760'},{label:'7760 Molenbaix',name:'Molenbaix',zip:'7760'},{label:'7760 Escanaffles',name:'Escanaffles',zip:'7760'},{label:'7760 Celles Ht.',name:'Celles Ht.',zip:'7760'},{label:'7750 Russeignies',name:'Russeignies',zip:'7750'},{label:'7750 Orroir',name:'Orroir',zip:'7750'},{label:'7750 Anseroeul',name:'Anseroeul',zip:'7750'},{label:'7750 Amougies',name:'Amougies',zip:'7750'},{label:'7743 Obigies',name:'Obigies',zip:'7743'},{label:'7743 Esquelmes',name:'Esquelmes',zip:'7743'},{label:'7742 Hérinnes-lez-Pecq',name:'Hérinnes-lez-Pecq',zip:'7742'},{label:'7740 Warcoing',name:'Warcoing',zip:'7740'},{label:'7740 Pecq',name:'Pecq',zip:'7740'},{label:'7730 Saint-Léger Ht.',name:'Saint-Léger Ht.',zip:'7730'},{label:'7730 Néchin',name:'Néchin',zip:'7730'},{label:'7730 Leers-Nord',name:'Leers-Nord',zip:'7730'},{label:'7730 Evregnies',name:'Evregnies',zip:'7730'},{label:'7730 Estaimpuis',name:'Estaimpuis',zip:'7730'},{label:'7730 Estaimbourg',name:'Estaimbourg',zip:'7730'},{label:'7730 Bailleul',name:'Bailleul',zip:'7730'},{label:'7712 Herseaux',name:'Herseaux',zip:'7712'},{label:'7711 Dottignies/Dottenijs',name:'Dottignies/Dottenijs',zip:'7711'},{label:'7700 Mouscron/Moeskroen',name:'Mouscron/Moeskroen',zip:'7700'},{label:'7700 Luingne',name:'Luingne',zip:'7700'},{label:'7643 Fontenoy',name:'Fontenoy',zip:'7643'},{label:'7642 Calonne',name:'Calonne',zip:'7642'},{label:'7641 Bruyelle',name:'Bruyelle',zip:'7641'},{label:'7640 Péronnes-lez-Antoing',name:'Péronnes-lez-Antoing',zip:'7640'},{label:'7640 Maubray',name:'Maubray',zip:'7640'},{label:'7640 Antoing',name:'Antoing',zip:'7640'},{label:'7624 Howardries',name:'Howardries',zip:'7624'},{label:'7623 Rongy',name:'Rongy',zip:'7623'},{label:'7622 Laplaigne',name:'Laplaigne',zip:'7622'},{label:'7621 Lesdain',name:'Lesdain',zip:'7621'},{label:'7620 Wez-Velvain',name:'Wez-Velvain',zip:'7620'},{label:'7620 Jollain-Merlin',name:'Jollain-Merlin',zip:'7620'},{label:'7620 Hollain',name:'Hollain',zip:'7620'},{label:'7620 Guignies',name:'Guignies',zip:'7620'},{label:'7620 Brunehaut',name:'Brunehaut',zip:'7620'},{label:'7620 Bléharies',name:'Bléharies',zip:'7620'},{label:'7618 Taintignies',name:'Taintignies',zip:'7618'},{label:'7611 La Glanerie',name:'La Glanerie',zip:'7611'},{label:'7610 Rumes',name:'Rumes',zip:'7610'},{label:'7608 Wiers',name:'Wiers',zip:'7608'},{label:'7604 Wasmes-Audemez-Briffoeil',name:'Wasmes-Audemez-Briffoeil',zip:'7604'},{label:'7604 Callenelle',name:'Callenelle',zip:'7604'},{label:'7604 Brasmenil',name:'Brasmenil',zip:'7604'},{label:'7604 Braffe',name:'Braffe',zip:'7604'},{label:'7604 Baugnies',name:'Baugnies',zip:'7604'},{label:'7603 Bon-Secours',name:'Bon-Secours',zip:'7603'},{label:'7602 Bury',name:'Bury',zip:'7602'},{label:'7601 Roucourt',name:'Roucourt',zip:'7601'},{label:'7600 Péruwelz',name:'Péruwelz',zip:'7600'},{label:'7548 Warchin',name:'Warchin',zip:'7548'},{label:'7543 Mourcourt',name:'Mourcourt',zip:'7543'},{label:'7542 Mont-Saint-Aubert',name:'Mont-Saint-Aubert',zip:'7542'},{label:'7540 Rumillies',name:'Rumillies',zip:'7540'},{label:'7540 Quartes',name:'Quartes',zip:'7540'},{label:'7540 Melles',name:'Melles',zip:'7540'},{label:'7540 Kain',name:'Kain',zip:'7540'},{label:'7538 Vezon',name:'Vezon',zip:'7538'},{label:'7536 Vaulx',name:'Vaulx',zip:'7536'},{label:'7534 Maulde',name:'Maulde',zip:'7534'},{label:'7534 Barry',name:'Barry',zip:'7534'},{label:'7533 Thimougies',name:'Thimougies',zip:'7533'},{label:'7532 Beclers',name:'Beclers',zip:'7532'},{label:'7531 Havinnes',name:'Havinnes',zip:'7531'},{label:'7530 Gaurain-Ramecroix',name:'Gaurain-Ramecroix',zip:'7530'},{label:'7522 Marquain',name:'Marquain',zip:'7522'},{label:'7522 Lamain',name:'Lamain',zip:'7522'},{label:'7522 Hertain',name:'Hertain',zip:'7522'},{label:'7522 Blandain',name:'Blandain',zip:'7522'},{label:'7521 Chercq',name:'Chercq',zip:'7521'},{label:'7520 Templeuve',name:'Templeuve',zip:'7520'},{label:'7520 Ramegnies-Chin',name:'Ramegnies-Chin',zip:'7520'},{label:'7506 Willemeau',name:'Willemeau',zip:'7506'},{label:'7504 Froidmont',name:'Froidmont',zip:'7504'},{label:'7503 Froyennes',name:'Froyennes',zip:'7503'},{label:'7502 Esplechin',name:'Esplechin',zip:'7502'},{label:'7501 Orcq',name:'Orcq',zip:'7501'},{label:'7500 Tournai',name:'Tournai',zip:'7500'},{label:'7500 Saint-Maur',name:'Saint-Maur',zip:'7500'},{label:'7500 Ere',name:'Ere',zip:'7500'},{label:'7390 Wasmuel',name:'Wasmuel',zip:'7390'},{label:'7390 Quaregnon',name:'Quaregnon',zip:'7390'},{label:'7387 Roisin',name:'Roisin',zip:'7387'},{label:'7387 Onnezies',name:'Onnezies',zip:'7387'},{label:'7387 Montignies-sur-Roc',name:'Montignies-sur-Roc',zip:'7387'},{label:'7387 Marchipont',name:'Marchipont',zip:'7387'},{label:'7387 Honnelles',name:'Honnelles',zip:'7387'},{label:'7387 Fayt-le-Franc',name:'Fayt-le-Franc',zip:'7387'},{label:'7387 Erquennes',name:'Erquennes',zip:'7387'},{label:'7387 Autreppe',name:'Autreppe',zip:'7387'},{label:'7387 Athis',name:'Athis',zip:'7387'},{label:'7387 Angreau',name:'Angreau',zip:'7387'},{label:'7387 Angre',name:'Angre',zip:'7387'},{label:'7382 Audregnies',name:'Audregnies',zip:'7382'},{label:'7380 Quiévrain',name:'Quiévrain',zip:'7380'},{label:'7380 Baisieux',name:'Baisieux',zip:'7380'},{label:'7370 Wihéries',name:'Wihéries',zip:'7370'},{label:'7370 Elouges',name:'Elouges',zip:'7370'},{label:'7370 Dour',name:'Dour',zip:'7370'},{label:'7370 Blaugies',name:'Blaugies',zip:'7370'},{label:'7350 Thulin',name:'Thulin',zip:'7350'},{label:'7350 Montroeul-sur-Haine',name:'Montroeul-sur-Haine',zip:'7350'},{label:'7350 Hensies',name:'Hensies',zip:'7350'},{label:'7350 Hainin',name:'Hainin',zip:'7350'},{label:'7340 Wasmes',name:'Wasmes',zip:'7340'},{label:'7340 Warquignies',name:'Warquignies',zip:'7340'},{label:'7340 Paturages',name:'Paturages',zip:'7340'},{label:'7340 Colfontaine',name:'Colfontaine',zip:'7340'},{label:'7334 Villerot',name:'Villerot',zip:'7334'},{label:'7334 Hautrage',name:'Hautrage',zip:'7334'},{label:'7333 Tertre',name:'Tertre',zip:'7333'},{label:'7332 Sirault',name:'Sirault',zip:'7332'},{label:'7332 Neufmaison',name:'Neufmaison',zip:'7332'},{label:'7331 Baudour',name:'Baudour',zip:'7331'},{label:'7330 Saint-Ghislain',name:'Saint-Ghislain',zip:'7330'},{label:'7322 Ville-Pommeroeul',name:'Ville-Pommeroeul',zip:'7322'},{label:'7322 Pommeroeul',name:'Pommeroeul',zip:'7322'},{label:'7321 Harchies',name:'Harchies',zip:'7321'},{label:'7321 Blaton',name:'Blaton',zip:'7321'},{label:'7320 Bernissart',name:'Bernissart',zip:'7320'},{label:'7301 Hornu',name:'Hornu',zip:'7301'},{label:'7300 Boussu',name:'Boussu',zip:'7300'},{label:'7191 Ecaussinnes-Lalaing',name:'Ecaussinnes-Lalaing',zip:'7191'},{label:'7190 Marche-lez-Ecaussinnes',name:'Marche-lez-Ecaussinnes',zip:'7190'},{label:'7190 Ecaussinnes',name:'Ecaussinnes',zip:'7190'},{label:'7181 Petit-Roeulx-lez-Nivelles',name:'Petit-Roeulx-lez-Nivelles',zip:'7181'},{label:'7181 Feluy',name:'Feluy',zip:'7181'},{label:'7181 Familleureux',name:'Familleureux',zip:'7181'},{label:'7181 Arquennes',name:'Arquennes',zip:'7181'},{label:'7180 Seneffe',name:'Seneffe',zip:'7180'},{label:'7170 Manage',name:'Manage',zip:'7170'},{label:'7170 La Hestre',name:'La Hestre',zip:'7170'},{label:'7170 Fayt-lez-Manage',name:'Fayt-lez-Manage',zip:'7170'},{label:'7170 Bellecourt',name:'Bellecourt',zip:'7170'},{label:'7160 Piéton',name:'Piéton',zip:'7160'},{label:'7160 Godarville',name:'Godarville',zip:'7160'},{label:'7160 Chapelle-lez-Herlaimont',name:'Chapelle-lez-Herlaimont',zip:'7160'},{label:'7141 Mont-Sainte-Aldegonde',name:'Mont-Sainte-Aldegonde',zip:'7141'},{label:'7141 Carnières',name:'Carnières',zip:'7141'},{label:'7140 Morlanwelz-Mariemont',name:'Morlanwelz-Mariemont',zip:'7140'},{label:'7140 Morlanwelz',name:'Morlanwelz',zip:'7140'},{label:'7134 Ressaix',name:'Ressaix',zip:'7134'},{label:'7134 Péronnes-lez-Binche',name:'Péronnes-lez-Binche',zip:'7134'},{label:'7134 Leval-Trahegnies',name:'Leval-Trahegnies',zip:'7134'},{label:'7134 Epinois',name:'Epinois',zip:'7134'},{label:'7133 Buvrinnes',name:'Buvrinnes',zip:'7133'},{label:'7131 Waudrez',name:'Waudrez',zip:'7131'},{label:'7130 Bray',name:'Bray',zip:'7130'},{label:'7130 Binche',name:'Binche',zip:'7130'},{label:'7130 Battignies',name:'Battignies',zip:'7130'},{label:'7120 Vellereille-le-Sec',name:'Vellereille-le-Sec',zip:'7120'},{label:'7120 Vellereille-les-Brayeux',name:'Vellereille-les-Brayeux',zip:'7120'},{label:'7120 Rouveroy Ht.',name:'Rouveroy Ht.',zip:'7120'},{label:'7120 Peissant',name:'Peissant',zip:'7120'},{label:'7120 Haulchin',name:'Haulchin',zip:'7120'},{label:'7120 Fauroeulx',name:'Fauroeulx',zip:'7120'},{label:'7120 Estinnes-au-Val',name:'Estinnes-au-Val',zip:'7120'},{label:'7120 Estinnes-au-Mont',name:'Estinnes-au-Mont',zip:'7120'},{label:'7120 Estinnes',name:'Estinnes',zip:'7120'},{label:'7120 Croix-lez-Rouveroy',name:'Croix-lez-Rouveroy',zip:'7120'},{label:'7110 Strépy-Bracquegnies',name:'Strépy-Bracquegnies',zip:'7110'},{label:'7110 Maurage',name:'Maurage',zip:'7110'},{label:'7110 Houdeng-Goegnies',name:'Houdeng-Goegnies',zip:'7110'},{label:'7110 Houdeng-Aimeries',name:'Houdeng-Aimeries',zip:'7110'},{label:'7110 Boussoit',name:'Boussoit',zip:'7110'},{label:'7100 Trivières',name:'Trivières',zip:'7100'},{label:'7100 Saint-Vaast',name:'Saint-Vaast',zip:'7100'},{label:'7100 La Louvière',name:'La Louvière',zip:'7100'},{label:'7100 Haine-Saint-Pierre',name:'Haine-Saint-Pierre',zip:'7100'},{label:'7100 Haine-Saint-Paul',name:'Haine-Saint-Paul',zip:'7100'},{label:'7090 Steenkerque Ht.',name:'Steenkerque Ht.',zip:'7090'},{label:'7090 Ronquières',name:'Ronquières',zip:'7090'},{label:'7090 Petit-Roeulx-lez-Braine',name:'Petit-Roeulx-lez-Braine',zip:'7090'},{label:'7090 Henripont',name:'Henripont',zip:'7090'},{label:'7090 Hennuyères',name:'Hennuyères',zip:'7090'},{label:'7090 Braine-le-Comte',name:'Braine-le-Comte',zip:'7090'},{label:'7080 Sars-la-Bruyère',name:'Sars-la-Bruyère',zip:'7080'},{label:'7080 Noirchain',name:'Noirchain',zip:'7080'},{label:'7080 La Bouverie',name:'La Bouverie',zip:'7080'},{label:'7080 Frameries',name:'Frameries',zip:'7080'},{label:'7080 Eugies Frameries',name:'Eugies Frameries',zip:'7080'},{label:'7070 Ville-sur-Haine Le Roeulx',name:'Ville-sur-Haine Le Roeulx',zip:'7070'},{label:'7070 Thieu',name:'Thieu',zip:'7070'},{label:'7070 Mignault',name:'Mignault',zip:'7070'},{label:'7070 Le Roeulx',name:'Le Roeulx',zip:'7070'},{label:'7070 Gottignies',name:'Gottignies',zip:'7070'},{label:'7063 Neufvilles',name:'Neufvilles',zip:'7063'},{label:'7063 Chaussée-Notre-Dame-Louvignies',name:'Chaussée-Notre-Dame-Louvignies',zip:'7063'},{label:'7062 Naast',name:'Naast',zip:'7062'},{label:'7061 Thieusies',name:'Thieusies',zip:'7061'},{label:'7061 Casteau Soignies',name:'Casteau Soignies',zip:'7061'},{label:'7060 Soignies',name:'Soignies',zip:'7060'},{label:'7060 Horrues',name:'Horrues',zip:'7060'},{label:'7050 Masnuy-Saint-Pierre',name:'Masnuy-Saint-Pierre',zip:'7050'},{label:'7050 Masnuy-Saint-Jean Jurbise',name:'Masnuy-Saint-Jean Jurbise',zip:'7050'},{label:'7050 Jurbise',name:'Jurbise',zip:'7050'},{label:'7050 Herchies',name:'Herchies',zip:'7050'},{label:'7050 Erbisoeul',name:'Erbisoeul',zip:'7050'},{label:'7050 Erbaut',name:'Erbaut',zip:'7050'},{label:'7041 Havay',name:'Havay',zip:'7041'},{label:'7041 Givry',name:'Givry',zip:'7041'},{label:'7040 Quévy-le-Petit',name:'Quévy-le-Petit',zip:'7040'},{label:'7040 Quévy-le-Grand',name:'Quévy-le-Grand',zip:'7040'},{label:'7040 Quévy',name:'Quévy',zip:'7040'},{label:'7040 Goegnies-Chaussée',name:'Goegnies-Chaussée',zip:'7040'},{label:'7040 Genly',name:'Genly',zip:'7040'},{label:'7040 Bougnies',name:'Bougnies',zip:'7040'},{label:'7040 Blaregnies',name:'Blaregnies',zip:'7040'},{label:'7040 Aulnois',name:'Aulnois',zip:'7040'},{label:'7040 Asquillies',name:'Asquillies',zip:'7040'},{label:'7034 Saint-Denis Ht.',name:'Saint-Denis Ht.',zip:'7034'},{label:'7034 Obourg',name:'Obourg',zip:'7034'},{label:'7033 Cuesmes',name:'Cuesmes',zip:'7033'},{label:'7032 Spiennes',name:'Spiennes',zip:'7032'},{label:'7031 Villers-Saint-Ghislain',name:'Villers-Saint-Ghislain',zip:'7031'},{label:'7030 Saint-Symphorien',name:'Saint-Symphorien',zip:'7030'},{label:'7024 Ciply',name:'Ciply',zip:'7024'},{label:'7022 Nouvelles',name:'Nouvelles',zip:'7022'},{label:'7022 Mesvin',name:'Mesvin',zip:'7022'},{label:'7022 Hyon',name:'Hyon',zip:'7022'},{label:'7022 Harveng',name:'Harveng',zip:'7022'},{label:'7022 Harmignies',name:'Harmignies',zip:'7022'},{label:'7021 Havré',name:'Havré',zip:'7021'},{label:'7020 Nimy',name:'Nimy',zip:'7020'},{label:'7020 Maisières',name:'Maisières',zip:'7020'},{label:'7012 Jemappes',name:'Jemappes',zip:'7012'},{label:'7012 Flénu',name:'Flénu',zip:'7012'},{label:'7011 Ghlin',name:'Ghlin',zip:'7011'},{label:'7000 Mons',name:'Mons',zip:'7000'},{label:'6596 Seloignes',name:'Seloignes',zip:'6596'},{label:'6596 Forges-Philippe',name:'Forges-Philippe',zip:'6596'},{label:'6594 Beauwelz',name:'Beauwelz',zip:'6594'},{label:'6593 Macquenoise',name:'Macquenoise',zip:'6593'},{label:'6592 Monceau-Imbrechies',name:'Monceau-Imbrechies',zip:'6592'},{label:'6591 Macon',name:'Macon',zip:'6591'},{label:'6590 Momignies',name:'Momignies',zip:'6590'},{label:'6567 Merbes-Sainte-Marie',name:'Merbes-Sainte-Marie',zip:'6567'},{label:'6567 Merbes-le-Château',name:'Merbes-le-Château',zip:'6567'},{label:'6567 Labuissière',name:'Labuissière',zip:'6567'},{label:'6567 Fontaine-Valmont',name:'Fontaine-Valmont',zip:'6567'},{label:'6560 Solre-sur-Sambre',name:'Solre-sur-Sambre',zip:'6560'},{label:'6560 Montignies-Saint-Christophe',name:'Montignies-Saint-Christophe',zip:'6560'},{label:'6560 Hantes-Wihéries',name:'Hantes-Wihéries',zip:'6560'},{label:'6560 Grand-Reng',name:'Grand-Reng',zip:'6560'},{label:'6560 Erquelinnes',name:'Erquelinnes',zip:'6560'},{label:'6543 Bienne-lez-Happart',name:'Bienne-lez-Happart',zip:'6543'},{label:'6542 Sars-la-Buissière',name:'Sars-la-Buissière',zip:'6542'},{label:'6540 Mont-Sainte-Geneviève',name:'Mont-Sainte-Geneviève',zip:'6540'},{label:'6540 Lobbes',name:'Lobbes',zip:'6540'},{label:'6536 Thuillies',name:'Thuillies',zip:'6536'},{label:'6536 Donstiennes',name:'Donstiennes',zip:'6536'},{label:'6534 Gozée',name:'Gozée',zip:'6534'},{label:'6533 Biercée',name:'Biercée',zip:'6533'},{label:'6532 Ragnies',name:'Ragnies',zip:'6532'},{label:'6531 Biesme-sous-Thuin',name:'Biesme-sous-Thuin',zip:'6531'},{label:'6530 Thuin',name:'Thuin',zip:'6530'},{label:'6530 Leers-et-Fosteau',name:'Leers-et-Fosteau',zip:'6530'},{label:'6511 Strée Ht.',name:'Strée Ht.',zip:'6511'},{label:'6500 Thirimont',name:'Thirimont',zip:'6500'},{label:'6500 Solre-Saint-Géry',name:'Solre-Saint-Géry',zip:'6500'},{label:'6500 Renlies',name:'Renlies',zip:'6500'},{label:'6500 Leval-Chaudeville',name:'Leval-Chaudeville',zip:'6500'},{label:'6500 Leugnies',name:'Leugnies',zip:'6500'},{label:'6500 Beaumont',name:'Beaumont',zip:'6500'},{label:'6500 Barbençon',name:'Barbençon',zip:'6500'},{label:'6470 Sivry-Rance',name:'Sivry-Rance',zip:'6470'},{label:'6470 Sivry',name:'Sivry',zip:'6470'},{label:'6470 Sautin',name:'Sautin',zip:'6470'},{label:'6470 Rance',name:'Rance',zip:'6470'},{label:'6470 Montbliart',name:'Montbliart',zip:'6470'},{label:'6470 Grandrieu',name:'Grandrieu',zip:'6470'},{label:'6464 Rièzes',name:'Rièzes',zip:'6464'},{label:'6464 Forges',name:'Forges',zip:'6464'},{label:'6464 Bourlers',name:'Bourlers',zip:'6464'},{label:'6464 Baileux',name:'Baileux',zip:'6464'},{label:'6463 Lompret',name:'Lompret',zip:'6463'},{label:'6462 Vaulx-lez-Chimay',name:'Vaulx-lez-Chimay',zip:'6462'},{label:'6461 Virelles',name:'Virelles',zip:'6461'},{label:'6460 Villers-la-Tour',name:'Villers-la-Tour',zip:'6460'},{label:'6460 Salles',name:'Salles',zip:'6460'},{label:'6460 Saint-Remy Ht.',name:'Saint-Remy Ht.',zip:'6460'},{label:'6460 Robechies',name:'Robechies',zip:'6460'},{label:'6460 Chimay',name:'Chimay',zip:'6460'},{label:'6460 Bailièvre',name:'Bailièvre',zip:'6460'},{label:'6441 Erpion',name:'Erpion',zip:'6441'},{label:'6440 Vergnies',name:'Vergnies',zip:'6440'},{label:'6440 Froidchapelle',name:'Froidchapelle',zip:'6440'},{label:'6440 Fourbechies',name:'Fourbechies',zip:'6440'},{label:'6440 Boussu-lez-Walcourt',name:'Boussu-lez-Walcourt',zip:'6440'},{label:'6280 Villers-Poterie',name:'Villers-Poterie',zip:'6280'},{label:'6280 Loverval',name:'Loverval',zip:'6280'},{label:'6280 Joncret',name:'Joncret',zip:'6280'},{label:'6280 Gougnies',name:'Gougnies',zip:'6280'},{label:'6280 Gerpinnes',name:'Gerpinnes',zip:'6280'},{label:'6280 Acoz',name:'Acoz',zip:'6280'},{label:'6250 Roselies',name:'Roselies',zip:'6250'},{label:'6250 Presles',name:'Presles',zip:'6250'},{label:'6250 Pont-de-Loup',name:'Pont-de-Loup',zip:'6250'},{label:'6250 Aiseau-Presles',name:'Aiseau-Presles',zip:'6250'},{label:'6250 Aiseau',name:'Aiseau',zip:'6250'},{label:'6240 Pironchamps',name:'Pironchamps',zip:'6240'},{label:'6240 Farciennes',name:'Farciennes',zip:'6240'},{label:'6238 Luttre',name:'Luttre',zip:'6238'},{label:'6238 Liberchies',name:'Liberchies',zip:'6238'},{label:'6230 Viesville',name:'Viesville',zip:'6230'},{label:'6230 Thiméon',name:'Thiméon',zip:'6230'},{label:'6230 Pont-à-Celles',name:'Pont-à-Celles',zip:'6230'},{label:'6230 Obaix',name:'Obaix',zip:'6230'},{label:'6230 Buzet',name:'Buzet',zip:'6230'},{label:'6224 Wanfercée-Baulet',name:'Wanfercée-Baulet',zip:'6224'},{label:'6223 Wagnelée',name:'Wagnelée',zip:'6223'},{label:'6222 Brye',name:'Brye',zip:'6222'},{label:'6221 Saint-Amand',name:'Saint-Amand',zip:'6221'},{label:'6220 Wangenies',name:'Wangenies',zip:'6220'},{label:'6220 Lambusart',name:'Lambusart',zip:'6220'},{label:'6220 Heppignies',name:'Heppignies',zip:'6220'},{label:'6220 Fleurus',name:'Fleurus',zip:'6220'},{label:'6211 Mellet',name:'Mellet',zip:'6211'},{label:'6210 Wayaux',name:'Wayaux',zip:'6210'},{label:'6210 Villers-Perwin',name:'Villers-Perwin',zip:'6210'},{label:'6210 Rèves',name:'Rèves',zip:'6210'},{label:'6210 Les Bons Villers',name:'Les Bons Villers',zip:'6210'},{label:'6210 Frasnes-lez-Gosselies',name:'Frasnes-lez-Gosselies',zip:'6210'},{label:'6200 Châtelineau',name:'Châtelineau',zip:'6200'},{label:'6200 Châtelet',name:'Châtelet',zip:'6200'},{label:'6200 Bouffioulx',name:'Bouffioulx',zip:'6200'},{label:'6183 Trazegnies',name:'Trazegnies',zip:'6183'},{label:'6182 Souvret',name:'Souvret',zip:'6182'},{label:'6181 Gouy-lez-Piéton',name:'Gouy-lez-Piéton',zip:'6181'},{label:'6180 Courcelles',name:'Courcelles',zip:'6180'},{label:'6150 Anderlues',name:'Anderlues',zip:'6150'},{label:'6142 Leernes',name:'Leernes',zip:'6142'},{label:'6141 Forchies-la-Marche',name:'Forchies-la-Marche',zip:'6141'},{label:'6120 Nalinnes',name:'Nalinnes',zip:'6120'},{label:'6120 Marbaix Ht.',name:'Marbaix Ht.',zip:'6120'},{label:'6120 Jamioulx',name:'Jamioulx',zip:'6120'},{label:'6120 Ham-sur-Heure-Nalinnes',name:'Ham-sur-Heure-Nalinnes',zip:'6120'},{label:'6120 Ham-sur-Heure',name:'Ham-sur-Heure',zip:'6120'},{label:'6120 Cour-sur-Heure',name:'Cour-sur-Heure',zip:'6120'},{label:'6111 Landelies',name:'Landelies',zip:'6111'},{label:'6110 Montigny-le-Tilleul',name:'Montigny-le-Tilleul',zip:'6110'},{label:'6061 Montignies-sur-Sambre',name:'Montignies-sur-Sambre',zip:'6061'},{label:'6060 Gilly',name:'Gilly',zip:'6060'},{label:'6044 Roux',name:'Roux',zip:'6044'},{label:'6043 Ransart',name:'Ransart',zip:'6043'},{label:'6042 Lodelinsart',name:'Lodelinsart',zip:'6042'},{label:'6041 Gosselies',name:'Gosselies',zip:'6041'},{label:'6040 Jumet',name:'Jumet',zip:'6040'},{label:'6032 Mont-sur-Marchienne',name:'Mont-sur-Marchienne',zip:'6032'},{label:'6031 Monceau-sur-Sambre',name:'Monceau-sur-Sambre',zip:'6031'},{label:'6030 Marchienne-au-Pont',name:'Marchienne-au-Pont',zip:'6030'},{label:'6030 Goutroux',name:'Goutroux',zip:'6030'},{label:'6020 Dampremy',name:'Dampremy',zip:'6020'},{label:'6010 Couillet',name:'Couillet',zip:'6010'},{label:'6001 Marcinelle',name:'Marcinelle',zip:'6001'},{label:'6000 Charleroi',name:'Charleroi',zip:'6000'},{label:'8980 Zonnebeke',name:'Zonnebeke',zip:'8980'},{label:'8980 Passendale (Zonnebeke)',name:'Passendale (Zonnebeke)',zip:'8980'},{label:'8980 Geluveld (Zonnebeke)',name:'Geluveld (Zonnebeke)',zip:'8980'},{label:'8980 Beselare (Zonnebeke)',name:'Beselare (Zonnebeke)',zip:'8980'},{label:'8978 Watou (Poperinge)',name:'Watou (Poperinge)',zip:'8978'},{label:'8972 Roesbrugge-Haringe (Poperinge)',name:'Roesbrugge-Haringe (Poperinge)',zip:'8972'},{label:'8972 Proven (Poperinge)',name:'Proven (Poperinge)',zip:'8972'},{label:'8972 Krombeke (Poperinge)',name:'Krombeke (Poperinge)',zip:'8972'},{label:'8970 Reningelst (Poperinge)',name:'Reningelst (Poperinge)',zip:'8970'},{label:'8970 Poperinge',name:'Poperinge',zip:'8970'},{label:'8958 Loker (Heuvelland)',name:'Loker (Heuvelland)',zip:'8958'},{label:'8956 Kemmel (Heuvelland)',name:'Kemmel (Heuvelland)',zip:'8956'},{label:'8954 Westouter (Heuvelland)',name:'Westouter (Heuvelland)',zip:'8954'},{label:'8953 Wijtschate (Heuvelland)',name:'Wijtschate (Heuvelland)',zip:'8953'},{label:'8952 Wulvergem (Heuvelland)',name:'Wulvergem (Heuvelland)',zip:'8952'},{label:'8951 Dranouter (Heuvelland)',name:'Dranouter (Heuvelland)',zip:'8951'},{label:'8950 Nieuwkerke (Heuvelland)',name:'Nieuwkerke (Heuvelland)',zip:'8950'},{label:'8950 Heuvelland',name:'Heuvelland',zip:'8950'},{label:'8940 Wervik',name:'Wervik',zip:'8940'},{label:'8940 Geluwe (Wervik)',name:'Geluwe (Wervik)',zip:'8940'},{label:'8930 Rekkem (Menen)',name:'Rekkem (Menen)',zip:'8930'},{label:'8930 Menen',name:'Menen',zip:'8930'},{label:'8930 Lauwe (Menen)',name:'Lauwe (Menen)',zip:'8930'},{label:'8920 Poelkapelle (Langemark-Poelkapelle)',name:'Poelkapelle (Langemark-Poelkapelle)',zip:'8920'},{label:'8920 Langemark-Poelkapelle',name:'Langemark-Poelkapelle',zip:'8920'},{label:'8920 Langemark (Langemark-Poelkapelle)',name:'Langemark (Langemark-Poelkapelle)',zip:'8920'},{label:'8920 Bikschote (Langemark-Poelkapelle)',name:'Bikschote (Langemark-Poelkapelle)',zip:'8920'},{label:'8908 Vlamertinge (Ieper)',name:'Vlamertinge (Ieper)',zip:'8908'},{label:'8906 Elverdinge (Ieper)',name:'Elverdinge (Ieper)',zip:'8906'},{label:'8904 Zuidschote (Ieper)',name:'Zuidschote (Ieper)',zip:'8904'},{label:'8904 Boezinge (Ieper)',name:'Boezinge (Ieper)',zip:'8904'},{label:'8902 Zillebeke (Ieper)',name:'Zillebeke (Ieper)',zip:'8902'},{label:'8902 Voormezele (Ieper)',name:'Voormezele (Ieper)',zip:'8902'},{label:'8902 Hollebeke (Ieper)',name:'Hollebeke (Ieper)',zip:'8902'},{label:'8900 Sint-Jan (Ieper)',name:'Sint-Jan (Ieper)',zip:'8900'},{label:'8900 Ieper',name:'Ieper',zip:'8900'},{label:'8900 Dikkebus (Ieper)',name:'Dikkebus (Ieper)',zip:'8900'},{label:'8900 Brielen (Ieper)',name:'Brielen (Ieper)',zip:'8900'},{label:'8890 Moorslede',name:'Moorslede',zip:'8890'},{label:'8890 Dadizele (Moorslede)',name:'Dadizele (Moorslede)',zip:'8890'},{label:'8880 Sint-Eloois-Winkel (Ledegem)',name:'Sint-Eloois-Winkel (Ledegem)',zip:'8880'},{label:'8880 Rollegem-Kapelle (Ledegem)',name:'Rollegem-Kapelle (Ledegem)',zip:'8880'},{label:'8880 Ledegem',name:'Ledegem',zip:'8880'},{label:'8870 Kachtem (Izegem)',name:'Kachtem (Izegem)',zip:'8870'},{label:'8870 Izegem',name:'Izegem',zip:'8870'},{label:'8870 Emelgem (Izegem)',name:'Emelgem (Izegem)',zip:'8870'},{label:'8860 Lendelede',name:'Lendelede',zip:'8860'},{label:'8851 Koolskamp (Ardooie)',name:'Koolskamp (Ardooie)',zip:'8851'},{label:'8850 Ardooie',name:'Ardooie',zip:'8850'},{label:'8840 Westrozebeke (Staden)',name:'Westrozebeke (Staden)',zip:'8840'},{label:'8840 Staden',name:'Staden',zip:'8840'},{label:'8840 Oostnieuwkerke (Staden)',name:'Oostnieuwkerke (Staden)',zip:'8840'},{label:'8830 Hooglede',name:'Hooglede',zip:'8830'},{label:'8830 Gits (Hooglede)',name:'Gits (Hooglede)',zip:'8830'},{label:'8820 Torhout',name:'Torhout',zip:'8820'},{label:'8810 Lichtervelde',name:'Lichtervelde',zip:'8810'},{label:'8800 Rumbeke (Roeselare)',name:'Rumbeke (Roeselare)',zip:'8800'},{label:'8800 Roeselare',name:'Roeselare',zip:'8800'},{label:'8800 Oekene (Roeselare)',name:'Oekene (Roeselare)',zip:'8800'},{label:'8793 Sint-Eloois-Vijve (Waregem)',name:'Sint-Eloois-Vijve (Waregem)',zip:'8793'},{label:'8792 Desselgem (Waregem)',name:'Desselgem (Waregem)',zip:'8792'},{label:'8790 Waregem',name:'Waregem',zip:'8790'},{label:'8780 Oostrozebeke',name:'Oostrozebeke',zip:'8780'},{label:'8770 Ingelmunster',name:'Ingelmunster',zip:'8770'},{label:'8760 Meulebeke (Tielt)',name:'Meulebeke (Tielt)',zip:'8760'},{label:'8755 Ruiselede (Wingene)',name:'Ruiselede (Wingene)',zip:'8755'},{label:'8750 Zwevezele (Wingene)',name:'Zwevezele (Wingene)',zip:'8750'},{label:'8750 Wingene',name:'Wingene',zip:'8750'},{label:'8740 Pittem',name:'Pittem',zip:'8740'},{label:'8740 Egem (Pittem)',name:'Egem (Pittem)',zip:'8740'},{label:'8730 Oedelem (Beernem)',name:'Oedelem (Beernem)',zip:'8730'},{label:'8730 Beernem',name:'Beernem',zip:'8730'},{label:'8720 Wakken (Dentergem)',name:'Wakken (Dentergem)',zip:'8720'},{label:'8720 Oeselgem (Dentergem)',name:'Oeselgem (Dentergem)',zip:'8720'},{label:'8720 Markegem (Dentergem)',name:'Markegem (Dentergem)',zip:'8720'},{label:'8720 Dentergem',name:'Dentergem',zip:'8720'},{label:'8710 Wielsbeke',name:'Wielsbeke',zip:'8710'},{label:'8710 Sint-Baafs-Vijve (Wielsbeke)',name:'Sint-Baafs-Vijve (Wielsbeke)',zip:'8710'},{label:'8710 Ooigem (Wielsbeke)',name:'Ooigem (Wielsbeke)',zip:'8710'},{label:'8700 Tielt',name:'Tielt',zip:'8700'},{label:'8700 Schuiferskapelle (Tielt)',name:'Schuiferskapelle (Tielt)',zip:'8700'},{label:'8700 Kanegem (Tielt)',name:'Kanegem (Tielt)',zip:'8700'},{label:'8700 Aarsele (Tielt)',name:'Aarsele (Tielt)',zip:'8700'},{label:'8691 Stavele (Alveringem)',name:'Stavele (Alveringem)',zip:'8691'},{label:'8691 Leisele (Alveringem)',name:'Leisele (Alveringem)',zip:'8691'},{label:'8691 Izenberge (Alveringem)',name:'Izenberge (Alveringem)',zip:'8691'},{label:'8691 Gijverinkhove (Alveringem)',name:'Gijverinkhove (Alveringem)',zip:'8691'},{label:'8691 Beveren-Aan-Den-Ijzer (Alveringem)',name:'Beveren-Aan-Den-Ijzer (Alveringem)',zip:'8691'},{label:'8690 Sint-Rijkers (Alveringem)',name:'Sint-Rijkers (Alveringem)',zip:'8690'},{label:'8690 Oeren (Alveringem)',name:'Oeren (Alveringem)',zip:'8690'},{label:'8690 Hoogstade (Alveringem)',name:'Hoogstade (Alveringem)',zip:'8690'},{label:'8690 Alveringem',name:'Alveringem',zip:'8690'},{label:'8680 Zande (Koekelare)',name:'Zande (Koekelare)',zip:'8680'},{label:'8680 Koekelare',name:'Koekelare',zip:'8680'},{label:'8680 Bovekerke (Koekelare)',name:'Bovekerke (Koekelare)',zip:'8680'},{label:'8670 Wulpen (Koksijde)',name:'Wulpen (Koksijde)',zip:'8670'},{label:'8670 Oostduinkerke (Koksijde)',name:'Oostduinkerke (Koksijde)',zip:'8670'},{label:'8670 Koksijde',name:'Koksijde',zip:'8670'},{label:'8660 Adinkerke (De Panne)',name:'Adinkerke (De Panne)',zip:'8660'},{label:'8650 Merkem (Houthulst)',name:'Merkem (Houthulst)',zip:'8650'},{label:'8650 Klerken (Houthulst)',name:'Klerken (Houthulst)',zip:'8650'},{label:'8650 Houthulst',name:'Houthulst',zip:'8650'},{label:'8647 Reninge (Lo-Reninge)',name:'Reninge (Lo-Reninge)',zip:'8647'},{label:'8647 Pollinkhove (Lo-Reninge)',name:'Pollinkhove (Lo-Reninge)',zip:'8647'},{label:'8647 Noordschote (Lo-Reninge)',name:'Noordschote (Lo-Reninge)',zip:'8647'},{label:'8647 Lo-Reninge',name:'Lo-Reninge',zip:'8647'},{label:'8647 Lo (Lo-Reninge)',name:'Lo (Lo-Reninge)',zip:'8647'},{label:'8640 Woesten (Vleteren)',name:'Woesten (Vleteren)',zip:'8640'},{label:'8640 Westvleteren (Vleteren)',name:'Westvleteren (Vleteren)',zip:'8640'},{label:'8640 Vleteren',name:'Vleteren',zip:'8640'},{label:'8640 Oostvleteren (Vleteren)',name:'Oostvleteren (Vleteren)',zip:'8640'},{label:'8630 Zoutenaaie (Veurne)',name:'Zoutenaaie (Veurne)',zip:'8630'},{label:'8630 Wulveringem (Veurne)',name:'Wulveringem (Veurne)',zip:'8630'},{label:'8630 Vinkem (Veurne)',name:'Vinkem (Veurne)',zip:'8630'},{label:'8630 Veurne',name:'Veurne',zip:'8630'},{label:'8630 Eggewaartskapelle (Veurne)',name:'Eggewaartskapelle (Veurne)',zip:'8630'},{label:'8630 Bulskamp (Veurne)',name:'Bulskamp (Veurne)',zip:'8630'},{label:'8630 Booitshoeke (Veurne)',name:'Booitshoeke (Veurne)',zip:'8630'},{label:'8630 Avekapelle (Veurne)',name:'Avekapelle (Veurne)',zip:'8630'},{label:'8620 Nieuwpoort',name:'Nieuwpoort',zip:'8620'},{label:'8610 Zarren (Kortemark)',name:'Zarren (Kortemark)',zip:'8610'},{label:'8610 Werken (Kortemark)',name:'Werken (Kortemark)',zip:'8610'},{label:'8610 Kortemark',name:'Kortemark',zip:'8610'},{label:'8610 Handzame (Kortemark)',name:'Handzame (Kortemark)',zip:'8610'},{label:'8600 Woumen (Diksmuide)',name:'Woumen (Diksmuide)',zip:'8600'},{label:'8600 Vladslo (Diksmuide)',name:'Vladslo (Diksmuide)',zip:'8600'},{label:'8600 Stuivekenskerke (Diksmuide)',name:'Stuivekenskerke (Diksmuide)',zip:'8600'},{label:'8600 Sint-Jacobs-Kapelle (Diksmuide)',name:'Sint-Jacobs-Kapelle (Diksmuide)',zip:'8600'},{label:'8600 Pervijze (Diksmuide)',name:'Pervijze (Diksmuide)',zip:'8600'},{label:'8600 Oudekapelle (Diksmuide)',name:'Oudekapelle (Diksmuide)',zip:'8600'},{label:'8600 Nieuwkapelle (Diksmuide)',name:'Nieuwkapelle (Diksmuide)',zip:'8600'},{label:'8600 Leke (Diksmuide)',name:'Leke (Diksmuide)',zip:'8600'},{label:'8600 Lampernisse (Diksmuide)',name:'Lampernisse (Diksmuide)',zip:'8600'},{label:'8600 Keiem (Diksmuide)',name:'Keiem (Diksmuide)',zip:'8600'},{label:'8600 Kaaskerke (Diksmuide)',name:'Kaaskerke (Diksmuide)',zip:'8600'},{label:'8600 Esen (Diksmuide)',name:'Esen (Diksmuide)',zip:'8600'},{label:'8600 Driekapellen (Diksmuide)',name:'Driekapellen (Diksmuide)',zip:'8600'},{label:'8600 Diksmuide',name:'Diksmuide',zip:'8600'},{label:'8600 Beerst (Diksmuide)',name:'Beerst (Diksmuide)',zip:'8600'},{label:'8583 Bossuit (Avelgem)',name:'Bossuit (Avelgem)',zip:'8583'},{label:'8582 Outrijve (Avelgem)',name:'Outrijve (Avelgem)',zip:'8582'},{label:'8581 Waarmaarde (Avelgem)',name:'Waarmaarde (Avelgem)',zip:'8581'},{label:'8581 Kerkhove (Avelgem)',name:'Kerkhove (Avelgem)',zip:'8581'},{label:'8580 Avelgem',name:'Avelgem',zip:'8580'},{label:'8573 Tiegem (Anzegem)',name:'Tiegem (Anzegem)',zip:'8573'},{label:'8572 Kaster (Anzegem)',name:'Kaster (Anzegem)',zip:'8572'},{label:'8570 Vichte (Anzegem)',name:'Vichte (Anzegem)',zip:'8570'},{label:'8570 Ingooigem (Anzegem)',name:'Ingooigem (Anzegem)',zip:'8570'},{label:'8570 Gijzelbrechtegem (Anzegem)',name:'Gijzelbrechtegem (Anzegem)',zip:'8570'},{label:'8570 Anzegem',name:'Anzegem',zip:'8570'},{label:'8560 Wevelgem',name:'Wevelgem',zip:'8560'},{label:'8560 Moorsele (Wevelgem)',name:'Moorsele (Wevelgem)',zip:'8560'},{label:'8560 Gullegem (Wevelgem)',name:'Gullegem (Wevelgem)',zip:'8560'},{label:'8554 Sint-Denijs (Zwevegem)',name:'Sint-Denijs (Zwevegem)',zip:'8554'},{label:'8553 Otegem (Zwevegem)',name:'Otegem (Zwevegem)',zip:'8553'},{label:'8552 Moen (Zwevegem)',name:'Moen (Zwevegem)',zip:'8552'},{label:'8551 Heestert (Zwevegem)',name:'Heestert (Zwevegem)',zip:'8551'},{label:'8550 Zwevegem',name:'Zwevegem',zip:'8550'},{label:'8540 Deerlijk',name:'Deerlijk',zip:'8540'},{label:'8531 Hulste (Harelbeke)',name:'Hulste (Harelbeke)',zip:'8531'},{label:'8531 Bavikhove (Harelbeke)',name:'Bavikhove (Harelbeke)',zip:'8531'},{label:'8530 Harelbeke',name:'Harelbeke',zip:'8530'},{label:'8520 Kuurne',name:'Kuurne',zip:'8520'},{label:'8511 Aalbeke (Kortrijk)',name:'Aalbeke (Kortrijk)',zip:'8511'},{label:'8510 Rollegem (Kortrijk)',name:'Rollegem (Kortrijk)',zip:'8510'},{label:'8510 Marke (Kortrijk)',name:'Marke (Kortrijk)',zip:'8510'},{label:'8510 Kooigem (Kortrijk)',name:'Kooigem (Kortrijk)',zip:'8510'},{label:'8510 Bellegem (Kortrijk)',name:'Bellegem (Kortrijk)',zip:'8510'},{label:'8501 Heule (Kortrijk)',name:'Heule (Kortrijk)',zip:'8501'},{label:'8501 Bissegem (Kortrijk)',name:'Bissegem (Kortrijk)',zip:'8501'},{label:'8500 Kortrijk',name:'Kortrijk',zip:'8500'},{label:'8490 Zerkegem (Jabbeke)',name:'Zerkegem (Jabbeke)',zip:'8490'},{label:'8490 Varsenare (Jabbeke)',name:'Varsenare (Jabbeke)',zip:'8490'},{label:'8490 Stalhille (Jabbeke)',name:'Stalhille (Jabbeke)',zip:'8490'},{label:'8490 Snellegem (Jabbeke)',name:'Snellegem (Jabbeke)',zip:'8490'},{label:'8490 Jabbeke',name:'Jabbeke',zip:'8490'},{label:'8480 Ichtegem',name:'Ichtegem',zip:'8480'},{label:'8480 Eernegem (Ichtegem)',name:'Eernegem (Ichtegem)',zip:'8480'},{label:'8480 Bekegem (Ichtegem)',name:'Bekegem (Ichtegem)',zip:'8480'},{label:'8470 Zevekote (Gistel)',name:'Zevekote (Gistel)',zip:'8470'},{label:'8470 Snaaskerke (Gistel)',name:'Snaaskerke (Gistel)',zip:'8470'},{label:'8470 Moere (Gistel)',name:'Moere (Gistel)',zip:'8470'},{label:'8470 Gistel',name:'Gistel',zip:'8470'},{label:'8460 Westkerke (Oudenburg)',name:'Westkerke (Oudenburg)',zip:'8460'},{label:'8460 Roksem (Oudenburg)',name:'Roksem (Oudenburg)',zip:'8460'},{label:'8460 Oudenburg',name:'Oudenburg',zip:'8460'},{label:'8460 Ettelgem (Oudenburg)',name:'Ettelgem (Oudenburg)',zip:'8460'},{label:'8450 Bredene',name:'Bredene',zip:'8450'},{label:'8434 Westende (Middelkerke)',name:'Westende (Middelkerke)',zip:'8434'},{label:'8434 Lombardsijde (Middelkerke)',name:'Lombardsijde (Middelkerke)',zip:'8434'},{label:'8433 Spermalie',name:'Spermalie',zip:'8433'},{label:'8433 Slijpe (Middelkerke)',name:'Slijpe (Middelkerke)',zip:'8433'},{label:'8433 Schore (Middelkerke)',name:'Schore (Middelkerke)',zip:'8433'},{label:'8433 Mannekensvere (Middelkerke)',name:'Mannekensvere (Middelkerke)',zip:'8433'},{label:'8432 Leffinge (Middelkerke)',name:'Leffinge (Middelkerke)',zip:'8432'},{label:'8431 Wilskerke (Middelkerke)',name:'Wilskerke (Middelkerke)',zip:'8431'},{label:'8430 Middelkerke',name:'Middelkerke',zip:'8430'},{label:'8421 Vlissegem (De Haan)',name:'Vlissegem (De Haan)',zip:'8421'},{label:'8420 Wenduine (De Haan)',name:'Wenduine (De Haan)',zip:'8420'},{label:'8420 Klemskerke (De Haan)',name:'Klemskerke (De Haan)',zip:'8420'},{label:'8400 Stene (Oostende)',name:'Stene (Oostende)',zip:'8400'},{label:'8400 Oostende',name:'Oostende',zip:'8400'},{label:'8377 Zuienkerke',name:'Zuienkerke',zip:'8377'},{label:'8377 Nieuwmunster (Zuienkerke)',name:'Nieuwmunster (Zuienkerke)',zip:'8377'},{label:'8377 Meetkerke (Zuienkerke)',name:'Meetkerke (Zuienkerke)',zip:'8377'},{label:'8377 Houtave (Zuienkerke)',name:'Houtave (Zuienkerke)',zip:'8377'},{label:'8370 Uitkerke (Blankenberge)',name:'Uitkerke (Blankenberge)',zip:'8370'},{label:'8370 Blankenberge',name:'Blankenberge',zip:'8370'},{label:'8340 Sijsele (Damme)',name:'Sijsele (Damme)',zip:'8340'},{label:'8340 Moerkerke (Damme)',name:'Moerkerke (Damme)',zip:'8340'},{label:'8340 Lapscheure (Damme)',name:'Lapscheure (Damme)',zip:'8340'},{label:'8340 Hoeke (Damme)',name:'Hoeke (Damme)',zip:'8340'},{label:'8340 Damme',name:'Damme',zip:'8340'},{label:'8301 Heist-Aan-Zee (Knokke-Heist)',name:'Heist-Aan-Zee (Knokke-Heist)',zip:'8301'},{label:'8300 Westkapelle (Knokke-Heist)',name:'Westkapelle (Knokke-Heist)',zip:'8300'},{label:'8300 Knokke-Heist',name:'Knokke-Heist',zip:'8300'},{label:'8300 Knokke (Knokke-Heist)',name:'Knokke (Knokke-Heist)',zip:'8300'},{label:'8211 Aartrijke (Zedelgem)',name:'Aartrijke (Zedelgem)',zip:'8211'},{label:'8210 Zedelgem',name:'Zedelgem',zip:'8210'},{label:'8210 Veldegem (Zedelgem)',name:'Veldegem (Zedelgem)',zip:'8210'},{label:'8210 Loppem (Zedelgem)',name:'Loppem (Zedelgem)',zip:'8210'},{label:'8020 Waardamme (Oostkamp)',name:'Waardamme (Oostkamp)',zip:'8020'},{label:'8020 Ruddervoorde (Oostkamp)',name:'Ruddervoorde (Oostkamp)',zip:'8020'},{label:'8020 Oostkamp',name:'Oostkamp',zip:'8020'},{label:'8020 Hertsberge (Oostkamp)',name:'Hertsberge (Oostkamp)',zip:'8020'},{label:'8380 Zeebrugge (Brugge)',name:'Zeebrugge (Brugge)',zip:'8380'},{label:'8380 Lissewege (Brugge)',name:'Lissewege (Brugge)',zip:'8380'},{label:'8380 Dudzele (Brugge)',name:'Dudzele (Brugge)',zip:'8380'},{label:'8310 Sint-Kruis (Brugge)',name:'Sint-Kruis (Brugge)',zip:'8310'},{label:'8310 Assebroek (Brugge)',name:'Assebroek (Brugge)',zip:'8310'},{label:'8200 Sint-Michiels (Brugge)',name:'Sint-Michiels (Brugge)',zip:'8200'},{label:'8200 Sint-Andries (Brugge)',name:'Sint-Andries (Brugge)',zip:'8200'},{label:'8000 Koolkerke (Brugge)',name:'Koolkerke (Brugge)',zip:'8000'},{label:'8000 Brugge',name:'Brugge',zip:'8000'},{label:'3473 Waanrode (Kortenaken)',name:'Waanrode (Kortenaken)',zip:'3473'},{label:'3472 Kersbeek-Miskom (Kortenaken)',name:'Kersbeek-Miskom (Kortenaken)',zip:'3472'},{label:'3471 Hoeleden (Kortenaken)',name:'Hoeleden (Kortenaken)',zip:'3471'},{label:'3470 Ransberg (Kortenaken)',name:'Ransberg (Kortenaken)',zip:'3470'},{label:'3470 Kortenaken',name:'Kortenaken',zip:'3470'},{label:'3461 Molenbeek-Wersbeek (Bekkevoort)',name:'Molenbeek-Wersbeek (Bekkevoort)',zip:'3461'},{label:'3460 Bekkevoort',name:'Bekkevoort',zip:'3460'},{label:'3460 Assent (Bekkevoort)',name:'Assent (Bekkevoort)',zip:'3460'},{label:'3454 Rummen (Geetbets)',name:'Rummen (Geetbets)',zip:'3454'},{label:'3450 Grazen (Geetbets)',name:'Grazen (Geetbets)',zip:'3450'},{label:'3450 Geetbets',name:'Geetbets',zip:'3450'},{label:'3440 Zoutleeuw',name:'Zoutleeuw',zip:'3440'},{label:'3440 Helen-Bos (Zoutleeuw)',name:'Helen-Bos (Zoutleeuw)',zip:'3440'},{label:'3440 Halle-Booienhoven (Zoutleeuw)',name:'Halle-Booienhoven (Zoutleeuw)',zip:'3440'},{label:'3440 Dormaal (Zoutleeuw)',name:'Dormaal (Zoutleeuw)',zip:'3440'},{label:'3440 Budingen (Zoutleeuw)',name:'Budingen (Zoutleeuw)',zip:'3440'},{label:'3404 Neerlanden (Landen)',name:'Neerlanden (Landen)',zip:'3404'},{label:'3404 Attenhoven (Landen)',name:'Attenhoven (Landen)',zip:'3404'},{label:'3401 Wezeren (Landen)',name:'Wezeren (Landen)',zip:'3401'},{label:'3401 Walshoutem (Landen)',name:'Walshoutem (Landen)',zip:'3401'},{label:'3401 Walsbets (Landen)',name:'Walsbets (Landen)',zip:'3401'},{label:'3401 Waasmont (Landen)',name:'Waasmont (Landen)',zip:'3401'},{label:'3400 Wange (Landen)',name:'Wange (Landen)',zip:'3400'},{label:'3400 Rumsdorp (Landen)',name:'Rumsdorp (Landen)',zip:'3400'},{label:'3400 Overwinden (Landen)',name:'Overwinden (Landen)',zip:'3400'},{label:'3400 Neerwinden (Landen)',name:'Neerwinden (Landen)',zip:'3400'},{label:'3400 Landen',name:'Landen',zip:'3400'},{label:'3400 Laar (Landen)',name:'Laar (Landen)',zip:'3400'},{label:'3400 Ezemaal (Landen)',name:'Ezemaal (Landen)',zip:'3400'},{label:'3400 Eliksem (Landen)',name:'Eliksem (Landen)',zip:'3400'},{label:'3391 Meensel-Kiezegem (Tielt-Winge)',name:'Meensel-Kiezegem (Tielt-Winge)',zip:'3391'},{label:'3390 Tielt-Winge',name:'Tielt-Winge',zip:'3390'},{label:'3390 Sint-Joris-Winge (Tielt-Winge)',name:'Sint-Joris-Winge (Tielt-Winge)',zip:'3390'},{label:'3390 Houwaart (Tielt-Winge)',name:'Houwaart (Tielt-Winge)',zip:'3390'},{label:'3384 Attenrode (Glabbeek)',name:'Attenrode (Glabbeek)',zip:'3384'},{label:'3380 Bunsbeek (Glabbeek)',name:'Bunsbeek (Glabbeek)',zip:'3380'},{label:'3370 Willebringen (Boutersem)',name:'Willebringen (Boutersem)',zip:'3370'},{label:'3370 Vertrijk (Boutersem)',name:'Vertrijk (Boutersem)',zip:'3370'},{label:'3370 Roosbeek (Boutersem)',name:'Roosbeek (Boutersem)',zip:'3370'},{label:'3370 Neervelp (Boutersem)',name:'Neervelp (Boutersem)',zip:'3370'},{label:'3370 Kerkom (Boutersem)',name:'Kerkom (Boutersem)',zip:'3370'},{label:'3370 Boutersem',name:'Boutersem',zip:'3370'},{label:'3360 Opvelp (Bierbeek)',name:'Opvelp (Bierbeek)',zip:'3360'},{label:'3360 Lovenjoel (Bierbeek)',name:'Lovenjoel (Bierbeek)',zip:'3360'},{label:'3360 Korbeek-Lo (Bierbeek)',name:'Korbeek-Lo (Bierbeek)',zip:'3360'},{label:'3360 Bierbeek',name:'Bierbeek',zip:'3360'},{label:'3350 Wommersom (Linter)',name:'Wommersom (Linter)',zip:'3350'},{label:'3350 Overhespen (Linter)',name:'Overhespen (Linter)',zip:'3350'},{label:'3350 Orsmaal-Gussenhoven (Linter)',name:'Orsmaal-Gussenhoven (Linter)',zip:'3350'},{label:'3350 Neerlinter (Linter)',name:'Neerlinter (Linter)',zip:'3350'},{label:'3350 Neerhespen (Linter)',name:'Neerhespen (Linter)',zip:'3350'},{label:'3350 Melkwezer (Linter)',name:'Melkwezer (Linter)',zip:'3350'},{label:'3350 Linter',name:'Linter',zip:'3350'},{label:'3350 Drieslinter (Linter)',name:'Drieslinter (Linter)',zip:'3350'},{label:'3321 Outgaarden (Hoegaarden)',name:'Outgaarden (Hoegaarden)',zip:'3321'},{label:'3320 Hoegaarden',name:'Hoegaarden',zip:'3320'},{label:'3300 Vissenaken (Tienen)',name:'Vissenaken (Tienen)',zip:'3300'},{label:'3300 Tienen',name:'Tienen',zip:'3300'},{label:'3300 Oplinter (Tienen)',name:'Oplinter (Tienen)',zip:'3300'},{label:'3300 Oorbeek (Tienen)',name:'Oorbeek (Tienen)',zip:'3300'},{label:'3300 Kumtich (Tienen)',name:'Kumtich (Tienen)',zip:'3300'},{label:'3300 Hakendover (Tienen)',name:'Hakendover (Tienen)',zip:'3300'},{label:'3300 Goetsenhoven (Tienen)',name:'Goetsenhoven (Tienen)',zip:'3300'},{label:'3300 Bost (Tienen)',name:'Bost (Tienen)',zip:'3300'},{label:'3294 Molenstede (Diest)',name:'Molenstede (Diest)',zip:'3294'},{label:'3293 Kaggevinne (Diest)',name:'Kaggevinne (Diest)',zip:'3293'},{label:'3290 Webbekom (Diest)',name:'Webbekom (Diest)',zip:'3290'},{label:'3290 Schaffen (Diest)',name:'Schaffen (Diest)',zip:'3290'},{label:'3290 Diest',name:'Diest',zip:'3290'},{label:'3272 Testelt (Scherpenheuvel-Zichem)',name:'Testelt (Scherpenheuvel-Zichem)',zip:'3272'},{label:'3272 Messelbroek (Scherpenheuvel-Zichem)',name:'Messelbroek (Scherpenheuvel-Zichem)',zip:'3272'},{label:'3271 Zichem (Scherpenheuvel-Zichem)',name:'Zichem (Scherpenheuvel-Zichem)',zip:'3271'},{label:'3271 Averbode (Scherpenheuvel-Zichem)',name:'Averbode (Scherpenheuvel-Zichem)',zip:'3271'},{label:'3270 Scherpenheuvel (Scherpenheuvel-Zichem)',name:'Scherpenheuvel (Scherpenheuvel-Zichem)',zip:'3270'},{label:'3221 Nieuwrode (Holsbeek)',name:'Nieuwrode (Holsbeek)',zip:'3221'},{label:'3220 Sint-Pieters-Rode (Holsbeek)',name:'Sint-Pieters-Rode (Holsbeek)',zip:'3220'},{label:'3220 Holsbeek',name:'Holsbeek',zip:'3220'},{label:'3212 Pellenberg (Lubbeek)',name:'Pellenberg (Lubbeek)',zip:'3212'},{label:'3211 Binkom (Lubbeek)',name:'Binkom (Lubbeek)',zip:'3211'},{label:'3210 Lubbeek',name:'Lubbeek',zip:'3210'},{label:'3210 Linden (Lubbeek)',name:'Linden (Lubbeek)',zip:'3210'},{label:'3202 Rillaar (Aarschot)',name:'Rillaar (Aarschot)',zip:'3202'},{label:'3201 Langdorp (Aarschot)',name:'Langdorp (Aarschot)',zip:'3201'},{label:'3200 Gelrode (Aarschot)',name:'Gelrode (Aarschot)',zip:'3200'},{label:'3200 Aarschot',name:'Aarschot',zip:'3200'},{label:'3191 Hever (Boortmeerbeek)',name:'Hever (Boortmeerbeek)',zip:'3191'},{label:'3190 Boortmeerbeek',name:'Boortmeerbeek',zip:'3190'},{label:'3150 Wespelaar (Haacht)',name:'Wespelaar (Haacht)',zip:'3150'},{label:'3150 Tildonk (Haacht)',name:'Tildonk (Haacht)',zip:'3150'},{label:'3150 Haacht',name:'Haacht',zip:'3150'},{label:'3140 Keerbergen',name:'Keerbergen',zip:'3140'},{label:'3130 Betekom (Begijnendijk)',name:'Betekom (Begijnendijk)',zip:'3130'},{label:'3130 Begijnendijk',name:'Begijnendijk',zip:'3130'},{label:'3128 Baal (Tremelo)',name:'Baal (Tremelo)',zip:'3128'},{label:'3120 Tremelo',name:'Tremelo',zip:'3120'},{label:'3118 Werchter (Rotselaar)',name:'Werchter (Rotselaar)',zip:'3118'},{label:'3111 Wezemaal (Rotselaar)',name:'Wezemaal (Rotselaar)',zip:'3111'},{label:'3110 Rotselaar',name:'Rotselaar',zip:'3110'},{label:'3090 Overijse',name:'Overijse',zip:'3090'},{label:'3080 Vossem (Tervuren)',name:'Vossem (Tervuren)',zip:'3080'},{label:'3080 Tervuren',name:'Tervuren',zip:'3080'},{label:'3080 Duisburg (Tervuren)',name:'Duisburg (Tervuren)',zip:'3080'},{label:'3078 Meerbeek (Kortenberg)',name:'Meerbeek (Kortenberg)',zip:'3078'},{label:'3078 Everberg (Kortenberg)',name:'Everberg (Kortenberg)',zip:'3078'},{label:'3071 Erps-Kwerps (Kortenberg)',name:'Erps-Kwerps (Kortenberg)',zip:'3071'},{label:'3070 Kortenberg',name:'Kortenberg',zip:'3070'},{label:'3061 Leefdaal (Bertem)',name:'Leefdaal (Bertem)',zip:'3061'},{label:'3060 Korbeek-Dijle (Bertem)',name:'Korbeek-Dijle (Bertem)',zip:'3060'},{label:'3060 Bertem',name:'Bertem',zip:'3060'},{label:'3054 Vaalbeek (Oud-Heverlee)',name:'Vaalbeek (Oud-Heverlee)',zip:'3054'},{label:'3053 Haasrode (Oud-Heverlee)',name:'Haasrode (Oud-Heverlee)',zip:'3053'},{label:'3052 Blanden (Oud-Heverlee)',name:'Blanden (Oud-Heverlee)',zip:'3052'},{label:'3051 Sint-Joris-Weert (Oud-Heverlee)',name:'Sint-Joris-Weert (Oud-Heverlee)',zip:'3051'},{label:'3050 Oud-Heverlee',name:'Oud-Heverlee',zip:'3050'},{label:'3040 Sint-Agatha-Rode (Huldenberg)',name:'Sint-Agatha-Rode (Huldenberg)',zip:'3040'},{label:'3040 Ottenburg (Huldenberg)',name:'Ottenburg (Huldenberg)',zip:'3040'},{label:'3040 Neerijse (Huldenberg)',name:'Neerijse (Huldenberg)',zip:'3040'},{label:'3040 Loonbeek (Huldenberg)',name:'Loonbeek (Huldenberg)',zip:'3040'},{label:'3040 Huldenberg',name:'Huldenberg',zip:'3040'},{label:'3020 Winksele (Herent)',name:'Winksele (Herent)',zip:'3020'},{label:'3020 Veltem-Beisem (Herent)',name:'Veltem-Beisem (Herent)',zip:'3020'},{label:'3020 Herent',name:'Herent',zip:'3020'},{label:'3012 Wilsele (Leuven)',name:'Wilsele (Leuven)',zip:'3012'},{label:'3010 Kessel-Lo (Leuven)',name:'Kessel-Lo (Leuven)',zip:'3010'},{label:'3001 Heverlee (Leuven)',name:'Heverlee (Leuven)',zip:'3001'},{label:'3000 Leuven',name:'Leuven',zip:'3000'},{label:'1982 Weerde (Zemst)',name:'Weerde (Zemst)',zip:'1982'},{label:'1982 Elewijt (Zemst)',name:'Elewijt (Zemst)',zip:'1982'},{label:'1980 Zemst',name:'Zemst',zip:'1980'},{label:'1980 Eppegem (Zemst)',name:'Eppegem (Zemst)',zip:'1980'},{label:'1970 Wezembeek-Oppem',name:'Wezembeek-Oppem',zip:'1970'},{label:'1950 Kraainem',name:'Kraainem',zip:'1950'},{label:'1933 Sterrebeek (Zaventem)',name:'Sterrebeek (Zaventem)',zip:'1933'},{label:'1932 Sint-Stevens-Woluwe (Zaventem)',name:'Sint-Stevens-Woluwe (Zaventem)',zip:'1932'},{label:'1930 Zaventem',name:'Zaventem',zip:'1930'},{label:'1930 Nossegem (Zaventem)',name:'Nossegem (Zaventem)',zip:'1930'},{label:'1910 Nederokkerzeel (Kampenhout)',name:'Nederokkerzeel (Kampenhout)',zip:'1910'},{label:'1910 Kampenhout',name:'Kampenhout',zip:'1910'},{label:'1910 Buken (Kampenhout)',name:'Buken (Kampenhout)',zip:'1910'},{label:'1880 Ramsdonk (Kapelle-Op-Den-Bos)',name:'Ramsdonk (Kapelle-Op-Den-Bos)',zip:'1880'},{label:'1880 Nieuwenrode (Kapelle-Op-Den-Bos)',name:'Nieuwenrode (Kapelle-Op-Den-Bos)',zip:'1880'},{label:'1880 Kapelle-op-den-Bos',name:'Kapelle-op-den-Bos',zip:'1880'},{label:'1861 Wolvertem (Meise)',name:'Wolvertem (Meise)',zip:'1861'},{label:'1860 Meise',name:'Meise',zip:'1860'},{label:'1853 Strombeek-Bever (Grimbergen)',name:'Strombeek-Bever (Grimbergen)',zip:'1853'},{label:'1852 Beigem (Grimbergen)',name:'Beigem (Grimbergen)',zip:'1852'},{label:'1851 Humbeek (Grimbergen)',name:'Humbeek (Grimbergen)',zip:'1851'},{label:'1850 Grimbergen',name:'Grimbergen',zip:'1850'},{label:'1840 Steenhuffel (Londerzeel)',name:'Steenhuffel (Londerzeel)',zip:'1840'},{label:'1840 Malderen (Londerzeel)',name:'Malderen (Londerzeel)',zip:'1840'},{label:'1840 Londerzeel',name:'Londerzeel',zip:'1840'},{label:'1831 Diegem (Machelen)',name:'Diegem (Machelen)',zip:'1831'},{label:'1820 Steenokkerzeel',name:'Steenokkerzeel',zip:'1820'},{label:'1820 Perk (Steenokkerzeel)',name:'Perk (Steenokkerzeel)',zip:'1820'},{label:'1820 Melsbroek (Steenokkerzeel)',name:'Melsbroek (Steenokkerzeel)',zip:'1820'},{label:'1800 Vilvoorde',name:'Vilvoorde',zip:'1800'},{label:'1800 Peutie (Vilvoorde)',name:'Peutie (Vilvoorde)',zip:'1800'},{label:'1790 Teralfene (Affligem)',name:'Teralfene (Affligem)',zip:'1790'},{label:'1790 Hekelgem (Affligem)',name:'Hekelgem (Affligem)',zip:'1790'},{label:'1790 Essene (Affligem)',name:'Essene (Affligem)',zip:'1790'},{label:'1790 Affligem',name:'Affligem',zip:'1790'},{label:'1785 Merchtem',name:'Merchtem',zip:'1785'},{label:'1785 Brussegem (Merchtem)',name:'Brussegem (Merchtem)',zip:'1785'},{label:'1780 Wemmel',name:'Wemmel',zip:'1780'},{label:'1770 Liedekerke',name:'Liedekerke',zip:'1770'},{label:'1761 Borchtlombeek (Roosdaal)',name:'Borchtlombeek (Roosdaal)',zip:'1761'},{label:'1760 Strijtem (Roosdaal)',name:'Strijtem (Roosdaal)',zip:'1760'},{label:'1760 Roosdaal',name:'Roosdaal',zip:'1760'},{label:'1760 Pamel (Roosdaal)',name:'Pamel (Roosdaal)',zip:'1760'},{label:'1760 Onze-Lieve-Vrouw-Lombeek (Roosdaal)',name:'Onze-Lieve-Vrouw-Lombeek (Roosdaal)',zip:'1760'},{label:'1755 Oetingen (Pajottegem)',name:'Oetingen (Pajottegem)',zip:'1755'},{label:'1755 Leerbeek (Pajottegem)',name:'Leerbeek (Pajottegem)',zip:'1755'},{label:'1755 Kester (Pajottegem)',name:'Kester (Pajottegem)',zip:'1755'},{label:'1755 Pajottegem',name:'Pajottegem',zip:'1755'},{label:'1755 Gooik (Pajottegem)',name:'Gooik (Pajottegem)',zip:'1755'},{label:'1750 Sint-Martens-Lennik (Lennik)',name:'Sint-Martens-Lennik (Lennik)',zip:'1750'},{label:'1750 Sint-Kwintens-Lennik (Lennik)',name:'Sint-Kwintens-Lennik (Lennik)',zip:'1750'},{label:'1750 Lennik',name:'Lennik',zip:'1750'},{label:'1750 Gaasbeek (Lennik)',name:'Gaasbeek (Lennik)',zip:'1750'},{label:'1745 Opwijk',name:'Opwijk',zip:'1745'},{label:'1745 Mazenzele (Opwijk)',name:'Mazenzele (Opwijk)',zip:'1745'},{label:'1742 Sint-Katherina-Lombeek (Ternat)',name:'Sint-Katherina-Lombeek (Ternat)',zip:'1742'},{label:'1741 Wambeek (Ternat)',name:'Wambeek (Ternat)',zip:'1741'},{label:'1740 Ternat',name:'Ternat',zip:'1740'},{label:'1731 Zellik (Asse)',name:'Zellik (Asse)',zip:'1731'},{label:'1731 Relegem (Asse)',name:'Relegem (Asse)',zip:'1731'},{label:'1730 Mollem (Asse)',name:'Mollem (Asse)',zip:'1730'},{label:'1730 Kobbegem (Asse)',name:'Kobbegem (Asse)',zip:'1730'},{label:'1730 Bekkerzeel (Asse)',name:'Bekkerzeel (Asse)',zip:'1730'},{label:'1730 Asse',name:'Asse',zip:'1730'},{label:'1703 Schepdaal (Dilbeek)',name:'Schepdaal (Dilbeek)',zip:'1703'},{label:'1702 Groot-Bijgaarden (Dilbeek)',name:'Groot-Bijgaarden (Dilbeek)',zip:'1702'},{label:'1701 Itterbeek (Dilbeek)',name:'Itterbeek (Dilbeek)',zip:'1701'},{label:'1700 Sint-Ulriks-Kapelle (Dilbeek)',name:'Sint-Ulriks-Kapelle (Dilbeek)',zip:'1700'},{label:'1700 Sint-Martens-Bodegem (Dilbeek)',name:'Sint-Martens-Bodegem (Dilbeek)',zip:'1700'},{label:'1700 Dilbeek',name:'Dilbeek',zip:'1700'},{label:'1674 Bellingen (Pepingen)',name:'Bellingen (Pepingen)',zip:'1674'},{label:'1673 Beert (Pepingen)',name:'Beert (Pepingen)',zip:'1673'},{label:'1671 Elingen (Pepingen)',name:'Elingen (Pepingen)',zip:'1671'},{label:'1670 Pepingen',name:'Pepingen',zip:'1670'},{label:'1670 Heikruis (Pepingen)',name:'Heikruis (Pepingen)',zip:'1670'},{label:'1670 Bogaarden (Pepingen)',name:'Bogaarden (Pepingen)',zip:'1670'},{label:'1654 Huizingen (Beersel)',name:'Huizingen (Beersel)',zip:'1654'},{label:'1653 Dworp (Beersel)',name:'Dworp (Beersel)',zip:'1653'},{label:'1652 Alsemberg (Beersel)',name:'Alsemberg (Beersel)',zip:'1652'},{label:'1651 Lot (Beersel)',name:'Lot (Beersel)',zip:'1651'},{label:'1650 Beersel',name:'Beersel',zip:'1650'},{label:'1630 Linkebeek',name:'Linkebeek',zip:'1630'},{label:'1620 Drogenbos',name:'Drogenbos',zip:'1620'},{label:'1602 Vlezenbeek (Sint-Pieters-Leeuw)',name:'Vlezenbeek (Sint-Pieters-Leeuw)',zip:'1602'},{label:'1600 Sint-Pieters-Leeuw',name:'Sint-Pieters-Leeuw',zip:'1600'},{label:'1600 Sint-Laureins-Berchem (Sint-Pieters-Leeuw)',name:'Sint-Laureins-Berchem (Sint-Pieters-Leeuw)',zip:'1600'},{label:'1600 Oudenaken (Sint-Pieters-Leeuw)',name:'Oudenaken (Sint-Pieters-Leeuw)',zip:'1600'},{label:'1570 Vollezele (Pajottegem)',name:'Vollezele (Pajottegem)',zip:'1570'},{label:'1570 Tollembeek (Pajottegem)',name:'Tollembeek (Pajottegem)',zip:'1570'},{label:'1570 Galmaarden (Pajottegem)',name:'Galmaarden (Pajottegem)',zip:'1570'},{label:'1560 Hoeilaart',name:'Hoeilaart',zip:'1560'},{label:'1540 Herne (Pajottegem)',name:'Herne (Pajottegem)',zip:'1540'},{label:'1540 Herfelingen (Pajottegem)',name:'Herfelingen (Pajottegem)',zip:'1540'},{label:'1502 Lembeek (Halle)',name:'Lembeek (Halle)',zip:'1502'},{label:'1501 Buizingen (Halle)',name:'Buizingen (Halle)',zip:'1501'},{label:'1500 Halle',name:'Halle',zip:'1500'},{label:'9992 Middelburg (Maldegem)',name:'Middelburg (Maldegem)',zip:'9992'},{label:'9991 Adegem (Maldegem)',name:'Adegem (Maldegem)',zip:'9991'},{label:'9990 Maldegem',name:'Maldegem',zip:'9990'},{label:'9988 Watervliet (Sint-Laureins)',name:'Watervliet (Sint-Laureins)',zip:'9988'},{label:'9988 Waterland-Oudeman (Sint-Laureins)',name:'Waterland-Oudeman (Sint-Laureins)',zip:'9988'},{label:'9982 Sint-Jan-In-Eremo (Sint-Laureins)',name:'Sint-Jan-In-Eremo (Sint-Laureins)',zip:'9982'},{label:'9981 Sint-Margriete (Sint-Laureins)',name:'Sint-Margriete (Sint-Laureins)',zip:'9981'},{label:'9980 Sint-Laureins',name:'Sint-Laureins',zip:'9980'},{label:'9971 Lembeke (Kaprijke)',name:'Lembeke (Kaprijke)',zip:'9971'},{label:'9970 Kaprijke',name:'Kaprijke',zip:'9970'},{label:'9968 Oosteeklo (Assenede)',name:'Oosteeklo (Assenede)',zip:'9968'},{label:'9968 Bassevelde (Assenede)',name:'Bassevelde (Assenede)',zip:'9968'},{label:'9961 Boekhoute (Assenede)',name:'Boekhoute (Assenede)',zip:'9961'},{label:'9960 Assenede',name:'Assenede',zip:'9960'},{label:'9950 Waarschoot (Lievegem)',name:'Waarschoot (Lievegem)',zip:'9950'},{label:'9940 Sleidinge (Evergem)',name:'Sleidinge (Evergem)',zip:'9940'},{label:'9940 Kluizen (Evergem)',name:'Kluizen (Evergem)',zip:'9940'},{label:'9940 Evergem',name:'Evergem',zip:'9940'},{label:'9940 Ertvelde (Evergem)',name:'Ertvelde (Evergem)',zip:'9940'},{label:'9932 Ronsele (Lievegem)',name:'Ronsele (Lievegem)',zip:'9932'},{label:'9931 Oostwinkel (Lievegem)',name:'Oostwinkel (Lievegem)',zip:'9931'},{label:'9930 Zomergem (Lievegem)',name:'Zomergem (Lievegem)',zip:'9930'},{label:'9921 Vinderhoute (Lievegem)',name:'Vinderhoute (Lievegem)',zip:'9921'},{label:'9920 Lovendegem (Lievegem)',name:'Lovendegem (Lievegem)',zip:'9920'},{label:'9910 Ursel (Aalter)',name:'Ursel (Aalter)',zip:'9910'},{label:'9910 Knesselare (Aalter)',name:'Knesselare (Aalter)',zip:'9910'},{label:'9900 Eeklo',name:'Eeklo',zip:'9900'},{label:'9890 Vurste (Gavere)',name:'Vurste (Gavere)',zip:'9890'},{label:'9890 Semmerzake (Gavere)',name:'Semmerzake (Gavere)',zip:'9890'},{label:'9890 Gavere',name:'Gavere',zip:'9890'},{label:'9890 Dikkelvenne (Gavere)',name:'Dikkelvenne (Gavere)',zip:'9890'},{label:'9890 Baaigem (Gavere)',name:'Baaigem (Gavere)',zip:'9890'},{label:'9890 Asper (Gavere)',name:'Asper (Gavere)',zip:'9890'},{label:'9881 Bellem (Aalter)',name:'Bellem (Aalter)',zip:'9881'},{label:'9880 Poeke (Aalter)',name:'Poeke (Aalter)',zip:'9880'},{label:'9880 Lotenhulle (Aalter)',name:'Lotenhulle (Aalter)',zip:'9880'},{label:'9880 Aalter',name:'Aalter',zip:'9880'},{label:'9870 Zulte',name:'Zulte',zip:'9870'},{label:'9870 Olsene (Zulte)',name:'Olsene (Zulte)',zip:'9870'},{label:'9860 Scheldewindeke (Oosterzele)',name:'Scheldewindeke (Oosterzele)',zip:'9860'},{label:'9860 Oosterzele',name:'Oosterzele',zip:'9860'},{label:'9860 Moortsele (Oosterzele)',name:'Moortsele (Oosterzele)',zip:'9860'},{label:'9860 Landskouter (Oosterzele)',name:'Landskouter (Oosterzele)',zip:'9860'},{label:'9860 Gijzenzele (Oosterzele)',name:'Gijzenzele (Oosterzele)',zip:'9860'},{label:'9860 Balegem (Oosterzele)',name:'Balegem (Oosterzele)',zip:'9860'},{label:'9850 Vosselare (Deinze)',name:'Vosselare (Deinze)',zip:'9850'},{label:'9850 Poesele (Deinze)',name:'Poesele (Deinze)',zip:'9850'},{label:'9850 Nevele (Deinze)',name:'Nevele (Deinze)',zip:'9850'},{label:'9850 Merendree (Deinze)',name:'Merendree (Deinze)',zip:'9850'},{label:'9850 Landegem (Deinze)',name:'Landegem (Deinze)',zip:'9850'},{label:'9850 Hansbeke (Deinze)',name:'Hansbeke (Deinze)',zip:'9850'},{label:'9840 Zevergem (Nazareth-De Pinte)',name:'Zevergem (Nazareth-De Pinte)',zip:'9840'},{label:'9831 Deurle (Sint-Martens-Latem)',name:'Deurle (Sint-Martens-Latem)',zip:'9831'},{label:'9830 Sint-Martens-Latem',name:'Sint-Martens-Latem',zip:'9830'},{label:'9820 Schelderode (Merelbeke-Melle)',name:'Schelderode (Merelbeke-Melle)',zip:'9820'},{label:'9820 Munte (Merelbeke-Melle)',name:'Munte (Merelbeke-Melle)',zip:'9820'},{label:'9820 Merelbeke',name:'Merelbeke',zip:'9820'},{label:'9820 Merelbeke (Merelbeke-Melle)',name:'Merelbeke (Merelbeke-Melle)',zip:'9820'},{label:'9820 Melsen (Merelbeke-Melle)',name:'Melsen (Merelbeke-Melle)',zip:'9820'},{label:'9820 Lemberge (Merelbeke-Melle)',name:'Lemberge (Merelbeke-Melle)',zip:'9820'},{label:'9820 Bottelare (Merelbeke-Melle)',name:'Bottelare (Merelbeke-Melle)',zip:'9820'},{label:'9810 Nazareth',name:'Nazareth',zip:'9810'},{label:'9810 Nazareth (Nazareth-De Pinte)',name:'Nazareth (Nazareth-De Pinte)',zip:'9810'},{label:'9810 Eke (Nazareth-De Pinte)',name:'Eke (Nazareth-De Pinte)',zip:'9810'},{label:'9800 Zeveren (Deinze)',name:'Zeveren (Deinze)',zip:'9800'},{label:'9800 Wontergem (Deinze)',name:'Wontergem (Deinze)',zip:'9800'},{label:'9800 Vinkt (Deinze)',name:'Vinkt (Deinze)',zip:'9800'},{label:'9800 Sint-Martens-Leerne (Deinze)',name:'Sint-Martens-Leerne (Deinze)',zip:'9800'},{label:'9800 Petegem-Aan-De-Leie (Deinze)',name:'Petegem-Aan-De-Leie (Deinze)',zip:'9800'},{label:'9800 Meigem (Deinze)',name:'Meigem (Deinze)',zip:'9800'},{label:'9800 Grammene (Deinze)',name:'Grammene (Deinze)',zip:'9800'},{label:'9800 Gottem (Deinze)',name:'Gottem (Deinze)',zip:'9800'},{label:'9800 Deinze',name:'Deinze',zip:'9800'},{label:'9800 Bachte-Maria-Leerne (Deinze)',name:'Bachte-Maria-Leerne (Deinze)',zip:'9800'},{label:'9800 Astene (Deinze)',name:'Astene (Deinze)',zip:'9800'},{label:'9790 Wortegem-Petegem',name:'Wortegem-Petegem',zip:'9790'},{label:'9790 Wortegem (Wortegem-Petegem)',name:'Wortegem (Wortegem-Petegem)',zip:'9790'},{label:'9790 Petegem-Aan-De-Schelde (Wortegem-Petegem)',name:'Petegem-Aan-De-Schelde (Wortegem-Petegem)',zip:'9790'},{label:'9790 Moregem (Wortegem-Petegem)',name:'Moregem (Wortegem-Petegem)',zip:'9790'},{label:'9790 Elsegem (Wortegem-Petegem)',name:'Elsegem (Wortegem-Petegem)',zip:'9790'},{label:'9772 Wannegem-Lede (Kruisem)',name:'Wannegem-Lede (Kruisem)',zip:'9772'},{label:'9771 Nokere (Kruisem)',name:'Nokere (Kruisem)',zip:'9771'},{label:'9770 Kruishoutem (Kruisem)',name:'Kruishoutem (Kruisem)',zip:'9770'},{label:'9750 Zingem (Kruisem)',name:'Zingem (Kruisem)',zip:'9750'},{label:'9750 Ouwegem (Kruisem)',name:'Ouwegem (Kruisem)',zip:'9750'},{label:'9750 Huise (Kruisem)',name:'Huise (Kruisem)',zip:'9750'},{label:'9700 Welden (Oudenaarde)',name:'Welden (Oudenaarde)',zip:'9700'},{label:'9700 Volkegem (Oudenaarde)',name:'Volkegem (Oudenaarde)',zip:'9700'},{label:'9700 Oudenaarde',name:'Oudenaarde',zip:'9700'},{label:'9700 Nederename (Oudenaarde)',name:'Nederename (Oudenaarde)',zip:'9700'},{label:'9700 Mullem (Oudenaarde)',name:'Mullem (Oudenaarde)',zip:'9700'},{label:'9700 Melden (Oudenaarde)',name:'Melden (Oudenaarde)',zip:'9700'},{label:'9700 Mater (Oudenaarde)',name:'Mater (Oudenaarde)',zip:'9700'},{label:'9700 Leupegem (Oudenaarde)',name:'Leupegem (Oudenaarde)',zip:'9700'},{label:'9700 Heurne (Oudenaarde)',name:'Heurne (Oudenaarde)',zip:'9700'},{label:'9700 Ename (Oudenaarde)',name:'Ename (Oudenaarde)',zip:'9700'},{label:'9700 Eine (Oudenaarde)',name:'Eine (Oudenaarde)',zip:'9700'},{label:'9700 Edelare (Oudenaarde)',name:'Edelare (Oudenaarde)',zip:'9700'},{label:'9700 Bevere (Oudenaarde)',name:'Bevere (Oudenaarde)',zip:'9700'},{label:'9690 Zulzeke (Kluisbergen)',name:'Zulzeke (Kluisbergen)',zip:'9690'},{label:'9690 Ruien (Kluisbergen)',name:'Ruien (Kluisbergen)',zip:'9690'},{label:'9690 Kluisbergen',name:'Kluisbergen',zip:'9690'},{label:'9688 Schorisse (Maarkedal)',name:'Schorisse (Maarkedal)',zip:'9688'},{label:'9681 Nukerke (Maarkedal)',name:'Nukerke (Maarkedal)',zip:'9681'},{label:'9680 Maarke-Kerkem (Maarkedal)',name:'Maarke-Kerkem (Maarkedal)',zip:'9680'},{label:'9680 Maarkedal',name:'Maarkedal',zip:'9680'},{label:'9680 Etikhove (Maarkedal)',name:'Etikhove (Maarkedal)',zip:'9680'},{label:'9667 Sint-Maria-Horebeke (Horebeke)',name:'Sint-Maria-Horebeke (Horebeke)',zip:'9667'},{label:'9667 Sint-Kornelis-Horebeke (Horebeke)',name:'Sint-Kornelis-Horebeke (Horebeke)',zip:'9667'},{label:'9667 Horebeke',name:'Horebeke',zip:'9667'},{label:'9661 Parike (Brakel)',name:'Parike (Brakel)',zip:'9661'},{label:'9660 Zegelsem (Brakel)',name:'Zegelsem (Brakel)',zip:'9660'},{label:'9660 Opbrakel (Brakel)',name:'Opbrakel (Brakel)',zip:'9660'},{label:'9660 Nederbrakel (Brakel)',name:'Nederbrakel (Brakel)',zip:'9660'},{label:'9660 Michelbeke (Brakel)',name:'Michelbeke (Brakel)',zip:'9660'},{label:'9660 Everbeek (Brakel)',name:'Everbeek (Brakel)',zip:'9660'},{label:'9660 Elst (Brakel)',name:'Elst (Brakel)',zip:'9660'},{label:'9660 Brakel',name:'Brakel',zip:'9660'},{label:'9636 Nederzwalm-Hermelgem (Zwalm)',name:'Nederzwalm-Hermelgem (Zwalm)',zip:'9636'},{label:'9630 Zwalm',name:'Zwalm',zip:'9630'},{label:'9630 Sint-Maria-Latem (Zwalm)',name:'Sint-Maria-Latem (Zwalm)',zip:'9630'},{label:'9630 Sint-Denijs-Boekel (Zwalm)',name:'Sint-Denijs-Boekel (Zwalm)',zip:'9630'},{label:'9630 Sint-Blasius-Boekel (Zwalm)',name:'Sint-Blasius-Boekel (Zwalm)',zip:'9630'},{label:'9630 Rozebeke (Zwalm)',name:'Rozebeke (Zwalm)',zip:'9630'},{label:'9630 Roborst (Zwalm)',name:'Roborst (Zwalm)',zip:'9630'},{label:'9630 Paulatem (Zwalm)',name:'Paulatem (Zwalm)',zip:'9630'},{label:'9630 Munkzwalm (Zwalm)',name:'Munkzwalm (Zwalm)',zip:'9630'},{label:'9630 Meilegem (Zwalm)',name:'Meilegem (Zwalm)',zip:'9630'},{label:'9630 Hundelgem (Zwalm)',name:'Hundelgem (Zwalm)',zip:'9630'},{label:'9630 Dikkele (Zwalm)',name:'Dikkele (Zwalm)',zip:'9630'},{label:'9630 Beerlegem (Zwalm)',name:'Beerlegem (Zwalm)',zip:'9630'},{label:'9620 Zottegem',name:'Zottegem',zip:'9620'},{label:'9620 Velzeke-Ruddershove (Zottegem)',name:'Velzeke-Ruddershove (Zottegem)',zip:'9620'},{label:'9620 Strijpen (Zottegem)',name:'Strijpen (Zottegem)',zip:'9620'},{label:'9620 Sint-Goriks-Oudenhove (Zottegem)',name:'Sint-Goriks-Oudenhove (Zottegem)',zip:'9620'},{label:'9620 Leeuwergem (Zottegem)',name:'Leeuwergem (Zottegem)',zip:'9620'},{label:'9620 Grotenberge (Zottegem)',name:'Grotenberge (Zottegem)',zip:'9620'},{label:'9620 Godveerdegem (Zottegem)',name:'Godveerdegem (Zottegem)',zip:'9620'},{label:'9620 Erwetegem (Zottegem)',name:'Erwetegem (Zottegem)',zip:'9620'},{label:'9620 Elene (Zottegem)',name:'Elene (Zottegem)',zip:'9620'},{label:'9690 Kwaremont (Kluisbergen)',name:'Kwaremont (Kluisbergen)',zip:'9690'},{label:'9572 Sint-Martens-Lierde (Lierde)',name:'Sint-Martens-Lierde (Lierde)',zip:'9572'},{label:'9571 Hemelveerdegem (Lierde)',name:'Hemelveerdegem (Lierde)',zip:'9571'},{label:'9570 Sint-Maria-Lierde (Lierde)',name:'Sint-Maria-Lierde (Lierde)',zip:'9570'},{label:'9570 Lierde',name:'Lierde',zip:'9570'},{label:'9570 Deftinge (Lierde)',name:'Deftinge (Lierde)',zip:'9570'},{label:'9552 Borsbeke (Herzele)',name:'Borsbeke (Herzele)',zip:'9552'},{label:'9551 Ressegem (Herzele)',name:'Ressegem (Herzele)',zip:'9551'},{label:'9550 Woubrechtegem (Herzele)',name:'Woubrechtegem (Herzele)',zip:'9550'},{label:'9550 Steenhuize-Wijnhuize (Herzele)',name:'Steenhuize-Wijnhuize (Herzele)',zip:'9550'},{label:'9550 Sint-Lievens-Esse (Herzele)',name:'Sint-Lievens-Esse (Herzele)',zip:'9550'},{label:'9550 Sint-Antelinks (Herzele)',name:'Sint-Antelinks (Herzele)',zip:'9550'},{label:'9550 Hillegem (Herzele)',name:'Hillegem (Herzele)',zip:'9550'},{label:'9550 Herzele',name:'Herzele',zip:'9550'},{label:'9521 Letterhoutem (Sint-Lievens-Houtem)',name:'Letterhoutem (Sint-Lievens-Houtem)',zip:'9521'},{label:'9520 Zonnegem (Sint-Lievens-Houtem)',name:'Zonnegem (Sint-Lievens-Houtem)',zip:'9520'},{label:'9520 Vlierzele (Sint-Lievens-Houtem)',name:'Vlierzele (Sint-Lievens-Houtem)',zip:'9520'},{label:'9520 Sint-Lievens-Houtem',name:'Sint-Lievens-Houtem',zip:'9520'},{label:'9520 Bavegem (Sint-Lievens-Houtem)',name:'Bavegem (Sint-Lievens-Houtem)',zip:'9520'},{label:'9506 Zandbergen (Geraardsbergen)',name:'Zandbergen (Geraardsbergen)',zip:'9506'},{label:'9506 Waarbeke (Geraardsbergen)',name:'Waarbeke (Geraardsbergen)',zip:'9506'},{label:'9506 Smeerebbe-Vloerzegem (Geraardsbergen)',name:'Smeerebbe-Vloerzegem (Geraardsbergen)',zip:'9506'},{label:'9506 Schendelbeke (Geraardsbergen)',name:'Schendelbeke (Geraardsbergen)',zip:'9506'},{label:'9506 Nieuwenhove (Geraardsbergen)',name:'Nieuwenhove (Geraardsbergen)',zip:'9506'},{label:'9506 Idegem (Geraardsbergen)',name:'Idegem (Geraardsbergen)',zip:'9506'},{label:'9506 Grimminge (Geraardsbergen)',name:'Grimminge (Geraardsbergen)',zip:'9506'},{label:'9500 Zarlardinge (Geraardsbergen)',name:'Zarlardinge (Geraardsbergen)',zip:'9500'},{label:'9500 Viane (Geraardsbergen)',name:'Viane (Geraardsbergen)',zip:'9500'},{label:'9500 Overboelare (Geraardsbergen)',name:'Overboelare (Geraardsbergen)',zip:'9500'},{label:'9500 Ophasselt (Geraardsbergen)',name:'Ophasselt (Geraardsbergen)',zip:'9500'},{label:'9500 Onkerzele (Geraardsbergen)',name:'Onkerzele (Geraardsbergen)',zip:'9500'},{label:'9500 Nederboelare (Geraardsbergen)',name:'Nederboelare (Geraardsbergen)',zip:'9500'},{label:'9500 Moerbeke (Geraardsbergen)',name:'Moerbeke (Geraardsbergen)',zip:'9500'},{label:'9500 Goeferdinge (Geraardsbergen)',name:'Goeferdinge (Geraardsbergen)',zip:'9500'},{label:'9500 Geraardsbergen',name:'Geraardsbergen',zip:'9500'},{label:'9473 Welle (Denderleeuw)',name:'Welle (Denderleeuw)',zip:'9473'},{label:'9472 Iddergem (Denderleeuw)',name:'Iddergem (Denderleeuw)',zip:'9472'},{label:'9470 Denderleeuw',name:'Denderleeuw',zip:'9470'},{label:'9451 Kerksken (Haaltert)',name:'Kerksken (Haaltert)',zip:'9451'},{label:'9450 Heldergem (Haaltert)',name:'Heldergem (Haaltert)',zip:'9450'},{label:'9450 Haaltert',name:'Haaltert',zip:'9450'},{label:'9450 Denderhoutem (Haaltert)',name:'Denderhoutem (Haaltert)',zip:'9450'},{label:'9420 Vlekkem (Erpe-Mere)',name:'Vlekkem (Erpe-Mere)',zip:'9420'},{label:'9420 Ottergem (Erpe-Mere)',name:'Ottergem (Erpe-Mere)',zip:'9420'},{label:'9420 Mere (Erpe-Mere)',name:'Mere (Erpe-Mere)',zip:'9420'},{label:'9420 Erpe-Mere',name:'Erpe-Mere',zip:'9420'},{label:'9420 Erpe (Erpe-Mere)',name:'Erpe (Erpe-Mere)',zip:'9420'},{label:'9420 Erondegem (Erpe-Mere)',name:'Erondegem (Erpe-Mere)',zip:'9420'},{label:'9420 Burst (Erpe-Mere)',name:'Burst (Erpe-Mere)',zip:'9420'},{label:'9420 Bambrugge (Erpe-Mere)',name:'Bambrugge (Erpe-Mere)',zip:'9420'},{label:'9420 Aaigem (Erpe-Mere)',name:'Aaigem (Erpe-Mere)',zip:'9420'},{label:'9406 Outer (Ninove)',name:'Outer (Ninove)',zip:'9406'},{label:'9404 Aspelare (Ninove)',name:'Aspelare (Ninove)',zip:'9404'},{label:'9403 Neigem (Ninove)',name:'Neigem (Ninove)',zip:'9403'},{label:'9402 Meerbeke (Ninove)',name:'Meerbeke (Ninove)',zip:'9402'},{label:'9401 Pollare (Ninove)',name:'Pollare (Ninove)',zip:'9401'},{label:'9400 Voorde (Ninove)',name:'Voorde (Ninove)',zip:'9400'},{label:'9400 Okegem (Ninove)',name:'Okegem (Ninove)',zip:'9400'},{label:'9400 Ninove',name:'Ninove',zip:'9400'},{label:'9400 Nederhasselt (Ninove)',name:'Nederhasselt (Ninove)',zip:'9400'},{label:'9400 Lieferinge (Ninove)',name:'Lieferinge (Ninove)',zip:'9400'},{label:'9400 Denderwindeke (Ninove)',name:'Denderwindeke (Ninove)',zip:'9400'},{label:'9400 Appelterre-Eichem (Ninove)',name:'Appelterre-Eichem (Ninove)',zip:'9400'},{label:'9340 Wanzele (Lede)',name:'Wanzele (Lede)',zip:'9340'},{label:'9340 Smetlede (Lede)',name:'Smetlede (Lede)',zip:'9340'},{label:'9340 Oordegem (Lede)',name:'Oordegem (Lede)',zip:'9340'},{label:'9340 Lede',name:'Lede',zip:'9340'},{label:'9340 Impe (Lede)',name:'Impe (Lede)',zip:'9340'},{label:'9320 Nieuwerkerken (Aalst)',name:'Nieuwerkerken (Aalst)',zip:'9320'},{label:'9320 Erembodegem (Aalst)',name:'Erembodegem (Aalst)',zip:'9320'},{label:'9310 Moorsel (Aalst)',name:'Moorsel (Aalst)',zip:'9310'},{label:'9310 Herdersem (Aalst)',name:'Herdersem (Aalst)',zip:'9310'},{label:'9310 Baardegem (Aalst)',name:'Baardegem (Aalst)',zip:'9310'},{label:'9308 Gijzegem (Aalst)',name:'Gijzegem (Aalst)',zip:'9308'},{label:'9300 Aalst',name:'Aalst',zip:'9300'},{label:'9290 Uitbergen (Berlare)',name:'Uitbergen (Berlare)',zip:'9290'},{label:'9290 Overmere (Berlare)',name:'Overmere (Berlare)',zip:'9290'},{label:'9290 Berlare',name:'Berlare',zip:'9290'},{label:'9280 Wieze (Lebbeke)',name:'Wieze (Lebbeke)',zip:'9280'},{label:'9280 Lebbeke',name:'Lebbeke',zip:'9280'},{label:'9280 Denderbelle (Lebbeke)',name:'Denderbelle (Lebbeke)',zip:'9280'},{label:'9270 Laarne',name:'Laarne',zip:'9270'},{label:'9270 Kalken (Laarne)',name:'Kalken (Laarne)',zip:'9270'},{label:'9260 Wichelen',name:'Wichelen',zip:'9260'},{label:'9260 Serskamp (Wichelen)',name:'Serskamp (Wichelen)',zip:'9260'},{label:'9260 Schellebelle (Wichelen)',name:'Schellebelle (Wichelen)',zip:'9260'},{label:'9255 Opdorp (Buggenhout)',name:'Opdorp (Buggenhout)',zip:'9255'},{label:'9255 Buggenhout',name:'Buggenhout',zip:'9255'},{label:'9250 Waasmunster',name:'Waasmunster',zip:'9250'},{label:'9240 Zele',name:'Zele',zip:'9240'},{label:'9230 Wetteren',name:'Wetteren',zip:'9230'},{label:'9230 Westrem (Wetteren)',name:'Westrem (Wetteren)',zip:'9230'},{label:'9230 Massemen (Wetteren)',name:'Massemen (Wetteren)',zip:'9230'},{label:'9220 Moerzeke (Hamme)',name:'Moerzeke (Hamme)',zip:'9220'},{label:'9200 Schoonaarde (Dendermonde)',name:'Schoonaarde (Dendermonde)',zip:'9200'},{label:'9200 Oudegem (Dendermonde)',name:'Oudegem (Dendermonde)',zip:'9200'},{label:'9200 Mespelare (Dendermonde)',name:'Mespelare (Dendermonde)',zip:'9200'},{label:'9200 Grembergen (Dendermonde)',name:'Grembergen (Dendermonde)',zip:'9200'},{label:'9200 Dendermonde',name:'Dendermonde',zip:'9200'},{label:'9200 Baasrode (Dendermonde)',name:'Baasrode (Dendermonde)',zip:'9200'},{label:'9200 Appels (Dendermonde)',name:'Appels (Dendermonde)',zip:'9200'},{label:'9190 Stekene',name:'Stekene',zip:'9190'},{label:'9190 Kemzeke (Stekene)',name:'Kemzeke (Stekene)',zip:'9190'},{label:'9185 Wachtebeke (Lochristi)',name:'Wachtebeke (Lochristi)',zip:'9185'},{label:'9180 Moerbeke-Waas (Lokeren)',name:'Moerbeke-Waas (Lokeren)',zip:'9180'},{label:'9170 Sint-Pauwels (Sint-Gillis-Waas)',name:'Sint-Pauwels (Sint-Gillis-Waas)',zip:'9170'},{label:'9170 Sint-Gillis-Waas',name:'Sint-Gillis-Waas',zip:'9170'},{label:'9170 Meerdonk (Sint-Gillis-Waas)',name:'Meerdonk (Sint-Gillis-Waas)',zip:'9170'},{label:'9160 Lokeren',name:'Lokeren',zip:'9160'},{label:'9160 Eksaarde (Lokeren)',name:'Eksaarde (Lokeren)',zip:'9160'},{label:'9160 Daknam (Lokeren)',name:'Daknam (Lokeren)',zip:'9160'},{label:'9150 Rupelmonde (Beveren-Kruibeke-Zwijndrecht)',name:'Rupelmonde (Beveren-Kruibeke-Zwijndrecht)',zip:'9150'},{label:'9150 Kruibeke',name:'Kruibeke',zip:'9150'},{label:'9150 Bazel (Beveren-Kruibeke-Zwijndrecht)',name:'Bazel (Beveren-Kruibeke-Zwijndrecht)',zip:'9150'},{label:'9140 Tielrode (Temse)',name:'Tielrode (Temse)',zip:'9140'},{label:'9140 Temse',name:'Temse',zip:'9140'},{label:'9140 Steendorp (Temse)',name:'Steendorp (Temse)',zip:'9140'},{label:'9140 Elversele (Temse)',name:'Elversele (Temse)',zip:'9140'},{label:'9130 Verrebroek (Beveren-Kruibeke-Zwijndrecht)',name:'Verrebroek (Beveren-Kruibeke-Zwijndrecht)',zip:'9130'},{label:'9130 Kieldrecht (Beveren-Kruibeke-Zwijndrecht)',name:'Kieldrecht (Beveren-Kruibeke-Zwijndrecht)',zip:'9130'},{label:'9130 Doel (Beveren-Kruibeke-Zwijndrecht)',name:'Doel (Beveren-Kruibeke-Zwijndrecht)',zip:'9130'},{label:'9120 Vrasene (Beveren-Kruibeke-Zwijndrecht)',name:'Vrasene (Beveren-Kruibeke-Zwijndrecht)',zip:'9120'},{label:'9120 Melsele (Beveren-Kruibeke-Zwijndrecht)',name:'Melsele (Beveren-Kruibeke-Zwijndrecht)',zip:'9120'},{label:'9120 Haasdonk (Beveren-Kruibeke-Zwijndrecht)',name:'Haasdonk (Beveren-Kruibeke-Zwijndrecht)',zip:'9120'},{label:'9112 Sinaai-Waas (Sint-Niklaas)',name:'Sinaai-Waas (Sint-Niklaas)',zip:'9112'},{label:'9111 Belsele (Sint-Niklaas)',name:'Belsele (Sint-Niklaas)',zip:'9111'},{label:'9100 Sint-Niklaas',name:'Sint-Niklaas',zip:'9100'},{label:'9100 Nieuwkerken-Waas (Sint-Niklaas)',name:'Nieuwkerken-Waas (Sint-Niklaas)',zip:'9100'},{label:'9090 Melle (Merelbeke-Melle)',name:'Melle (Merelbeke-Melle)',zip:'9090'},{label:'9090 Gontrode (Merelbeke-Melle)',name:'Gontrode (Merelbeke-Melle)',zip:'9090'},{label:'9080 Zeveneken (Lochristi)',name:'Zeveneken (Lochristi)',zip:'9080'},{label:'9080 Zaffelare (Lochristi)',name:'Zaffelare (Lochristi)',zip:'9080'},{label:'9080 Lochristi',name:'Lochristi',zip:'9080'},{label:'9080 Beervelde (Lochristi)',name:'Beervelde (Lochristi)',zip:'9080'},{label:'9070 Destelbergen',name:'Destelbergen',zip:'9070'},{label:'9060 Zelzate',name:'Zelzate',zip:'9060'},{label:'9052 Zwijnaarde (Gent)',name:'Zwijnaarde (Gent)',zip:'9052'},{label:'9051 Sint-Denijs-Westrem (Gent)',name:'Sint-Denijs-Westrem (Gent)',zip:'9051'},{label:'9051 Afsnee (Gent)',name:'Afsnee (Gent)',zip:'9051'},{label:'9050 Ledeberg (Gent)',name:'Ledeberg (Gent)',zip:'9050'},{label:'9050 Gentbrugge (Gent)',name:'Gentbrugge (Gent)',zip:'9050'},{label:'9042 Sint-Kruis-Winkel (Gent)',name:'Sint-Kruis-Winkel (Gent)',zip:'9042'},{label:'9042 Mendonk (Gent)',name:'Mendonk (Gent)',zip:'9042'},{label:'9042 Desteldonk',name:'Desteldonk',zip:'9042'},{label:'9041 Oostakker (Gent)',name:'Oostakker (Gent)',zip:'9041'},{label:'9040 Sint-Amandsberg (Gent)',name:'Sint-Amandsberg (Gent)',zip:'9040'},{label:'9032 Wondelgem (Gent)',name:'Wondelgem (Gent)',zip:'9032'},{label:'9031 Drongen (Gent)',name:'Drongen (Gent)',zip:'9031'},{label:'9030 Mariakerke (Gent)',name:'Mariakerke (Gent)',zip:'9030'},{label:'9000 Gent',name:'Gent',zip:'9000'},{label:'3990 Wijchmaal (Peer)',name:'Wijchmaal (Peer)',zip:'3990'},{label:'3990 Peer',name:'Peer',zip:'3990'},{label:'3990 Kleine-Brogel (Peer)',name:'Kleine-Brogel (Peer)',zip:'3990'},{label:'3990 Grote-Brogel (Peer)',name:'Grote-Brogel (Peer)',zip:'3990'},{label:'3980 Tessenderlo (Tessenderlo-Ham)',name:'Tessenderlo (Tessenderlo-Ham)',zip:'3980'},{label:'3971 Heppen (Leopoldsburg)',name:'Heppen (Leopoldsburg)',zip:'3971'},{label:'3970 Leopoldsburg',name:'Leopoldsburg',zip:'3970'},{label:'3960 Opitter (Bree)',name:'Opitter (Bree)',zip:'3960'},{label:'3960 Gerdingen (Bree)',name:'Gerdingen (Bree)',zip:'3960'},{label:'3960 Bree',name:'Bree',zip:'3960'},{label:'3960 Beek (Bree)',name:'Beek (Bree)',zip:'3960'},{label:'3950 Reppel (Bocholt)',name:'Reppel (Bocholt)',zip:'3950'},{label:'3950 Kaulille (Bocholt)',name:'Kaulille (Bocholt)',zip:'3950'},{label:'3950 Bocholt',name:'Bocholt',zip:'3950'},{label:'3945 Oostham (Tessenderlo-Ham)',name:'Oostham (Tessenderlo-Ham)',zip:'3945'},{label:'3945 Kwaadmechelen (Tessenderlo-Ham)',name:'Kwaadmechelen (Tessenderlo-Ham)',zip:'3945'},{label:'3945 Tessenderlo-Ham',name:'Tessenderlo-Ham',zip:'3945'},{label:'3945 Ham (Tessenderlo-Ham)',name:'Ham (Tessenderlo-Ham)',zip:'3945'},{label:'3941 Eksel (Hechtel-Eksel)',name:'Eksel (Hechtel-Eksel)',zip:'3941'},{label:'3940 Hechtel-Eksel',name:'Hechtel-Eksel',zip:'3940'},{label:'3940 Hechtel',name:'Hechtel',zip:'3940'},{label:'3930 Hamont-Achel',name:'Hamont-Achel',zip:'3930'},{label:'3930 Hamont (Hamont-Achel)',name:'Hamont (Hamont-Achel)',zip:'3930'},{label:'3930 Achel (Hamont-Achel)',name:'Achel (Hamont-Achel)',zip:'3930'},{label:'3920 Lommel',name:'Lommel',zip:'3920'},{label:'3910 Sint-Huibrechts-Lille (Pelt)',name:'Sint-Huibrechts-Lille (Pelt)',zip:'3910'},{label:'3910 Neerpelt (Pelt)',name:'Neerpelt (Pelt)',zip:'3910'},{label:'3900 Overpelt (Pelt)',name:'Overpelt (Pelt)',zip:'3900'},{label:'3891 Mielen-Boven-Aalst (Gingelom)',name:'Mielen-Boven-Aalst (Gingelom)',zip:'3891'},{label:'3891 Buvingen (Gingelom)',name:'Buvingen (Gingelom)',zip:'3891'},{label:'3891 Borlo (Gingelom)',name:'Borlo (Gingelom)',zip:'3891'},{label:'3890 Vorsen (Gingelom)',name:'Vorsen (Gingelom)',zip:'3890'},{label:'3890 Niel-Bij-Sint-Truiden (Gingelom)',name:'Niel-Bij-Sint-Truiden (Gingelom)',zip:'3890'},{label:'3890 Montenaken (Gingelom)',name:'Montenaken (Gingelom)',zip:'3890'},{label:'3890 Kortijs (Gingelom)',name:'Kortijs (Gingelom)',zip:'3890'},{label:'3890 Jeuk (Gingelom)',name:'Jeuk (Gingelom)',zip:'3890'},{label:'3890 Gingelom',name:'Gingelom',zip:'3890'},{label:'3890 Boekhout (Gingelom)',name:'Boekhout (Gingelom)',zip:'3890'},{label:'3870 Veulen (Heers)',name:'Veulen (Heers)',zip:'3870'},{label:'3870 Vechmaal (Heers)',name:'Vechmaal (Heers)',zip:'3870'},{label:'3870 Rukkelingen-Loon (Heers)',name:'Rukkelingen-Loon (Heers)',zip:'3870'},{label:'3870 Opheers (Heers)',name:'Opheers (Heers)',zip:'3870'},{label:'3870 Mettekoven (Heers)',name:'Mettekoven (Heers)',zip:'3870'},{label:'3870 Mechelen-Bovelingen (Heers)',name:'Mechelen-Bovelingen (Heers)',zip:'3870'},{label:'3870 Klein-Gelmen (Heers)',name:'Klein-Gelmen (Heers)',zip:'3870'},{label:'3870 Horpmaal (Heers)',name:'Horpmaal (Heers)',zip:'3870'},{label:'3870 Heks (Heers)',name:'Heks (Heers)',zip:'3870'},{label:'3870 Heers',name:'Heers',zip:'3870'},{label:'3870 Gutschoven (Heers)',name:'Gutschoven (Heers)',zip:'3870'},{label:'3870 Bovelingen (Heers)',name:'Bovelingen (Heers)',zip:'3870'},{label:'3870 Batsheers (Heers)',name:'Batsheers (Heers)',zip:'3870'},{label:'3850 Wijer (Nieuwerkerken)',name:'Wijer (Nieuwerkerken)',zip:'3850'},{label:'3850 Kozen (Nieuwerkerken)',name:'Kozen (Nieuwerkerken)',zip:'3850'},{label:'3850 Binderveld (Nieuwerkerken)',name:'Binderveld (Nieuwerkerken)',zip:'3850'},{label:'3840 Voort (Tongeren-Borgloon)',name:'Voort (Tongeren-Borgloon)',zip:'3840'},{label:'3840 Rijkel (Tongeren-Borgloon)',name:'Rijkel (Tongeren-Borgloon)',zip:'3840'},{label:'3840 Kuttekoven (Tongeren-Borgloon)',name:'Kuttekoven (Tongeren-Borgloon)',zip:'3840'},{label:'3840 Kerniel (Tongeren-Borgloon)',name:'Kerniel (Tongeren-Borgloon)',zip:'3840'},{label:'3840 Hoepertingen (Tongeren-Borgloon)',name:'Hoepertingen (Tongeren-Borgloon)',zip:'3840'},{label:'3840 Hendrieken (Tongeren-Borgloon)',name:'Hendrieken (Tongeren-Borgloon)',zip:'3840'},{label:'3840 Groot-Loon (Tongeren-Borgloon)',name:'Groot-Loon (Tongeren-Borgloon)',zip:'3840'},{label:'3840 Gotem (Tongeren-Borgloon)',name:'Gotem (Tongeren-Borgloon)',zip:'3840'},{label:'3840 Gors-Opleeuw (Tongeren-Borgloon)',name:'Gors-Opleeuw (Tongeren-Borgloon)',zip:'3840'},{label:'3840 Broekom (Tongeren-Borgloon)',name:'Broekom (Tongeren-Borgloon)',zip:'3840'},{label:'3840 Borgloon (Tongeren-Borgloon)',name:'Borgloon (Tongeren-Borgloon)',zip:'3840'},{label:'3832 Ulbeek (Wellen)',name:'Ulbeek (Wellen)',zip:'3832'},{label:'3831 Herten (Wellen)',name:'Herten (Wellen)',zip:'3831'},{label:'3830 Wellen',name:'Wellen',zip:'3830'},{label:'3830 Berlingen (Wellen)',name:'Berlingen (Wellen)',zip:'3830'},{label:'3806 Velm (Sint-Truiden)',name:'Velm (Sint-Truiden)',zip:'3806'},{label:'3803 Wilderen (Sint-Truiden)',name:'Wilderen (Sint-Truiden)',zip:'3803'},{label:'3803 Runkelen (Sint-Truiden)',name:'Runkelen (Sint-Truiden)',zip:'3803'},{label:'3803 Gorsem (Sint-Truiden)',name:'Gorsem (Sint-Truiden)',zip:'3803'},{label:'3803 Duras (Sint-Truiden)',name:'Duras (Sint-Truiden)',zip:'3803'},{label:'3800 Zepperen (Sint-Truiden)',name:'Zepperen (Sint-Truiden)',zip:'3800'},{label:'3800 Sint-Truiden',name:'Sint-Truiden',zip:'3800'},{label:'3800 Ordingen (Sint-Truiden)',name:'Ordingen (Sint-Truiden)',zip:'3800'},{label:'3800 Kerkom-Bij-Sint-Truiden (Sint-Truiden)',name:'Kerkom-Bij-Sint-Truiden (Sint-Truiden)',zip:'3800'},{label:'3800 Halmaal (Sint-Truiden)',name:'Halmaal (Sint-Truiden)',zip:'3800'},{label:'3800 Groot-Gelmen (Sint-Truiden)',name:'Groot-Gelmen (Sint-Truiden)',zip:'3800'},{label:'3800 Gelinden (Sint-Truiden)',name:'Gelinden (Sint-Truiden)',zip:'3800'},{label:'3800 Engelmanshoven (Sint-Truiden)',name:'Engelmanshoven (Sint-Truiden)',zip:'3800'},{label:'3800 Brustem (Sint-Truiden)',name:'Brustem (Sint-Truiden)',zip:'3800'},{label:'3793 Teuven (Voeren)',name:'Teuven (Voeren)',zip:'3793'},{label:'3791 Remersdaal (Voeren)',name:'Remersdaal (Voeren)',zip:'3791'},{label:'3770 Zichen-Zussen-Bolder (Riemst)',name:'Zichen-Zussen-Bolder (Riemst)',zip:'3770'},{label:'3770 Vroenhoven (Riemst)',name:'Vroenhoven (Riemst)',zip:'3770'},{label:'3770 Vlijtingen (Riemst)',name:'Vlijtingen (Riemst)',zip:'3770'},{label:'3770 Val-Meer (Riemst)',name:'Val-Meer (Riemst)',zip:'3770'},{label:'3770 Riemst',name:'Riemst',zip:'3770'},{label:'3770 Millen (Riemst)',name:'Millen (Riemst)',zip:'3770'},{label:'3770 Membruggen (Riemst)',name:'Membruggen (Riemst)',zip:'3770'},{label:'3770 Kanne (Riemst)',name:'Kanne (Riemst)',zip:'3770'},{label:'3770 Herderen (Riemst)',name:'Herderen (Riemst)',zip:'3770'},{label:'3770 Genoelselderen (Riemst)',name:'Genoelselderen (Riemst)',zip:'3770'},{label:'3746 Hoelbeek (Bilzen-Hoeselt)',name:'Hoelbeek (Bilzen-Hoeselt)',zip:'3746'},{label:'3742 Martenslinde (Bilzen-Hoeselt)',name:'Martenslinde (Bilzen-Hoeselt)',zip:'3742'},{label:'3740 Waltwilder (Bilzen-Hoeselt)',name:'Waltwilder (Bilzen-Hoeselt)',zip:'3740'},{label:'3740 Spouwen',name:'Spouwen',zip:'3740'},{label:'3740 Rosmeer (Bilzen-Hoeselt)',name:'Rosmeer (Bilzen-Hoeselt)',zip:'3740'},{label:'3740 Rijkhoven (Bilzen-Hoeselt)',name:'Rijkhoven (Bilzen-Hoeselt)',zip:'3740'},{label:'3740 Munsterbilzen (Bilzen-Hoeselt)',name:'Munsterbilzen (Bilzen-Hoeselt)',zip:'3740'},{label:'3740 Mopertingen (Bilzen-Hoeselt)',name:'Mopertingen (Bilzen-Hoeselt)',zip:'3740'},{label:'3740 Kleine-Spouwen (Bilzen-Hoeselt)',name:'Kleine-Spouwen (Bilzen-Hoeselt)',zip:'3740'},{label:'3740 Hees (Bilzen-Hoeselt)',name:'Hees (Bilzen-Hoeselt)',zip:'3740'},{label:'3740 Grote-Spouwen (Bilzen-Hoeselt)',name:'Grote-Spouwen (Bilzen-Hoeselt)',zip:'3740'},{label:'3740 Eigenbilzen (Bilzen-Hoeselt)',name:'Eigenbilzen (Bilzen-Hoeselt)',zip:'3740'},{label:'3740 Bilzen (Bilzen-Hoeselt)',name:'Bilzen (Bilzen-Hoeselt)',zip:'3740'},{label:'3740 Beverst (Bilzen-Hoeselt)',name:'Beverst (Bilzen-Hoeselt)',zip:'3740'},{label:'3732 Schalkhoven (Bilzen-Hoeselt)',name:'Schalkhoven (Bilzen-Hoeselt)',zip:'3732'},{label:'3730 Werm (Bilzen-Hoeselt)',name:'Werm (Bilzen-Hoeselt)',zip:'3730'},{label:'3730 Sint-Huibrechts-Hern (Bilzen-Hoeselt)',name:'Sint-Huibrechts-Hern (Bilzen-Hoeselt)',zip:'3730'},{label:'3730 Romershoven (Bilzen-Hoeselt)',name:'Romershoven (Bilzen-Hoeselt)',zip:'3730'},{label:'3730 Hoeselt',name:'Hoeselt',zip:'3730'},{label:'3730 Hoeselt (Bilzen-Hoeselt)',name:'Hoeselt (Bilzen-Hoeselt)',zip:'3730'},{label:'3724 Vliermaal (Hasselt)',name:'Vliermaal (Hasselt)',zip:'3724'},{label:'3723 Guigoven (Hasselt)',name:'Guigoven (Hasselt)',zip:'3723'},{label:'3722 Wintershoven (Hasselt)',name:'Wintershoven (Hasselt)',zip:'3722'},{label:'3721 Vliermaalroot (Hasselt)',name:'Vliermaalroot (Hasselt)',zip:'3721'},{label:'3720 Kortessem (Hasselt)',name:'Kortessem (Hasselt)',zip:'3720'},{label:'3717 Herstappe',name:'Herstappe',zip:'3717'},{label:'3700 Vreren (Tongeren-Borgloon)',name:'Vreren (Tongeren-Borgloon)',zip:'3700'},{label:'3700 Tongeren-Borgloon',name:'Tongeren-Borgloon',zip:'3700'},{label:'3700 Tongeren',name:'Tongeren',zip:'3700'},{label:'3700 Sluizen (Tongeren-Borgloon)',name:'Sluizen (Tongeren-Borgloon)',zip:'3700'},{label:'3700 Rutten (Tongeren-Borgloon)',name:'Rutten (Tongeren-Borgloon)',zip:'3700'},{label:'3700 Riksingen (Tongeren-Borgloon)',name:'Riksingen (Tongeren-Borgloon)',zip:'3700'},{label:'3700 Nerem (Tongeren-Borgloon)',name:'Nerem (Tongeren-Borgloon)',zip:'3700'},{label:'3700 Neerrepen (Tongeren-Borgloon)',name:'Neerrepen (Tongeren-Borgloon)',zip:'3700'},{label:'3700 Mal (Tongeren-Borgloon)',name:'Mal (Tongeren-Borgloon)',zip:'3700'},{label:'3700 Lauw (Tongeren-Borgloon)',name:'Lauw (Tongeren-Borgloon)',zip:'3700'},{label:'3700 Koninksem (Tongeren-Borgloon)',name:'Koninksem (Tongeren-Borgloon)',zip:'3700'},{label:'3700 Henis (Tongeren-Borgloon)',name:'Henis (Tongeren-Borgloon)',zip:'3700'},{label:'3700 Diets-Heur (Tongeren-Borgloon)',name:'Diets-Heur (Tongeren-Borgloon)',zip:'3700'},{label:'3690 Zutendaal',name:'Zutendaal',zip:'3690'},{label:'3680 Opoeteren (Maaseik)',name:'Opoeteren (Maaseik)',zip:'3680'},{label:'3680 Neeroeteren (Maaseik)',name:'Neeroeteren (Maaseik)',zip:'3680'},{label:'3680 Maaseik',name:'Maaseik',zip:'3680'},{label:'3670 Wijshagen (Oudsbergen)',name:'Wijshagen (Oudsbergen)',zip:'3670'},{label:'3670 Neerglabbeek (Oudsbergen)',name:'Neerglabbeek (Oudsbergen)',zip:'3670'},{label:'3670 Meeuwen-Gruitrode (Oudsbergen)',name:'Meeuwen-Gruitrode (Oudsbergen)',zip:'3670'},{label:'3670 Meeuwen (Oudsbergen)',name:'Meeuwen (Oudsbergen)',zip:'3670'},{label:'3670 Gruitrode (Oudsbergen)',name:'Gruitrode (Oudsbergen)',zip:'3670'},{label:'3670 Ellikom (Oudsbergen)',name:'Ellikom (Oudsbergen)',zip:'3670'},{label:'3668 Niel-Bij-As (As)',name:'Niel-Bij-As (As)',zip:'3668'},{label:'3665 As',name:'As',zip:'3665'},{label:'3660 Opglabbeek (Oudsbergen)',name:'Opglabbeek (Oudsbergen)',zip:'3660'},{label:'3650 Rotem (Dilsen-Stokkem)',name:'Rotem (Dilsen-Stokkem)',zip:'3650'},{label:'3650 Lanklaar (Dilsen-Stokkem)',name:'Lanklaar (Dilsen-Stokkem)',zip:'3650'},{label:'3650 Elen (Dilsen-Stokkem)',name:'Elen (Dilsen-Stokkem)',zip:'3650'},{label:'3650 Dilsen-Stokkem',name:'Dilsen-Stokkem',zip:'3650'},{label:'3640 Ophoven (Kinrooi)',name:'Ophoven (Kinrooi)',zip:'3640'},{label:'3640 Molenbeersel (Kinrooi)',name:'Molenbeersel (Kinrooi)',zip:'3640'},{label:'3640 Kinrooi',name:'Kinrooi',zip:'3640'},{label:'3640 Kessenich (Kinrooi)',name:'Kessenich (Kinrooi)',zip:'3640'},{label:'3631 Uikhoven (Maasmechelen)',name:'Uikhoven (Maasmechelen)',zip:'3631'},{label:'3631 Boorsem (Maasmechelen)',name:'Boorsem (Maasmechelen)',zip:'3631'},{label:'3630 Vucht (Maasmechelen)',name:'Vucht (Maasmechelen)',zip:'3630'},{label:'3630 Opgrimbie (Maasmechelen)',name:'Opgrimbie (Maasmechelen)',zip:'3630'},{label:'3630 Meeswijk (Maasmechelen)',name:'Meeswijk (Maasmechelen)',zip:'3630'},{label:'3630 Mechelen-Aan-De-Maas (Maasmechelen)',name:'Mechelen-Aan-De-Maas (Maasmechelen)',zip:'3630'},{label:'3630 Maasmechelen',name:'Maasmechelen',zip:'3630'},{label:'3630 Leut (Maasmechelen)',name:'Leut (Maasmechelen)',zip:'3630'},{label:'3630 Eisden (Maasmechelen)',name:'Eisden (Maasmechelen)',zip:'3630'},{label:'3621 Rekem (Lanaken)',name:'Rekem (Lanaken)',zip:'3621'},{label:'3620 Veldwezelt (Lanaken)',name:'Veldwezelt (Lanaken)',zip:'3620'},{label:'3620 Neerharen (Lanaken)',name:'Neerharen (Lanaken)',zip:'3620'},{label:'3620 Lanaken',name:'Lanaken',zip:'3620'},{label:'3620 Gellik (Lanaken)',name:'Gellik (Lanaken)',zip:'3620'},{label:'3600 Genk',name:'Genk',zip:'3600'},{label:'3590 Diepenbeek',name:'Diepenbeek',zip:'3590'},{label:'3583 Paal (Beringen)',name:'Paal (Beringen)',zip:'3583'},{label:'3582 Koersel (Beringen)',name:'Koersel (Beringen)',zip:'3582'},{label:'3581 Beverlo (Beringen)',name:'Beverlo (Beringen)',zip:'3581'},{label:'3580 Beringen',name:'Beringen',zip:'3580'},{label:'3570 Alken',name:'Alken',zip:'3570'},{label:'3560 Lummen',name:'Lummen',zip:'3560'},{label:'3560 Linkhout (Lummen)',name:'Linkhout (Lummen)',zip:'3560'},{label:'3550 Zolder (Heusden-Zolder)',name:'Zolder (Heusden-Zolder)',zip:'3550'},{label:'3550 Heusden-Zolder',name:'Heusden-Zolder',zip:'3550'},{label:'3545 Zelem (Halen)',name:'Zelem (Halen)',zip:'3545'},{label:'3545 Loksbergen (Halen)',name:'Loksbergen (Halen)',zip:'3545'},{label:'3545 Halen',name:'Halen',zip:'3545'},{label:'3540 Schulen (Herk-De-Stad)',name:'Schulen (Herk-De-Stad)',zip:'3540'},{label:'3540 Herk-de-Stad',name:'Herk-de-Stad',zip:'3540'},{label:'3540 Donk (Herk-De-Stad)',name:'Donk (Herk-De-Stad)',zip:'3540'},{label:'3540 Berbroek (Herk-De-Stad)',name:'Berbroek (Herk-De-Stad)',zip:'3540'},{label:'3530 Houthalen-Helchteren',name:'Houthalen-Helchteren',zip:'3530'},{label:'3530 Houthalen (Houthalen-Helchteren)',name:'Houthalen (Houthalen-Helchteren)',zip:'3530'},{label:'3530 Helchteren (Houthalen-Helchteren)',name:'Helchteren (Houthalen-Helchteren)',zip:'3530'},{label:'3520 Zonhoven',name:'Zonhoven',zip:'3520'},{label:'3512 Stevoort (Hasselt)',name:'Stevoort (Hasselt)',zip:'3512'},{label:'3511 Stokrooie (Hasselt)',name:'Stokrooie (Hasselt)',zip:'3511'},{label:'3511 Kuringen (Hasselt)',name:'Kuringen (Hasselt)',zip:'3511'},{label:'3510 Spalbeek (Hasselt)',name:'Spalbeek (Hasselt)',zip:'3510'},{label:'3510 Kermt (Hasselt)',name:'Kermt (Hasselt)',zip:'3510'},{label:'3501 Wimmertingen (Hasselt)',name:'Wimmertingen (Hasselt)',zip:'3501'},{label:'3500 Sint-Lambrechts-Herk (Hasselt)',name:'Sint-Lambrechts-Herk (Hasselt)',zip:'3500'},{label:'3500 Hasselt',name:'Hasselt',zip:'3500'},{label:'2990 Wuustwezel',name:'Wuustwezel',zip:'2990'},{label:'2990 Loenhout (Wuustwezel)',name:'Loenhout (Wuustwezel)',zip:'2990'},{label:'2980 Zoersel',name:'Zoersel',zip:'2980'},{label:'2970 Schilde',name:'Schilde',zip:'2970'},{label:'2960 Brecht',name:'Brecht',zip:'2960'},{label:'2940 Stabroek',name:'Stabroek',zip:'2940'},{label:'2940 Hoevenen (Stabroek)',name:'Hoevenen (Stabroek)',zip:'2940'},{label:'2930 Brasschaat',name:'Brasschaat',zip:'2930'},{label:'2920 Kalmthout',name:'Kalmthout',zip:'2920'},{label:'2910 Essen',name:'Essen',zip:'2910'},{label:'2900 Schoten',name:'Schoten',zip:'2900'},{label:'2890 Sint-Amands (Puurs-Sint-Amands)',name:'Sint-Amands (Puurs-Sint-Amands)',zip:'2890'},{label:'2890 Oppuurs (Puurs-Sint-Amands)',name:'Oppuurs (Puurs-Sint-Amands)',zip:'2890'},{label:'2890 Lippelo (Puurs-Sint-Amands)',name:'Lippelo (Puurs-Sint-Amands)',zip:'2890'},{label:'2880 Weert (Bornem)',name:'Weert (Bornem)',zip:'2880'},{label:'2880 Hingene (Bornem)',name:'Hingene (Bornem)',zip:'2880'},{label:'2880 Bornem',name:'Bornem',zip:'2880'},{label:'2870 Puurs (Puurs-Sint-Amands)',name:'Puurs (Puurs-Sint-Amands)',zip:'2870'},{label:'2870 Liezele (Puurs-Sint-Amands)',name:'Liezele (Puurs-Sint-Amands)',zip:'2870'},{label:'2870 Breendonk (Puurs-Sint-Amands)',name:'Breendonk (Puurs-Sint-Amands)',zip:'2870'},{label:'2861 Onze-Lieve-Vrouw-Waver (Sint-Katelijne-Waver)',name:'Onze-Lieve-Vrouw-Waver (Sint-Katelijne-Waver)',zip:'2861'},{label:'2860 Sint-Katelijne-Waver',name:'Sint-Katelijne-Waver',zip:'2860'},{label:'2850 Boom',name:'Boom',zip:'2850'},{label:'2845 Niel',name:'Niel',zip:'2845'},{label:'2840 Terhagen (Rumst)',name:'Terhagen (Rumst)',zip:'2840'},{label:'2840 Rumst',name:'Rumst',zip:'2840'},{label:'2840 Reet (Rumst)',name:'Reet (Rumst)',zip:'2840'},{label:'2830 Willebroek',name:'Willebroek',zip:'2830'},{label:'2830 Tisselt (Willebroek)',name:'Tisselt (Willebroek)',zip:'2830'},{label:'2830 Heindonk (Willebroek)',name:'Heindonk (Willebroek)',zip:'2830'},{label:'2830 Blaasveld (Willebroek)',name:'Blaasveld (Willebroek)',zip:'2830'},{label:'2820 Rijmenam (Bonheiden)',name:'Rijmenam (Bonheiden)',zip:'2820'},{label:'2820 Bonheiden',name:'Bonheiden',zip:'2820'},{label:'2811 Leest (Mechelen)',name:'Leest (Mechelen)',zip:'2811'},{label:'2811 Hombeek (Mechelen)',name:'Hombeek (Mechelen)',zip:'2811'},{label:'2801 Heffen (Mechelen)',name:'Heffen (Mechelen)',zip:'2801'},{label:'2800 Walem (Mechelen)',name:'Walem (Mechelen)',zip:'2800'},{label:'2800 Mechelen',name:'Mechelen',zip:'2800'},{label:'2650 Edegem',name:'Edegem',zip:'2650'},{label:'2640 Mortsel',name:'Mortsel',zip:'2640'},{label:'2630 Aartselaar',name:'Aartselaar',zip:'2630'},{label:'2627 Schelle',name:'Schelle',zip:'2627'},{label:'2620 Hemiksem',name:'Hemiksem',zip:'2620'},{label:'2590 Gestel (Berlaar)',name:'Gestel (Berlaar)',zip:'2590'},{label:'2590 Berlaar',name:'Berlaar',zip:'2590'},{label:'2580 Putte',name:'Putte',zip:'2580'},{label:'2580 Beerzel (Putte)',name:'Beerzel (Putte)',zip:'2580'},{label:'2570 Duffel',name:'Duffel',zip:'2570'},{label:'2560 Nijlen',name:'Nijlen',zip:'2560'},{label:'2560 Kessel (Nijlen)',name:'Kessel (Nijlen)',zip:'2560'},{label:'2560 Bevel (Nijlen)',name:'Bevel (Nijlen)',zip:'2560'},{label:'2550 Waarloos (Kontich)',name:'Waarloos (Kontich)',zip:'2550'},{label:'2550 Kontich',name:'Kontich',zip:'2550'},{label:'2547 Lint',name:'Lint',zip:'2547'},{label:'2540 Hove',name:'Hove',zip:'2540'},{label:'2531 Vremde (Boechout)',name:'Vremde (Boechout)',zip:'2531'},{label:'2530 Boechout',name:'Boechout',zip:'2530'},{label:'2520 Ranst',name:'Ranst',zip:'2520'},{label:'2520 Oelegem (Ranst)',name:'Oelegem (Ranst)',zip:'2520'},{label:'2520 Emblem (Ranst)',name:'Emblem (Ranst)',zip:'2520'},{label:'2520 Broechem (Ranst)',name:'Broechem (Ranst)',zip:'2520'},{label:'2500 Lier',name:'Lier',zip:'2500'},{label:'2500 Koningshooikt (Lier)',name:'Koningshooikt (Lier)',zip:'2500'},{label:'2491 Olmen (Balen)',name:'Olmen (Balen)',zip:'2491'},{label:'2490 Balen',name:'Balen',zip:'2490'},{label:'2480 Dessel',name:'Dessel',zip:'2480'},{label:'2470 Retie',name:'Retie',zip:'2470'},{label:'2460 Tielen (Kasterlee)',name:'Tielen (Kasterlee)',zip:'2460'},{label:'2460 Lichtaart (Kasterlee)',name:'Lichtaart (Kasterlee)',zip:'2460'},{label:'2460 Kasterlee',name:'Kasterlee',zip:'2460'},{label:'2450 Meerhout',name:'Meerhout',zip:'2450'},{label:'2440 Geel',name:'Geel',zip:'2440'},{label:'2431 Veerle (Laakdal)',name:'Veerle (Laakdal)',zip:'2431'},{label:'2431 Varendonk (Laakdal)',name:'Varendonk (Laakdal)',zip:'2431'},{label:'2430 Laakdal',name:'Laakdal',zip:'2430'},{label:'2430 Eindhout (Laakdal)',name:'Eindhout (Laakdal)',zip:'2430'},{label:'2400 Mol',name:'Mol',zip:'2400'},{label:'2390 Westmalle (Malle)',name:'Westmalle (Malle)',zip:'2390'},{label:'2390 Oostmalle (Malle)',name:'Oostmalle (Malle)',zip:'2390'},{label:'2390 Malle',name:'Malle',zip:'2390'},{label:'2387 Baarle-Hertog',name:'Baarle-Hertog',zip:'2387'},{label:'2382 Poppel (Ravels)',name:'Poppel (Ravels)',zip:'2382'},{label:'2381 Weelde (Ravels)',name:'Weelde (Ravels)',zip:'2381'},{label:'2380 Ravels',name:'Ravels',zip:'2380'},{label:'2370 Arendonk',name:'Arendonk',zip:'2370'},{label:'2360 Oud-Turnhout',name:'Oud-Turnhout',zip:'2360'},{label:'2350 Vosselaar',name:'Vosselaar',zip:'2350'},{label:'2340 Vlimmeren (Beerse)',name:'Vlimmeren (Beerse)',zip:'2340'},{label:'2340 Beerse',name:'Beerse',zip:'2340'},{label:'2330 Merksplas',name:'Merksplas',zip:'2330'},{label:'2328 Meerle (Hoogstraten)',name:'Meerle (Hoogstraten)',zip:'2328'},{label:'2323 Wortel (Hoogstraten)',name:'Wortel (Hoogstraten)',zip:'2323'},{label:'2322 Minderhout (Hoogstraten)',name:'Minderhout (Hoogstraten)',zip:'2322'},{label:'2321 Meer (Hoogstraten)',name:'Meer (Hoogstraten)',zip:'2321'},{label:'2320 Hoogstraten',name:'Hoogstraten',zip:'2320'},{label:'2310 Rijkevorsel',name:'Rijkevorsel',zip:'2310'},{label:'2300 Turnhout',name:'Turnhout',zip:'2300'},{label:'2290 Vorselaar',name:'Vorselaar',zip:'2290'},{label:'2288 Bouwel (Grobbendonk)',name:'Bouwel (Grobbendonk)',zip:'2288'},{label:'2280 Grobbendonk',name:'Grobbendonk',zip:'2280'},{label:'2275 Wechelderzande (Lille)',name:'Wechelderzande (Lille)',zip:'2275'},{label:'2275 Poederlee (Lille)',name:'Poederlee (Lille)',zip:'2275'},{label:'2275 Lille',name:'Lille',zip:'2275'},{label:'2275 Gierle (Lille)',name:'Gierle (Lille)',zip:'2275'},{label:'2270 Herenthout',name:'Herenthout',zip:'2270'},{label:'2260 Zoerle-Parwijs (Westerlo)',name:'Zoerle-Parwijs (Westerlo)',zip:'2260'},{label:'2260 Westerlo',name:'Westerlo',zip:'2260'},{label:'2260 Oevel (Westerlo)',name:'Oevel (Westerlo)',zip:'2260'},{label:'2250 Olen',name:'Olen',zip:'2250'},{label:'2243 Pulle (Zandhoven)',name:'Pulle (Zandhoven)',zip:'2243'},{label:'2242 Pulderbos (Zandhoven)',name:'Pulderbos (Zandhoven)',zip:'2242'},{label:'2240 Zandhoven',name:'Zandhoven',zip:'2240'},{label:'2240 Viersel (Zandhoven)',name:'Viersel (Zandhoven)',zip:'2240'},{label:'2240 Massenhoven (Zandhoven)',name:'Massenhoven (Zandhoven)',zip:'2240'},{label:'2235 Westmeerbeek (Hulshout)',name:'Westmeerbeek (Hulshout)',zip:'2235'},{label:'2235 Hulshout',name:'Hulshout',zip:'2235'},{label:'2235 Houtvenne (Hulshout)',name:'Houtvenne (Hulshout)',zip:'2235'},{label:'2230 Ramsel (Herselt)',name:'Ramsel (Herselt)',zip:'2230'},{label:'2230 Herselt',name:'Herselt',zip:'2230'},{label:'2223 Schriek (Heist-Op-Den-Berg)',name:'Schriek (Heist-Op-Den-Berg)',zip:'2223'},{label:'2222 Wiekevorst (Heist-Op-Den-Berg)',name:'Wiekevorst (Heist-Op-Den-Berg)',zip:'2222'},{label:'2222 Itegem (Heist-Op-Den-Berg)',name:'Itegem (Heist-Op-Den-Berg)',zip:'2222'},{label:'2221 Booischot (Heist-Op-Den-Berg)',name:'Booischot (Heist-Op-Den-Berg)',zip:'2221'},{label:'2220 Heist-op-den-Berg',name:'Heist-op-den-Berg',zip:'2220'},{label:'2220 Hallaar (Heist-Op-Den-Berg)',name:'Hallaar (Heist-Op-Den-Berg)',zip:'2220'},{label:'2200 Noorderwijk (Herentals)',name:'Noorderwijk (Herentals)',zip:'2200'},{label:'2200 Morkhoven (Herentals)',name:'Morkhoven (Herentals)',zip:'2200'},{label:'2200 Herentals',name:'Herentals',zip:'2200'},{label:'2160 Wommelgem',name:'Wommelgem',zip:'2160'},{label:'2110 Wijnegem',name:'Wijnegem',zip:'2110'},{label:'2070 Zwijndrecht (Beveren-Kruibeke-Zwijndrecht)',name:'Zwijndrecht (Beveren-Kruibeke-Zwijndrecht)',zip:'2070'},{label:'2070 Burcht (Beveren-Kruibeke-Zwijndrecht)',name:'Burcht (Beveren-Kruibeke-Zwijndrecht)',zip:'2070'},{label:'2660 Hoboken (Antwerpen)',name:'Hoboken (Antwerpen)',zip:'2660'},{label:'2610 Wilrijk (Antwerpen)',name:'Wilrijk (Antwerpen)',zip:'2610'},{label:'2600 Berchem (Antwerpen)',name:'Berchem (Antwerpen)',zip:'2600'},{label:'2180 Ekeren (Antwerpen)',name:'Ekeren (Antwerpen)',zip:'2180'},{label:'2170 Merksem (Antwerpen)',name:'Merksem (Antwerpen)',zip:'2170'},{label:'2140 Borgerhout (Antwerpen)',name:'Borgerhout (Antwerpen)',zip:'2140'},{label:'2100 Deurne (Antwerpen)',name:'Deurne (Antwerpen)',zip:'2100'},{label:'2040 Zandvliet (Antwerpen)',name:'Zandvliet (Antwerpen)',zip:'2040'},{label:'2040 Lillo (Antwerpen)',name:'Lillo (Antwerpen)',zip:'2040'},{label:'2040 Berendrecht (Antwerpen)',name:'Berendrecht (Antwerpen)',zip:'2040'},{label:'2000 Antwerpen',name:'Antwerpen',zip:'2000'},{label:'1000 Brussel',name:'Brussel',zip:'1000'},{label:'1030 Schaarbeek (Brussel)',name:'Schaarbeek (Brussel)',zip:'1030'},{label:'1040 Etterbeek (Brussel)',name:'Etterbeek (Brussel)',zip:'1040'},{label:'1050 Elsene (Brussel)',name:'Elsene (Brussel)',zip:'1050'},{label:'1060 Sint-Gillis (Brussel)',name:'Sint-Gillis (Brussel)',zip:'1060'},{label:'1070 Anderlecht (Brussel)',name:'Anderlecht (Brussel)',zip:'1070'},{label:'1080 Sint-Jans-Molenbeek (Brussel)',name:'Sint-Jans-Molenbeek (Brussel)',zip:'1080'},{label:'1081 Koekelberg (Brussel)',name:'Koekelberg (Brussel)',zip:'1081'},{label:'1082 Sint-Agatha-Berchem (Brussel)',name:'Sint-Agatha-Berchem (Brussel)',zip:'1082'},{label:'1083 Ganshoren (Brussel)',name:'Ganshoren (Brussel)',zip:'1083'},{label:'1090 Jette (Brussel)',name:'Jette (Brussel)',zip:'1090'},{label:'1140 Evere (Brussel)',name:'Evere (Brussel)',zip:'1140'},{label:'1150 Sint-Pieters-Woluwe (Brussel)',name:'Sint-Pieters-Woluwe (Brussel)',zip:'1150'},{label:'1160 Oudergem (Brussel)',name:'Oudergem (Brussel)',zip:'1160'},{label:'1170 Watermaal-Bosvoorde (Brussel)',name:'Watermaal-Bosvoorde (Brussel)',zip:'1170'},{label:'1180 Ukkel (Brussel)',name:'Ukkel (Brussel)',zip:'1180'},{label:'1190 Vorst (Brussel)',name:'Vorst (Brussel)',zip:'1190'},{label:'1200 Sint-Lambrechts-Woluwe (Brussel)',name:'Sint-Lambrechts-Woluwe (Brussel)',zip:'1200'},{label:'1210 Sint-Joost-Ten-Node (Brussel)',name:'Sint-Joost-Ten-Node (Brussel)',zip:'1210'},{label:'2970 \'s Gravenwezel (Schilde)',name:'\'s Gravenwezel (Schilde)',zip:'2970'},{label:'3700 \'s Herenelderen (Tongeren-Borgloon)',name:'\'s Herenelderen (Tongeren-Borgloon)',zip:'3700'},{label:'8200 Brugge 2 (Brugge)',name:'Brugge 2 (Brugge)',zip:'8200'},{label:'1130 Haren (Brussel)',name:'Haren (Brussel)',zip:'1130'},{label:'1020 Laken (Brussel)',name:'Laken (Brussel)',zip:'1020'},{label:'1120 Neder-Over-Heembeek (Brussel)',name:'Neder-Over-Heembeek (Brussel)',zip:'1120'},{label:'9700 Ooike (Oudenaarde)',name:'Ooike (Oudenaarde)',zip:'9700'},{label:'2960 Sint-Job-In-\'t-Goor (Brecht)',name:'Sint-Job-In-\'t-Goor (Brecht)',zip:'2960'},{label:'3300 Sint-Margriete-Houtem (Tienen)',name:'Sint-Margriete-Houtem (Tienen)',zip:'3300'},{label:'9660 Sint-Maria-Oudenhove (Brakel)',name:'Sint-Maria-Oudenhove (Brakel)',zip:'9660'},{label:'3470 Sint-Margriete (Kortenaken)',name:'Sint-Margriete (Kortenaken)',zip:'3470'},{label:'9620 Sint-Maria-Oudenhove (Zottegem)',name:'Sint-Maria-Oudenhove (Zottegem)',zip:'9620'},{label:'8433 Sint-Pieters-Kapelle (Middelkerke)',name:'Sint-Pieters-Kapelle (Middelkerke)',zip:'8433'},{label:'2260 Voortkapel (Westerlo)',name:'Voortkapel (Westerlo)',zip:'2260'},{label:'1541 Sint-Pieters-Kapelle (Pajottegem)',name:'Sint-Pieters-Kapelle (Pajottegem)',zip:'1541'},{label:'1547 Bever',name:'Bever',zip:'1547'},{label:'1601 Ruisbroek (Sint-Pieters-Leeuw)',name:'Ruisbroek (Sint-Pieters-Leeuw)',zip:'1601'},{label:'1640 Sint-Genesius-Rode',name:'Sint-Genesius-Rode',zip:'1640'},{label:'1785 Hamme (Merchtem)',name:'Hamme (Merchtem)',zip:'1785'},{label:'1830 Machelen',name:'Machelen',zip:'1830'},{label:'1910 Berg (Kampenhout)',name:'Berg (Kampenhout)',zip:'1910'},{label:'1981 Hofstade (Zemst)',name:'Hofstade (Zemst)',zip:'1981'},{label:'2018 Antwerpen 18 (Antwerpen)',name:'Antwerpen 18 (Antwerpen)',zip:'2018'},{label:'2020 Antwerpen 2 (Antwerpen)',name:'Antwerpen 2 (Antwerpen)',zip:'2020'},{label:'2030 Antwerpen 3 (Antwerpen)',name:'Antwerpen 3 (Antwerpen)',zip:'2030'},{label:'2050 Antwerpen 5 (Antwerpen)',name:'Antwerpen 5 (Antwerpen)',zip:'2050'},{label:'2060 Antwerpen 6 (Antwerpen)',name:'Antwerpen 6 (Antwerpen)',zip:'2060'},{label:'2150 Borsbeek (Antwerpen)',name:'Borsbeek (Antwerpen)',zip:'2150'},{label:'2260 Tongerlo (Westerlo)',name:'Tongerlo (Westerlo)',zip:'2260'},{label:'2430 Vorst (Laakdal)',name:'Vorst (Laakdal)',zip:'2430'},{label:'2812 Muizen (Mechelen)',name:'Muizen (Mechelen)',zip:'2812'},{label:'2870 Ruisbroek (Puurs-Sint-Amands)',name:'Ruisbroek (Puurs-Sint-Amands)',zip:'2870'},{label:'2880 Mariekerke (Bornem)',name:'Mariekerke (Bornem)',zip:'2880'},{label:'2950 Kapellen',name:'Kapellen',zip:'2950'},{label:'2960 Sint-Lenaarts (Brecht)',name:'Sint-Lenaarts (Brecht)',zip:'2960'},{label:'2980 Halle (Zoersel)',name:'Halle (Zoersel)',zip:'2980'},{label:'3018 Wijgmaal (Leuven)',name:'Wijgmaal (Leuven)',zip:'3018'},{label:'3220 Kortrijk-Dutsel (Holsbeek)',name:'Kortrijk-Dutsel (Holsbeek)',zip:'3220'},{label:'3290 Deurne (Diest)',name:'Deurne (Diest)',zip:'3290'},{label:'3320 Meldert (Hoegaarden)',name:'Meldert (Hoegaarden)',zip:'3320'},{label:'3380 Glabbeek',name:'Glabbeek',zip:'3380'},{label:'3381 Kapellen (Glabbeek)',name:'Kapellen (Glabbeek)',zip:'3381'},{label:'3390 Tielt (Tielt-Winge)',name:'Tielt (Tielt-Winge)',zip:'3390'},{label:'3550 Heusden (Heusden-Zolder)',name:'Heusden (Heusden-Zolder)',zip:'3550'},{label:'3560 Meldert (Lummen)',name:'Meldert (Lummen)',zip:'3560'},{label:'3700 Berg (Tongeren-Borgloon)',name:'Berg (Tongeren-Borgloon)',zip:'3700'},{label:'3700 Haren (Tongeren-Borgloon)',name:'Haren (Tongeren-Borgloon)',zip:'3700'},{label:'3700 Kolmont (Tongeren-Borgloon)',name:'Kolmont (Tongeren-Borgloon)',zip:'3700'},{label:'3700 Overrepen (Tongeren-Borgloon)',name:'Overrepen (Tongeren-Borgloon)',zip:'3700'},{label:'3700 Piringen (Tongeren-Borgloon)',name:'Piringen (Tongeren-Borgloon)',zip:'3700'},{label:'3700 Widooie (Tongeren-Borgloon)',name:'Widooie (Tongeren-Borgloon)',zip:'3700'},{label:'3790 Moelingen (Voeren)',name:'Moelingen (Voeren)',zip:'3790'},{label:'3790 Sint-Martens-Voeren (Voeren)',name:'Sint-Martens-Voeren (Voeren)',zip:'3790'},{label:'3790 Voeren',name:'Voeren',zip:'3790'},{label:'3792 Sint-Pieters-Voeren (Voeren)',name:'Sint-Pieters-Voeren (Voeren)',zip:'3792'},{label:'3798 \'s Gravenvoeren (Voeren)',name:'\'s Gravenvoeren (Voeren)',zip:'3798'},{label:'3800 Aalst (Sint-Truiden)',name:'Aalst (Sint-Truiden)',zip:'3800'},{label:'3840 Bommershoven (Tongeren-Borgloon)',name:'Bommershoven (Tongeren-Borgloon)',zip:'3840'},{label:'3840 Haren (Tongeren-Borgloon)',name:'Haren (Tongeren-Borgloon)',zip:'3840'},{label:'3840 Jesseren (Tongeren-Borgloon)',name:'Jesseren (Tongeren-Borgloon)',zip:'3840'},{label:'3840 Kolmont (Tongeren-Borgloon)',name:'Kolmont (Tongeren-Borgloon)',zip:'3840'},{label:'3850 Nieuwerkerken',name:'Nieuwerkerken',zip:'3850'},{label:'3891 Muizen (Gingelom)',name:'Muizen (Gingelom)',zip:'3891'},{label:'3960 Tongerlo (Bree)',name:'Tongerlo (Bree)',zip:'3960'},{label:'8301 Ramskapelle (Knokke-Heist)',name:'Ramskapelle (Knokke-Heist)',zip:'8301'},{label:'8340 Oostkerke (Damme)',name:'Oostkerke (Damme)',zip:'8340'},{label:'8400 Zandvoorde (Oostende)',name:'Zandvoorde (Oostende)',zip:'8400'},{label:'8420 De Haan',name:'De Haan',zip:'8420'},{label:'8587 Helkijn (Spiere-Helkijn)',name:'Helkijn (Spiere-Helkijn)',zip:'8587'},{label:'8587 Spiere (Spiere-Helkijn)',name:'Spiere (Spiere-Helkijn)',zip:'8587'},{label:'8587 Spiere-Helkijn',name:'Spiere-Helkijn',zip:'8587'},{label:'8600 Oostkerke (Diksmuide)',name:'Oostkerke (Diksmuide)',zip:'8600'},{label:'8620 Ramskapelle (Nieuwpoort)',name:'Ramskapelle (Nieuwpoort)',zip:'8620'},{label:'8620 Sint-Joris (Nieuwpoort)',name:'Sint-Joris (Nieuwpoort)',zip:'8620'},{label:'8630 De Moeren (Veurne)',name:'De Moeren (Veurne)',zip:'8630'},{label:'8630 Houtem (Veurne)',name:'Houtem (Veurne)',zip:'8630'},{label:'8630 Steenkerke (Veurne)',name:'Steenkerke (Veurne)',zip:'8630'},{label:'8660 De Panne',name:'De Panne',zip:'8660'},{label:'8730 Sint-Joris (Beernem)',name:'Sint-Joris (Beernem)',zip:'8730'},{label:'8791 Beveren-Leie (Waregem)',name:'Beveren-Leie (Waregem)',zip:'8791'},{label:'8800 Beveren (Roeselare)',name:'Beveren (Roeselare)',zip:'8800'},{label:'8957 Mesen',name:'Mesen',zip:'8957'},{label:'8980 Zandvoorde (Zonnebeke)',name:'Zandvoorde (Zonnebeke)',zip:'8980'},{label:'9070 Heusden (Destelbergen)',name:'Heusden (Destelbergen)',zip:'9070'},{label:'9120 Beveren-Kruibeke-Zwijndrecht',name:'Beveren-Kruibeke-Zwijndrecht',zip:'9120'},{label:'9120 Beveren-Waas (Beveren-Kruibeke-Zwijndrecht)',name:'Beveren-Waas (Beveren-Kruibeke-Zwijndrecht)',zip:'9120'},{label:'9120 Kallo (Beveren-Kruibeke-Zwijndrecht)',name:'Kallo (Beveren-Kruibeke-Zwijndrecht)',zip:'9120'},{label:'9130 Kallo (Beveren-Kruibeke-Zwijndrecht)',name:'Kallo (Beveren-Kruibeke-Zwijndrecht)',zip:'9130'},{label:'9170 De Klinge (Sint-Gillis-Waas)',name:'De Klinge (Sint-Gillis-Waas)',zip:'9170'},{label:'9200 Sint-Gillis-Bij-Dendermonde (Dendermonde)',name:'Sint-Gillis-Bij-Dendermonde (Dendermonde)',zip:'9200'},{label:'9220 Hamme',name:'Hamme',zip:'9220'},{label:'9308 Hofstade (Aalst)',name:'Hofstade (Aalst)',zip:'9308'},{label:'9310 Meldert (Aalst)',name:'Meldert (Aalst)',zip:'9310'},{label:'9600 Ronse',name:'Ronse',zip:'9600'},{label:'9620 Oombergen (Zottegem)',name:'Oombergen (Zottegem)',zip:'9620'},{label:'9690 Berchem (Kluisbergen)',name:'Berchem (Kluisbergen)',zip:'9690'},{label:'9790 Ooike (Wortegem-Petegem)',name:'Ooike (Wortegem-Petegem)',zip:'9790'},{label:'9840 De Pinte (Nazareth-De Pinte)',name:'De Pinte (Nazareth-De Pinte)',zip:'9840'},{label:'9870 Machelen (Zulte)',name:'Machelen (Zulte)',zip:'9870'},{label:'1320 l\'Ecluse',name:'l\'Ecluse',zip:'1320'},{label:'1420 Braine l\'Alleud',name:'Braine l\'Alleud',zip:'1420'},{label:'4217 Waret-l\'Evêque',name:'Waret-l\'Evêque',zip:'4217'},{label:'4340 Villers-l\'Evêque',name:'Villers-l\'Evêque',zip:'4340'},{label:'6140 Fontaine-l\'Evêque',name:'Fontaine-l\'Evêque',zip:'6140'},{label:'6464 l\'Escaillère',name:'l\'Escaillère',zip:'6464'},{label:'6560 Bersillies-l\'Abbaye',name:'Bersillies-l\'Abbaye',zip:'6560'},{label:'7170 Bois-d\'Haine',name:'Bois-d\'Haine',zip:'7170'},{label:'7190 Ecaussinnes-d\'Enghien',name:'Ecaussinnes-d\'Enghien',zip:'7190'},{label:'7750 Mont-de-l\'Enclus',name:'Mont-de-l\'Enclus',zip:'7750'},{label:'7822 Meslin-l\'Evêque',name:'Meslin-l\'Evêque',zip:'7822'},{label:'2260 Heultje (Westerlo)',name:'Heultje (Westerlo)',zip:'2260'},{label:'2260 Oosterwijk (Westerlo)',name:'Oosterwijk (Westerlo)',zip:'2260'},{label:'3650 Dilsen',name:'Dilsen',zip:'3650'},{label:'3650 Stokkem',name:'Stokkem',zip:'3650'},{label:'9520 Oombergen (Sint-Lievens-Houtem)',name:'Oombergen (Sint-Lievens-Houtem)',zip:'9520'},{label:'3270 Scherpenheuvel-Zichem',name:'Scherpenheuvel-Zichem',zip:'3270'},{label:'3900 Pelt',name:'Pelt',zip:'3900'},{label:'3660 Oudsbergen',name:'Oudsbergen',zip:'3660'},{label:'9920 Lievegem',name:'Lievegem',zip:'9920'},{label:'9750 Kruisem',name:'Kruisem',zip:'9750'},{label:'2870 Puurs-Sint-Amands',name:'Puurs-Sint-Amands',zip:'2870'}])

.constant('sapi3CitiesBE', [{name:'Brussels Hoofdstedelijk Gewest',key:'nis-01000'},{name:'Regio Brussel',key:'reg-brussel'},{name:'Anderlecht + deelgemeenten',key:'nis-21001'},{name:'Anderlecht (Anderlecht)',key:'nis-21001-Z'},{name:'Brussel + deelgemeenten',key:'nis-21004'},{name:'Brussel (Brussel)',key:'nis-21004-Z'},{name:'Elsene + deelgemeenten',key:'nis-21009'},{name:'Elsene (Elsene)',key:'nis-21009A'},{name:'Etterbeek + deelgemeenten',key:'nis-21005'},{name:'Etterbeek (Etterbeek)',key:'nis-21005A'},{name:'Evere + deelgemeenten',key:'nis-21006'},{name:'Evere (Evere)',key:'nis-21006A'},{name:'Ganshoren + deelgemeenten',key:'nis-21008'},{name:'Ganshoren (Ganshoren)',key:'nis-21008A'},{name:'Jette + deelgemeenten',key:'nis-21010'},{name:'Jette (Jette)',key:'nis-21010A'},{name:'Koekelberg + deelgemeenten',key:'nis-21011'},{name:'Koekelberg (Koekelberg)',key:'nis-21011A'},{name:'Oudergem + deelgemeenten',key:'nis-21002'},{name:'Oudergem (Oudergem)',key:'nis-21002A'},{name:'Schaarbeek + deelgemeenten',key:'nis-21015'},{name:'Schaarbeek (Schaarbeek)',key:'nis-21015A'},{name:'Sint-Agatha-Berchem + deelgemeenten',key:'nis-21003'},{name:'Sint-Agatha-Berchem (Sint-Agatha-Berchem)',key:'nis-21003A'},{name:'Sint-Gillis + deelgemeenten',key:'nis-21013'},{name:'Sint-Gillis (Sint-Gillis)',key:'nis-21013A'},{name:'Sint-Jans-Molenbeek + deelgemeenten',key:'nis-21012'},{name:'Sint-Jans-Molenbeek (Sint-Jans-Molenbeek)',key:'nis-21012A'},{name:'Sint-Joost-ten-Node + deelgemeenten',key:'nis-21014'},{name:'Sint-Joost-ten-Node (Sint-Joost-ten-Node)',key:'nis-21014A'},{name:'Sint-Lambrechts-Woluwe + deelgemeenten',key:'nis-21018'},{name:'Sint-Lambrechts-Woluwe (Sint-Lambrechts-Woluwe)',key:'nis-21018A'},{name:'Sint-Pieters-Woluwe + deelgemeenten',key:'nis-21019'},{name:'Sint-Pieters-Woluwe (Sint-Pieters-Woluwe)',key:'nis-21019A'},{name:'Ukkel + deelgemeenten',key:'nis-21016'},{name:'Ukkel (Ukkel)',key:'nis-21016A'},{name:'Vorst + deelgemeenten',key:'nis-21007'},{name:'Vorst (Vorst)',key:'nis-21007A'},{name:'Watermaal-Bosvoorde + deelgemeenten',key:'nis-21017'},{name:'Watermaal-Bosvoorde (Watermaal-Bosvoorde)',key:'nis-21017A'},{name:'Provincie Antwerpen',key:'nis-10000'},{name:'Regio Antwerpen',key:'reg-antwerpen'},{name:'Antwerpen + deelgemeenten',key:'nis-11002'},{name:'Antwerpen (Antwerpen)',key:'nis-11002-Z'},{name:'Berendrecht-Zandvliet-Lillo (Antwerpen)',key:'nis-11002-Y'},{name:'Ekeren (Antwerpen)',key:'nis-11002P'},{name:'Merksem (Antwerpen)',key:'nis-11002Q'},{name:'Deurne (Antwerpen)',key:'nis-11002R'},{name:'Berchem (Antwerpen)',key:'nis-11002T'},{name:'Borgerhout (Antwerpen)',key:'nis-11002S'},{name:'Wilrijk (Antwerpen)',key:'nis-11002U'},{name:'Hoboken (Antwerpen)',key:'nis-11002V'},{name:'Borsbeek (Antwerpen)',key:'nis-11007A'},{name:'Wommelgem + deelgemeenten',key:'nis-11052'},{name:'Wommelgem (Wommelgem)',key:'nis-11052A'},{name:'Boechout + deelgemeenten',key:'nis-11004'},{name:'Vremde (Boechout)',key:'nis-11004B'},{name:'Boechout (Boechout)',key:'nis-11004A'},{name:'Hove + deelgemeenten',key:'nis-11021'},{name:'Hove (Hove)',key:'nis-11021A'},{name:'Lint + deelgemeenten',key:'nis-11025'},{name:'Lint (Lint)',key:'nis-11025A'},{name:'Kontich + deelgemeenten',key:'nis-11024'},{name:'Kontich (Kontich)',key:'nis-11024A'},{name:'Waarloos (Kontich)',key:'nis-11024B'},{name:'Aartselaar + deelgemeenten',key:'nis-11001'},{name:'Aartselaar (Aartselaar)',key:'nis-11001A'},{name:'Mortsel + deelgemeenten',key:'nis-11029'},{name:'Mortsel (Mortsel)',key:'nis-11029A'},{name:'Edegem + deelgemeenten',key:'nis-11013'},{name:'Edegem (Edegem)',key:'nis-11013A'},{name:'Regio Mechelen',key:'reg-mechelen'},{name:'Mechelen + deelgemeenten',key:'nis-12025'},{name:'Hombeek (Mechelen)',key:'nis-12025B'},{name:'Mechelen (Mechelen)',key:'nis-12025A'},{name:'Walem (Mechelen)',key:'nis-12025E'},{name:'Leest (Mechelen)',key:'nis-12025C'},{name:'Heffen (Mechelen)',key:'nis-12025D'},{name:'Muizen (Mechelen)',key:'nis-12025F'},{name:'Regio Scheldeland Antwerpen',key:'reg-scheldeland-antwerpen'},{name:'Hemiksem + deelgemeenten',key:'nis-11018'},{name:'Hemiksem (Hemiksem)',key:'nis-11018A'},{name:'Schelle + deelgemeenten',key:'nis-11038'},{name:'Schelle (Schelle)',key:'nis-11038A'},{name:'Rumst + deelgemeenten',key:'nis-11037'},{name:'Rumst (Rumst)',key:'nis-11037A'},{name:'Terhagen (Rumst)',key:'nis-11037B'},{name:'Reet (Rumst)',key:'nis-11037C'},{name:'Niel + deelgemeenten',key:'nis-11030'},{name:'Niel (Niel)',key:'nis-11030A'},{name:'Boom + deelgemeenten',key:'nis-11005'},{name:'Boom (Boom)',key:'nis-11005A'},{name:'Willebroek + deelgemeenten',key:'nis-12040'},{name:'Willebroek (Willebroek)',key:'nis-12040A'},{name:'Heindonk (Willebroek)',key:'nis-12040B'},{name:'Blaasveld (Willebroek)',key:'nis-12040C'},{name:'Tisselt (Willebroek)',key:'nis-12040D'},{name:'Bornem + deelgemeenten',key:'nis-12007'},{name:'Bornem (Bornem)',key:'nis-12007A'},{name:'Hingene (Bornem)',key:'nis-12007B'},{name:'Weert (Bornem)',key:'nis-12007D'},{name:'Mariekerke (Bornem)',key:'nis-12007C'},{name:'Puurs-Sint-Amands + deelgemeenten',key:'nis-12041'},{name:'Breendonk (Puurs-Sint-Amands)',key:'nis-12030C'},{name:'Liezele (Puurs-Sint-Amands)',key:'nis-12030D'},{name:'Sint-Amands (Puurs-Sint-Amands)',key:'nis-12034A'},{name:'Lippelo (Puurs-Sint-Amands)',key:'nis-12034C'},{name:'Puurs (Puurs-Sint-Amands)',key:'nis-12030A'},{name:'Oppuurs (Puurs-Sint-Amands)',key:'nis-12034B'},{name:'Ruisbroek (Puurs-Sint-Amands)',key:'nis-12030B'},{name:'Provincie Vlaams-Brabant',key:'nis-20001'},{name:'Regio Groene Gordel',key:'reg-groene-gordel'},{name:'Vilvoorde + deelgemeenten',key:'nis-23088'},{name:'Peutie (Vilvoorde)',key:'nis-23088B'},{name:'Vilvoorde (Vilvoorde)',key:'nis-23088A'},{name:'Steenokkerzeel + deelgemeenten',key:'nis-23081'},{name:'Melsbroek (Steenokkerzeel)',key:'nis-23081B'},{name:'Perk (Steenokkerzeel)',key:'nis-23081C'},{name:'Steenokkerzeel (Steenokkerzeel)',key:'nis-23081A'},{name:'Machelen + deelgemeenten',key:'nis-23047'},{name:'Machelen (Machelen)',key:'nis-23047A'},{name:'Diegem (Machelen)',key:'nis-23047B'},{name:'Grimbergen + deelgemeenten',key:'nis-23025'},{name:'Grimbergen (Grimbergen)',key:'nis-23025A'},{name:'Strombeek-Bever (Grimbergen)',key:'nis-23025B'},{name:'Beigem (Grimbergen)',key:'nis-23025C'},{name:'Humbeek (Grimbergen)',key:'nis-23025D'},{name:'Meise + deelgemeenten',key:'nis-23050'},{name:'Meise (Meise)',key:'nis-23050A'},{name:'Wolvertem (Meise)',key:'nis-23050B'},{name:'Kapelle-op-den-Bos + deelgemeenten',key:'nis-23039'},{name:'Kapelle-op-den-Bos (Kapelle-op-den-Bos)',key:'nis-23039A'},{name:'Nieuwenrode (Kapelle-op-den-Bos)',key:'nis-23039B'},{name:'Ramsdonk (Kapelle-op-den-Bos)',key:'nis-23039C'},{name:'Kampenhout + deelgemeenten',key:'nis-23038'},{name:'Buken (Kampenhout)',key:'nis-23038B'},{name:'Kampenhout (Kampenhout)',key:'nis-23038A'},{name:'Nederokkerzeel (Kampenhout)',key:'nis-23038C'},{name:'Berg (Kampenhout)',key:'nis-23038D'},{name:'Zaventem + deelgemeenten',key:'nis-23094'},{name:'Zaventem (Zaventem)',key:'nis-23094A'},{name:'Nossegem (Zaventem)',key:'nis-23094B'},{name:'Sint-Stevens-Woluwe (Zaventem)',key:'nis-23094D'},{name:'Sterrebeek (Zaventem)',key:'nis-23094C'},{name:'Kraainem + deelgemeenten',key:'nis-23099'},{name:'Kraainem (Kraainem)',key:'nis-23099A'},{name:'Wezembeek-Oppem + deelgemeenten',key:'nis-23103'},{name:'Wezembeek-Oppem (Wezembeek-Oppem)',key:'nis-23103A'},{name:'Zemst + deelgemeenten',key:'nis-23096'},{name:'Zemst (Zemst)',key:'nis-23096A'},{name:'Hofstade (Zemst)',key:'nis-23096B'},{name:'Weerde (Zemst)',key:'nis-23096C'},{name:'Eppegem (Zemst)',key:'nis-23096E'},{name:'Elewijt (Zemst)',key:'nis-23096D'},{name:'Halle + deelgemeenten',key:'nis-23027'},{name:'Halle (Halle)',key:'nis-23027A'},{name:'Buizingen (Halle)',key:'nis-23027B'},{name:'Lembeek (Halle)',key:'nis-23027C'},{name:'Bever + deelgemeenten',key:'nis-23009'},{name:'Bever (Bever)',key:'nis-23009A'},{name:'Hoeilaart + deelgemeenten',key:'nis-23033'},{name:'Hoeilaart (Hoeilaart)',key:'nis-23033A'},{name:'Sint-Pieters-Leeuw + deelgemeenten',key:'nis-23077'},{name:'Oudenaken (Sint-Pieters-Leeuw)',key:'nis-23077B'},{name:'Sint-Laureins-Berchem (Sint-Pieters-Leeuw)',key:'nis-23077C'},{name:'Sint-Pieters-Leeuw (Sint-Pieters-Leeuw)',key:'nis-23077A'},{name:'Vlezenbeek (Sint-Pieters-Leeuw)',key:'nis-23077D'},{name:'Ruisbroek (Sint-Pieters-Leeuw)',key:'nis-23077E'},{name:'Drogenbos + deelgemeenten',key:'nis-23098'},{name:'Drogenbos (Drogenbos)',key:'nis-23098A'},{name:'Linkebeek + deelgemeenten',key:'nis-23100'},{name:'Linkebeek (Linkebeek)',key:'nis-23100A'},{name:'Sint-Genesius-Rode + deelgemeenten',key:'nis-23101'},{name:'Sint-Genesius-Rode (Sint-Genesius-Rode)',key:'nis-23101A'},{name:'Beersel + deelgemeenten',key:'nis-23003'},{name:'Alsemberg (Beersel)',key:'nis-23003B'},{name:'Lot (Beersel)',key:'nis-23003E'},{name:'Beersel (Beersel)',key:'nis-23003A'},{name:'Huizingen (Beersel)',key:'nis-23003D'},{name:'Dworp (Beersel)',key:'nis-23003C'},{name:'Pepingen + deelgemeenten',key:'nis-23064'},{name:'Pepingen (Pepingen)',key:'nis-23064A'},{name:'Elingen (Pepingen)',key:'nis-23064B'},{name:'Beert (Pepingen)',key:'nis-23064C'},{name:'Bellingen (Pepingen)',key:'nis-23064D'},{name:'Bogaarden (Pepingen)',key:'nis-23064E'},{name:'Heikruis (Pepingen)',key:'nis-23064F'},{name:'Dilbeek + deelgemeenten',key:'nis-23016'},{name:'Dilbeek (Dilbeek)',key:'nis-23016A'},{name:'Sint-Ulriks-Kapelle (Dilbeek)',key:'nis-23016B'},{name:'Groot-Bijgaarden (Dilbeek)',key:'nis-23016C'},{name:'Sint-Martens-Bodegem (Dilbeek)',key:'nis-23016F'},{name:'Schepdaal (Dilbeek)',key:'nis-23016E'},{name:'Itterbeek (Dilbeek)',key:'nis-23016D'},{name:'Asse + deelgemeenten',key:'nis-23002'},{name:'Mollem (Asse)',key:'nis-23002B'},{name:'Asse (Asse)',key:'nis-23002A'},{name:'Kobbegem (Asse)',key:'nis-23002C'},{name:'Bekkerzeel (Asse)',key:'nis-23002F'},{name:'Zellik (Asse)',key:'nis-23002E'},{name:'Relegem (Asse)',key:'nis-23002D'},{name:'Ternat + deelgemeenten',key:'nis-23086'},{name:'Ternat (Ternat)',key:'nis-23086A'},{name:'Wambeek (Ternat)',key:'nis-23086B'},{name:'Sint-Katherina-Lombeek (Ternat)',key:'nis-23086C'},{name:'Opwijk + deelgemeenten',key:'nis-23060'},{name:'Opwijk (Opwijk)',key:'nis-23060A'},{name:'Mazenzele (Opwijk)',key:'nis-23060B'},{name:'Lennik + deelgemeenten',key:'nis-23104'},{name:'Sint-Martens-Lennik (Lennik)',key:'nis-23104B'},{name:'Sint-Kwintens-Lennik (Lennik)',key:'nis-23104A'},{name:'Gaasbeek (Lennik)',key:'nis-23104C'},{name:'Roosdaal + deelgemeenten',key:'nis-23097'},{name:'Strijtem (Roosdaal)',key:'nis-23097A-II'},{name:'Onze-Lieve-Vrouw-Lombeek (Roosdaal)',key:'nis-23097A-III'},{name:'Borchtlombeek (Roosdaal)',key:'nis-23097B'},{name:'Pamel (Roosdaal)',key:'nis-23097A-I'},{name:'Liedekerke + deelgemeenten',key:'nis-23044'},{name:'Liedekerke (Liedekerke)',key:'nis-23044A'},{name:'Wemmel + deelgemeenten',key:'nis-23102'},{name:'Wemmel (Wemmel)',key:'nis-23102A'},{name:'Merchtem + deelgemeenten',key:'nis-23052'},{name:'Brussegem (Merchtem)',key:'nis-23052B'},{name:'Merchtem (Merchtem)',key:'nis-23052A'},{name:'Hamme (Merchtem)',key:'nis-23052C'},{name:'Affligem + deelgemeenten',key:'nis-23105'},{name:'Hekelgem (Affligem)',key:'nis-23105A'},{name:'Essene (Affligem)',key:'nis-23105B'},{name:'Teralfene (Affligem)',key:'nis-23105C'},{name:'Londerzeel + deelgemeenten',key:'nis-23045'},{name:'Londerzeel (Londerzeel)',key:'nis-23045A'},{name:'Malderen (Londerzeel)',key:'nis-23045B'},{name:'Steenhuffel (Londerzeel)',key:'nis-23045C'},{name:'Herent + deelgemeenten',key:'nis-24038'},{name:'Herent (Herent)',key:'nis-24038A'},{name:'Winksele (Herent)',key:'nis-24038B'},{name:'Veltem-Beisem (Herent)',key:'nis-24038C'},{name:'Huldenberg + deelgemeenten',key:'nis-24045'},{name:'Loonbeek (Huldenberg)',key:'nis-24045B'},{name:'Huldenberg (Huldenberg)',key:'nis-24045A'},{name:'Neerijse (Huldenberg)',key:'nis-24045C'},{name:'Sint-Agatha-Rode (Huldenberg)',key:'nis-24045D'},{name:'Ottenburg (Huldenberg)',key:'nis-24045E'},{name:'Oud-Heverlee + deelgemeenten',key:'nis-24086'},{name:'Oud-Heverlee (Oud-Heverlee)',key:'nis-24086A'},{name:'Vaalbeek (Oud-Heverlee)',key:'nis-24086B'},{name:'Blanden (Oud-Heverlee)',key:'nis-24086C'},{name:'Haasrode (Oud-Heverlee)',key:'nis-24086D'},{name:'Sint-Joris-Weert (Oud-Heverlee)',key:'nis-24086E'},{name:'Bertem + deelgemeenten',key:'nis-24009'},{name:'Bertem (Bertem)',key:'nis-24009A'},{name:'Korbeek-Dijle (Bertem)',key:'nis-24009B'},{name:'Leefdaal (Bertem)',key:'nis-24009C'},{name:'Kortenberg + deelgemeenten',key:'nis-24055'},{name:'Kortenberg (Kortenberg)',key:'nis-24055A'},{name:'Meerbeek (Kortenberg)',key:'nis-24055C'},{name:'Erps-Kwerps (Kortenberg)',key:'nis-24055B'},{name:'Everberg (Kortenberg)',key:'nis-24055D'},{name:'Tervuren + deelgemeenten',key:'nis-24104'},{name:'Tervuren (Tervuren)',key:'nis-24104A'},{name:'Vossem (Tervuren)',key:'nis-24104B'},{name:'Duisburg (Tervuren)',key:'nis-24104C'},{name:'Overijse + deelgemeenten',key:'nis-23062'},{name:'Overijse (Overijse)',key:'nis-23062A'},{name:'Keerbergen + deelgemeenten',key:'nis-24048'},{name:'Keerbergen (Keerbergen)',key:'nis-24048A'},{name:'Haacht + deelgemeenten',key:'nis-24033'},{name:'Haacht (Haacht)',key:'nis-24033A'},{name:'Tildonk (Haacht)',key:'nis-24033B'},{name:'Wespelaar (Haacht)',key:'nis-24033C'},{name:'Boortmeerbeek + deelgemeenten',key:'nis-24014'},{name:'Boortmeerbeek (Boortmeerbeek)',key:'nis-24014A'},{name:'Hever (Boortmeerbeek)',key:'nis-24014B'},{name:'Pajottegem + deelgemeenten',key:'nis-23106'},{name:'Galmaarden (Pajottegem)',key:'nis-23023A'},{name:'Vollezele (Pajottegem)',key:'nis-23023B'},{name:'Tollembeek (Pajottegem)',key:'nis-23023C'},{name:'Leerbeek (Pajottegem)',key:'nis-23024B'},{name:'Oetingen (Pajottegem)',key:'nis-23024C'},{name:'Gooik (Pajottegem)',key:'nis-23024A'},{name:'Kester (Pajottegem)',key:'nis-23024D'},{name:'Herne (Pajottegem)',key:'nis-23032A'},{name:'Herfelingen (Pajottegem)',key:'nis-23032B'},{name:'Sint-Pieters-Kapelle (Pajottegem)',key:'nis-23032C'},{name:'Regio Hageland',key:'reg-hageland'},{name:'Aarschot + deelgemeenten',key:'nis-24001'},{name:'Aarschot (Aarschot)',key:'nis-24001A'},{name:'Langdorp (Aarschot)',key:'nis-24001B'},{name:'Rillaar (Aarschot)',key:'nis-24001C'},{name:'Gelrode (Aarschot)',key:'nis-24001D'},{name:'Scherpenheuvel-Zichem + deelgemeenten',key:'nis-24134'},{name:'Scherpenheuvel (Scherpenheuvel-Zichem)',key:'nis-24134-Z'},{name:'Zichem (Scherpenheuvel-Zichem)',key:'nis-24134B'},{name:'Messelbroek (Scherpenheuvel-Zichem)',key:'nis-24134C'},{name:'Testelt (Scherpenheuvel-Zichem)',key:'nis-24134D'},{name:'Averbode (Scherpenheuvel-Zichem)',key:'nis-24134E'},{name:'Diest + deelgemeenten',key:'nis-24020'},{name:'Diest (Diest)',key:'nis-24020A'},{name:'Webbekom (Diest)',key:'nis-24020B'},{name:'Kaggevinne (Diest)',key:'nis-24020C'},{name:'Molenstede (Diest)',key:'nis-24020D'},{name:'Schaffen (Diest)',key:'nis-24020E'},{name:'Deurne (Diest)',key:'nis-24020F'},{name:'Tienen + deelgemeenten',key:'nis-24107'},{name:'Tienen (Tienen)',key:'nis-24107A'},{name:'Oorbeek (Tienen)',key:'nis-24107B'},{name:'Bost (Tienen)',key:'nis-24107C'},{name:'Kumtich (Tienen)',key:'nis-24107D'},{name:'Vissenaken (Tienen)',key:'nis-24107E'},{name:'Sint-Margriete-Houtem (Tienen)',key:'nis-24107F'},{name:'Oplinter (Tienen)',key:'nis-24107G'},{name:'Goetsenhoven (Tienen)',key:'nis-24107J'},{name:'Hakendover (Tienen)',key:'nis-24107H'},{name:'Hoegaarden + deelgemeenten',key:'nis-24041'},{name:'Hoegaarden (Hoegaarden)',key:'nis-24041A'},{name:'Meldert (Hoegaarden)',key:'nis-24041B'},{name:'Outgaarden (Hoegaarden)',key:'nis-24041C'},{name:'Linter + deelgemeenten',key:'nis-24133'},{name:'Drieslinter (Linter)',key:'nis-24133A'},{name:'Neerlinter (Linter)',key:'nis-24133B'},{name:'Orsmaal-Gussenhoven (Linter)',key:'nis-24133C'},{name:'Melkwezer (Linter)',key:'nis-24133D'},{name:'Neerhespen (Linter)',key:'nis-24133E'},{name:'Overhespen (Linter)',key:'nis-24133F'},{name:'Wommersom (Linter)',key:'nis-24133G'},{name:'Glabbeek + deelgemeenten',key:'nis-24137'},{name:'Glabbeek-Zuurbemde (Glabbeek)',key:'nis-24137A'},{name:'Attenrode (Glabbeek)',key:'nis-24137B'},{name:'Bunsbeek (Glabbeek)',key:'nis-24137C'},{name:'Kapellen (Glabbeek)',key:'nis-24137D'},{name:'Tielt-Winge + deelgemeenten',key:'nis-24135'},{name:'Tielt (Tielt-Winge)',key:'nis-24135A'},{name:'Meensel-Kiezegem (Tielt-Winge)',key:'nis-24135B'},{name:'Sint-Joris-Winge (Tielt-Winge)',key:'nis-24135C'},{name:'Houwaart (Tielt-Winge)',key:'nis-24135D'},{name:'Zoutleeuw + deelgemeenten',key:'nis-24130'},{name:'Zoutleeuw (Zoutleeuw)',key:'nis-24130A'},{name:'Helen-Bos (Zoutleeuw)',key:'nis-24130B'},{name:'Halle-Booienhoven (Zoutleeuw)',key:'nis-24130C'},{name:'Dormaal (Zoutleeuw)',key:'nis-24130D'},{name:'Budingen (Zoutleeuw)',key:'nis-24130E'},{name:'Geetbets + deelgemeenten',key:'nis-24028'},{name:'Geetbets (Geetbets)',key:'nis-24028A'},{name:'Grazen (Geetbets)',key:'nis-24028C'},{name:'Rummen (Geetbets)',key:'nis-24028B'},{name:'Bekkevoort + deelgemeenten',key:'nis-24008'},{name:'Bekkevoort (Bekkevoort)',key:'nis-24008A'},{name:'Assent (Bekkevoort)',key:'nis-24008B'},{name:'Molenbeek-Wersbeek (Bekkevoort)',key:'nis-24008C'},{name:'Kortenaken + deelgemeenten',key:'nis-24054'},{name:'Ransberg (Kortenaken)',key:'nis-24054B'},{name:'Kortenaken (Kortenaken)',key:'nis-24054A'},{name:'Kersbeek-Miskom (Kortenaken)',key:'nis-24054D'},{name:'Waanrode (Kortenaken)',key:'nis-24054E'},{name:'Hoeleden (Kortenaken)',key:'nis-24054C'},{name:'Rotselaar + deelgemeenten',key:'nis-24094'},{name:'Rotselaar (Rotselaar)',key:'nis-24094A'},{name:'Werchter (Rotselaar)',key:'nis-24094B'},{name:'Wezemaal (Rotselaar)',key:'nis-24094C'},{name:'Tremelo + deelgemeenten',key:'nis-24109'},{name:'Tremelo (Tremelo)',key:'nis-24109A'},{name:'Baal (Tremelo)',key:'nis-24109B'},{name:'Begijnendijk + deelgemeenten',key:'nis-24007'},{name:'Begijnendijk (Begijnendijk)',key:'nis-24007A'},{name:'Betekom (Begijnendijk)',key:'nis-24007B'},{name:'Lubbeek + deelgemeenten',key:'nis-24066'},{name:'Lubbeek (Lubbeek)',key:'nis-24066A'},{name:'Binkom (Lubbeek)',key:'nis-24066B'},{name:'Pellenberg (Lubbeek)',key:'nis-24066C'},{name:'Linden (Lubbeek)',key:'nis-24066D'},{name:'Holsbeek + deelgemeenten',key:'nis-24043'},{name:'Holsbeek (Holsbeek)',key:'nis-24043A'},{name:'Kortrijk-Dutsel (Holsbeek)',key:'nis-24043B'},{name:'Sint-Pieters-Rode (Holsbeek)',key:'nis-24043D'},{name:'Nieuwrode (Holsbeek)',key:'nis-24043C'},{name:'Bierbeek + deelgemeenten',key:'nis-24011'},{name:'Bierbeek (Bierbeek)',key:'nis-24011A'},{name:'Korbeek-Lo (Bierbeek)',key:'nis-24011B'},{name:'Lovenjoel (Bierbeek)',key:'nis-24011C'},{name:'Opvelp (Bierbeek)',key:'nis-24011D'},{name:'Boutersem + deelgemeenten',key:'nis-24016'},{name:'Boutersem (Boutersem)',key:'nis-24016A-I'},{name:'Vertrijk (Boutersem)',key:'nis-24016A-II'},{name:'Kerkom (Boutersem)',key:'nis-24016B'},{name:'Willebringen (Boutersem)',key:'nis-24016D-II'},{name:'Roosbeek (Boutersem)',key:'nis-24016C'},{name:'Neervelp (Boutersem)',key:'nis-24016D-I'},{name:'Regio Leuven',key:'reg-leuven'},{name:'Leuven + deelgemeenten',key:'nis-24062'},{name:'Wilsele (Leuven)',key:'nis-24062-Y'},{name:'Heverlee (Leuven)',key:'nis-24062-Z'},{name:'Leuven (Leuven)',key:'nis-24062A'},{name:'Kessel-Lo (Leuven)',key:'nis-24062C'},{name:'Provincie Waals-Brabant',key:'nis-20002'},{name:'Regio Waals-Brabant',key:'reg-waals-brabant'},{name:'Bevekom + deelgemeenten',key:'nis-25005'},{name:'Beauvechain (Bevekom)',key:'nis-25005A'},{name:'L"Écluse (Bevekom)',key:'nis-25005B'},{name:'Tourinnes-la-Grosse (Bevekom)',key:'nis-25005C'},{name:'Hamme-Mille (Bevekom)',key:'nis-25005E'},{name:'Nodebais (Bevekom)',key:'nis-25005D'},{name:'Chastre + deelgemeenten',key:'nis-25117'},{name:'Chastre-Villeroux-Blanmont (Chastre)',key:'nis-25117A'},{name:'Saint-Géry (Chastre)',key:'nis-25117C'},{name:'Cortil-Noirmont (Chastre)',key:'nis-25117B'},{name:'Gentinnes (Chastre)',key:'nis-25117D'},{name:'Chaumont-Gistoux + deelgemeenten',key:'nis-25018'},{name:'Chaumont-Gistoux (Chaumont-Gistoux)',key:'nis-25018A'},{name:'Corroy-le-Grand (Chaumont-Gistoux)',key:'nis-25018B'},{name:'Dion-le-Mont (Chaumont-Gistoux)',key:'nis-25018C'},{name:'Dion-le-Val (Chaumont-Gistoux)',key:'nis-25018D'},{name:'Bonlez (Chaumont-Gistoux)',key:'nis-25018E'},{name:'Longueville (Chaumont-Gistoux)',key:'nis-25018F'},{name:'Court-Saint-Etienne + deelgemeenten',key:'nis-25023'},{name:'Court-Saint-Étienne (Court-Saint-Etienne)',key:'nis-25023A'},{name:'Eigenbrakel + deelgemeenten',key:'nis-25014'},{name:'Lillois-Witterzée (Eigenbrakel)',key:'nis-25014B'},{name:'Braine-l"Alleud (Eigenbrakel)',key:'nis-25014A'},{name:'Ophain-Bois-Seigneur-Isaac (Eigenbrakel)',key:'nis-25014C'},{name:'Geldenaken + deelgemeenten',key:'nis-25048'},{name:'Jodoigne (Geldenaken)',key:'nis-25048A'},{name:'Jodoigne-Souveraine (Geldenaken)',key:'nis-25048B'},{name:'Jauchelette (Geldenaken)',key:'nis-25048C'},{name:'Dongelberg (Geldenaken)',key:'nis-25048D'},{name:'Lathuy (Geldenaken)',key:'nis-25048E'},{name:'Mélin (Geldenaken)',key:'nis-25048F'},{name:'Saint-Remy-Geest (Geldenaken)',key:'nis-25048G'},{name:'Zétrud-Lumay (Geldenaken)',key:'nis-25048H'},{name:'Saint-Jean-Geest (Geldenaken)',key:'nis-25048J'},{name:'Piétrain (Geldenaken)',key:'nis-25048K'},{name:'Genepien + deelgemeenten',key:'nis-25031'},{name:'Genappe (Genepien)',key:'nis-25031A'},{name:'Loupoigne (Genepien)',key:'nis-25031C'},{name:'Houtain-le-Val (Genepien)',key:'nis-25031D'},{name:'Baisy-Thy (Genepien)',key:'nis-25031B'},{name:'Glabais (Genepien)',key:'nis-25031F'},{name:'Vieux-Genappe (Genepien)',key:'nis-25031E'},{name:'Ways (Genepien)',key:'nis-25031G'},{name:'Bousval (Genepien)',key:'nis-25031H'},{name:'Graven + deelgemeenten',key:'nis-25037'},{name:'Archennes (Graven)',key:'nis-25037B'},{name:'Grez-Doiceau (Graven)',key:'nis-25037A'},{name:'Biez (Graven)',key:'nis-25037C'},{name:'Bossut-Gottechain (Graven)',key:'nis-25037D'},{name:'Nethen (Graven)',key:'nis-25037E'},{name:'Hélécine + deelgemeenten',key:'nis-25118'},{name:'Neerheylissem (Hélécine)',key:'nis-25118A'},{name:'Opheylissem (Hélécine)',key:'nis-25118B'},{name:'Linsmeau (Hélécine)',key:'nis-25118C'},{name:'Incourt + deelgemeenten',key:'nis-25043'},{name:'Incourt (Incourt)',key:'nis-25043A'},{name:'Opprebais (Incourt)',key:'nis-25043C'},{name:'Glimes (Incourt)',key:'nis-25043B'},{name:'Roux-Miroir (Incourt)',key:'nis-25043D'},{name:'Piètrebais (Incourt)',key:'nis-25043E'},{name:'Itter + deelgemeenten',key:'nis-25044'},{name:'Ittre (Itter)',key:'nis-25044A'},{name:'Haut-Ittre (Itter)',key:'nis-25044B'},{name:'Virginal-Samme (Itter)',key:'nis-25044C'},{name:'Kasteelbrakel + deelgemeenten',key:'nis-25015'},{name:'Braine-le-Château (Kasteelbrakel)',key:'nis-25015A'},{name:'Wauthier-Braine (Kasteelbrakel)',key:'nis-25015B'},{name:'Lasne + deelgemeenten',key:'nis-25119'},{name:'Lasne-Chapelle-Saint-Lambert (Lasne)',key:'nis-25119A'},{name:'Maransart (Lasne)',key:'nis-25119C'},{name:'Couture-Saint-Germain (Lasne)',key:'nis-25119B'},{name:'Ohain (Lasne)',key:'nis-25119D'},{name:'Plancenoit (Lasne)',key:'nis-25119E'},{name:'Mont-Saint-Guibert + deelgemeenten',key:'nis-25068'},{name:'Mont-Saint-Guibert (Mont-Saint-Guibert)',key:'nis-25068A'},{name:'Corbais (Mont-Saint-Guibert)',key:'nis-25068B'},{name:'Hévillers (Mont-Saint-Guibert)',key:'nis-25068C'},{name:'Nijvel + deelgemeenten',key:'nis-25072'},{name:'Nivelles (Nijvel)',key:'nis-25072A'},{name:'Baulers (Nijvel)',key:'nis-25072B'},{name:'Thines (Nijvel)',key:'nis-25072C'},{name:'Monstreux (Nijvel)',key:'nis-25072D'},{name:'Bornival (Nijvel)',key:'nis-25072E'},{name:'Orp-Jauche + deelgemeenten',key:'nis-25120'},{name:'Orp-le-Grand (Orp-Jauche)',key:'nis-25120A'},{name:'Jandrain-Jandrenouille (Orp-Jauche)',key:'nis-25120B'},{name:'Folx-les-Caves (Orp-Jauche)',key:'nis-25120D'},{name:'Marilles (Orp-Jauche)',key:'nis-25120F'},{name:'Énines (Orp-Jauche)',key:'nis-25120E'},{name:'Jauche (Orp-Jauche)',key:'nis-25120C'},{name:'Noduwez (Orp-Jauche)',key:'nis-25120G'},{name:'Ottignies-Louvain-la-Neuve + deelgemeenten',key:'nis-25121'},{name:'Limelette (Ottignies-Louvain-la-Neuve)',key:'nis-25121C'},{name:'Ottignies (Ottignies-Louvain-la-Neuve)',key:'nis-25121-Z'},{name:'Céroux-Mousty (Ottignies-Louvain-la-Neuve)',key:'nis-25121B'},{name:'Perwijs + deelgemeenten',key:'nis-25084'},{name:'Perwez (Perwijs)',key:'nis-25084A'},{name:'Thorembais-Saint-Trond (Perwijs)',key:'nis-25084B'},{name:'Orbais (Perwijs)',key:'nis-25084C'},{name:'Malèves-Sainte-Marie-Wastines (Perwijs)',key:'nis-25084D'},{name:'Thorembais-les-Béguines (Perwijs)',key:'nis-25084E'},{name:'Ramillies + deelgemeenten',key:'nis-25122'},{name:'Grand-Rosière-Hottomont (Ramillies)',key:'nis-25122B'},{name:'Ramillies-Offus (Ramillies)',key:'nis-25122A'},{name:'Geest-Gérompont-Petit-Rosière (Ramillies)',key:'nis-25122C'},{name:'Autre-Église (Ramillies)',key:'nis-25122F'},{name:'Huppaye (Ramillies)',key:'nis-25122G'},{name:'Mont-Saint-André (Ramillies)',key:'nis-25122D'},{name:'Bomal (Ramillies)',key:'nis-25122E'},{name:'Rebecq + deelgemeenten',key:'nis-25123'},{name:'Bierghes (Rebecq)',key:'nis-25123-Z'},{name:'Rebecq-Rognon (Rebecq)',key:'nis-25123A'},{name:'Quenast (Rebecq)',key:'nis-25123C'},{name:'Rixensart + deelgemeenten',key:'nis-25091'},{name:'Rixensart (Rixensart)',key:'nis-25091A'},{name:'Genval (Rixensart)',key:'nis-25091B'},{name:'Rosières (Rixensart)',key:'nis-25091C'},{name:'Terhulpen + deelgemeenten',key:'nis-25050'},{name:'La Hulpe (Terhulpen)',key:'nis-25050A'},{name:'Tubeke + deelgemeenten',key:'nis-25105'},{name:'Tubize (Tubeke)',key:'nis-25105A'},{name:'Oisquercq (Tubeke)',key:'nis-25105B'},{name:'Clabecq (Tubeke)',key:'nis-25105C'},{name:'Saintes (Tubeke)',key:'nis-25105D'},{name:'Villers-la-Ville + deelgemeenten',key:'nis-25107'},{name:'Villers-la-Ville (Villers-la-Ville)',key:'nis-25107A'},{name:'Tilly (Villers-la-Ville)',key:'nis-25107B'},{name:'Mellery (Villers-la-Ville)',key:'nis-25107C'},{name:'Marbais (Villers-la-Ville)',key:'nis-25107D'},{name:'Sart-Dames-Avelines (Villers-la-Ville)',key:'nis-25107E'},{name:'Walhain + deelgemeenten',key:'nis-25124'},{name:'Walhain-Saint-Paul (Walhain)',key:'nis-25124A'},{name:'Tourinnes-Saint-Lambert (Walhain)',key:'nis-25124C'},{name:'Nil-Saint-Vincent-Saint-Martin (Walhain)',key:'nis-25124B'},{name:'Waterloo + deelgemeenten',key:'nis-25110'},{name:'Waterloo (Waterloo)',key:'nis-25110A'},{name:'Waver + deelgemeenten',key:'nis-25112'},{name:'Wavre (Waver)',key:'nis-25112A'},{name:'Bierges (Waver)',key:'nis-25112B'},{name:'Limal (Waver)',key:'nis-25112C'},{name:'Provincie West-Vlaanderen',key:'nis-30000'},{name:'Regio Brugge',key:'reg-brugge'},{name:'Brugge + deelgemeenten',key:'nis-31005'},{name:'Brugge (Brugge)',key:'nis-31005A'},{name:'Lissewege (Brugge)',key:'nis-31005B'},{name:'Dudzele (Brugge)',key:'nis-31005C'},{name:'Koolkerke (Brugge)',key:'nis-31005D'},{name:'Sint-Kruis (Brugge)',key:'nis-31005E'},{name:'Assebroek (Brugge)',key:'nis-31005F'},{name:'Sint-Michiels (Brugge)',key:'nis-31005G'},{name:'Sint-Andries (Brugge)',key:'nis-31005H'},{name:'Regio Brugse Ommeland',key:'reg-brugse-ommeland'},{name:'Oostkamp + deelgemeenten',key:'nis-31022'},{name:'Oostkamp (Oostkamp)',key:'nis-31022A'},{name:'Hertsberge (Oostkamp)',key:'nis-31022B'},{name:'Waardamme (Oostkamp)',key:'nis-31022D'},{name:'Ruddervoorde (Oostkamp)',key:'nis-31022C'},{name:'Zedelgem + deelgemeenten',key:'nis-31040'},{name:'Zedelgem (Zedelgem)',key:'nis-31040A'},{name:'Loppem (Zedelgem)',key:'nis-31040B'},{name:'Veldegem (Zedelgem)',key:'nis-31040C'},{name:'Aartrijke (Zedelgem)',key:'nis-31040D'},{name:'Damme + deelgemeenten',key:'nis-31006'},{name:'Damme (Damme)',key:'nis-31006-Z'},{name:'Hoeke (Damme)',key:'nis-31006C-I'},{name:'Oostkerke (Damme)',key:'nis-31006C-II'},{name:'Sijsele (Damme)',key:'nis-31006F'},{name:'Lapscheure (Damme)',key:'nis-31006D'},{name:'Moerkerke (Damme)',key:'nis-31006E'},{name:'Zuienkerke + deelgemeenten',key:'nis-31042'},{name:'Meetkerke (Zuienkerke)',key:'nis-31042B'},{name:'Zuienkerke (Zuienkerke)',key:'nis-31042A'},{name:'Houtave (Zuienkerke)',key:'nis-31042C'},{name:'Nieuwmunster (Zuienkerke)',key:'nis-31042D'},{name:'Ichtegem + deelgemeenten',key:'nis-35006'},{name:'Ichtegem (Ichtegem)',key:'nis-35006A'},{name:'Eernegem (Ichtegem)',key:'nis-35006B'},{name:'Bekegem (Ichtegem)',key:'nis-35006C'},{name:'Jabbeke + deelgemeenten',key:'nis-31012'},{name:'Jabbeke (Jabbeke)',key:'nis-31012A'},{name:'Zerkegem (Jabbeke)',key:'nis-31012B'},{name:'Stalhille (Jabbeke)',key:'nis-31012C'},{name:'Varsenare (Jabbeke)',key:'nis-31012D'},{name:'Snellegem (Jabbeke)',key:'nis-31012E'},{name:'Beernem + deelgemeenten',key:'nis-31003'},{name:'Oedelem (Beernem)',key:'nis-31003B'},{name:'Beernem (Beernem)',key:'nis-31003A'},{name:'Sint-Joris (Beernem)',key:'nis-31003C'},{name:'Torhout + deelgemeenten',key:'nis-31033'},{name:'Torhout (Torhout)',key:'nis-31033-Z'},{name:'Oudenburg + deelgemeenten',key:'nis-35014'},{name:'Oudenburg (Oudenburg)',key:'nis-35014A'},{name:'Ettelgem (Oudenburg)',key:'nis-35014B'},{name:'Roksem (Oudenburg)',key:'nis-35014C'},{name:'Westkerke (Oudenburg)',key:'nis-35014D'},{name:'Gistel + deelgemeenten',key:'nis-35005'},{name:'Gistel (Gistel)',key:'nis-35005A'},{name:'Moere (Gistel)',key:'nis-35005B'},{name:'Zevekote (Gistel)',key:'nis-35005C'},{name:'Snaaskerke (Gistel)',key:'nis-35005D'},{name:'Lichtervelde + deelgemeenten',key:'nis-36011'},{name:'Lichtervelde (Lichtervelde)',key:'nis-36011A'},{name:'Pittem + deelgemeenten',key:'nis-37011'},{name:'Egem (Pittem)',key:'nis-37011B'},{name:'Pittem (Pittem)',key:'nis-37011A'},{name:'Ardooie + deelgemeenten',key:'nis-37020'},{name:'Ardooie (Ardooie)',key:'nis-37020A'},{name:'Koolskamp (Ardooie)',key:'nis-37020B'},{name:'Wingene + deelgemeenten',key:'nis-37021'},{name:'Ruiselede (Wingene)',key:'nis-37012A'},{name:'Wingene (Wingene)',key:'nis-37018A'},{name:'Zwevezele (Wingene)',key:'nis-37018B'},{name:'Tielt + deelgemeenten',key:'nis-37022'},{name:'Meulebeke (Tielt)',key:'nis-37007A'},{name:'Schuiferskapelle (Tielt)',key:'nis-37015B'},{name:'Tielt (Tielt)',key:'nis-37015A'},{name:'Kanegem (Tielt)',key:'nis-37015C'},{name:'Aarsele (Tielt)',key:'nis-37015D'},{name:'Regio Leiestreek West-Vlaanderen',key:'reg-leiestreek-west-vlaanderen'},{name:'Ingelmunster + deelgemeenten',key:'nis-36007'},{name:'Ingelmunster (Ingelmunster)',key:'nis-36007A'},{name:'Roeselare + deelgemeenten',key:'nis-36015'},{name:'Beveren (Roeselare)',key:'nis-36015A-II'},{name:'Roeselare (Roeselare)',key:'nis-36015A-I'},{name:'Oekene (Roeselare)',key:'nis-36015B'},{name:'Rumbeke (Roeselare)',key:'nis-36015C'},{name:'Izegem + deelgemeenten',key:'nis-36008'},{name:'Emelgem (Izegem)',key:'nis-36008A-II'},{name:'Izegem (Izegem)',key:'nis-36008A-I'},{name:'Kachtem (Izegem)',key:'nis-36008B'},{name:'Ledegem + deelgemeenten',key:'nis-36010'},{name:'Ledegem (Ledegem)',key:'nis-36010A'},{name:'Rollegem-Kapelle (Ledegem)',key:'nis-36010B'},{name:'Sint-Eloois-Winkel (Ledegem)',key:'nis-36010C'},{name:'Moorslede + deelgemeenten',key:'nis-36012'},{name:'Moorslede (Moorslede)',key:'nis-36012A'},{name:'Dadizele (Moorslede)',key:'nis-36012B'},{name:'Wielsbeke + deelgemeenten',key:'nis-37017'},{name:'Wielsbeke (Wielsbeke)',key:'nis-37017A'},{name:'Ooigem (Wielsbeke)',key:'nis-37017B'},{name:'Sint-Baafs-Vijve (Wielsbeke)',key:'nis-37017C'},{name:'Dentergem + deelgemeenten',key:'nis-37002'},{name:'Dentergem (Dentergem)',key:'nis-37002A'},{name:'Markegem (Dentergem)',key:'nis-37002B'},{name:'Oeselgem (Dentergem)',key:'nis-37002C'},{name:'Wakken (Dentergem)',key:'nis-37002D'},{name:'Oostrozebeke + deelgemeenten',key:'nis-37010'},{name:'Oostrozebeke (Oostrozebeke)',key:'nis-37010A'},{name:'Kortrijk + deelgemeenten',key:'nis-34022'},{name:'Kortrijk (Kortrijk)',key:'nis-34022A'},{name:'Heule (Kortrijk)',key:'nis-34022B'},{name:'Bissegem (Kortrijk)',key:'nis-34022C'},{name:'Marke (Kortrijk)',key:'nis-34022D'},{name:'Aalbeke (Kortrijk)',key:'nis-34022E'},{name:'Rollegem (Kortrijk)',key:'nis-34022F'},{name:'Bellegem (Kortrijk)',key:'nis-34022G'},{name:'Kooigem (Kortrijk)',key:'nis-34022H'},{name:'Kuurne + deelgemeenten',key:'nis-34023'},{name:'Kuurne (Kuurne)',key:'nis-34023A'},{name:'Harelbeke + deelgemeenten',key:'nis-34013'},{name:'Bavikhove (Harelbeke)',key:'nis-34013B'},{name:'Harelbeke (Harelbeke)',key:'nis-34013A'},{name:'Hulste (Harelbeke)',key:'nis-34013C'},{name:'Deerlijk + deelgemeenten',key:'nis-34009'},{name:'Deerlijk (Deerlijk)',key:'nis-34009A'},{name:'Zwevegem + deelgemeenten',key:'nis-34042'},{name:'Zwevegem (Zwevegem)',key:'nis-34042A'},{name:'Otegem (Zwevegem)',key:'nis-34042B'},{name:'Heestert (Zwevegem)',key:'nis-34042C'},{name:'Moen (Zwevegem)',key:'nis-34042D'},{name:'Sint-Denijs (Zwevegem)',key:'nis-34042E'},{name:'Wevelgem + deelgemeenten',key:'nis-34041'},{name:'Wevelgem (Wevelgem)',key:'nis-34041A'},{name:'Gullegem (Wevelgem)',key:'nis-34041B'},{name:'Moorsele (Wevelgem)',key:'nis-34041C'},{name:'Anzegem + deelgemeenten',key:'nis-34002'},{name:'Gijzelbrechtegem (Anzegem)',key:'nis-34002B'},{name:'Anzegem (Anzegem)',key:'nis-34002A'},{name:'Kaster (Anzegem)',key:'nis-34002C'},{name:'Tiegem (Anzegem)',key:'nis-34002D'},{name:'Ingooigem (Anzegem)',key:'nis-34002E'},{name:'Vichte (Anzegem)',key:'nis-34002F'},{name:'Avelgem + deelgemeenten',key:'nis-34003'},{name:'Avelgem (Avelgem)',key:'nis-34003A'},{name:'Waarmaarde (Avelgem)',key:'nis-34003B'},{name:'Kerkhove (Avelgem)',key:'nis-34003C'},{name:'Outrijve (Avelgem)',key:'nis-34003D'},{name:'Bossuit (Avelgem)',key:'nis-34003E'},{name:'Spiere-Helkijn + deelgemeenten',key:'nis-34043'},{name:'Spiere (Spiere-Helkijn)',key:'nis-34043A'},{name:'Helkijn (Spiere-Helkijn)',key:'nis-34043B'},{name:'Waregem + deelgemeenten',key:'nis-34040'},{name:'Waregem (Waregem)',key:'nis-34040A'},{name:'Sint-Eloois-Vijve (Waregem)',key:'nis-34040D'},{name:'Beveren (Waregem)',key:'nis-34040B'},{name:'Desselgem (Waregem)',key:'nis-34040C'},{name:'Lendelede + deelgemeenten',key:'nis-34025'},{name:'Lendelede (Lendelede)',key:'nis-34025A'},{name:'Menen + deelgemeenten',key:'nis-34027'},{name:'Menen (Menen)',key:'nis-34027A'},{name:'Lauwe (Menen)',key:'nis-34027B'},{name:'Rekkem (Menen)',key:'nis-34027C'},{name:'Regio Vlaamse Kust',key:'reg-vlaamse-kust'},{name:'Knokke-Heist + deelgemeenten',key:'nis-31043'},{name:'Knokke (Knokke-Heist)',key:'nis-31043A'},{name:'Heist (Knokke-Heist)',key:'nis-31043B'},{name:'Ramskapelle (Knokke-Heist)',key:'nis-31043C'},{name:'Westkapelle (Knokke-Heist)',key:'nis-31043D'},{name:'Blankenberge + deelgemeenten',key:'nis-31004'},{name:'Blankenberge (Blankenberge)',key:'nis-31004A'},{name:'Uitkerke (Blankenberge)',key:'nis-31004B'},{name:'De Haan + deelgemeenten',key:'nis-35029'},{name:'Klemskerke (De Haan)',key:'nis-35029A'},{name:'Vlissegem (De Haan)',key:'nis-35029B'},{name:'Wenduine (De Haan)',key:'nis-35029C'},{name:'Bredene + deelgemeenten',key:'nis-35002'},{name:'Bredene (Bredene)',key:'nis-35002A'},{name:'De Panne + deelgemeenten',key:'nis-38008'},{name:'De Panne (De Panne)',key:'nis-38008A'},{name:'Adinkerke (De Panne)',key:'nis-38008B'},{name:'Oostende + deelgemeenten',key:'nis-35013'},{name:'Stene (Oostende)',key:'nis-35013-Y'},{name:'Oostende (Oostende)',key:'nis-35013-Z'},{name:'Zandvoorde (Oostende)',key:'nis-35013C'},{name:'Middelkerke + deelgemeenten',key:'nis-35011'},{name:'Middelkerke (Middelkerke)',key:'nis-35011A'},{name:'Wilskerke (Middelkerke)',key:'nis-35011B'},{name:'Leffinge (Middelkerke)',key:'nis-35011C'},{name:'Sint-Pieters-Kapelle (Middelkerke)',key:'nis-35011D'},{name:'Mannekensvere (Middelkerke)',key:'nis-35011F'},{name:'Schore (Middelkerke)',key:'nis-35011E'},{name:'Slijpe (Middelkerke)',key:'nis-35011G'},{name:'Westende (Middelkerke)',key:'nis-35011H'},{name:'Lombardsijde (Middelkerke)',key:'nis-35011J'},{name:'Nieuwpoort + deelgemeenten',key:'nis-38016'},{name:'Nieuwpoort (Nieuwpoort)',key:'nis-38016A'},{name:'Sint-Joris (Nieuwpoort)',key:'nis-38016B'},{name:'Ramskapelle (Nieuwpoort)',key:'nis-38016C'},{name:'Koksijde + deelgemeenten',key:'nis-38014'},{name:'Koksijde (Koksijde)',key:'nis-38014A'},{name:'Oostduinkerke (Koksijde)',key:'nis-38014B'},{name:'Wulpen (Koksijde)',key:'nis-38014C'},{name:'Regio Westhoek',key:'reg-westhoek'},{name:'Hooglede + deelgemeenten',key:'nis-36006'},{name:'Hooglede (Hooglede)',key:'nis-36006A'},{name:'Gits (Hooglede)',key:'nis-36006B'},{name:'Staden + deelgemeenten',key:'nis-36019'},{name:'Staden (Staden)',key:'nis-36019A'},{name:'Oostnieuwkerke (Staden)',key:'nis-36019B'},{name:'Westrozebeke (Staden)',key:'nis-36019C'},{name:'Veurne + deelgemeenten',key:'nis-38025'},{name:'Veurne (Veurne)',key:'nis-38025A'},{name:'Booitshoeke (Veurne)',key:'nis-38025B'},{name:'Avekapelle (Veurne)',key:'nis-38025C'},{name:'Eggewaartskapelle (Veurne)',key:'nis-38025D'},{name:'Zoutenaaie (Veurne)',key:'nis-38025E'},{name:'Bulskamp (Veurne)',key:'nis-38025G'},{name:'Steenkerke (Veurne)',key:'nis-38025F'},{name:'Wulveringem (Veurne)',key:'nis-38025H-I'},{name:'Vinkem (Veurne)',key:'nis-38025H-II'},{name:'Houtem (Veurne)',key:'nis-38025J'},{name:'De Moeren (Veurne)',key:'nis-38025K'},{name:'Alveringem + deelgemeenten',key:'nis-38002'},{name:'Sint-Rijkers (Alveringem)',key:'nis-38002A-III'},{name:'Alveringem (Alveringem)',key:'nis-38002A-II'},{name:'Oeren (Alveringem)',key:'nis-38002A-I'},{name:'Leisele (Alveringem)',key:'nis-38002C'},{name:'Hoogstade (Alveringem)',key:'nis-38002B'},{name:'Izenberge (Alveringem)',key:'nis-38002D'},{name:'Gijverinkhove (Alveringem)',key:'nis-38002E'},{name:'Beveren (Alveringem)',key:'nis-38002G'},{name:'Stavele (Alveringem)',key:'nis-38002F'},{name:'Diksmuide + deelgemeenten',key:'nis-32003'},{name:'Kaaskerke (Diksmuide)',key:'nis-32003A-II'},{name:'Esen (Diksmuide)',key:'nis-32003A-III'},{name:'Diksmuide (Diksmuide)',key:'nis-32003A-I'},{name:'Beerst (Diksmuide)',key:'nis-32003B'},{name:'Keiem (Diksmuide)',key:'nis-32003C'},{name:'Leke (Diksmuide)',key:'nis-32003D'},{name:'Vladslo (Diksmuide)',key:'nis-32003E'},{name:'Woumen (Diksmuide)',key:'nis-32003F'},{name:'Nieuwkapelle (Diksmuide)',key:'nis-32003G'},{name:'Oudekapelle (Diksmuide)',key:'nis-32003H'},{name:'Oostkerke (Diksmuide)',key:'nis-32003K'},{name:'Sint-Jacobs-Kapelle (Diksmuide)',key:'nis-32003J'},{name:'Lampernisse (Diksmuide)',key:'nis-32003L'},{name:'Pervijze (Diksmuide)',key:'nis-32003M'},{name:'Stuivekenskerke (Diksmuide)',key:'nis-32003N'},{name:'Kortemark + deelgemeenten',key:'nis-32011'},{name:'Kortemark (Kortemark)',key:'nis-32011A'},{name:'Werken (Kortemark)',key:'nis-32011C'},{name:'Handzame (Kortemark)',key:'nis-32011B'},{name:'Zarren (Kortemark)',key:'nis-32011D'},{name:'Lo-Reninge + deelgemeenten',key:'nis-32030'},{name:'Lo (Lo-Reninge)',key:'nis-32030A'},{name:'Pollinkhove (Lo-Reninge)',key:'nis-32030B'},{name:'Reninge (Lo-Reninge)',key:'nis-32030C'},{name:'Noordschote (Lo-Reninge)',key:'nis-32030D'},{name:'Houthulst + deelgemeenten',key:'nis-32006'},{name:'Klerken (Houthulst)',key:'nis-32006-Z'},{name:'Houthulst (Houthulst)',key:'nis-32006A'},{name:'Merkem (Houthulst)',key:'nis-32006B'},{name:'Koekelare + deelgemeenten',key:'nis-32010'},{name:'Koekelare (Koekelare)',key:'nis-32010A'},{name:'Bovekerke (Koekelare)',key:'nis-32010B'},{name:'Zande (Koekelare)',key:'nis-32010C'},{name:'Vleteren + deelgemeenten',key:'nis-33041'},{name:'Oostvleteren (Vleteren)',key:'nis-33041A'},{name:'Westvleteren (Vleteren)',key:'nis-33041B'},{name:'Woesten (Vleteren)',key:'nis-33041C'},{name:'Ieper + deelgemeenten',key:'nis-33011'},{name:'Brielen (Ieper)',key:'nis-33011B'},{name:'Ieper (Ieper)',key:'nis-33011A'},{name:'Sint-Jan (Ieper)',key:'nis-33011C'},{name:'Boezinge (Ieper)',key:'nis-33011D'},{name:'Zuidschote (Ieper)',key:'nis-33011E'},{name:'Elverdinge (Ieper)',key:'nis-33011F'},{name:'Vlamertinge (Ieper)',key:'nis-33011G'},{name:'Dikkebus (Ieper)',key:'nis-33011H'},{name:'Voormezele (Ieper)',key:'nis-33011J'},{name:'Hollebeke (Ieper)',key:'nis-33011K'},{name:'Zillebeke (Ieper)',key:'nis-33011L'},{name:'Langemark-Poelkapelle + deelgemeenten',key:'nis-33040'},{name:'Bikschote (Langemark-Poelkapelle)',key:'nis-33040B'},{name:'Langemark (Langemark-Poelkapelle)',key:'nis-33040A'},{name:'Poelkapelle (Langemark-Poelkapelle)',key:'nis-33040C'},{name:'Heuvelland + deelgemeenten',key:'nis-33039'},{name:'Loker (Heuvelland)',key:'nis-33039-Z'},{name:'Wulvergem (Heuvelland)',key:'nis-33039C'},{name:'Kemmel (Heuvelland)',key:'nis-33039A'},{name:'Wijtschate (Heuvelland)',key:'nis-33039B'},{name:'Nieuwkerke (Heuvelland)',key:'nis-33039D'},{name:'Dranouter (Heuvelland)',key:'nis-33039E'},{name:'Westouter (Heuvelland)',key:'nis-33039G'},{name:'Mesen + deelgemeenten',key:'nis-33016'},{name:'Mesen (Mesen)',key:'nis-33016A'},{name:'Poperinge + deelgemeenten',key:'nis-33021'},{name:'Reningelst (Poperinge)',key:'nis-33021B'},{name:'Poperinge (Poperinge)',key:'nis-33021A'},{name:'Krombeke (Poperinge)',key:'nis-33021C'},{name:'Proven (Poperinge)',key:'nis-33021D'},{name:'Roesbrugge-Haringe (Poperinge)',key:'nis-33021E'},{name:'Watou (Poperinge)',key:'nis-33021F'},{name:'Zonnebeke + deelgemeenten',key:'nis-33037'},{name:'Zonnebeke (Zonnebeke)',key:'nis-33037A'},{name:'Passendale (Zonnebeke)',key:'nis-33037B'},{name:'Beselare (Zonnebeke)',key:'nis-33037C'},{name:'Geluveld (Zonnebeke)',key:'nis-33037D'},{name:'Zandvoorde (Zonnebeke)',key:'nis-33037E'},{name:'Wervik + deelgemeenten',key:'nis-33029'},{name:'Wervik (Wervik)',key:'nis-33029A'},{name:'Geluwe (Wervik)',key:'nis-33029B'},{name:'Provincie Oost-Vlaanderen',key:'nis-40000'},{name:'Regio Gent',key:'reg-gent'},{name:'Gent + deelgemeenten',key:'nis-44021'},{name:'Gent (Gent)',key:'nis-44021-Z'},{name:'Mendonk (Gent)',key:'nis-44021D-II'},{name:'Desteldonk (Gent)',key:'nis-44021D-III'},{name:'Oostakker (Gent)',key:'nis-44021D-IV'},{name:'Sint-Kruis-Winkel (Gent)',key:'nis-44021D-I'},{name:'Sint-Amandsberg (Gent)',key:'nis-44021E'},{name:'Gentbrugge (Gent)',key:'nis-44021F'},{name:'Zwijnaarde (Gent)',key:'nis-44021H'},{name:'Ledeberg (Gent)',key:'nis-44021G'},{name:'Afsnee (Gent)',key:'nis-44021J-II'},{name:'Sint-Denijs-Westrem (Gent)',key:'nis-44021J-I'},{name:'Drongen (Gent)',key:'nis-44021K'},{name:'Mariakerke (Gent)',key:'nis-44021L'},{name:'Wondelgem (Gent)',key:'nis-44021M'},{name:'Regio Leiestreek Oost-Vlaanderen',key:'reg-leiestreek-oost-vlaanderen'},{name:'Sint-Martens-Latem + deelgemeenten',key:'nis-44064'},{name:'Sint-Martens-Latem (Sint-Martens-Latem)',key:'nis-44064A'},{name:'Deurle (Sint-Martens-Latem)',key:'nis-44064B'},{name:'Zulte + deelgemeenten',key:'nis-44081'},{name:'Zulte (Zulte)',key:'nis-44081A'},{name:'Olsene (Zulte)',key:'nis-44081B'},{name:'Machelen (Zulte)',key:'nis-44081C'},{name:'Deinze + deelgemeenten',key:'nis-44083'},{name:'Deinze (Deinze)',key:'nis-44011A'},{name:'Astene (Deinze)',key:'nis-44011B'},{name:'Grammene (Deinze)',key:'nis-44011E'},{name:'Petegem-aan-de-Leie (Deinze)',key:'nis-44011C'},{name:'Zeveren (Deinze)',key:'nis-44011D'},{name:'Gottem (Deinze)',key:'nis-44011F'},{name:'Meigem (Deinze)',key:'nis-44011J'},{name:'Vinkt (Deinze)',key:'nis-44011H'},{name:'Wontergem (Deinze)',key:'nis-44011G'},{name:'Bachte-Maria-Leerne (Deinze)',key:'nis-44011K'},{name:'Sint-Martens-Leerne (Deinze)',key:'nis-44011L'},{name:'Nevele (Deinze)',key:'nis-44049A'},{name:'Poesele (Deinze)',key:'nis-44049B'},{name:'Hansbeke (Deinze)',key:'nis-44049C'},{name:'Merendree (Deinze)',key:'nis-44049D'},{name:'Landegem (Deinze)',key:'nis-44049E'},{name:'Vosselare (Deinze)',key:'nis-44049F'},{name:'Nazareth-De Pinte + deelgemeenten',key:'nis-44086'},{name:'Zevergem (Nazareth-De Pinte)',key:'nis-44012B'},{name:'De Pinte (Nazareth-De Pinte)',key:'nis-44012A'},{name:'Nazareth (Nazareth-De Pinte)',key:'nis-44048A'},{name:'Eke (Nazareth-De Pinte)',key:'nis-44048B'},{name:'Regio Meetjesland',key:'reg-meetjesland'},{name:'Zelzate + deelgemeenten',key:'nis-43018'},{name:'Zelzate (Zelzate)',key:'nis-43018A'},{name:'Eeklo + deelgemeenten',key:'nis-43005'},{name:'Eeklo (Eeklo)',key:'nis-43005A'},{name:'Assenede + deelgemeenten',key:'nis-43002'},{name:'Assenede (Assenede)',key:'nis-43002A'},{name:'Bassevelde (Assenede)',key:'nis-43002C'},{name:'Oosteeklo (Assenede)',key:'nis-43002B'},{name:'Boekhoute (Assenede)',key:'nis-43002D'},{name:'Kaprijke + deelgemeenten',key:'nis-43007'},{name:'Kaprijke (Kaprijke)',key:'nis-43007A'},{name:'Lembeke (Kaprijke)',key:'nis-43007B'},{name:'Sint-Laureins + deelgemeenten',key:'nis-43014'},{name:'Sint-Laureins (Sint-Laureins)',key:'nis-43014A'},{name:'Sint-Margriete (Sint-Laureins)',key:'nis-43014B'},{name:'Sint-Jan-in-Eremo (Sint-Laureins)',key:'nis-43014C'},{name:'Waterland-Oudeman (Sint-Laureins)',key:'nis-43014D'},{name:'Watervliet (Sint-Laureins)',key:'nis-43014E'},{name:'Maldegem + deelgemeenten',key:'nis-43010'},{name:'Middelburg (Maldegem)',key:'nis-43010B'},{name:'Maldegem (Maldegem)',key:'nis-43010A'},{name:'Adegem (Maldegem)',key:'nis-43010C'},{name:'Evergem + deelgemeenten',key:'nis-44019'},{name:'Evergem (Evergem)',key:'nis-44019A'},{name:'Kluizen (Evergem)',key:'nis-44019C-II'},{name:'Sleidinge (Evergem)',key:'nis-44019B'},{name:'Ertvelde (Evergem)',key:'nis-44019C-I'},{name:'Aalter + deelgemeenten',key:'nis-44084'},{name:'Aalter (Aalter)',key:'nis-44001A'},{name:'Bellem (Aalter)',key:'nis-44001B'},{name:'Lotenhulle (Aalter)',key:'nis-44001C'},{name:'Poeke (Aalter)',key:'nis-44001D'},{name:'Knesselare (Aalter)',key:'nis-44029A'},{name:'Ursel (Aalter)',key:'nis-44029B'},{name:'Lievegem + deelgemeenten',key:'nis-44085'},{name:'Lovendegem (Lievegem)',key:'nis-44036A'},{name:'Vinderhoute (Lievegem)',key:'nis-44036B'},{name:'Waarschoot (Lievegem)',key:'nis-44072A'},{name:'Zomergem (Lievegem)',key:'nis-44080A'},{name:'Ronsele (Lievegem)',key:'nis-44080B'},{name:'Oostwinkel (Lievegem)',key:'nis-44080C'},{name:'Regio Vlaamse Ardennen',key:'reg-vlaamse-ardennen'},{name:'Geraardsbergen + deelgemeenten',key:'nis-41018'},{name:'Geraardsbergen (Geraardsbergen)',key:'nis-41018A'},{name:'Nederboelare (Geraardsbergen)',key:'nis-41018B'},{name:'Onkerzele (Geraardsbergen)',key:'nis-41018C'},{name:'Overboelare (Geraardsbergen)',key:'nis-41018D'},{name:'Goeferdinge (Geraardsbergen)',key:'nis-41018E'},{name:'Zarlardinge (Geraardsbergen)',key:'nis-41018F'},{name:'Schendelbeke (Geraardsbergen)',key:'nis-41018G'},{name:'Idegem (Geraardsbergen)',key:'nis-41018K'},{name:'Ophasselt (Geraardsbergen)',key:'nis-41018H'},{name:'Smeerebbe-Vloerzegem (Geraardsbergen)',key:'nis-41018J'},{name:'Grimminge (Geraardsbergen)',key:'nis-41018L'},{name:'Nieuwenhove (Geraardsbergen)',key:'nis-41018N'},{name:'Zandbergen (Geraardsbergen)',key:'nis-41018M'},{name:'Waarbeke (Geraardsbergen)',key:'nis-41018P'},{name:'Viane (Geraardsbergen)',key:'nis-41018S'},{name:'Moerbeke (Geraardsbergen)',key:'nis-41018R'},{name:'Sint-Lievens-Houtem + deelgemeenten',key:'nis-41063'},{name:'Sint-Lievens-Houtem (Sint-Lievens-Houtem)',key:'nis-41063A'},{name:'Bavegem (Sint-Lievens-Houtem)',key:'nis-41063B'},{name:'Letterhoutem (Sint-Lievens-Houtem)',key:'nis-41063C'},{name:'Vlierzele (Sint-Lievens-Houtem)',key:'nis-41063D'},{name:'Zonnegem (Sint-Lievens-Houtem)',key:'nis-41063E'},{name:'Herzele + deelgemeenten',key:'nis-41027'},{name:'Herzele (Herzele)',key:'nis-41027A'},{name:'Borsbeke (Herzele)',key:'nis-41027C'},{name:'Hillegem (Herzele)',key:'nis-41027B'},{name:'Ressegem (Herzele)',key:'nis-41027D'},{name:'Sint-Antelinks (Herzele)',key:'nis-41027F'},{name:'Steenhuize-Wijnhuize (Herzele)',key:'nis-41027G'},{name:'Sint-Lievens-Esse (Herzele)',key:'nis-41027H'},{name:'Woubrechtegem (Herzele)',key:'nis-41027E'},{name:'Zottegem + deelgemeenten',key:'nis-41081'},{name:'Zottegem (Zottegem)',key:'nis-41081A'},{name:'Oombergen (Zottegem)',key:'nis-41081B-II'},{name:'Elene (Zottegem)',key:'nis-41081B-I'},{name:'Leeuwergem (Zottegem)',key:'nis-41081C'},{name:'Grotenberge (Zottegem)',key:'nis-41081D'},{name:'Godveerdegem (Zottegem)',key:'nis-41081E'},{name:'Erwetegem (Zottegem)',key:'nis-41081F'},{name:'Sint-Goriks-Oudenhove (Zottegem)',key:'nis-41081G'},{name:'Strijpen (Zottegem)',key:'nis-41081H'},{name:'Velzeke-Ruddershove (Zottegem)',key:'nis-41081J'},{name:'Sint-Maria-Oudenhove (Zottegem)',key:'nis-41081K'},{name:'Lierde + deelgemeenten',key:'nis-45063'},{name:'Hemelveerdegem (Lierde)',key:'nis-45063B'},{name:'Sint-Maria-Lierde (Lierde)',key:'nis-45063A'},{name:'Sint-Martens-Lierde (Lierde)',key:'nis-45063D'},{name:'Deftinge (Lierde)',key:'nis-45063C'},{name:'Ronse + deelgemeenten',key:'nis-45041'},{name:'Ronse (Ronse)',key:'nis-45041A'},{name:'Zwalm + deelgemeenten',key:'nis-45065'},{name:'Paulatem (Zwalm)',key:'nis-45065B'},{name:'Sint-Maria-Latem (Zwalm)',key:'nis-45065C'},{name:'Munkzwalm (Zwalm)',key:'nis-45065A'},{name:'Dikkele (Zwalm)',key:'nis-45065F'},{name:'Hundelgem (Zwalm)',key:'nis-45065G'},{name:'Meilegem (Zwalm)',key:'nis-45065D'},{name:'Roborst (Zwalm)',key:'nis-45065H'},{name:'Rozebeke (Zwalm)',key:'nis-45065J'},{name:'Sint-Blasius-Boekel (Zwalm)',key:'nis-45065K'},{name:'Beerlegem (Zwalm)',key:'nis-45065E'},{name:'Sint-Denijs-Boekel (Zwalm)',key:'nis-45065L'},{name:'Nederzwalm-Hermelgem (Zwalm)',key:'nis-45065M'},{name:'Brakel + deelgemeenten',key:'nis-45059'},{name:'Nederbrakel (Brakel)',key:'nis-45059A'},{name:'Elst (Brakel)',key:'nis-45059D'},{name:'Zegelsem (Brakel)',key:'nis-45059C'},{name:'Opbrakel (Brakel)',key:'nis-45059B'},{name:'Everbeek (Brakel)',key:'nis-45059G'},{name:'Parike (Brakel)',key:'nis-45059F'},{name:'Michelbeke (Brakel)',key:'nis-45059E'},{name:'Horebeke + deelgemeenten',key:'nis-45062'},{name:'Sint-Maria-Horebeke (Horebeke)',key:'nis-45062A'},{name:'Sint-Kornelis-Horebeke (Horebeke)',key:'nis-45062B'},{name:'Maarkedal + deelgemeenten',key:'nis-45064'},{name:'Etikhove (Maarkedal)',key:'nis-45064A'},{name:'Nukerke (Maarkedal)',key:'nis-45064B'},{name:'Maarke-Kerkem (Maarkedal)',key:'nis-45064C'},{name:'Schorisse (Maarkedal)',key:'nis-45064D'},{name:'Kluisbergen + deelgemeenten',key:'nis-45060'},{name:'Ruien (Kluisbergen)',key:'nis-45060A'},{name:'Berchem (Kluisbergen)',key:'nis-45060B'},{name:'Kwaremont (Kluisbergen)',key:'nis-45060C'},{name:'Zulzeke (Kluisbergen)',key:'nis-45060D'},{name:'Oudenaarde + deelgemeenten',key:'nis-45035'},{name:'Edelare (Oudenaarde)',key:'nis-45035A-IV'},{name:'Leupegem (Oudenaarde)',key:'nis-45035A-III'},{name:'Bevere (Oudenaarde)',key:'nis-45035A-II'},{name:'Oudenaarde (Oudenaarde)',key:'nis-45035A-I'},{name:'Nederename (Oudenaarde)',key:'nis-45035A-VII'},{name:'Eine (Oudenaarde)',key:'nis-45035A-VIII'},{name:'Ename (Oudenaarde)',key:'nis-45035A-VI'},{name:'Volkegem (Oudenaarde)',key:'nis-45035A-V'},{name:'Heurne (Oudenaarde)',key:'nis-45035B'},{name:'Welden (Oudenaarde)',key:'nis-45035C'},{name:'Mater (Oudenaarde)',key:'nis-45035D'},{name:'Melden (Oudenaarde)',key:'nis-45035E'},{name:'Mullem (Oudenaarde)',key:'nis-45035F'},{name:'Wortegem-Petegem + deelgemeenten',key:'nis-45061'},{name:'Petegem-aan-de-Schelde (Wortegem-Petegem)',key:'nis-45061A'},{name:'Elsegem (Wortegem-Petegem)',key:'nis-45061D'},{name:'Ooike (Wortegem-Petegem)',key:'nis-45061C-I'},{name:'Moregem (Wortegem-Petegem)',key:'nis-45061C-II'},{name:'Wortegem (Wortegem-Petegem)',key:'nis-45061B'},{name:'Oosterzele + deelgemeenten',key:'nis-44052'},{name:'Balegem (Oosterzele)',key:'nis-44052B'},{name:'Oosterzele (Oosterzele)',key:'nis-44052A'},{name:'Scheldewindeke (Oosterzele)',key:'nis-44052C'},{name:'Moortsele (Oosterzele)',key:'nis-44052D'},{name:'Landskouter (Oosterzele)',key:'nis-44052E'},{name:'Gijzenzele (Oosterzele)',key:'nis-44052F'},{name:'Gavere + deelgemeenten',key:'nis-44020'},{name:'Gavere (Gavere)',key:'nis-44020A'},{name:'Semmerzake (Gavere)',key:'nis-44020B'},{name:'Vurste (Gavere)',key:'nis-44020C'},{name:'Asper (Gavere)',key:'nis-44020F'},{name:'Baaigem (Gavere)',key:'nis-44020D'},{name:'Dikkelvenne (Gavere)',key:'nis-44020E'},{name:'Kruisem + deelgemeenten',key:'nis-45068'},{name:'Kruishoutem (Kruisem)',key:'nis-45017-Z'},{name:'Wannegem-Lede (Kruisem)',key:'nis-45017C'},{name:'Nokere (Kruisem)',key:'nis-45017D'},{name:'Huise (Kruisem)',key:'nis-45057C'},{name:'Ouwegem (Kruisem)',key:'nis-45057B'},{name:'Zingem (Kruisem)',key:'nis-45057A'},{name:'Regio Waasland',key:'reg-waasland'},{name:'Sint-Niklaas + deelgemeenten',key:'nis-46021'},{name:'Sint-Niklaas (Sint-Niklaas)',key:'nis-46021A'},{name:'Nieuwkerken-Waas (Sint-Niklaas)',key:'nis-46021B'},{name:'Belsele (Sint-Niklaas)',key:'nis-46021C'},{name:'Sinaai (Sint-Niklaas)',key:'nis-46021D'},{name:'Temse + deelgemeenten',key:'nis-46025'},{name:'Temse (Temse)',key:'nis-46025A'},{name:'Tielrode (Temse)',key:'nis-46025C'},{name:'Elversele (Temse)',key:'nis-46025D'},{name:'Steendorp (Temse)',key:'nis-46025B'},{name:'Sint-Gillis-Waas + deelgemeenten',key:'nis-46020'},{name:'De Klinge (Sint-Gillis-Waas)',key:'nis-46020B'},{name:'Sint-Gillis-Waas (Sint-Gillis-Waas)',key:'nis-46020-Z'},{name:'Meerdonk (Sint-Gillis-Waas)',key:'nis-46020C'},{name:'Sint-Pauwels (Sint-Gillis-Waas)',key:'nis-46020D'},{name:'Stekene + deelgemeenten',key:'nis-46024'},{name:'Stekene (Stekene)',key:'nis-46024-Z'},{name:'Kemzeke (Stekene)',key:'nis-46024B'},{name:'Waasmunster + deelgemeenten',key:'nis-42023'},{name:'Waasmunster (Waasmunster)',key:'nis-42023A'},{name:'Lochristi + deelgemeenten',key:'nis-44087'},{name:'Lochristi (Lochristi)',key:'nis-44034A'},{name:'Zaffelare (Lochristi)',key:'nis-44034B'},{name:'Zeveneken (Lochristi)',key:'nis-44034C'},{name:'Beervelde (Lochristi)',key:'nis-44034D'},{name:'Wachtebeke (Lochristi)',key:'nis-44073A'},{name:'Lokeren + deelgemeenten',key:'nis-46029'},{name:'Moerbeke (Lokeren)',key:'nis-44045A'},{name:'Eksaarde (Lokeren)',key:'nis-46014B'},{name:'Lokeren (Lokeren)',key:'nis-46014A'},{name:'Daknam (Lokeren)',key:'nis-46014C'},{name:'Beveren-Kruibeke-Zwijndrecht + deelgemeenten',key:'nis-46030'},{name:'Burcht (Beveren-Kruibeke-Zwijndrecht)',key:'nis-11056B'},{name:'Zwijndrecht (Beveren-Kruibeke-Zwijndrecht)',key:'nis-11056A'},{name:'Beveren (Beveren-Kruibeke-Zwijndrecht)',key:'nis-46003A'},{name:'Vrasene (Beveren-Kruibeke-Zwijndrecht)',key:'nis-46003B'},{name:'Verrebroek (Beveren-Kruibeke-Zwijndrecht)',key:'nis-46003C'},{name:'Kieldrecht (Beveren-Kruibeke-Zwijndrecht)',key:'nis-46003D'},{name:'Doel (Beveren-Kruibeke-Zwijndrecht)',key:'nis-46003E'},{name:'Kallo (Beveren-Kruibeke-Zwijndrecht)',key:'nis-46003F'},{name:'Melsele (Beveren-Kruibeke-Zwijndrecht)',key:'nis-46003G'},{name:'Haasdonk (Beveren-Kruibeke-Zwijndrecht)',key:'nis-46003H'},{name:'Rupelmonde (Beveren-Kruibeke-Zwijndrecht)',key:'nis-46013C'},{name:'Kruibeke (Beveren-Kruibeke-Zwijndrecht)',key:'nis-46013A'},{name:'Bazel (Beveren-Kruibeke-Zwijndrecht)',key:'nis-46013B'},{name:'Regio Scheldeland Oost-Vlaanderen',key:'reg-scheldeland-oost-vlaanderen'},{name:'Aalst + deelgemeenten',key:'nis-41002'},{name:'Aalst (Aalst)',key:'nis-41002A'},{name:'Hofstade (Aalst)',key:'nis-41002B'},{name:'Herdersem (Aalst)',key:'nis-41002D'},{name:'Gijzegem (Aalst)',key:'nis-41002C'},{name:'Moorsel (Aalst)',key:'nis-41002E'},{name:'Baardegem (Aalst)',key:'nis-41002F'},{name:'Meldert (Aalst)',key:'nis-41002G'},{name:'Erembodegem (Aalst)',key:'nis-41002H'},{name:'Nieuwerkerken (Aalst)',key:'nis-41002J'},{name:'Lede + deelgemeenten',key:'nis-41034'},{name:'Wanzele (Lede)',key:'nis-41034B'},{name:'Impe (Lede)',key:'nis-41034C'},{name:'Lede (Lede)',key:'nis-41034A'},{name:'Smetlede (Lede)',key:'nis-41034D'},{name:'Oordegem (Lede)',key:'nis-41034E'},{name:'Ninove + deelgemeenten',key:'nis-41048'},{name:'Ninove (Ninove)',key:'nis-41048A'},{name:'Okegem (Ninove)',key:'nis-41048B'},{name:'Meerbeke (Ninove)',key:'nis-41048C'},{name:'Neigem (Ninove)',key:'nis-41048D'},{name:'Lieferinge (Ninove)',key:'nis-41048E'},{name:'Denderwindeke (Ninove)',key:'nis-41048F'},{name:'Pollare (Ninove)',key:'nis-41048G'},{name:'Appelterre-Eichem (Ninove)',key:'nis-41048H'},{name:'Voorde (Ninove)',key:'nis-41048J'},{name:'Aspelare (Ninove)',key:'nis-41048K'},{name:'Nederhasselt (Ninove)',key:'nis-41048L'},{name:'Outer (Ninove)',key:'nis-41048M'},{name:'Erpe-Mere + deelgemeenten',key:'nis-41082'},{name:'Mere (Erpe-Mere)',key:'nis-41082A'},{name:'Erpe (Erpe-Mere)',key:'nis-41082B'},{name:'Aaigem (Erpe-Mere)',key:'nis-41082C'},{name:'Burst (Erpe-Mere)',key:'nis-41082D'},{name:'Bambrugge (Erpe-Mere)',key:'nis-41082E'},{name:'Ottergem (Erpe-Mere)',key:'nis-41082F'},{name:'Vlekkem (Erpe-Mere)',key:'nis-41082G'},{name:'Erondegem (Erpe-Mere)',key:'nis-41082H'},{name:'Haaltert + deelgemeenten',key:'nis-41024'},{name:'Kerksken (Haaltert)',key:'nis-41024C'},{name:'Haaltert (Haaltert)',key:'nis-41024A'},{name:'Denderhoutem (Haaltert)',key:'nis-41024B'},{name:'Heldergem (Haaltert)',key:'nis-41024D'},{name:'Denderleeuw + deelgemeenten',key:'nis-41011'},{name:'Denderleeuw (Denderleeuw)',key:'nis-41011A'},{name:'Welle (Denderleeuw)',key:'nis-41011C'},{name:'Iddergem (Denderleeuw)',key:'nis-41011B'},{name:'Dendermonde + deelgemeenten',key:'nis-42006'},{name:'Dendermonde (Dendermonde)',key:'nis-42006A'},{name:'Appels (Dendermonde)',key:'nis-42006B'},{name:'Sint-Gillis-bij-Dendermonde (Dendermonde)',key:'nis-42006C'},{name:'Baasrode (Dendermonde)',key:'nis-42006E'},{name:'Grembergen (Dendermonde)',key:'nis-42006D'},{name:'Oudegem (Dendermonde)',key:'nis-42006F'},{name:'Mespelare (Dendermonde)',key:'nis-42006G'},{name:'Schoonaarde (Dendermonde)',key:'nis-42006H'},{name:'Hamme + deelgemeenten',key:'nis-42008'},{name:'Hamme (Hamme)',key:'nis-42008A'},{name:'Moerzeke (Hamme)',key:'nis-42008B'},{name:'Wetteren + deelgemeenten',key:'nis-42025'},{name:'Massemen (Wetteren)',key:'nis-42025B'},{name:'Wetteren (Wetteren)',key:'nis-42025A'},{name:'Westrem (Wetteren)',key:'nis-42025C'},{name:'Zele + deelgemeenten',key:'nis-42028'},{name:'Zele (Zele)',key:'nis-42028A'},{name:'Buggenhout + deelgemeenten',key:'nis-42004'},{name:'Opdorp (Buggenhout)',key:'nis-42004A-II'},{name:'Buggenhout (Buggenhout)',key:'nis-42004A-I'},{name:'Wichelen + deelgemeenten',key:'nis-42026'},{name:'Wichelen (Wichelen)',key:'nis-42026A'},{name:'Serskamp (Wichelen)',key:'nis-42026B'},{name:'Schellebelle (Wichelen)',key:'nis-42026C'},{name:'Laarne + deelgemeenten',key:'nis-42010'},{name:'Laarne (Laarne)',key:'nis-42010A'},{name:'Kalken (Laarne)',key:'nis-42010B'},{name:'Lebbeke + deelgemeenten',key:'nis-42011'},{name:'Denderbelle (Lebbeke)',key:'nis-42011C'},{name:'Lebbeke (Lebbeke)',key:'nis-42011A'},{name:'Wieze (Lebbeke)',key:'nis-42011B'},{name:'Berlare + deelgemeenten',key:'nis-42003'},{name:'Uitbergen (Berlare)',key:'nis-42003B'},{name:'Berlare (Berlare)',key:'nis-42003A'},{name:'Overmere (Berlare)',key:'nis-42003C'},{name:'Destelbergen + deelgemeenten',key:'nis-44013'},{name:'Destelbergen (Destelbergen)',key:'nis-44013A'},{name:'Heusden (Destelbergen)',key:'nis-44013B'},{name:'Merelbeke-Melle + deelgemeenten',key:'nis-44088'},{name:'Melle (Merelbeke-Melle)',key:'nis-44040A'},{name:'Gontrode (Merelbeke-Melle)',key:'nis-44040B'},{name:'Lemberge (Merelbeke-Melle)',key:'nis-44043A-II'},{name:'Bottelare (Merelbeke-Melle)',key:'nis-44043B'},{name:'Merelbeke (Merelbeke-Melle)',key:'nis-44043A-I'},{name:'Munte (Merelbeke-Melle)',key:'nis-44043C'},{name:'Schelderode (Merelbeke-Melle)',key:'nis-44043D'},{name:'Melsen (Merelbeke-Melle)',key:'nis-44043E'},{name:'Provincie Henegouwen',key:'nis-50000'},{name:'Regio Henegouwen',key:'reg-henegouwen'},{name:'Aat + deelgemeenten',key:'nis-51004'},{name:'Lanquesaint (Aat)',key:'nis-51004B'},{name:'Ath (Aat)',key:'nis-51004A'},{name:'Meslin-l"Évêque (Aat)',key:'nis-51004E'},{name:'Rebaix (Aat)',key:'nis-51004C'},{name:'Ghislenghien (Aat)',key:'nis-51004F'},{name:'Isières (Aat)',key:'nis-51004D'},{name:'Gibecq (Aat)',key:'nis-51004G'},{name:'Arbre (Aat)',key:'nis-51004H'},{name:'Maffle (Aat)',key:'nis-51004J'},{name:'Irchonwelz (Aat)',key:'nis-51004K'},{name:'Villers-Notre-Dame (Aat)',key:'nis-51004N'},{name:'Ormeignies (Aat)',key:'nis-51004L'},{name:'Moulbaix (Aat)',key:'nis-51004M'},{name:'Villers-Saint-Amand (Aat)',key:'nis-51004P'},{name:'Ligne (Aat)',key:'nis-51004R'},{name:'Houtaing (Aat)',key:'nis-51004S'},{name:'Bouvignies (Aat)',key:'nis-51004U'},{name:'Mainvault (Aat)',key:'nis-51004T'},{name:'Ostiches (Aat)',key:'nis-51004V'},{name:'Beloeil + deelgemeenten',key:'nis-51008'},{name:'Grandglise (Beloeil)',key:'nis-51008B-II'},{name:'Stambruges (Beloeil)',key:'nis-51008B-I'},{name:'Belœil (Beloeil)',key:'nis-51008A'},{name:'Ramegnies (Beloeil)',key:'nis-51008F'},{name:'Quevaucamps (Beloeil)',key:'nis-51008C'},{name:'Thumaide (Beloeil)',key:'nis-51008E'},{name:'Basècles (Beloeil)',key:'nis-51008D'},{name:'Wadelincourt (Beloeil)',key:'nis-51008G'},{name:'Ellignies-Sainte-Anne (Beloeil)',key:'nis-51008H'},{name:'Aubechies (Beloeil)',key:'nis-51008J'},{name:'Bernissart + deelgemeenten',key:'nis-51009'},{name:'Harchies (Bernissart)',key:'nis-51009A-II'},{name:'Ville-Pommeroeul (Bernissart)',key:'nis-51009B-I'},{name:'Bernissart (Bernissart)',key:'nis-51009A-I'},{name:'Blaton (Bernissart)',key:'nis-51009C'},{name:'Pommerœul (Bernissart)',key:'nis-51009B-II'},{name:'Brugelette + deelgemeenten',key:'nis-51012'},{name:'Brugelette (Brugelette)',key:'nis-51012A'},{name:'Mévergnies-lez-Lens (Brugelette)',key:'nis-51012D'},{name:'Gages (Brugelette)',key:'nis-51012B'},{name:'Cambron-Casteau (Brugelette)',key:'nis-51012C'},{name:'Attre (Brugelette)',key:'nis-51012E'},{name:'Chièvres + deelgemeenten',key:'nis-51014'},{name:'Tongre-Saint-Martin (Chièvres)',key:'nis-51014B'},{name:'Chièvres (Chièvres)',key:'nis-51014A'},{name:'Ladeuze (Chièvres)',key:'nis-51014C'},{name:'Grosage (Chièvres)',key:'nis-51014D'},{name:'Huissignies (Chièvres)',key:'nis-51014E'},{name:'Tongre-Notre-Dame (Chièvres)',key:'nis-51014F'},{name:'Elzele + deelgemeenten',key:'nis-51017'},{name:'Wodecq (Elzele)',key:'nis-51017B'},{name:'Ellezelles (Elzele)',key:'nis-51017A'},{name:'Lahamaide (Elzele)',key:'nis-51017C'},{name:'Frasnes-lez-Anvaing + deelgemeenten',key:'nis-51065'},{name:'Frasnes-lez-Buissenal (Frasnes-lez-Anvaing)',key:'nis-51065A'},{name:'Œudeghien (Frasnes-lez-Anvaing)',key:'nis-51065B'},{name:'Buissenal (Frasnes-lez-Anvaing)',key:'nis-51065C'},{name:'Moustier (Frasnes-lez-Anvaing)',key:'nis-51065D'},{name:'Herquegies (Frasnes-lez-Anvaing)',key:'nis-51065F'},{name:'Hacquegnies (Frasnes-lez-Anvaing)',key:'nis-51065E'},{name:'Montrœul-au-Bois (Frasnes-lez-Anvaing)',key:'nis-51065G'},{name:'Forest (Frasnes-lez-Anvaing)',key:'nis-51065H'},{name:'Anvaing (Frasnes-lez-Anvaing)',key:'nis-51065J'},{name:'Cordes (Frasnes-lez-Anvaing)',key:'nis-51065K'},{name:'Arc-Ainières (Frasnes-lez-Anvaing)',key:'nis-51065L'},{name:'Dergneau (Frasnes-lez-Anvaing)',key:'nis-51065N'},{name:'Wattripont (Frasnes-lez-Anvaing)',key:'nis-51065M'},{name:'Saint-Sauveur (Frasnes-lez-Anvaing)',key:'nis-51065P'},{name:'Vloesberg + deelgemeenten',key:'nis-51019'},{name:'Flobecq (Vloesberg)',key:'nis-51019A'},{name:'Bergen + deelgemeenten',key:'nis-53053'},{name:'Mons (Bergen)',key:'nis-53053A'},{name:'Nimy (Bergen)',key:'nis-53053E'},{name:'Cuesmes (Bergen)',key:'nis-53053C'},{name:'Hyon (Bergen)',key:'nis-53053B'},{name:'Ghlin (Bergen)',key:'nis-53053D'},{name:'Saint-Denis (Bergen)',key:'nis-53053F-II'},{name:'Maisières (Bergen)',key:'nis-53053G'},{name:'Obourg (Bergen)',key:'nis-53053F-I'},{name:'Havré (Bergen)',key:'nis-53053H'},{name:'Saint-Symphorien (Bergen)',key:'nis-53053J'},{name:'Villers-Saint-Ghislain (Bergen)',key:'nis-53053K'},{name:'Harmignies (Bergen)',key:'nis-53053L'},{name:'Harveng (Bergen)',key:'nis-53053M'},{name:'Spiennes (Bergen)',key:'nis-53053P'},{name:'Nouvelles (Bergen)',key:'nis-53053N'},{name:'Mesvin (Bergen)',key:'nis-53053R'},{name:'Ciply (Bergen)',key:'nis-53053S'},{name:'Jemappes (Bergen)',key:'nis-53053T'},{name:'Flénu (Bergen)',key:'nis-53053U'},{name:'Boussu + deelgemeenten',key:'nis-53014'},{name:'Boussu (Boussu)',key:'nis-53014A'},{name:'Hornu (Boussu)',key:'nis-53014B'},{name:'Colfontaine + deelgemeenten',key:'nis-53082'},{name:'Wasmes (Colfontaine)',key:'nis-53082A'},{name:'Pâturages (Colfontaine)',key:'nis-53082B'},{name:'Warquignies (Colfontaine)',key:'nis-53082C'},{name:'Dour + deelgemeenten',key:'nis-53020'},{name:'Blaugies (Dour)',key:'nis-53020B'},{name:'Wihéries (Dour)',key:'nis-53020C'},{name:'Dour (Dour)',key:'nis-53020A'},{name:'Élouges (Dour)',key:'nis-53020D'},{name:'Frameries + deelgemeenten',key:'nis-53028'},{name:'Noirchain (Frameries)',key:'nis-53028B'},{name:'Frameries (Frameries)',key:'nis-53028A'},{name:'La Bouverie (Frameries)',key:'nis-53028C'},{name:'Eugies (Frameries)',key:'nis-53028D'},{name:'Sars-la-Bruyère (Frameries)',key:'nis-53028E'},{name:'Hensies + deelgemeenten',key:'nis-53039'},{name:'Hensies (Hensies)',key:'nis-53039A'},{name:'Montrœul-sur-Haine (Hensies)',key:'nis-53039B'},{name:'Thulin (Hensies)',key:'nis-53039C'},{name:'Hainin (Hensies)',key:'nis-53039D'},{name:'Honnelles + deelgemeenten',key:'nis-53083'},{name:'Roisin (Honnelles)',key:'nis-53083A'},{name:'Angreau (Honnelles)',key:'nis-53083B'},{name:'Angre (Honnelles)',key:'nis-53083C'},{name:'Onnezies (Honnelles)',key:'nis-53083E'},{name:'Marchipont (Honnelles)',key:'nis-53083D'},{name:'Montignies-sur-Roc (Honnelles)',key:'nis-53083F'},{name:'Autreppe (Honnelles)',key:'nis-53083G'},{name:'Fayt-le-Franc (Honnelles)',key:'nis-53083H'},{name:'Athis (Honnelles)',key:'nis-53083J'},{name:'Erquennes (Honnelles)',key:'nis-53083K'},{name:'Jurbeke + deelgemeenten',key:'nis-53044'},{name:'Jurbise (Jurbeke)',key:'nis-53044A'},{name:'Masnuy-Saint-Jean (Jurbeke)',key:'nis-53044B'},{name:'Masnuy-Saint-Pierre (Jurbeke)',key:'nis-53044C'},{name:'Erbisœul (Jurbeke)',key:'nis-53044D'},{name:'Erbaut (Jurbeke)',key:'nis-53044F'},{name:'Herchies (Jurbeke)',key:'nis-53044E'},{name:'Lens + deelgemeenten',key:'nis-53046'},{name:'Lens (Lens)',key:'nis-53046A'},{name:'Bauffe (Lens)',key:'nis-53046B'},{name:'Montignies-lez-Lens (Lens)',key:'nis-53046C'},{name:'Cambron-Saint-Vincent (Lens)',key:'nis-53046D'},{name:'Lombise (Lens)',key:'nis-53046E'},{name:'Quaregnon + deelgemeenten',key:'nis-53065'},{name:'Wasmuel (Quaregnon)',key:'nis-53065B'},{name:'Quaregnon (Quaregnon)',key:'nis-53065A'},{name:'Quévy + deelgemeenten',key:'nis-53084'},{name:'Quévy-le-Petit (Quévy)',key:'nis-53084A'},{name:'Quévy-le-Grand (Quévy)',key:'nis-53084B'},{name:'Havay (Quévy)',key:'nis-53084C'},{name:'Goegnies-Chaussée (Quévy)',key:'nis-53084E'},{name:'Givry (Quévy)',key:'nis-53084D'},{name:'Aulnois (Quévy)',key:'nis-53084F'},{name:'Blaregnies (Quévy)',key:'nis-53084G'},{name:'Genly (Quévy)',key:'nis-53084H'},{name:'Bougnies (Quévy)',key:'nis-53084J'},{name:'Asquillies (Quévy)',key:'nis-53084K'},{name:'Quiévrain + deelgemeenten',key:'nis-53068'},{name:'Quiévrain (Quiévrain)',key:'nis-53068A'},{name:'Baisieux (Quiévrain)',key:'nis-53068B'},{name:'Audregnies (Quiévrain)',key:'nis-53068C'},{name:'Saint-Ghislain + deelgemeenten',key:'nis-53070'},{name:'Saint-Ghislain (Saint-Ghislain)',key:'nis-53070A'},{name:'Baudour (Saint-Ghislain)',key:'nis-53070B'},{name:'Tertre (Saint-Ghislain)',key:'nis-53070C'},{name:'Villerot (Saint-Ghislain)',key:'nis-53070D'},{name:'Hautrage (Saint-Ghislain)',key:'nis-53070E'},{name:'Sirault (Saint-Ghislain)',key:'nis-53070F'},{name:'Neufmaison (Saint-Ghislain)',key:'nis-53070G'},{name:'Aiseau-Presles + deelgemeenten',key:'nis-52074'},{name:'Aiseau (Aiseau-Presles)',key:'nis-52074A'},{name:'Pont-de-Loup (Aiseau-Presles)',key:'nis-52074C'},{name:'Roselies (Aiseau-Presles)',key:'nis-52074D'},{name:'Presles (Aiseau-Presles)',key:'nis-52074B'},{name:'Chapelle-lez-Herlaimont + deelgemeenten',key:'nis-52010'},{name:'Chapelle-lez-Herlaimont (Chapelle-lez-Herlaimont)',key:'nis-52010A'},{name:'Godarville (Chapelle-lez-Herlaimont)',key:'nis-52010B'},{name:'Piéton (Chapelle-lez-Herlaimont)',key:'nis-52010C'},{name:'Charleroi + deelgemeenten',key:'nis-52011'},{name:'Charleroi (Charleroi)',key:'nis-52011A'},{name:'Dampremy (Charleroi)',key:'nis-52011B'},{name:'Montignies-sur-Sambre (Charleroi)',key:'nis-52011E'},{name:'Lodelinsart (Charleroi)',key:'nis-52011C'},{name:'Gilly (Charleroi)',key:'nis-52011D'},{name:'Marcinelle (Charleroi)',key:'nis-52011G'},{name:'Couillet (Charleroi)',key:'nis-52011F'},{name:'Mont-sur-Marchienne (Charleroi)',key:'nis-52011H'},{name:'Marchienne-au-Pont (Charleroi)',key:'nis-52011J'},{name:'Monceau-sur-Sambre (Charleroi)',key:'nis-52011K'},{name:'Goutroux (Charleroi)',key:'nis-52011L'},{name:'Roux (Charleroi)',key:'nis-52011M'},{name:'Jumet (Charleroi)',key:'nis-52011N'},{name:'Gosselies (Charleroi)',key:'nis-52011P'},{name:'Ransart (Charleroi)',key:'nis-52011R'},{name:'Châtelet + deelgemeenten',key:'nis-52012'},{name:'Châtelet (Châtelet)',key:'nis-52012A'},{name:'Châtelineau (Châtelet)',key:'nis-52012B'},{name:'Bouffioulx (Châtelet)',key:'nis-52012C'},{name:'Courcelles + deelgemeenten',key:'nis-52015'},{name:'Souvret (Courcelles)',key:'nis-52015B'},{name:'Courcelles (Courcelles)',key:'nis-52015A'},{name:'Trazegnies (Courcelles)',key:'nis-52015C'},{name:'Gouy-lez-Piéton (Courcelles)',key:'nis-52015D'},{name:'Farciennes + deelgemeenten',key:'nis-52018'},{name:'Pironchamps (Farciennes)',key:'nis-52018B'},{name:'Farciennes (Farciennes)',key:'nis-52018A'},{name:'Fleurus + deelgemeenten',key:'nis-52021'},{name:'Fleurus (Fleurus)',key:'nis-52021A'},{name:'Wanfercée-Baulet (Fleurus)',key:'nis-52021B'},{name:'Wangenies (Fleurus)',key:'nis-52021D'},{name:'Lambusart (Fleurus)',key:'nis-52021C'},{name:'Heppignies (Fleurus)',key:'nis-52021E'},{name:'Saint-Amand (Fleurus)',key:'nis-52021F'},{name:'Wagnelée (Fleurus)',key:'nis-52021G'},{name:'Brye (Fleurus)',key:'nis-52021H'},{name:'Fontaine-l\'Evêque + deelgemeenten',key:'nis-52022'},{name:'Fontaine-l"Évêque (Fontaine-l\'Evêque)',key:'nis-52022A'},{name:'Forchies-la-Marche (Fontaine-l\'Evêque)',key:'nis-52022B'},{name:'Leernes (Fontaine-l\'Evêque)',key:'nis-52022C'},{name:'Gerpinnes + deelgemeenten',key:'nis-52025'},{name:'Gerpinnes (Gerpinnes)',key:'nis-52025A'},{name:'Loverval (Gerpinnes)',key:'nis-52025B'},{name:'Joncret (Gerpinnes)',key:'nis-52025C'},{name:'Acoz (Gerpinnes)',key:'nis-52025D'},{name:'Villers-Poterie (Gerpinnes)',key:'nis-52025E'},{name:'Gougnies (Gerpinnes)',key:'nis-52025F'},{name:'Les Bons Villers + deelgemeenten',key:'nis-52075'},{name:'Mellet (Les Bons Villers)',key:'nis-52075A'},{name:'Wayaux (Les Bons Villers)',key:'nis-52075B'},{name:'Villers-Perwin (Les Bons Villers)',key:'nis-52075C'},{name:'Frasnes-lez-Gosselies (Les Bons Villers)',key:'nis-52075D'},{name:'Rèves (Les Bons Villers)',key:'nis-52075E'},{name:'Manage + deelgemeenten',key:'nis-52043'},{name:'Bois-d"Haine (Manage)',key:'nis-52043B'},{name:'Manage (Manage)',key:'nis-52043A'},{name:'La Hestre (Manage)',key:'nis-52043D'},{name:'Fayt-lez-Manage (Manage)',key:'nis-52043C'},{name:'Bellecourt (Manage)',key:'nis-52043E'},{name:'Montigny-le-Tilleul + deelgemeenten',key:'nis-52048'},{name:'Landelies (Montigny-le-Tilleul)',key:'nis-52048B'},{name:'Montignies-le-Tilleul (Montigny-le-Tilleul)',key:'nis-52048A'},{name:'Pont-à-celles + deelgemeenten',key:'nis-52055'},{name:'Pont-à-Celles (Pont-à-celles)',key:'nis-52055A'},{name:'Obaix (Pont-à-celles)',key:'nis-52055B'},{name:'Liberchies (Pont-à-celles)',key:'nis-52055D-II'},{name:'Buzet (Pont-à-celles)',key:'nis-52055C'},{name:'Luttre (Pont-à-celles)',key:'nis-52055D-I'},{name:'Thiméon (Pont-à-celles)',key:'nis-52055E'},{name:'Viesville (Pont-à-celles)',key:'nis-52055F'},{name:'Seneffe + deelgemeenten',key:'nis-52063'},{name:'Seneffe (Seneffe)',key:'nis-52063A'},{name:'Feluy (Seneffe)',key:'nis-52063B'},{name:'Arquennes (Seneffe)',key:'nis-52063C'},{name:'Petit-Roeulx-lez-Nivelles (Seneffe)',key:'nis-52063D'},{name:'Familleureux (Seneffe)',key:'nis-52063E'},{name:'Antoing + deelgemeenten',key:'nis-57003'},{name:'Antoing (Antoing)',key:'nis-57003A'},{name:'Fontenoy (Antoing)',key:'nis-57003B'},{name:'Maubray (Antoing)',key:'nis-57003C'},{name:'Péronnes (Antoing)',key:'nis-57003D'},{name:'Bruyelle (Antoing)',key:'nis-57003E'},{name:'Calonne (Antoing)',key:'nis-57003F'},{name:'Brunehaut + deelgemeenten',key:'nis-57093'},{name:'Bléharies (Brunehaut)',key:'nis-57093A'},{name:'Rongy (Brunehaut)',key:'nis-57093B'},{name:'Lesdain (Brunehaut)',key:'nis-57093C'},{name:'Howardries (Brunehaut)',key:'nis-57093D'},{name:'Guignies (Brunehaut)',key:'nis-57093E'},{name:'Wez-Velvain (Brunehaut)',key:'nis-57093F'},{name:'Jollain-Merlin (Brunehaut)',key:'nis-57093G'},{name:'Laplaigne (Brunehaut)',key:'nis-57093J'},{name:'Hollain (Brunehaut)',key:'nis-57093H'},{name:'Celles + deelgemeenten',key:'nis-57018'},{name:'Celles (Celles)',key:'nis-57018A'},{name:'Molenbaix (Celles)',key:'nis-57018B'},{name:'Pottes (Celles)',key:'nis-57018C'},{name:'Escanaffles (Celles)',key:'nis-57018D'},{name:'Velaines (Celles)',key:'nis-57018E'},{name:'Popuelles (Celles)',key:'nis-57018F'},{name:'Doornik + deelgemeenten',key:'nis-57081'},{name:'Warchin (Doornik)',key:'nis-57081B'},{name:'Tournai (Doornik)',key:'nis-57081A'},{name:'Chercq (Doornik)',key:'nis-57081C'},{name:'Havinnes (Doornik)',key:'nis-57081D'},{name:'Quartes (Doornik)',key:'nis-57081E-I'},{name:'Melles (Doornik)',key:'nis-57081E-II'},{name:'Thimougies (Doornik)',key:'nis-57081F-II'},{name:'Beclers (Doornik)',key:'nis-57081F-I'},{name:'Barry (Doornik)',key:'nis-57081G-II'},{name:'Vezon (Doornik)',key:'nis-57081H'},{name:'Maulde (Doornik)',key:'nis-57081G-I'},{name:'Gaurain-Ramecroix (Doornik)',key:'nis-57081J'},{name:'Saint-Maur (Doornik)',key:'nis-57081L-II'},{name:'Vaulx (Doornik)',key:'nis-57081K'},{name:'Froidmont (Doornik)',key:'nis-57081M-II'},{name:'Ère (Doornik)',key:'nis-57081L-I'},{name:'Willemeau (Doornik)',key:'nis-57081M-I'},{name:'Esplechin (Doornik)',key:'nis-57081N'},{name:'Orcq (Doornik)',key:'nis-57081P-III'},{name:'Marquain (Doornik)',key:'nis-57081P-II'},{name:'Lamain (Doornik)',key:'nis-57081P-I'},{name:'Hertain (Doornik)',key:'nis-57081R-II'},{name:'Blandain (Doornik)',key:'nis-57081R-I'},{name:'Templeuve (Doornik)',key:'nis-57081S'},{name:'Ramegnies-Chin (Doornik)',key:'nis-57081T'},{name:'Froyennes (Doornik)',key:'nis-57081U'},{name:'Mont-Saint-Aubert (Doornik)',key:'nis-57081V-II'},{name:'Rumillies (Doornik)',key:'nis-57081W-II'},{name:'Kain (Doornik)',key:'nis-57081V-I'},{name:'Mourcourt (Doornik)',key:'nis-57081W-I'},{name:'Estaimpuis + deelgemeenten',key:'nis-57027'},{name:'Estaimpuis (Estaimpuis)',key:'nis-57027A'},{name:'Évregnies (Estaimpuis)',key:'nis-57027B'},{name:'Saint-Léger (Estaimpuis)',key:'nis-57027C'},{name:'Estaimbourg (Estaimpuis)',key:'nis-57027D'},{name:'Bailleul (Estaimpuis)',key:'nis-57027E'},{name:'Néchin (Estaimpuis)',key:'nis-57027F'},{name:'Leers-Nord (Estaimpuis)',key:'nis-57027G'},{name:'Leuze-en-Hainaut + deelgemeenten',key:'nis-57094'},{name:'Grandmetz (Leuze-en-Hainaut)',key:'nis-57094B'},{name:'Leuze (Leuze-en-Hainaut)',key:'nis-57094A'},{name:'Chapelle-à-Wattines (Leuze-en-Hainaut)',key:'nis-57094C'},{name:'Chapelle-à-Oie (Leuze-en-Hainaut)',key:'nis-57094D'},{name:'Blicquy (Leuze-en-Hainaut)',key:'nis-57094E'},{name:'Willaupuis (Leuze-en-Hainaut)',key:'nis-57094G'},{name:'Pipaix (Leuze-en-Hainaut)',key:'nis-57094H'},{name:'Gallaix (Leuze-en-Hainaut)',key:'nis-57094J'},{name:'Tourpes (Leuze-en-Hainaut)',key:'nis-57094F'},{name:'Thieulain (Leuze-en-Hainaut)',key:'nis-57094K'},{name:'Mont-de-l\'Enclus + deelgemeenten',key:'nis-57095'},{name:'Amougies (Mont-de-l\'Enclus)',key:'nis-57095A'},{name:'Russeignies (Mont-de-l\'Enclus)',key:'nis-57095B'},{name:'Orroir (Mont-de-l\'Enclus)',key:'nis-57095D'},{name:'Anseroeul (Mont-de-l\'Enclus)',key:'nis-57095C'},{name:'Pecq + deelgemeenten',key:'nis-57062'},{name:'Warcoing (Pecq)',key:'nis-57062B'},{name:'Pecq (Pecq)',key:'nis-57062A'},{name:'Hérinnes (Pecq)',key:'nis-57062C'},{name:'Obigies (Pecq)',key:'nis-57062D'},{name:'Esquelmes (Pecq)',key:'nis-57062E'},{name:'Péruwelz + deelgemeenten',key:'nis-57064'},{name:'Péruwelz (Péruwelz)',key:'nis-57064A'},{name:'Wiers (Péruwelz)',key:'nis-57064B'},{name:'Callenelle (Péruwelz)',key:'nis-57064C'},{name:'Brasmenil (Péruwelz)',key:'nis-57064D'},{name:'Wasmes-Audemez-Briffoeil (Péruwelz)',key:'nis-57064E'},{name:'Baugnies (Péruwelz)',key:'nis-57064F'},{name:'Braffe (Péruwelz)',key:'nis-57064G'},{name:'Bury (Péruwelz)',key:'nis-57064H'},{name:'Roucourt (Péruwelz)',key:'nis-57064J'},{name:'Bon-Secours (Péruwelz)',key:'nis-57064K'},{name:'Rumes + deelgemeenten',key:'nis-57072'},{name:'Rumes (Rumes)',key:'nis-57072A'},{name:'La Glanerie (Rumes)',key:'nis-57072C'},{name:'Taintignies (Rumes)',key:'nis-57072B'},{name:'Komen-Waasten + deelgemeenten',key:'nis-54010'},{name:'Comines (Komen-Waasten)',key:'nis-54010A'},{name:'Bas-Warneton (Komen-Waasten)',key:'nis-54010B'},{name:'Houthem (Komen-Waasten)',key:'nis-54010C'},{name:'Warneton (Komen-Waasten)',key:'nis-54010D'},{name:'Ploegsteert (Komen-Waasten)',key:'nis-54010E'},{name:'Moeskroen + deelgemeenten',key:'nis-54007'},{name:'Luingne (Moeskroen)',key:'nis-54007B'},{name:'Mouscron (Moeskroen)',key:'nis-54007A'},{name:'Herseaux (Moeskroen)',key:'nis-54007C'},{name:'Dottignies (Moeskroen)',key:'nis-54007D'},{name:'Anderlues + deelgemeenten',key:'nis-56001'},{name:'Anderlues (Anderlues)',key:'nis-56001A'},{name:'Beaumont + deelgemeenten',key:'nis-56005'},{name:'Beaumont (Beaumont)',key:'nis-56005A'},{name:'Barbençon (Beaumont)',key:'nis-56005B'},{name:'Solre-Saint-Géry (Beaumont)',key:'nis-56005D'},{name:'Renlies (Beaumont)',key:'nis-56005C'},{name:'Leugnies (Beaumont)',key:'nis-56005E'},{name:'Leval-Chaudeville (Beaumont)',key:'nis-56005F'},{name:'Strée (Beaumont)',key:'nis-56005H'},{name:'Thirimont (Beaumont)',key:'nis-56005G'},{name:'Binche + deelgemeenten',key:'nis-56011'},{name:'Binche (Binche)',key:'nis-56011A'},{name:'Ressaix (Binche)',key:'nis-56011B'},{name:'Leval-Trahegnies (Binche)',key:'nis-56011C'},{name:'Buvrinnes (Binche)',key:'nis-56011E'},{name:'Bray (Binche)',key:'nis-56011G'},{name:'Waudrez (Binche)',key:'nis-56011F'},{name:'Épinois (Binche)',key:'nis-56011D'},{name:'Péronnes (Binche)',key:'nis-56011H'},{name:'Chimay + deelgemeenten',key:'nis-56016'},{name:'Virelles (Chimay)',key:'nis-56016B'},{name:'Vaulx (Chimay)',key:'nis-56016C'},{name:'Lompret (Chimay)',key:'nis-56016D'},{name:'Baileux (Chimay)',key:'nis-56016E'},{name:'Chimay (Chimay)',key:'nis-56016A'},{name:'Bourlers (Chimay)',key:'nis-56016H'},{name:'L"Escaillère (Chimay)',key:'nis-56016F'},{name:'Forges (Chimay)',key:'nis-56016J'},{name:'Rièzes (Chimay)',key:'nis-56016G'},{name:'Saint-Remy (Chimay)',key:'nis-56016K'},{name:'Villers-la-Tour (Chimay)',key:'nis-56016L'},{name:'Salles (Chimay)',key:'nis-56016M'},{name:'Bailièvre (Chimay)',key:'nis-56016N'},{name:'Robechies (Chimay)',key:'nis-56016P'},{name:'Erquelinnes + deelgemeenten',key:'nis-56022'},{name:'Erquelinnes (Erquelinnes)',key:'nis-56022A'},{name:'Solre-sur-Sambre (Erquelinnes)',key:'nis-56022B'},{name:'Hantes-Wihéries (Erquelinnes)',key:'nis-56022C'},{name:'Bersillies-l"Abbaye (Erquelinnes)',key:'nis-56022E'},{name:'Montignies-Saint-Christophe (Erquelinnes)',key:'nis-56022D'},{name:'Grand-Reng (Erquelinnes)',key:'nis-56022F'},{name:'Estinnes + deelgemeenten',key:'nis-56085'},{name:'Estinnes-au-Mont (Estinnes)',key:'nis-56085A'},{name:'Estinnes-au-Val (Estinnes)',key:'nis-56085B'},{name:'Vellereille-les-Brayeux (Estinnes)',key:'nis-56085C'},{name:'Peissant (Estinnes)',key:'nis-56085D'},{name:'Fauroeulx (Estinnes)',key:'nis-56085E'},{name:'Croix-lez-Rouveroy (Estinnes)',key:'nis-56085F'},{name:'Rouveroy (Estinnes)',key:'nis-56085G'},{name:'Vellereille-le-Sec (Estinnes)',key:'nis-56085J'},{name:'Haulchin (Estinnes)',key:'nis-56085H'},{name:'Froidchapelle + deelgemeenten',key:'nis-56029'},{name:'Fourbechies (Froidchapelle)',key:'nis-56029A-II'},{name:'Vergnies (Froidchapelle)',key:'nis-56029B'},{name:'Erpion (Froidchapelle)',key:'nis-56029C'},{name:'Boussu-lez-Walcourt (Froidchapelle)',key:'nis-56029D'},{name:'Froid-Chapelle (Froidchapelle)',key:'nis-56029A-I'},{name:'Ham-sur-Heure-Nalinnes + deelgemeenten',key:'nis-56086'},{name:'Ham-sur-Heure (Ham-sur-Heure-Nalinnes)',key:'nis-56086A'},{name:'Jamioulx (Ham-sur-Heure-Nalinnes)',key:'nis-56086E'},{name:'Nalinnes (Ham-sur-Heure-Nalinnes)',key:'nis-56086B'},{name:'Cour-sur-Heure (Ham-sur-Heure-Nalinnes)',key:'nis-56086C'},{name:'Marbaix (Ham-sur-Heure-Nalinnes)',key:'nis-56086D'},{name:'Lobbes + deelgemeenten',key:'nis-56044'},{name:'Lobbes (Lobbes)',key:'nis-56044A'},{name:'Sars-la-Buissière (Lobbes)',key:'nis-56044B'},{name:'Bienne-lez-Happart (Lobbes)',key:'nis-56044C'},{name:'Mont-Sainte-Geneviève (Lobbes)',key:'nis-56044D'},{name:'Merbes-le-Château + deelgemeenten',key:'nis-56049'},{name:'Merbes-le-Château (Merbes-le-Château)',key:'nis-56049A'},{name:'Fontaine-Valmont (Merbes-le-Château)',key:'nis-56049D'},{name:'Labuissière (Merbes-le-Château)',key:'nis-56049C'},{name:'Merbes-Sainte-Marie (Merbes-le-Château)',key:'nis-56049B'},{name:'Momignies + deelgemeenten',key:'nis-56051'},{name:'Momignies (Momignies)',key:'nis-56051A'},{name:'Macon (Momignies)',key:'nis-56051B'},{name:'Monceau-Imbrechies (Momignies)',key:'nis-56051C'},{name:'Forge-Philippe (Momignies)',key:'nis-56051E'},{name:'Macquenoise (Momignies)',key:'nis-56051F'},{name:'Seloignes (Momignies)',key:'nis-56051D'},{name:'Beauwelz (Momignies)',key:'nis-56051G'},{name:'Morlanwelz + deelgemeenten',key:'nis-56087'},{name:'Carnières (Morlanwelz)',key:'nis-56087B'},{name:'Mont-Sainte-Aldegonde (Morlanwelz)',key:'nis-56087C'},{name:'Morlanwelz-Mariemont (Morlanwelz)',key:'nis-56087A'},{name:'Sivry-Rance + deelgemeenten',key:'nis-56088'},{name:'Sivry (Sivry-Rance)',key:'nis-56088A'},{name:'Grandrieu (Sivry-Rance)',key:'nis-56088B'},{name:'Sautin (Sivry-Rance)',key:'nis-56088C'},{name:'Rance (Sivry-Rance)',key:'nis-56088D'},{name:'Montbliart (Sivry-Rance)',key:'nis-56088E'},{name:'Thuin + deelgemeenten',key:'nis-56078'},{name:'Thuin (Thuin)',key:'nis-56078A'},{name:'Biesme-sous-Thuin (Thuin)',key:'nis-56078C'},{name:'Gozée (Thuin)',key:'nis-56078B'},{name:'Thuillies (Thuin)',key:'nis-56078D'},{name:'Leers-et-Fosteau (Thuin)',key:'nis-56078G'},{name:'Ragnies (Thuin)',key:'nis-56078F'},{name:'Donstiennes (Thuin)',key:'nis-56078E'},{name:'Biercée (Thuin)',key:'nis-56078H'},{name:'s Gravenbrakel + deelgemeenten',key:'nis-55004'},{name:'Hennuyères (s Gravenbrakel)',key:'nis-55004B'},{name:'Braine-le-Comte (s Gravenbrakel)',key:'nis-55004A'},{name:'Ronquières (s Gravenbrakel)',key:'nis-55004C'},{name:'Henripont (s Gravenbrakel)',key:'nis-55004D'},{name:'Petit-Roeulx-lez-Braine (s Gravenbrakel)',key:'nis-55004E'},{name:'Steenkerque (s Gravenbrakel)',key:'nis-55004F'},{name:'Ecaussinnes + deelgemeenten',key:'nis-55050'},{name:'Écaussinnes-d"Enghien (Ecaussinnes)',key:'nis-55050A'},{name:'Marche-lez-Écaussinnes (Ecaussinnes)',key:'nis-55050C'},{name:'Écaussinnes-Lalaing (Ecaussinnes)',key:'nis-55050B'},{name:'Edingen + deelgemeenten',key:'nis-55010'},{name:'Enghien (Edingen)',key:'nis-55010A'},{name:'Marcq (Edingen)',key:'nis-55010B'},{name:'Petit-Enghien (Edingen)',key:'nis-55010C'},{name:'La Louvière + deelgemeenten',key:'nis-55022'},{name:'Houdeng-Goegnies (La Louvière)',key:'nis-55022-Z'},{name:'La Louvière (La Louvière)',key:'nis-55022A'},{name:'Haine-Saint-Pierre (La Louvière)',key:'nis-55022B'},{name:'Haine-Saint-Paul (La Louvière)',key:'nis-55022C'},{name:'Saint-Vaast (La Louvière)',key:'nis-55022D'},{name:'Maurage (La Louvière)',key:'nis-55022F'},{name:'Trivières (La Louvière)',key:'nis-55022E'},{name:'Strépy-Bracquegnies (La Louvière)',key:'nis-55022H'},{name:'Boussoit (La Louvière)',key:'nis-55022G'},{name:'Houdeng-Aimeries (La Louvière)',key:'nis-55022J'},{name:'Le Roeulx + deelgemeenten',key:'nis-55035'},{name:'Le Roeulx (Le Roeulx)',key:'nis-55035A'},{name:'Mignault (Le Roeulx)',key:'nis-55035B'},{name:'Thieu (Le Roeulx)',key:'nis-55035C'},{name:'Ville-sur-Haine (Le Roeulx)',key:'nis-55035D-II'},{name:'Gottignies (Le Roeulx)',key:'nis-55035D-I'},{name:'Lessen + deelgemeenten',key:'nis-55023'},{name:'Lessines (Lessen)',key:'nis-55023A'},{name:'Deux-Acren (Lessen)',key:'nis-55023B'},{name:'Ollignies (Lessen)',key:'nis-55023D'},{name:'Bois-de-Lessines (Lessen)',key:'nis-55023C'},{name:'Wannebecq (Lessen)',key:'nis-55023E-II'},{name:'Ogy (Lessen)',key:'nis-55023F'},{name:'Papignies (Lessen)',key:'nis-55023E-I'},{name:'Ghoy (Lessen)',key:'nis-55023G'},{name:'Opzullik + deelgemeenten',key:'nis-55039'},{name:'Hellebecq (Opzullik)',key:'nis-55039B'},{name:'Silly (Opzullik)',key:'nis-55039A'},{name:'Bassilly (Opzullik)',key:'nis-55039C'},{name:'Hoves (Opzullik)',key:'nis-55039D'},{name:'Graty (Opzullik)',key:'nis-55039E'},{name:'Fouleng (Opzullik)',key:'nis-55039G'},{name:'Gondregnies (Opzullik)',key:'nis-55039H'},{name:'Thoricourt (Opzullik)',key:'nis-55039F'},{name:'Zinnik + deelgemeenten',key:'nis-55040'},{name:'Soignies (Zinnik)',key:'nis-55040A'},{name:'Thieusies (Zinnik)',key:'nis-55040C'},{name:'Casteau (Zinnik)',key:'nis-55040D'},{name:'Chaussée-Notre-Dame-Louvignies (Zinnik)',key:'nis-55040F'},{name:'Naast (Zinnik)',key:'nis-55040B'},{name:'Neufvilles (Zinnik)',key:'nis-55040E'},{name:'Horrues (Zinnik)',key:'nis-55040G'},{name:'Provincie Luik',key:'nis-60000'},{name:'Regio Luik',key:'reg-luik'},{name:'Berloz + deelgemeenten',key:'nis-64008'},{name:'Berloz (Berloz)',key:'nis-64008A'},{name:'Rosoux-Crenwick (Berloz)',key:'nis-64008B'},{name:'Corswarem (Berloz)',key:'nis-64008C'},{name:'Borgworm + deelgemeenten',key:'nis-64074'},{name:'Waremme (Borgworm)',key:'nis-64074A'},{name:'Oleye (Borgworm)',key:'nis-64074B'},{name:'Lantremange (Borgworm)',key:'nis-64074C'},{name:'Grand-Axhe (Borgworm)',key:'nis-64074F'},{name:'Bovenistier (Borgworm)',key:'nis-64074E'},{name:'Bleret (Borgworm)',key:'nis-64074D'},{name:'Bettincourt (Borgworm)',key:'nis-64074G'},{name:'Braives + deelgemeenten',key:'nis-64015'},{name:'Braives (Braives)',key:'nis-64015A'},{name:'Tourinne (Braives)',key:'nis-64015B'},{name:'Latinne (Braives)',key:'nis-64015C'},{name:'Fallais (Braives)',key:'nis-64015D'},{name:'Fumal (Braives)',key:'nis-64015E'},{name:'Ville-en-Hesbaye (Braives)',key:'nis-64015F'},{name:'Ciplet (Braives)',key:'nis-64015G'},{name:'Avennes (Braives)',key:'nis-64015H'},{name:'Crisnée + deelgemeenten',key:'nis-64021'},{name:'Kemexhe (Crisnée)',key:'nis-64021A-III'},{name:'Odeur (Crisnée)',key:'nis-64021A-IV'},{name:'Fize-le-Marsal (Crisnée)',key:'nis-64021A-II'},{name:'Crisnée (Crisnée)',key:'nis-64021A-I'},{name:'Thys (Crisnée)',key:'nis-64021A-V'},{name:'Donceel + deelgemeenten',key:'nis-64023'},{name:'Donceel (Donceel)',key:'nis-64023A'},{name:'Limont (Donceel)',key:'nis-64023B'},{name:'Haneffe (Donceel)',key:'nis-64023D'},{name:'Jeneffe (Donceel)',key:'nis-64023C'},{name:'Faimes + deelgemeenten',key:'nis-64076'},{name:'Celles (Faimes)',key:'nis-64076A'},{name:'Les Waleffes (Faimes)',key:'nis-64076C'},{name:'Borlez (Faimes)',key:'nis-64076B'},{name:'Viemme (Faimes)',key:'nis-64076D'},{name:'Aineffe (Faimes)',key:'nis-64076E'},{name:'Fexhe-le-Haut-Clocher + deelgemeenten',key:'nis-64025'},{name:'Noville (Fexhe-le-Haut-Clocher)',key:'nis-64025A-III'},{name:'Fexhe-le-Haut-Clocher (Fexhe-le-Haut-Clocher)',key:'nis-64025A-II'},{name:'Roloux (Fexhe-le-Haut-Clocher)',key:'nis-64025A-IV'},{name:'Freloux (Fexhe-le-Haut-Clocher)',key:'nis-64025A-I'},{name:'Voroux-Goreux (Fexhe-le-Haut-Clocher)',key:'nis-64025A-V'},{name:'Geer + deelgemeenten',key:'nis-64029'},{name:'Geer (Geer)',key:'nis-64029A'},{name:'Darion (Geer)',key:'nis-64029D'},{name:'Boëlhe (Geer)',key:'nis-64029B'},{name:'Hollogne-sur-Geer (Geer)',key:'nis-64029C'},{name:'Omal (Geer)',key:'nis-64029E'},{name:'Ligney (Geer)',key:'nis-64029F'},{name:'Lens-Saint-Servais (Geer)',key:'nis-64029G'},{name:'Hannuit + deelgemeenten',key:'nis-64034'},{name:'Hannut (Hannuit)',key:'nis-64034A'},{name:'Avernas-le-Bauduin (Hannuit)',key:'nis-64034B'},{name:'Bertrée (Hannuit)',key:'nis-64034C'},{name:'Cras-Avernas (Hannuit)',key:'nis-64034D'},{name:'Poucet (Hannuit)',key:'nis-64034E'},{name:'Abolens (Hannuit)',key:'nis-64034F'},{name:'Blehen (Hannuit)',key:'nis-64034G'},{name:'Lens-Saint-Remy (Hannuit)',key:'nis-64034H'},{name:'Villers-le-Peuplier (Hannuit)',key:'nis-64034J'},{name:'Crehen (Hannuit)',key:'nis-64034K'},{name:'Trognée (Hannuit)',key:'nis-64034L'},{name:'Avin (Hannuit)',key:'nis-64034M'},{name:'Moxhe (Hannuit)',key:'nis-64034N'},{name:'Thisnes (Hannuit)',key:'nis-64034P'},{name:'Grand-Hallet (Hannuit)',key:'nis-64034S-I'},{name:'Merdorp (Hannuit)',key:'nis-64034R'},{name:'Petit-Hallet (Hannuit)',key:'nis-64034S-II'},{name:'Wansin (Hannuit)',key:'nis-64034S-III'},{name:'Lijsem + deelgemeenten',key:'nis-64047'},{name:'Lincent (Lijsem)',key:'nis-64047A'},{name:'Pellaines (Lijsem)',key:'nis-64047B'},{name:'Racour (Lijsem)',key:'nis-64047C'},{name:'Oerle + deelgemeenten',key:'nis-64056'},{name:'Lens-sur-Geer (Oerle)',key:'nis-64056A-III'},{name:'Grandville (Oerle)',key:'nis-64056A-II'},{name:'Oreye (Oerle)',key:'nis-64056A-IV'},{name:'Bergilers (Oerle)',key:'nis-64056A-I'},{name:'Otrange (Oerle)',key:'nis-64056A-V'},{name:'Remicourt + deelgemeenten',key:'nis-64063'},{name:'Remicourt (Remicourt)',key:'nis-64063A'},{name:'Lamine (Remicourt)',key:'nis-64063B'},{name:'Pousset (Remicourt)',key:'nis-64063C'},{name:'Momalle (Remicourt)',key:'nis-64063E'},{name:'Hodeige (Remicourt)',key:'nis-64063D'},{name:'Saint-Georges-sur-Meuse + deelgemeenten',key:'nis-64065'},{name:'Saint-Georges-sur-Meuse (Saint-Georges-sur-Meuse)',key:'nis-64065A'},{name:'Wasseiges + deelgemeenten',key:'nis-64075'},{name:'Ambresin (Wasseiges)',key:'nis-64075B'},{name:'Meeffe (Wasseiges)',key:'nis-64075C'},{name:'Wasseiges (Wasseiges)',key:'nis-64075A'},{name:'Acosse (Wasseiges)',key:'nis-64075D'},{name:'Amay + deelgemeenten',key:'nis-61003'},{name:'Amay (Amay)',key:'nis-61003A'},{name:'Flône (Amay)',key:'nis-61003B'},{name:'Ampsin (Amay)',key:'nis-61003D'},{name:'Ombret-Rawsa (Amay)',key:'nis-61003C'},{name:'Jehay-Bodegnée (Amay)',key:'nis-61003E'},{name:'Anthisnes + deelgemeenten',key:'nis-61079'},{name:'Hody (Anthisnes)',key:'nis-61079B'},{name:'Anthisnes (Anthisnes)',key:'nis-61079A'},{name:'Tavier (Anthisnes)',key:'nis-61079C'},{name:'Villers-aux-Tours (Anthisnes)',key:'nis-61079D'},{name:'Burdinne + deelgemeenten',key:'nis-61010'},{name:'Burdinne (Burdinne)',key:'nis-61010A'},{name:'Lamontzée (Burdinne)',key:'nis-61010C'},{name:'Hannêche (Burdinne)',key:'nis-61010B'},{name:'Oteppe (Burdinne)',key:'nis-61010D'},{name:'Marneffe (Burdinne)',key:'nis-61010E'},{name:'Clavier + deelgemeenten',key:'nis-61012'},{name:'Clavier (Clavier)',key:'nis-61012A'},{name:'Ocquier (Clavier)',key:'nis-61012B'},{name:'Bois-et-Borsu (Clavier)',key:'nis-61012C'},{name:'Les Avins (Clavier)',key:'nis-61012D'},{name:'Terwagne (Clavier)',key:'nis-61012F'},{name:'Pailhe (Clavier)',key:'nis-61012E'},{name:'Engis + deelgemeenten',key:'nis-61080'},{name:'Engis (Engis)',key:'nis-61080-Z'},{name:'Clermont-sous-Huy (Engis)',key:'nis-61080C'},{name:'Hermalle-sous-Huy (Engis)',key:'nis-61080D'},{name:'Ferrières + deelgemeenten',key:'nis-61019'},{name:'Vieuxville (Ferrières)',key:'nis-61019B'},{name:'Ferrières (Ferrières)',key:'nis-61019A'},{name:'My (Ferrières)',key:'nis-61019C'},{name:'Xhoris (Ferrières)',key:'nis-61019D'},{name:'Werbomont (Ferrières)',key:'nis-61019E'},{name:'Hamoir + deelgemeenten',key:'nis-61024'},{name:'Hamoir (Hamoir)',key:'nis-61024A'},{name:'Comblain-Fairon (Hamoir)',key:'nis-61024B'},{name:'Filot (Hamoir)',key:'nis-61024C'},{name:'Héron + deelgemeenten',key:'nis-61028'},{name:'Héron (Héron)',key:'nis-61028A'},{name:'Couthuin (Héron)',key:'nis-61028C'},{name:'Waret-l"Évêque (Héron)',key:'nis-61028D'},{name:'Lavoir (Héron)',key:'nis-61028B'},{name:'Hoei + deelgemeenten',key:'nis-61031'},{name:'Huy (Hoei)',key:'nis-61031A'},{name:'Tihange (Hoei)',key:'nis-61031C'},{name:'Ben-Ahin (Hoei)',key:'nis-61031B'},{name:'Marchin + deelgemeenten',key:'nis-61039'},{name:'Marchin (Marchin)',key:'nis-61039A'},{name:'Vyle-et-Tharoul (Marchin)',key:'nis-61039B'},{name:'Modave + deelgemeenten',key:'nis-61041'},{name:'Modave (Modave)',key:'nis-61041A'},{name:'Strée (Modave)',key:'nis-61041C'},{name:'Vierset-Barse (Modave)',key:'nis-61041B'},{name:'Outrelouxhe (Modave)',key:'nis-61041D'},{name:'Nandrin + deelgemeenten',key:'nis-61043'},{name:'Nandrin (Nandrin)',key:'nis-61043A'},{name:'Yernée-Fraineux (Nandrin)',key:'nis-61043C'},{name:'Villers-le-Temple (Nandrin)',key:'nis-61043B'},{name:'Saint-Séverin (Nandrin)',key:'nis-61043D'},{name:'Ouffet + deelgemeenten',key:'nis-61048'},{name:'Ellemelle (Ouffet)',key:'nis-61048C'},{name:'Warzée (Ouffet)',key:'nis-61048B'},{name:'Ouffet (Ouffet)',key:'nis-61048A'},{name:'Tinlot + deelgemeenten',key:'nis-61081'},{name:'Soheit-Tinlot (Tinlot)',key:'nis-61081A'},{name:'Ramelot (Tinlot)',key:'nis-61081B'},{name:'Abée (Tinlot)',key:'nis-61081C'},{name:'Fraiture (Tinlot)',key:'nis-61081D'},{name:'Seny (Tinlot)',key:'nis-61081E'},{name:'Verlaine + deelgemeenten',key:'nis-61063'},{name:'Chapon-Seraing (Verlaine)',key:'nis-61063C'},{name:'Verlaine (Verlaine)',key:'nis-61063-Z'},{name:'Seraing-le-Château (Verlaine)',key:'nis-61063D'},{name:'Villers-le-Bouillet + deelgemeenten',key:'nis-61068'},{name:'Villers-le-Bouillet (Villers-le-Bouillet)',key:'nis-61068A'},{name:'Warnant-Dreye (Villers-le-Bouillet)',key:'nis-61068B'},{name:'Vieux-Waleffe (Villers-le-Bouillet)',key:'nis-61068C'},{name:'Vaux-et-Borset (Villers-le-Bouillet)',key:'nis-61068D'},{name:'Fize-Fontaine (Villers-le-Bouillet)',key:'nis-61068E'},{name:'Wanze + deelgemeenten',key:'nis-61072'},{name:'Wanze (Wanze)',key:'nis-61072A'},{name:'Bas-Oha (Wanze)',key:'nis-61072B'},{name:'Moha (Wanze)',key:'nis-61072C'},{name:'Huccorgne (Wanze)',key:'nis-61072D'},{name:'Vinalmont (Wanze)',key:'nis-61072E'},{name:'Antheit (Wanze)',key:'nis-61072F'},{name:'Ans + deelgemeenten',key:'nis-62003'},{name:'Ans (Ans)',key:'nis-62003A'},{name:'Loncin (Ans)',key:'nis-62003B'},{name:'Alleur (Ans)',key:'nis-62003C'},{name:'Xhendremael (Ans)',key:'nis-62003D'},{name:'Awans + deelgemeenten',key:'nis-62006'},{name:'Awans (Awans)',key:'nis-62006A'},{name:'Fooz (Awans)',key:'nis-62006B'},{name:'Villers-l"Évêque (Awans)',key:'nis-62006D'},{name:'Hognoul (Awans)',key:'nis-62006C'},{name:'Othée (Awans)',key:'nis-62006E'},{name:'Aywaille + deelgemeenten',key:'nis-62009'},{name:'Sougné-Remouchamps (Aywaille)',key:'nis-62009B'},{name:'Harzé (Aywaille)',key:'nis-62009C'},{name:'Ernonheid (Aywaille)',key:'nis-62009D'},{name:'Aywaille (Aywaille)',key:'nis-62009A'},{name:'Beyne-Heusay + deelgemeenten',key:'nis-62015'},{name:'Beyne-Heusay (Beyne-Heusay)',key:'nis-62015A'},{name:'Bellaire (Beyne-Heusay)',key:'nis-62015C'},{name:'Queue-du-Bois (Beyne-Heusay)',key:'nis-62015B'},{name:'Bitsingen + deelgemeenten',key:'nis-62011'},{name:'Bassenge (Bitsingen)',key:'nis-62011A'},{name:'Boirs (Bitsingen)',key:'nis-62011C'},{name:'Roclenge-sur-Geer (Bitsingen)',key:'nis-62011B'},{name:'Wonck (Bitsingen)',key:'nis-62011E'},{name:'Glons (Bitsingen)',key:'nis-62011D'},{name:'Ében-Émael (Bitsingen)',key:'nis-62011F'},{name:'Blégny + deelgemeenten',key:'nis-62119'},{name:'Trembleur (Blégny)',key:'nis-62119A'},{name:'Mortier (Blégny)',key:'nis-62119B'},{name:'Barchon (Blégny)',key:'nis-62119C'},{name:'Saive (Blégny)',key:'nis-62119D'},{name:'Housse (Blégny)',key:'nis-62119E'},{name:'Saint-Remy (Blégny)',key:'nis-62119F'},{name:'Chaudfontaine + deelgemeenten',key:'nis-62022'},{name:'Chaudfontaine (Chaudfontaine)',key:'nis-62022A'},{name:'Embourg (Chaudfontaine)',key:'nis-62022C'},{name:'Vaux-sous-Chèvremont (Chaudfontaine)',key:'nis-62022D'},{name:'Beaufays (Chaudfontaine)',key:'nis-62022B'},{name:'Comblain-au-Pont + deelgemeenten',key:'nis-62026'},{name:'Comblain-au-Pont (Comblain-au-Pont)',key:'nis-62026A'},{name:'Poulseur (Comblain-au-Pont)',key:'nis-62026B'},{name:'Dalhem + deelgemeenten',key:'nis-62027'},{name:'Dalhem (Dalhem)',key:'nis-62027A'},{name:'Feneur (Dalhem)',key:'nis-62027B'},{name:'Bombaye (Dalhem)',key:'nis-62027C'},{name:'Berneau (Dalhem)',key:'nis-62027D'},{name:'Warsage (Dalhem)',key:'nis-62027E'},{name:'Neufchâteau (Dalhem)',key:'nis-62027F'},{name:'Mortroux (Dalhem)',key:'nis-62027G'},{name:'Saint-André (Dalhem)',key:'nis-62027H'},{name:'Esneux + deelgemeenten',key:'nis-62032'},{name:'Tilff (Esneux)',key:'nis-62032B'},{name:'Esneux (Esneux)',key:'nis-62032A'},{name:'Flémalle + deelgemeenten',key:'nis-62120'},{name:'Chokier (Flémalle)',key:'nis-62120A-III'},{name:'Flémalle-Haute (Flémalle)',key:'nis-62120A-II'},{name:'Ivoz-Ramet (Flémalle)',key:'nis-62120B'},{name:'Flémalle-Grande (Flémalle)',key:'nis-62120A-I'},{name:'Gleixhe (Flémalle)',key:'nis-62120C-II'},{name:'Mons-lez-Liège (Flémalle)',key:'nis-62120D'},{name:'Awirs (Flémalle)',key:'nis-62120C-I'},{name:'Fléron + deelgemeenten',key:'nis-62038'},{name:'Fléron (Fléron)',key:'nis-62038A'},{name:'Retinne (Fléron)',key:'nis-62038B'},{name:'Romsée (Fléron)',key:'nis-62038D'},{name:'Magnée (Fléron)',key:'nis-62038C'},{name:'Grâce-Hollogne + deelgemeenten',key:'nis-62118'},{name:'Hollogne-aux-Pierres (Grâce-Hollogne)',key:'nis-62118-Z'},{name:'Grâce-Berleur (Grâce-Hollogne)',key:'nis-62118A'},{name:'Velroux (Grâce-Hollogne)',key:'nis-62118E'},{name:'Bierset (Grâce-Hollogne)',key:'nis-62118F'},{name:'Horion-Hozémont (Grâce-Hollogne)',key:'nis-62118D'},{name:'Herstal + deelgemeenten',key:'nis-62051'},{name:'Vottem (Herstal)',key:'nis-62051B'},{name:'Herstal (Herstal)',key:'nis-62051A'},{name:'Liers (Herstal)',key:'nis-62051C'},{name:'Milmort (Herstal)',key:'nis-62051D'},{name:'Juprelle + deelgemeenten',key:'nis-62060'},{name:'Juprelle (Juprelle)',key:'nis-62060A'},{name:'Slins (Juprelle)',key:'nis-62060B'},{name:'Fexhe-Slins (Juprelle)',key:'nis-62060C'},{name:'Voroux-lez-Liers (Juprelle)',key:'nis-62060E'},{name:'Villers-Saint-Siméon (Juprelle)',key:'nis-62060D'},{name:'Lantin (Juprelle)',key:'nis-62060F'},{name:'Wihogne (Juprelle)',key:'nis-62060G'},{name:'Paifve (Juprelle)',key:'nis-62060H'},{name:'Luik + deelgemeenten',key:'nis-62063'},{name:'Liège (Luik)',key:'nis-62063-Z'},{name:'Bressoux (Luik)',key:'nis-62063E'},{name:'Jupille-sur-Meuse (Luik)',key:'nis-62063D'},{name:'Wandre (Luik)',key:'nis-62063C'},{name:'Glain (Luik)',key:'nis-62063K'},{name:'Chênée (Luik)',key:'nis-62063G'},{name:'Angleur (Luik)',key:'nis-62063H'},{name:'Grivegnée (Luik)',key:'nis-62063F'},{name:'Rocourt (Luik)',key:'nis-62063L'},{name:'Neupré + deelgemeenten',key:'nis-62121'},{name:'Neuville-en-Condroz (Neupré)',key:'nis-62121A'},{name:'Plainevaux (Neupré)',key:'nis-62121B'},{name:'Rotheux-Rimière (Neupré)',key:'nis-62121C'},{name:'Éhein (Neupré)',key:'nis-62121D'},{name:'Oupeye + deelgemeenten',key:'nis-62079'},{name:'Oupeye (Oupeye)',key:'nis-62079A'},{name:'Hermalle-sous-Argenteau (Oupeye)',key:'nis-62079C'},{name:'Haccourt (Oupeye)',key:'nis-62079B'},{name:'Vivegnis (Oupeye)',key:'nis-62079D'},{name:'Houtain-Saint-Siméon (Oupeye)',key:'nis-62079F'},{name:'Hermée (Oupeye)',key:'nis-62079E'},{name:'Heure-le-Romain (Oupeye)',key:'nis-62079G'},{name:'Saint-Nicolas + deelgemeenten',key:'nis-62093'},{name:'Montegnée (Saint-Nicolas)',key:'nis-62093C'},{name:'Saint-Nicolas (Saint-Nicolas)',key:'nis-62093A'},{name:'Tilleur (Saint-Nicolas)',key:'nis-62093B'},{name:'Seraing + deelgemeenten',key:'nis-62096'},{name:'Seraing (Seraing)',key:'nis-62096A'},{name:'Jemeppe (Seraing)',key:'nis-62096B'},{name:'Ougrée (Seraing)',key:'nis-62096C'},{name:'Boncelles (Seraing)',key:'nis-62096D'},{name:'Soumagne + deelgemeenten',key:'nis-62099'},{name:'Soumagne (Soumagne)',key:'nis-62099A'},{name:'Ayeneux (Soumagne)',key:'nis-62099B'},{name:'Micheroux (Soumagne)',key:'nis-62099C'},{name:'Melen (Soumagne)',key:'nis-62099D'},{name:'Cérexhe-Heuseux (Soumagne)',key:'nis-62099E'},{name:'Évegnée-Tignée (Soumagne)',key:'nis-62099F'},{name:'Sprimont + deelgemeenten',key:'nis-62100'},{name:'Sprimont (Sprimont)',key:'nis-62100A'},{name:'Rouvreux (Sprimont)',key:'nis-62100C'},{name:'Dolembreux (Sprimont)',key:'nis-62100D'},{name:'Louveigné (Sprimont)',key:'nis-62100B'},{name:'Gomzé-Andoumont (Sprimont)',key:'nis-62100E'},{name:'Trooz + deelgemeenten',key:'nis-62122'},{name:'Fraipont (Trooz)',key:'nis-62122B'},{name:'Nessonvaux (Trooz)',key:'nis-62122C'},{name:'Forêt (Trooz)',key:'nis-62122A'},{name:'Wezet + deelgemeenten',key:'nis-62108'},{name:'Richelle (Wezet)',key:'nis-62108B'},{name:'Visé (Wezet)',key:'nis-62108A'},{name:'Argenteau (Wezet)',key:'nis-62108C'},{name:'Cheratte (Wezet)',key:'nis-62108D'},{name:'Lixhe (Wezet)',key:'nis-62108E'},{name:'Lanaye (Wezet)',key:'nis-62108F'},{name:'Amel + deelgemeenten',key:'nis-63001'},{name:'Amel (Amel)',key:'nis-63001-Z'},{name:'Heppenbach (Amel)',key:'nis-63001B'},{name:'Meyerode (Amel)',key:'nis-63001C'},{name:'Aubel + deelgemeenten',key:'nis-63003'},{name:'Aubel (Aubel)',key:'nis-63003A'},{name:'Baelen + deelgemeenten',key:'nis-63004'},{name:'Baelen (Baelen)',key:'nis-63004A'},{name:'Membach (Baelen)',key:'nis-63004B'},{name:'Büllingen + deelgemeenten',key:'nis-63012'},{name:'Manderfeld (Büllingen)',key:'nis-63012-Z'},{name:'Büllingen (Büllingen)',key:'nis-63012A'},{name:'Rocherath (Büllingen)',key:'nis-63012B'},{name:'Burg-Reuland + deelgemeenten',key:'nis-63087'},{name:'Thommen (Burg-Reuland)',key:'nis-63087A'},{name:'Reuland (Burg-Reuland)',key:'nis-63087B'},{name:'Bütgenbach + deelgemeenten',key:'nis-63013'},{name:'Bütgenbach (Bütgenbach)',key:'nis-63013A'},{name:'Elsenborn (Bütgenbach)',key:'nis-63013B'},{name:'Dison + deelgemeenten',key:'nis-63020'},{name:'Dison (Dison)',key:'nis-63020A'},{name:'Andrimont (Dison)',key:'nis-63020B'},{name:'Eupen + deelgemeenten',key:'nis-63023'},{name:'Eupen (Eupen)',key:'nis-63023A'},{name:'Kettenis (Eupen)',key:'nis-63023B'},{name:'Herve + deelgemeenten',key:'nis-63035'},{name:'Herve (Herve)',key:'nis-63035A'},{name:'Charneux (Herve)',key:'nis-63035B'},{name:'Grand-Rechain (Herve)',key:'nis-63035E'},{name:'Chaineux (Herve)',key:'nis-63035D'},{name:'Battice (Herve)',key:'nis-63035C'},{name:'Xhendelesse (Herve)',key:'nis-63035F'},{name:'Bolland (Herve)',key:'nis-63035G'},{name:'Julémont (Herve)',key:'nis-63035H'},{name:'Jalhay + deelgemeenten',key:'nis-63038'},{name:'Jalhay (Jalhay)',key:'nis-63038A'},{name:'Sart (Jalhay)',key:'nis-63038B'},{name:'Kelmis + deelgemeenten',key:'nis-63040'},{name:'Kelmis (Kelmis)',key:'nis-63040A'},{name:'Neu-Moresnet (Kelmis)',key:'nis-63040B'},{name:'Hergenrath (Kelmis)',key:'nis-63040C'},{name:'Lierneux + deelgemeenten',key:'nis-63045'},{name:'Bra (Lierneux)',key:'nis-63045B'},{name:'Arbrefontaine (Lierneux)',key:'nis-63045C'},{name:'Lierneux (Lierneux)',key:'nis-63045A'},{name:'Limburg + deelgemeenten',key:'nis-63046'},{name:'Limbourg (Limburg)',key:'nis-63046A'},{name:'Bilstain (Limburg)',key:'nis-63046B'},{name:'Goé (Limburg)',key:'nis-63046C'},{name:'Lontzen + deelgemeenten',key:'nis-63048'},{name:'Lontzen (Lontzen)',key:'nis-63048A'},{name:'Walhorn (Lontzen)',key:'nis-63048B'},{name:'Malmedy + deelgemeenten',key:'nis-63049'},{name:'Malmedy (Malmedy)',key:'nis-63049A'},{name:'Bellevaux-Ligneuville (Malmedy)',key:'nis-63049C'},{name:'Bevercé (Malmedy)',key:'nis-63049B'},{name:'Olne + deelgemeenten',key:'nis-63057'},{name:'Olne (Olne)',key:'nis-63057A'},{name:'Pepinster + deelgemeenten',key:'nis-63058'},{name:'Cornesse (Pepinster)',key:'nis-63058A-II'},{name:'Wegnez (Pepinster)',key:'nis-63058C'},{name:'Soiron (Pepinster)',key:'nis-63058B'},{name:'Pepinster (Pepinster)',key:'nis-63058A-I'},{name:'Plombières + deelgemeenten',key:'nis-63088'},{name:'Gemmenich (Plombières)',key:'nis-63088A'},{name:'Moresnet (Plombières)',key:'nis-63088B'},{name:'Montzen (Plombières)',key:'nis-63088C'},{name:'Hombourg (Plombières)',key:'nis-63088D'},{name:'Sippenaeken (Plombières)',key:'nis-63088E'},{name:'Raeren + deelgemeenten',key:'nis-63061'},{name:'Raeren (Raeren)',key:'nis-63061A'},{name:'Eynatten (Raeren)',key:'nis-63061B'},{name:'Hauset (Raeren)',key:'nis-63061C'},{name:'Sankt Vith + deelgemeenten',key:'nis-63067'},{name:'Sankt Vith (Sankt Vith)',key:'nis-63067-Z'},{name:'Lommersweiler (Sankt Vith)',key:'nis-63067D'},{name:'Crombach (Sankt Vith)',key:'nis-63067E'},{name:'Recht (Sankt Vith)',key:'nis-63067F'},{name:'Schönberg (Sankt Vith)',key:'nis-63067C'},{name:'Spa + deelgemeenten',key:'nis-63072'},{name:'Spa (Spa)',key:'nis-63072A'},{name:'Stavelot + deelgemeenten',key:'nis-63073'},{name:'Francorchamps (Stavelot)',key:'nis-63073B'},{name:'Stavelot (Stavelot)',key:'nis-63073A'},{name:'Stoumont + deelgemeenten',key:'nis-63075'},{name:'Stoumont (Stoumont)',key:'nis-63075A'},{name:'La Gleize (Stoumont)',key:'nis-63075B'},{name:'Rahier (Stoumont)',key:'nis-63075C'},{name:'Lorcé (Stoumont)',key:'nis-63075E'},{name:'Chevron (Stoumont)',key:'nis-63075D'},{name:'Theux + deelgemeenten',key:'nis-63076'},{name:'Polleur (Theux)',key:'nis-63076B'},{name:'Theux (Theux)',key:'nis-63076A'},{name:'La Reid (Theux)',key:'nis-63076C'},{name:'Thimister-Clermont + deelgemeenten',key:'nis-63089'},{name:'Thimister (Thimister-Clermont)',key:'nis-63089A'},{name:'Clermont (Thimister-Clermont)',key:'nis-63089B'},{name:'Trois-Ponts + deelgemeenten',key:'nis-63086'},{name:'Fosse (Trois-Ponts)',key:'nis-63086A'},{name:'Wanne (Trois-Ponts)',key:'nis-63086B'},{name:'Basse-Bodeux (Trois-Ponts)',key:'nis-63086C'},{name:'Verviers + deelgemeenten',key:'nis-63079'},{name:'Heusy (Verviers)',key:'nis-63079-Z'},{name:'Verviers (Verviers)',key:'nis-63079A'},{name:'Stembert (Verviers)',key:'nis-63079B'},{name:'Ensival (Verviers)',key:'nis-63079E'},{name:'Lambermont (Verviers)',key:'nis-63079F'},{name:'Petit-Rechain (Verviers)',key:'nis-63079G'},{name:'Weismes + deelgemeenten',key:'nis-63080'},{name:'Waimes (Weismes)',key:'nis-63080A'},{name:'Robertville (Weismes)',key:'nis-63080B'},{name:'Faymonville (Weismes)',key:'nis-63080C'},{name:'Welkenraedt + deelgemeenten',key:'nis-63084'},{name:'Welkenraedt (Welkenraedt)',key:'nis-63084A'},{name:'Henri-Chapelle (Welkenraedt)',key:'nis-63084B'},{name:'Provincie Limburg',key:'nis-70000'},{name:'Regio Haspengouw',key:'reg-haspengouw'},{name:'Alken + deelgemeenten',key:'nis-73001'},{name:'Alken (Alken)',key:'nis-73001A'},{name:'Herstappe + deelgemeenten',key:'nis-73028'},{name:'Herstappe (Herstappe)',key:'nis-73028A'},{name:'Riemst + deelgemeenten',key:'nis-73066'},{name:'Riemst (Riemst)',key:'nis-73066A'},{name:'Herderen (Riemst)',key:'nis-73066B'},{name:'Vlijtingen (Riemst)',key:'nis-73066C'},{name:'Vroenhoven (Riemst)',key:'nis-73066D'},{name:'Kanne (Riemst)',key:'nis-73066E'},{name:'Zichen-Zussen-Bolder (Riemst)',key:'nis-73066F'},{name:'Val-Meer (Riemst)',key:'nis-73066G'},{name:'Millen (Riemst)',key:'nis-73066H'},{name:'Genoelselderen (Riemst)',key:'nis-73066J'},{name:'Membruggen (Riemst)',key:'nis-73066K'},{name:'Sint-Truiden + deelgemeenten',key:'nis-71053'},{name:'Halmaal (Sint-Truiden)',key:'nis-71053B'},{name:'Sint-Truiden (Sint-Truiden)',key:'nis-71053A'},{name:'Wilderen (Sint-Truiden)',key:'nis-71053C'},{name:'Duras (Sint-Truiden)',key:'nis-71053D'},{name:'Gorsem (Sint-Truiden)',key:'nis-71053E'},{name:'Runkelen (Sint-Truiden)',key:'nis-71053F'},{name:'Ordingen (Sint-Truiden)',key:'nis-71053H'},{name:'Zepperen (Sint-Truiden)',key:'nis-71053G'},{name:'Brustem (Sint-Truiden)',key:'nis-71053J'},{name:'Groot-Gelmen (Sint-Truiden)',key:'nis-71053K'},{name:'Engelmanshoven (Sint-Truiden)',key:'nis-71053L'},{name:'Gelinden (Sint-Truiden)',key:'nis-71053M'},{name:'Aalst (Sint-Truiden)',key:'nis-71053N'},{name:'Kerkom-bij-Sint-Truiden (Sint-Truiden)',key:'nis-71053P'},{name:'Velm (Sint-Truiden)',key:'nis-71053R'},{name:'Wellen + deelgemeenten',key:'nis-73098'},{name:'Herten (Wellen)',key:'nis-73098B'},{name:'Wellen (Wellen)',key:'nis-73098A'},{name:'Berlingen (Wellen)',key:'nis-73098C'},{name:'Ulbeek (Wellen)',key:'nis-73098D'},{name:'Heers + deelgemeenten',key:'nis-73022'},{name:'Heers (Heers)',key:'nis-73022A'},{name:'Veulen (Heers)',key:'nis-73022D'},{name:'Batsheers (Heers)',key:'nis-73022B'},{name:'Opheers (Heers)',key:'nis-73022C'},{name:'Gutschoven (Heers)',key:'nis-73022E'},{name:'Klein-Gelmen (Heers)',key:'nis-73022G'},{name:'Heks (Heers)',key:'nis-73022H'},{name:'Mettekoven (Heers)',key:'nis-73022F'},{name:'Horpmaal (Heers)',key:'nis-73022J'},{name:'Vechmaal (Heers)',key:'nis-73022K'},{name:'Rukkelingen-Loon (Heers)',key:'nis-73022M'},{name:'Mechelen-Bovelingen (Heers)',key:'nis-73022L'},{name:'Gingelom + deelgemeenten',key:'nis-71017'},{name:'Niel-bij-Sint-Truiden (Gingelom)',key:'nis-71017B'},{name:'Gingelom (Gingelom)',key:'nis-71017A'},{name:'Borlo (Gingelom)',key:'nis-71017E'},{name:'Buvingen (Gingelom)',key:'nis-71017D'},{name:'Muizen (Gingelom)',key:'nis-71017C'},{name:'Mielen-boven-Aalst (Gingelom)',key:'nis-71017F'},{name:'Boekhout (Gingelom)',key:'nis-71017G'},{name:'Jeuk (Gingelom)',key:'nis-71017H'},{name:'Kortijs (Gingelom)',key:'nis-71017K'},{name:'Montenaken (Gingelom)',key:'nis-71017J'},{name:'Vorsen (Gingelom)',key:'nis-71017L'},{name:'Herk-de-Stad + deelgemeenten',key:'nis-71024'},{name:'Donk (Herk-de-Stad)',key:'nis-71024B'},{name:'Herk-de-Stad (Herk-de-Stad)',key:'nis-71024A'},{name:'Schulen (Herk-de-Stad)',key:'nis-71024C'},{name:'Berbroek (Herk-de-Stad)',key:'nis-71024D'},{name:'Halen + deelgemeenten',key:'nis-71020'},{name:'Loksbergen (Halen)',key:'nis-71020A-II'},{name:'Zelem (Halen)',key:'nis-71020B'},{name:'Halen (Halen)',key:'nis-71020A-I'},{name:'Nieuwerkerken + deelgemeenten',key:'nis-71045'},{name:'Wijer (Nieuwerkerken)',key:'nis-71045C'},{name:'Nieuwerkerken (Nieuwerkerken)',key:'nis-71045A'},{name:'Binderveld (Nieuwerkerken)',key:'nis-71045B'},{name:'Kozen (Nieuwerkerken)',key:'nis-71045D'},{name:'Landen + deelgemeenten',key:'nis-24059'},{name:'Rumsdorp (Landen)',key:'nis-24059B'},{name:'Landen (Landen)',key:'nis-24059A'},{name:'Walsbets (Landen)',key:'nis-24059C-III'},{name:'Waasmont (Landen)',key:'nis-24059C-II'},{name:'Wezeren (Landen)',key:'nis-24059C-IV'},{name:'Neerwinden (Landen)',key:'nis-24059D'},{name:'Wange (Landen)',key:'nis-24059E'},{name:'Walshoutem (Landen)',key:'nis-24059C-I'},{name:'Eliksem (Landen)',key:'nis-24059F'},{name:'Laar (Landen)',key:'nis-24059H'},{name:'Overwinden (Landen)',key:'nis-24059J'},{name:'Attenhoven (Landen)',key:'nis-24059K'},{name:'Ezemaal (Landen)',key:'nis-24059G'},{name:'Neerlanden (Landen)',key:'nis-24059L'},{name:'Bilzen-Hoeselt + deelgemeenten',key:'nis-73110'},{name:'Bilzen (Bilzen-Hoeselt)',key:'nis-73006A'},{name:'Beverst (Bilzen-Hoeselt)',key:'nis-73006B'},{name:'Munsterbilzen (Bilzen-Hoeselt)',key:'nis-73006C'},{name:'Waltwilder (Bilzen-Hoeselt)',key:'nis-73006D'},{name:'Hoelbeek (Bilzen-Hoeselt)',key:'nis-73006E'},{name:'Mopertingen (Bilzen-Hoeselt)',key:'nis-73006G'},{name:'Eigenbilzen (Bilzen-Hoeselt)',key:'nis-73006F'},{name:'Kleine-Spouwen (Bilzen-Hoeselt)',key:'nis-73006K'},{name:'Hees (Bilzen-Hoeselt)',key:'nis-73006H'},{name:'Rosmeer (Bilzen-Hoeselt)',key:'nis-73006J'},{name:'Grote-Spouwen (Bilzen-Hoeselt)',key:'nis-73006L'},{name:'Rijkhoven (Bilzen-Hoeselt)',key:'nis-73006M'},{name:'Martenslinde (Bilzen-Hoeselt)',key:'nis-73006N'},{name:'Hoeselt (Bilzen-Hoeselt)',key:'nis-73032A'},{name:'Werm (Bilzen-Hoeselt)',key:'nis-73032B'},{name:'Romershoven (Bilzen-Hoeselt)',key:'nis-73032C'},{name:'Schalkhoven (Bilzen-Hoeselt)',key:'nis-73032E'},{name:'Sint-Huibrechts-Hern (Bilzen-Hoeselt)',key:'nis-73032D'},{name:'Tongeren-Borgloon + deelgemeenten',key:'nis-73111'},{name:'Kuttekoven (Tongeren-Borgloon)',key:'nis-73009B'},{name:'Borgloon (Tongeren-Borgloon)',key:'nis-73009A'},{name:'Kerniel (Tongeren-Borgloon)',key:'nis-73009C'},{name:'Jesseren (Tongeren-Borgloon)',key:'nis-73009E'},{name:'Groot-Loon (Tongeren-Borgloon)',key:'nis-73009G'},{name:'Gors-Opleeuw (Tongeren-Borgloon)',key:'nis-73009D'},{name:'Bommershoven (Tongeren-Borgloon)',key:'nis-73009F'},{name:'Hendrieken (Tongeren-Borgloon)',key:'nis-73009J'},{name:'Broekom (Tongeren-Borgloon)',key:'nis-73009H'},{name:'Voort (Tongeren-Borgloon)',key:'nis-73009K'},{name:'Gotem (Tongeren-Borgloon)',key:'nis-73009L'},{name:'Rijkel (Tongeren-Borgloon)',key:'nis-73009N'},{name:'Hoepertingen (Tongeren-Borgloon)',key:'nis-73009M'},{name:'Tongeren (Tongeren-Borgloon)',key:'nis-73083A'},{name:'Koninksem (Tongeren-Borgloon)',key:'nis-73083B'},{name:'Neerrepen (Tongeren-Borgloon)',key:'nis-73083C'},{name:'Riksingen (Tongeren-Borgloon)',key:'nis-73083D'},{name:'Henis (Tongeren-Borgloon)',key:'nis-73083E'},{name:'Berg (Tongeren-Borgloon)',key:'nis-73083F'},{name:'Mal (Tongeren-Borgloon)',key:'nis-73083G'},{name:'Sluizen (Tongeren-Borgloon)',key:'nis-73083H'},{name:'Nerem (Tongeren-Borgloon)',key:'nis-73083J'},{name:'Diets-Heur (Tongeren-Borgloon)',key:'nis-73083K-II'},{name:'Vreren (Tongeren-Borgloon)',key:'nis-73083K-I'},{name:'Piringen (Tongeren-Borgloon)',key:'nis-73083P'},{name:'Rutten (Tongeren-Borgloon)',key:'nis-73083L'},{name:'Overrepen (Tongeren-Borgloon)',key:'nis-73083R'},{name:'Lauw (Tongeren-Borgloon)',key:'nis-73083M'},{name:'"s-Herenelderen (Tongeren-Borgloon)',key:'nis-73083S'},{name:'Widooie (Tongeren-Borgloon)',key:'nis-73083N'},{name:'Regio Hasselt',key:'reg-hasselt'},{name:'Hasselt + deelgemeenten',key:'nis-71072'},{name:'Wimmertingen (Hasselt)',key:'nis-71022B'},{name:'Hasselt (Hasselt)',key:'nis-71022A'},{name:'Kuringen (Hasselt)',key:'nis-71022D'},{name:'Stokrooie (Hasselt)',key:'nis-71022E'},{name:'Sint-Lambrechts-Herk (Hasselt)',key:'nis-71022C'},{name:'Kermt (Hasselt)',key:'nis-71022F'},{name:'Spalbeek (Hasselt)',key:'nis-71022G'},{name:'Stevoort (Hasselt)',key:'nis-71022H'},{name:'Kortessem (Hasselt)',key:'nis-73040A'},{name:'Wintershoven (Hasselt)',key:'nis-73040B'},{name:'Vliermaalroot (Hasselt)',key:'nis-73040C'},{name:'Vliermaal (Hasselt)',key:'nis-73040D'},{name:'Guigoven (Hasselt)',key:'nis-73040E'},{name:'Regio Kempen',key:'reg-kempen'},{name:'Wijnegem + deelgemeenten',key:'nis-11050'},{name:'Wijnegem (Wijnegem)',key:'nis-11050A'},{name:'Zandhoven + deelgemeenten',key:'nis-11054'},{name:'Zandhoven (Zandhoven)',key:'nis-11054A'},{name:'Pulderbos (Zandhoven)',key:'nis-11054B'},{name:'Pulle (Zandhoven)',key:'nis-11054C'},{name:'Viersel (Zandhoven)',key:'nis-11054D'},{name:'Massenhoven (Zandhoven)',key:'nis-11054E'},{name:'Malle + deelgemeenten',key:'nis-11057'},{name:'Westmalle (Malle)',key:'nis-11057A'},{name:'Oostmalle (Malle)',key:'nis-11057B'},{name:'Ranst + deelgemeenten',key:'nis-11035'},{name:'Ranst (Ranst)',key:'nis-11035A'},{name:'Oelegem (Ranst)',key:'nis-11035B'},{name:'Broechem (Ranst)',key:'nis-11035C'},{name:'Emblem (Ranst)',key:'nis-11035D'},{name:'Schoten + deelgemeenten',key:'nis-11040'},{name:'Schoten (Schoten)',key:'nis-11040A'},{name:'Essen + deelgemeenten',key:'nis-11016'},{name:'Essen (Essen)',key:'nis-11016A'},{name:'Kalmthout + deelgemeenten',key:'nis-11022'},{name:'Kalmthout (Kalmthout)',key:'nis-11022A'},{name:'Brasschaat + deelgemeenten',key:'nis-11008'},{name:'Brasschaat (Brasschaat)',key:'nis-11008A'},{name:'Stabroek + deelgemeenten',key:'nis-11044'},{name:'Stabroek (Stabroek)',key:'nis-11044A'},{name:'Hoevenen (Stabroek)',key:'nis-11044B'},{name:'Kapellen + deelgemeenten',key:'nis-11023'},{name:'Kapellen (Kapellen)',key:'nis-11023-Z'},{name:'Brecht + deelgemeenten',key:'nis-11009'},{name:'Brecht (Brecht)',key:'nis-11009A'},{name:'Sint-Lenaarts (Brecht)',key:'nis-11009B'},{name:'Sint-Job-in-\'t-Goor (Brecht)',key:'nis-11009C'},{name:'Schilde + deelgemeenten',key:'nis-11039'},{name:'Schilde (Schilde)',key:'nis-11039A'},{name:'"s-Gravenwezel (Schilde)',key:'nis-11039B'},{name:'Zoersel + deelgemeenten',key:'nis-11055'},{name:'Halle (Zoersel)',key:'nis-11055B'},{name:'Zoersel (Zoersel)',key:'nis-11055A'},{name:'Wuustwezel + deelgemeenten',key:'nis-11053'},{name:'Wuustwezel (Wuustwezel)',key:'nis-11053A'},{name:'Loenhout (Wuustwezel)',key:'nis-11053B'},{name:'Duffel + deelgemeenten',key:'nis-12009'},{name:'Duffel (Duffel)',key:'nis-12009A'},{name:'Bonheiden + deelgemeenten',key:'nis-12005'},{name:'Bonheiden (Bonheiden)',key:'nis-12005A'},{name:'Rijmenam (Bonheiden)',key:'nis-12005B'},{name:'Sint-Katelijne-Waver + deelgemeenten',key:'nis-12035'},{name:'Onze-Lieve-Vrouw-Waver (Sint-Katelijne-Waver)',key:'nis-12035B'},{name:'Sint-Katelijne-Waver (Sint-Katelijne-Waver)',key:'nis-12035A'},{name:'Herentals + deelgemeenten',key:'nis-13011'},{name:'Herentals (Herentals)',key:'nis-13011A'},{name:'Noorderwijk (Herentals)',key:'nis-13011B'},{name:'Morkhoven (Herentals)',key:'nis-13011C'},{name:'Herselt + deelgemeenten',key:'nis-13013'},{name:'Herselt (Herselt)',key:'nis-13013A'},{name:'Ramsel (Herselt)',key:'nis-13013B'},{name:'Hulshout + deelgemeenten',key:'nis-13016'},{name:'Hulshout (Hulshout)',key:'nis-13016A'},{name:'Houtvenne (Hulshout)',key:'nis-13016C'},{name:'Westmeerbeek (Hulshout)',key:'nis-13016B'},{name:'Olen + deelgemeenten',key:'nis-13029'},{name:'Olen (Olen)',key:'nis-13029A'},{name:'Westerlo + deelgemeenten',key:'nis-13049'},{name:'Tongerlo (Westerlo)',key:'nis-13049B'},{name:'Westerlo (Westerlo)',key:'nis-13049A'},{name:'Zoerle-Parwijs (Westerlo)',key:'nis-13049C'},{name:'Oevel (Westerlo)',key:'nis-13049D'},{name:'Herenthout + deelgemeenten',key:'nis-13012'},{name:'Herenthout (Herenthout)',key:'nis-13012A'},{name:'Lille + deelgemeenten',key:'nis-13019'},{name:'Lille (Lille)',key:'nis-13019A'},{name:'Wechelderzande (Lille)',key:'nis-13019B'},{name:'Gierle (Lille)',key:'nis-13019C'},{name:'Poederlee (Lille)',key:'nis-13019D'},{name:'Grobbendonk + deelgemeenten',key:'nis-13010'},{name:'Bouwel (Grobbendonk)',key:'nis-13010B'},{name:'Grobbendonk (Grobbendonk)',key:'nis-13010A'},{name:'Vorselaar + deelgemeenten',key:'nis-13044'},{name:'Vorselaar (Vorselaar)',key:'nis-13044A'},{name:'Turnhout + deelgemeenten',key:'nis-13040'},{name:'Turnhout (Turnhout)',key:'nis-13040A'},{name:'Rijkevorsel + deelgemeenten',key:'nis-13037'},{name:'Rijkevorsel (Rijkevorsel)',key:'nis-13037A'},{name:'Hoogstraten + deelgemeenten',key:'nis-13014'},{name:'Hoogstraten (Hoogstraten)',key:'nis-13014A'},{name:'Minderhout (Hoogstraten)',key:'nis-13014B'},{name:'Meer (Hoogstraten)',key:'nis-13014C'},{name:'Meerle (Hoogstraten)',key:'nis-13014D'},{name:'Wortel (Hoogstraten)',key:'nis-13014E'},{name:'Merksplas + deelgemeenten',key:'nis-13023'},{name:'Merksplas (Merksplas)',key:'nis-13023A'},{name:'Beerse + deelgemeenten',key:'nis-13004'},{name:'Beerse (Beerse)',key:'nis-13004A'},{name:'Vlimmeren (Beerse)',key:'nis-13004B'},{name:'Vosselaar + deelgemeenten',key:'nis-13046'},{name:'Vosselaar (Vosselaar)',key:'nis-13046A'},{name:'Oud-Turnhout + deelgemeenten',key:'nis-13031'},{name:'Oud-Turnhout (Oud-Turnhout)',key:'nis-13031A'},{name:'Arendonk + deelgemeenten',key:'nis-13001'},{name:'Arendonk (Arendonk)',key:'nis-13001A'},{name:'Ravels + deelgemeenten',key:'nis-13035'},{name:'Ravels (Ravels)',key:'nis-13035A'},{name:'Weelde (Ravels)',key:'nis-13035B'},{name:'Poppel (Ravels)',key:'nis-13035C'},{name:'Baarle-Hertog + deelgemeenten',key:'nis-13002'},{name:'Baarle-Hertog (Baarle-Hertog)',key:'nis-13002A'},{name:'Mol + deelgemeenten',key:'nis-13025'},{name:'Mol (Mol)',key:'nis-13025A'},{name:'Laakdal + deelgemeenten',key:'nis-13053'},{name:'Veerle (Laakdal)',key:'nis-13053A'},{name:'Varendonk (Laakdal)',key:'nis-13053B'},{name:'Vorst (Laakdal)',key:'nis-13053D'},{name:'Eindhout (Laakdal)',key:'nis-13053C'},{name:'Geel + deelgemeenten',key:'nis-13008'},{name:'Geel (Geel)',key:'nis-13008-Z'},{name:'Meerhout + deelgemeenten',key:'nis-13021'},{name:'Meerhout (Meerhout)',key:'nis-13021A'},{name:'Kasterlee + deelgemeenten',key:'nis-13017'},{name:'Lichtaart (Kasterlee)',key:'nis-13017B'},{name:'Tielen (Kasterlee)',key:'nis-13017C'},{name:'Kasterlee (Kasterlee)',key:'nis-13017A'},{name:'Retie + deelgemeenten',key:'nis-13036'},{name:'Retie (Retie)',key:'nis-13036A'},{name:'Dessel + deelgemeenten',key:'nis-13006'},{name:'Dessel (Dessel)',key:'nis-13006A'},{name:'Balen + deelgemeenten',key:'nis-13003'},{name:'Olmen (Balen)',key:'nis-13003B'},{name:'Balen (Balen)',key:'nis-13003A'},{name:'Heist-op-den-Berg + deelgemeenten',key:'nis-12014'},{name:'Heist-op-den-Berg (Heist-op-den-Berg)',key:'nis-12014A'},{name:'Hallaar (Heist-op-den-Berg)',key:'nis-12014B'},{name:'Itegem (Heist-op-den-Berg)',key:'nis-12014C'},{name:'Wiekevorst (Heist-op-den-Berg)',key:'nis-12014D'},{name:'Booischot (Heist-op-den-Berg)',key:'nis-12014E'},{name:'Schriek (Heist-op-den-Berg)',key:'nis-12014F'},{name:'Lier + deelgemeenten',key:'nis-12021'},{name:'Lier (Lier)',key:'nis-12021A'},{name:'Koningshooikt (Lier)',key:'nis-12021B'},{name:'Nijlen + deelgemeenten',key:'nis-12026'},{name:'Kessel (Nijlen)',key:'nis-12026C'},{name:'Nijlen (Nijlen)',key:'nis-12026A'},{name:'Bevel (Nijlen)',key:'nis-12026B'},{name:'Putte + deelgemeenten',key:'nis-12029'},{name:'Beerzel (Putte)',key:'nis-12029B'},{name:'Putte (Putte)',key:'nis-12029A'},{name:'Berlaar + deelgemeenten',key:'nis-12002'},{name:'Gestel (Berlaar)',key:'nis-12002A-II'},{name:'Berlaar (Berlaar)',key:'nis-12002A-I'},{name:'Regio Limburgse Kempen',key:'reg-limburgse-kempen'},{name:'Houthalen-Helchteren + deelgemeenten',key:'nis-72039'},{name:'Helchteren (Houthalen-Helchteren)',key:'nis-72039B'},{name:'Houthalen (Houthalen-Helchteren)',key:'nis-72039A'},{name:'Lommel + deelgemeenten',key:'nis-72020'},{name:'Lommel (Lommel)',key:'nis-72020A'},{name:'Hamont-Achel + deelgemeenten',key:'nis-72037'},{name:'Achel (Hamont-Achel)',key:'nis-72037B'},{name:'Hamont (Hamont-Achel)',key:'nis-72037A'},{name:'Hechtel-Eksel + deelgemeenten',key:'nis-72038'},{name:'Hechtel (Hechtel-Eksel)',key:'nis-72038A'},{name:'Eksel (Hechtel-Eksel)',key:'nis-72038B'},{name:'Bocholt + deelgemeenten',key:'nis-72003'},{name:'Reppel (Bocholt)',key:'nis-72003B'},{name:'Bocholt (Bocholt)',key:'nis-72003A'},{name:'Kaulille (Bocholt)',key:'nis-72003C'},{name:'Bree + deelgemeenten',key:'nis-72004'},{name:'Gerdingen (Bree)',key:'nis-72004A-III'},{name:'Beek (Bree)',key:'nis-72004A-II'},{name:'Bree (Bree)',key:'nis-72004A-I'},{name:'Tongerlo (Bree)',key:'nis-72004B'},{name:'Opitter (Bree)',key:'nis-72004C'},{name:'Peer + deelgemeenten',key:'nis-72030'},{name:'Peer (Peer)',key:'nis-72030A'},{name:'Kleine-Brogel (Peer)',key:'nis-72030B'},{name:'Grote-Brogel (Peer)',key:'nis-72030C'},{name:'Wijchmaal (Peer)',key:'nis-72030D'},{name:'Zonhoven + deelgemeenten',key:'nis-71066'},{name:'Zonhoven (Zonhoven)',key:'nis-71066-Z'},{name:'Heusden-Zolder + deelgemeenten',key:'nis-71070'},{name:'Heusden (Heusden-Zolder)',key:'nis-71070A'},{name:'Zolder (Heusden-Zolder)',key:'nis-71070B'},{name:'Lummen + deelgemeenten',key:'nis-71037'},{name:'Lummen (Lummen)',key:'nis-71037A'},{name:'Linkhout (Lummen)',key:'nis-71037B'},{name:'Meldert (Lummen)',key:'nis-71037C'},{name:'Beringen + deelgemeenten',key:'nis-71004'},{name:'Beringen (Beringen)',key:'nis-71004A'},{name:'Koersel (Beringen)',key:'nis-71004C'},{name:'Paal (Beringen)',key:'nis-71004B'},{name:'Beverlo (Beringen)',key:'nis-71004D'},{name:'Diepenbeek + deelgemeenten',key:'nis-71011'},{name:'Diepenbeek (Diepenbeek)',key:'nis-71011A'},{name:'Genk + deelgemeenten',key:'nis-71016'},{name:'Genk (Genk)',key:'nis-71016-Z'},{name:'As + deelgemeenten',key:'nis-71002'},{name:'As (As)',key:'nis-71002A'},{name:'Niel-bij-As (As)',key:'nis-71002B'},{name:'Zutendaal + deelgemeenten',key:'nis-71067'},{name:'Zutendaal (Zutendaal)',key:'nis-71067A'},{name:'Leopoldsburg + deelgemeenten',key:'nis-71034'},{name:'Heppen (Leopoldsburg)',key:'nis-71034B'},{name:'Leopoldsburg (Leopoldsburg)',key:'nis-71034A'},{name:'Pelt + deelgemeenten',key:'nis-72043'},{name:'Sint-Huibrechts-Lille (Pelt)',key:'nis-72025B'},{name:'Neerpelt (Pelt)',key:'nis-72025A'},{name:'Overpelt (Pelt)',key:'nis-72029A'},{name:'Oudsbergen + deelgemeenten',key:'nis-72042'},{name:'Opglabbeek (Oudsbergen)',key:'nis-71047A'},{name:'Wijshagen (Oudsbergen)',key:'nis-72040B'},{name:'Meeuwen (Oudsbergen)',key:'nis-72040A'},{name:'Ellikom (Oudsbergen)',key:'nis-72040C'},{name:'Neerglabbeek (Oudsbergen)',key:'nis-72040E'},{name:'Gruitrode (Oudsbergen)',key:'nis-72040D'},{name:'Tessenderlo-Ham + deelgemeenten',key:'nis-71071'},{name:'Tessenderlo (Tessenderlo-Ham)',key:'nis-71057A'},{name:'Oostham (Tessenderlo-Ham)',key:'nis-71069A'},{name:'Kwaadmechelen (Tessenderlo-Ham)',key:'nis-71069B'},{name:'Regio Maasland',key:'reg-maasland'},{name:'Kinrooi + deelgemeenten',key:'nis-72018'},{name:'Kinrooi (Kinrooi)',key:'nis-72018A'},{name:'Molenbeersel (Kinrooi)',key:'nis-72018B'},{name:'Kessenich (Kinrooi)',key:'nis-72018C'},{name:'Ophoven (Kinrooi)',key:'nis-72018D'},{name:'Dilsen-Stokkem + deelgemeenten',key:'nis-72041'},{name:'Dilsen (Dilsen-Stokkem)',key:'nis-72041A'},{name:'Rotem (Dilsen-Stokkem)',key:'nis-72041B'},{name:'Elen (Dilsen-Stokkem)',key:'nis-72041C'},{name:'Stokkem (Dilsen-Stokkem)',key:'nis-72041D'},{name:'Lanklaar (Dilsen-Stokkem)',key:'nis-72041E'},{name:'Maaseik + deelgemeenten',key:'nis-72021'},{name:'Maaseik (Maaseik)',key:'nis-72021A'},{name:'Neeroeteren (Maaseik)',key:'nis-72021B'},{name:'Opoeteren (Maaseik)',key:'nis-72021C'},{name:'Lanaken + deelgemeenten',key:'nis-73042'},{name:'Lanaken (Lanaken)',key:'nis-73042A'},{name:'Neerharen (Lanaken)',key:'nis-73042C'},{name:'Rekem (Lanaken)',key:'nis-73042B'},{name:'Veldwezelt (Lanaken)',key:'nis-73042D'},{name:'Gellik (Lanaken)',key:'nis-73042E'},{name:'Maasmechelen + deelgemeenten',key:'nis-73107'},{name:'Mechelen-aan-de-Maas (Maasmechelen)',key:'nis-73107A'},{name:'Opgrimbie (Maasmechelen)',key:'nis-73107B'},{name:'Vucht (Maasmechelen)',key:'nis-73107C'},{name:'Boorsem (Maasmechelen)',key:'nis-73107G'},{name:'Leut (Maasmechelen)',key:'nis-73107E'},{name:'Eisden (Maasmechelen)',key:'nis-73107D'},{name:'Meeswijk (Maasmechelen)',key:'nis-73107F'},{name:'Uikhoven (Maasmechelen)',key:'nis-73107H'},{name:'Regio Voerstreek',key:'reg-voerstreek'},{name:'Voeren + deelgemeenten',key:'nis-73109'},{name:'"s-Gravenvoeren (Voeren)',key:'nis-73109A'},{name:'Sint-Martens-Voeren (Voeren)',key:'nis-73109B'},{name:'Teuven (Voeren)',key:'nis-73109C'},{name:'Remersdaal (Voeren)',key:'nis-73109D'},{name:'Sint-Pieters-Voeren (Voeren)',key:'nis-73109E'},{name:'Moelingen (Voeren)',key:'nis-73109F'},{name:'Provincie Luxemburg',key:'nis-80000'},{name:'Regio Luxemburg',key:'reg-luxemburg'},{name:'Aarlen + deelgemeenten',key:'nis-81001'},{name:'Arlon (Aarlen)',key:'nis-81001A'},{name:'Autelbas (Aarlen)',key:'nis-81001B'},{name:'Bonnert (Aarlen)',key:'nis-81001D'},{name:'Heinsch (Aarlen)',key:'nis-81001C'},{name:'Guirsch (Aarlen)',key:'nis-81001E'},{name:'Toernich (Aarlen)',key:'nis-81001F'},{name:'Attert + deelgemeenten',key:'nis-81003'},{name:'Attert (Attert)',key:'nis-81003A'},{name:'Tontelange (Attert)',key:'nis-81003B'},{name:'Thiaumont (Attert)',key:'nis-81003C'},{name:'Nobressart (Attert)',key:'nis-81003D'},{name:'Nothomb (Attert)',key:'nis-81003E'},{name:'Aubange + deelgemeenten',key:'nis-81004'},{name:'Aubange (Aubange)',key:'nis-81004A'},{name:'Athus (Aubange)',key:'nis-81004B'},{name:'Halanzy (Aubange)',key:'nis-81004C'},{name:'Rachecourt (Aubange)',key:'nis-81004D'},{name:'Martelange + deelgemeenten',key:'nis-81013'},{name:'Martelange (Martelange)',key:'nis-81013A'},{name:'Messancy + deelgemeenten',key:'nis-81015'},{name:'Messancy (Messancy)',key:'nis-81015A'},{name:'Sélange (Messancy)',key:'nis-81015B'},{name:'Habergy (Messancy)',key:'nis-81015C'},{name:'Wolkrange (Messancy)',key:'nis-81015D'},{name:'Hondelange (Messancy)',key:'nis-81015E'},{name:'Fauvillers + deelgemeenten',key:'nis-82009'},{name:'Fauvillers (Fauvillers)',key:'nis-82009A'},{name:'Hollange (Fauvillers)',key:'nis-82009C'},{name:'Tintange (Fauvillers)',key:'nis-82009B'},{name:'Gouvy + deelgemeenten',key:'nis-82037'},{name:'Bovigny (Gouvy)',key:'nis-82037A'},{name:'Beho (Gouvy)',key:'nis-82037B'},{name:'Limerlé (Gouvy)',key:'nis-82037C'},{name:'Cherain (Gouvy)',key:'nis-82037D'},{name:'Montleban (Gouvy)',key:'nis-82037E'},{name:'Houffalize + deelgemeenten',key:'nis-82014'},{name:'Houffalize (Houffalize)',key:'nis-82014A'},{name:'Mabompré (Houffalize)',key:'nis-82014B'},{name:'Wibrin (Houffalize)',key:'nis-82014D'},{name:'Nadrin (Houffalize)',key:'nis-82014C'},{name:'Tailles (Houffalize)',key:'nis-82014E'},{name:'Tavigny (Houffalize)',key:'nis-82014G'},{name:'Mont (Houffalize)',key:'nis-82014F'},{name:'Sainte-Ode + deelgemeenten',key:'nis-82038'},{name:'Amberloup (Sainte-Ode)',key:'nis-82038B'},{name:'Tillet (Sainte-Ode)',key:'nis-82038A'},{name:'Lavacherie (Sainte-Ode)',key:'nis-82038C'},{name:'Vaux-sur-Sûre + deelgemeenten',key:'nis-82036'},{name:'Nives (Vaux-sur-Sûre)',key:'nis-82036B'},{name:'Vaux-lez-Rosières (Vaux-sur-Sûre)',key:'nis-82036A'},{name:'Morhet (Vaux-sur-Sûre)',key:'nis-82036C'},{name:'Hompré (Vaux-sur-Sûre)',key:'nis-82036D'},{name:'Sibret (Vaux-sur-Sûre)',key:'nis-82036E'},{name:'Juseret (Vaux-sur-Sûre)',key:'nis-82036F'},{name:'Vielsalm + deelgemeenten',key:'nis-82032'},{name:'Petit-Thier (Vielsalm)',key:'nis-82032B'},{name:'Vielsalm (Vielsalm)',key:'nis-82032A'},{name:'Bihain (Vielsalm)',key:'nis-82032C'},{name:'Grand-Halleux (Vielsalm)',key:'nis-82032D'},{name:'Durbuy + deelgemeenten',key:'nis-83012'},{name:'Durbuy (Durbuy)',key:'nis-83012A'},{name:'Septon (Durbuy)',key:'nis-83012C'},{name:'Grandhan (Durbuy)',key:'nis-83012B'},{name:'Barvaux (Durbuy)',key:'nis-83012E'},{name:'Tohogne (Durbuy)',key:'nis-83012D'},{name:'Bende (Durbuy)',key:'nis-83012G'},{name:'Villers-Sainte-Gertrude (Durbuy)',key:'nis-83012K'},{name:'Borlon (Durbuy)',key:'nis-83012F'},{name:'Izier (Durbuy)',key:'nis-83012J'},{name:'Bomal (Durbuy)',key:'nis-83012H'},{name:'Heyd (Durbuy)',key:'nis-83012L'},{name:'Wéris (Durbuy)',key:'nis-83012M'},{name:'Erezée + deelgemeenten',key:'nis-83013'},{name:'Érezée (Erezée)',key:'nis-83013A'},{name:'Amonines (Erezée)',key:'nis-83013B'},{name:'Mormont (Erezée)',key:'nis-83013D'},{name:'Soy (Erezée)',key:'nis-83013C'},{name:'Hotton + deelgemeenten',key:'nis-83028'},{name:'Hotton (Hotton)',key:'nis-83028A'},{name:'Hampteau (Hotton)',key:'nis-83028B'},{name:'Marenne (Hotton)',key:'nis-83028C'},{name:'Fronville (Hotton)',key:'nis-83028D'},{name:'La Roche-en-Ardenne + deelgemeenten',key:'nis-83031'},{name:'Samrée (La Roche-en-Ardenne)',key:'nis-83031B'},{name:'La Roche-en-Ardenne (La Roche-en-Ardenne)',key:'nis-83031A'},{name:'Ortho (La Roche-en-Ardenne)',key:'nis-83031C'},{name:'Hives (La Roche-en-Ardenne)',key:'nis-83031D'},{name:'Beausaint (La Roche-en-Ardenne)',key:'nis-83031E'},{name:'Halleux (La Roche-en-Ardenne)',key:'nis-83031F'},{name:'Manhay + deelgemeenten',key:'nis-83055'},{name:'Grandmenil (Manhay)',key:'nis-83055A'},{name:'Harre (Manhay)',key:'nis-83055B'},{name:'Vaux-Chavanne (Manhay)',key:'nis-83055C'},{name:'Malempré (Manhay)',key:'nis-83055D'},{name:'Odeigne (Manhay)',key:'nis-83055E'},{name:'Dochamps (Manhay)',key:'nis-83055F'},{name:'Marche-en-Famenne + deelgemeenten',key:'nis-83034'},{name:'Marche-en-Famenne (Marche-en-Famenne)',key:'nis-83034A'},{name:'Waha (Marche-en-Famenne)',key:'nis-83034B'},{name:'Aye (Marche-en-Famenne)',key:'nis-83034C'},{name:'Hargimont (Marche-en-Famenne)',key:'nis-83034D'},{name:'On (Marche-en-Famenne)',key:'nis-83034E'},{name:'Humain (Marche-en-Famenne)',key:'nis-83034F'},{name:'Roy (Marche-en-Famenne)',key:'nis-83034G'},{name:'Nassogne + deelgemeenten',key:'nis-83040'},{name:'Nassogne (Nassogne)',key:'nis-83040A'},{name:'Ambly (Nassogne)',key:'nis-83040C'},{name:'Masbourg (Nassogne)',key:'nis-83040B'},{name:'Harsin (Nassogne)',key:'nis-83040D'},{name:'Grune (Nassogne)',key:'nis-83040E'},{name:'Lesterny (Nassogne)',key:'nis-83040F'},{name:'Forrières (Nassogne)',key:'nis-83040G'},{name:'Bande (Nassogne)',key:'nis-83040H'},{name:'Rendeux + deelgemeenten',key:'nis-83044'},{name:'Rendeux (Rendeux)',key:'nis-83044A'},{name:'Beffe (Rendeux)',key:'nis-83044B'},{name:'Marcourt (Rendeux)',key:'nis-83044C'},{name:'Hodister (Rendeux)',key:'nis-83044D'},{name:'Tenneville + deelgemeenten',key:'nis-83049'},{name:'Erneuville (Tenneville)',key:'nis-83049C'},{name:'Champlon (Tenneville)',key:'nis-83049B'},{name:'Tenneville (Tenneville)',key:'nis-83049A'},{name:'Bertrix + deelgemeenten',key:'nis-84009'},{name:'Jehonville (Bertrix)',key:'nis-84009B'},{name:'Bertrix (Bertrix)',key:'nis-84009A'},{name:'Orgeo (Bertrix)',key:'nis-84009C'},{name:'Cugnon (Bertrix)',key:'nis-84009D'},{name:'Auby-sur-Semois (Bertrix)',key:'nis-84009E'},{name:'Bouillon + deelgemeenten',key:'nis-84010'},{name:'Bouillon (Bouillon)',key:'nis-84010A'},{name:'Noirefontaine (Bouillon)',key:'nis-84010D'},{name:'Corbion (Bouillon)',key:'nis-84010B'},{name:'Sensenruth (Bouillon)',key:'nis-84010C'},{name:'Dohan (Bouillon)',key:'nis-84010E'},{name:'Rochehaut (Bouillon)',key:'nis-84010F'},{name:'Poupehan (Bouillon)',key:'nis-84010G'},{name:'Ucimont (Bouillon)',key:'nis-84010H'},{name:'Vivy (Bouillon)',key:'nis-84010J'},{name:'Les Hayons (Bouillon)',key:'nis-84010L'},{name:'Bellevaux (Bouillon)',key:'nis-84010K'},{name:'Daverdisse + deelgemeenten',key:'nis-84016'},{name:'Daverdisse (Daverdisse)',key:'nis-84016A'},{name:'Gembes (Daverdisse)',key:'nis-84016C'},{name:'Haut-Fays (Daverdisse)',key:'nis-84016D'},{name:'Porcheresse (Daverdisse)',key:'nis-84016B'},{name:'Herbeumont + deelgemeenten',key:'nis-84029'},{name:'Herbeumont (Herbeumont)',key:'nis-84029A'},{name:'Saint-Médard (Herbeumont)',key:'nis-84029B'},{name:'Straimont (Herbeumont)',key:'nis-84029C'},{name:'Léglise + deelgemeenten',key:'nis-84033'},{name:'Léglise (Léglise)',key:'nis-84033A'},{name:'Ébly (Léglise)',key:'nis-84033B'},{name:'Witry (Léglise)',key:'nis-84033C'},{name:'Mellier (Léglise)',key:'nis-84033D'},{name:'Assenois (Léglise)',key:'nis-84033E'},{name:'Libin + deelgemeenten',key:'nis-84035'},{name:'Libin (Libin)',key:'nis-84035A'},{name:'Villance (Libin)',key:'nis-84035B'},{name:'Smuid (Libin)',key:'nis-84035C'},{name:'Ochamps (Libin)',key:'nis-84035D'},{name:'Anloy (Libin)',key:'nis-84035E'},{name:'Transinne (Libin)',key:'nis-84035F'},{name:'Redu (Libin)',key:'nis-84035G'},{name:'Libramont-Chevigny + deelgemeenten',key:'nis-84077'},{name:'Libramont (Libramont-Chevigny)',key:'nis-84077A'},{name:'Freux (Libramont-Chevigny)',key:'nis-84077E'},{name:'Saint-Pierre (Libramont-Chevigny)',key:'nis-84077C'},{name:'Bras (Libramont-Chevigny)',key:'nis-84077B'},{name:'Recogne (Libramont-Chevigny)',key:'nis-84077D'},{name:'Moircy (Libramont-Chevigny)',key:'nis-84077G'},{name:'Sainte-Marie-Chevigny (Libramont-Chevigny)',key:'nis-84077F'},{name:'Remagne (Libramont-Chevigny)',key:'nis-84077H'},{name:'Neufchâteau + deelgemeenten',key:'nis-84043'},{name:'Neufchâteau (Neufchâteau)',key:'nis-84043A'},{name:'Longlier (Neufchâteau)',key:'nis-84043B'},{name:'Hamipré (Neufchâteau)',key:'nis-84043C'},{name:'Tournay (Neufchâteau)',key:'nis-84043E'},{name:'Grapfontaine (Neufchâteau)',key:'nis-84043D'},{name:'Grandvoir (Neufchâteau)',key:'nis-84043F'},{name:'Paliseul + deelgemeenten',key:'nis-84050'},{name:'Paliseul (Paliseul)',key:'nis-84050A'},{name:'Opont (Paliseul)',key:'nis-84050B'},{name:'Framont (Paliseul)',key:'nis-84050C'},{name:'Offagne (Paliseul)',key:'nis-84050D'},{name:'Fays-les-Veneurs (Paliseul)',key:'nis-84050E'},{name:'Nollevaux (Paliseul)',key:'nis-84050F'},{name:'Carlsbourg (Paliseul)',key:'nis-84050G'},{name:'Maissin (Paliseul)',key:'nis-84050H'},{name:'Saint-Hubert + deelgemeenten',key:'nis-84059'},{name:'Saint-Hubert (Saint-Hubert)',key:'nis-84059A'},{name:'Hatrival (Saint-Hubert)',key:'nis-84059C'},{name:'Vesqueville (Saint-Hubert)',key:'nis-84059B'},{name:'Awenne (Saint-Hubert)',key:'nis-84059E'},{name:'Arville (Saint-Hubert)',key:'nis-84059D'},{name:'Mirwart (Saint-Hubert)',key:'nis-84059F'},{name:'Tellin + deelgemeenten',key:'nis-84068'},{name:'Tellin (Tellin)',key:'nis-84068A'},{name:'Bure (Tellin)',key:'nis-84068B'},{name:'Grupont (Tellin)',key:'nis-84068D'},{name:'Resteigne (Tellin)',key:'nis-84068C'},{name:'Wellin + deelgemeenten',key:'nis-84075'},{name:'Wellin (Wellin)',key:'nis-84075A'},{name:'Halma (Wellin)',key:'nis-84075B'},{name:'Lomprez (Wellin)',key:'nis-84075C'},{name:'Sohier (Wellin)',key:'nis-84075D'},{name:'Chanly (Wellin)',key:'nis-84075E'},{name:'Chiny + deelgemeenten',key:'nis-85007'},{name:'Chiny (Chiny)',key:'nis-85007A'},{name:'Les Bulles (Chiny)',key:'nis-85007C'},{name:'Suxy (Chiny)',key:'nis-85007B'},{name:'Izel (Chiny)',key:'nis-85007D'},{name:'Jamoigne (Chiny)',key:'nis-85007E'},{name:'Termes (Chiny)',key:'nis-85007F'},{name:'Etalle + deelgemeenten',key:'nis-85009'},{name:'Étalle (Etalle)',key:'nis-85009A'},{name:'Vance (Etalle)',key:'nis-85009B'},{name:'Buzenol (Etalle)',key:'nis-85009D'},{name:'Chantemelle (Etalle)',key:'nis-85009C'},{name:'Sainte-Marie (Etalle)',key:'nis-85009E'},{name:'Villers-sur-Semois (Etalle)',key:'nis-85009F'},{name:'Florenville + deelgemeenten',key:'nis-85011'},{name:'Florenville (Florenville)',key:'nis-85011A'},{name:'Chassepierre (Florenville)',key:'nis-85011C'},{name:'Villers-devant-Orval (Florenville)',key:'nis-85011B'},{name:'Fontenoille (Florenville)',key:'nis-85011E'},{name:'Lacuisine (Florenville)',key:'nis-85011D'},{name:'Sainte-Cécile (Florenville)',key:'nis-85011F'},{name:'Muno (Florenville)',key:'nis-85011G'},{name:'Habay + deelgemeenten',key:'nis-85046'},{name:'Habay-la-Vieille (Habay)',key:'nis-85046C'},{name:'Hachy (Habay)',key:'nis-85046B'},{name:'Habay-la-Neuve (Habay)',key:'nis-85046A'},{name:'Houdemont (Habay)',key:'nis-85046D'},{name:'Rulles (Habay)',key:'nis-85046E'},{name:'Anlier (Habay)',key:'nis-85046F'},{name:'Meix-devant-Virton + deelgemeenten',key:'nis-85024'},{name:'Meix-devant-Virton (Meix-devant-Virton)',key:'nis-85024A'},{name:'Robelmont (Meix-devant-Virton)',key:'nis-85024B'},{name:'Sommethonne (Meix-devant-Virton)',key:'nis-85024D'},{name:'Villers-la-Loue (Meix-devant-Virton)',key:'nis-85024C'},{name:'Gérouville (Meix-devant-Virton)',key:'nis-85024E'},{name:'Musson + deelgemeenten',key:'nis-85026'},{name:'Mussy-la-Ville (Musson)',key:'nis-85026B'},{name:'Musson (Musson)',key:'nis-85026A'},{name:'Rouvroy + deelgemeenten',key:'nis-85047'},{name:'Lamorteau (Rouvroy)',key:'nis-85047C'},{name:'Dampicourt (Rouvroy)',key:'nis-85047A'},{name:'Harnoncourt (Rouvroy)',key:'nis-85047B'},{name:'Torgny (Rouvroy)',key:'nis-85047D'},{name:'Saint-Léger + deelgemeenten',key:'nis-85034'},{name:'Châtillon (Saint-Léger)',key:'nis-85034B'},{name:'Saint-Léger (Saint-Léger)',key:'nis-85034A'},{name:'Meix-le-Tige (Saint-Léger)',key:'nis-85034C'},{name:'Tintigny + deelgemeenten',key:'nis-85039'},{name:'Bellefontaine (Tintigny)',key:'nis-85039B'},{name:'Tintigny (Tintigny)',key:'nis-85039A'},{name:'Saint-Vincent (Tintigny)',key:'nis-85039C'},{name:'Rossignol (Tintigny)',key:'nis-85039D'},{name:'Virton + deelgemeenten',key:'nis-85045'},{name:'Virton (Virton)',key:'nis-85045A'},{name:'Èthe (Virton)',key:'nis-85045B'},{name:'Latour (Virton)',key:'nis-85045C'},{name:'Saint-Mard (Virton)',key:'nis-85045D'},{name:'Ruette (Virton)',key:'nis-85045E'},{name:'Bleid (Virton)',key:'nis-85045F'},{name:'Bastenaken + deelgemeenten',key:'nis-82039'},{name:'Wardin (Bastenaken)',key:'nis-82003B'},{name:'Bastogne (Bastenaken)',key:'nis-82003A'},{name:'Villers-la-Bonne-Eau (Bastenaken)',key:'nis-82003C'},{name:'Noville (Bastenaken)',key:'nis-82003D'},{name:'Longvilly (Bastenaken)',key:'nis-82003E'},{name:'Bertogne (Bastenaken)',key:'nis-82005A'},{name:'Longchamps (Bastenaken)',key:'nis-82005B'},{name:'Flamierge (Bastenaken)',key:'nis-82005C'},{name:'Provincie Namen',key:'nis-90000'},{name:'Regio Namen + deelgemeenten',key:'reg-namen'},{name:'Anhée + deelgemeenten',key:'nis-91005'},{name:'Haut-le-Wastia (Anhée)',key:'nis-91005A-III'},{name:'Warnant (Anhée)',key:'nis-91005A-II'},{name:'Anhée (Anhée)',key:'nis-91005A-I'},{name:'Sosoye (Anhée)',key:'nis-91005B'},{name:'Annevoie-Rouillon (Anhée)',key:'nis-91005E'},{name:'Denée (Anhée)',key:'nis-91005C'},{name:'Bioul (Anhée)',key:'nis-91005D'},{name:'Beauraing + deelgemeenten',key:'nis-91013'},{name:'Javingue (Beauraing)',key:'nis-91013B'},{name:'Winenne (Beauraing)',key:'nis-91013C'},{name:'Beauraing (Beauraing)',key:'nis-91013A'},{name:'Felenne (Beauraing)',key:'nis-91013D'},{name:'Feschaux (Beauraing)',key:'nis-91013F'},{name:'Wiesme (Beauraing)',key:'nis-91013H'},{name:'Dion (Beauraing)',key:'nis-91013E'},{name:'Baronville (Beauraing)',key:'nis-91013G'},{name:'Froidfontaine (Beauraing)',key:'nis-91013M'},{name:'Martouzin-Neuville (Beauraing)',key:'nis-91013J'},{name:'Focant (Beauraing)',key:'nis-91013K'},{name:'Honnay (Beauraing)',key:'nis-91013L'},{name:'Vonêche (Beauraing)',key:'nis-91013N'},{name:'Wancennes (Beauraing)',key:'nis-91013P'},{name:'Pondrôme (Beauraing)',key:'nis-91013R'},{name:'Bièvre + deelgemeenten',key:'nis-91015'},{name:'Bièvre (Bièvre)',key:'nis-91015A'},{name:'Gros-Fays (Bièvre)',key:'nis-91015D-III'},{name:'Graide (Bièvre)',key:'nis-91015B'},{name:'Naomé (Bièvre)',key:'nis-91015C'},{name:'Baillamont (Bièvre)',key:'nis-91015D-II'},{name:'Cornimont (Bièvre)',key:'nis-91015D-IV'},{name:'Oizy (Bièvre)',key:'nis-91015D-I'},{name:'Petit-Fays (Bièvre)',key:'nis-91015E-III'},{name:'Monceau-en-Ardenne (Bièvre)',key:'nis-91015E-I'},{name:'Bellefontaine (Bièvre)',key:'nis-91015E-II'},{name:'Ciney + deelgemeenten',key:'nis-91030'},{name:'Ciney (Ciney)',key:'nis-91030A'},{name:'Pessoux (Ciney)',key:'nis-91030B'},{name:'Leignon (Ciney)',key:'nis-91030D'},{name:'Conneux (Ciney)',key:'nis-91030F'},{name:'Achêne (Ciney)',key:'nis-91030G'},{name:'Chevetogne (Ciney)',key:'nis-91030E'},{name:'Serinchamps (Ciney)',key:'nis-91030C'},{name:'Sovet (Ciney)',key:'nis-91030H'},{name:'Braibant (Ciney)',key:'nis-91030J'},{name:'Dinant + deelgemeenten',key:'nis-91034'},{name:'Anseremme (Dinant)',key:'nis-91034A-III'},{name:'Dréhance (Dinant)',key:'nis-91034A-IV'},{name:'Lisogne (Dinant)',key:'nis-91034B'},{name:'Bouvignes-sur-Meuse (Dinant)',key:'nis-91034A-II'},{name:'Dinant (Dinant)',key:'nis-91034A-I'},{name:'Thynes (Dinant)',key:'nis-91034C'},{name:'Sorinnes (Dinant)',key:'nis-91034D'},{name:'Foy-Notre-Dame (Dinant)',key:'nis-91034E'},{name:'Furfooz (Dinant)',key:'nis-91034F'},{name:'Falmignoul (Dinant)',key:'nis-91034H'},{name:'Falmagne (Dinant)',key:'nis-91034G'},{name:'Gedinne + deelgemeenten',key:'nis-91054'},{name:'Gedinne (Gedinne)',key:'nis-91054A'},{name:'Louette-Saint-Denis (Gedinne)',key:'nis-91054B'},{name:'Houdremont (Gedinne)',key:'nis-91054C'},{name:'Louette-Saint-Pierre (Gedinne)',key:'nis-91054D'},{name:'Rienne (Gedinne)',key:'nis-91054E'},{name:'Willerzie (Gedinne)',key:'nis-91054F'},{name:'Bourseigne-Neuve (Gedinne)',key:'nis-91054G'},{name:'Bourseigne-Vieille (Gedinne)',key:'nis-91054H'},{name:'Vencimont (Gedinne)',key:'nis-91054J'},{name:'Sart-Custinne (Gedinne)',key:'nis-91054K'},{name:'Patignies (Gedinne)',key:'nis-91054L'},{name:'Malvoisin (Gedinne)',key:'nis-91054M'},{name:'Hamois + deelgemeenten',key:'nis-91059'},{name:'Hamois (Hamois)',key:'nis-91059A'},{name:'Achet (Hamois)',key:'nis-91059B'},{name:'Mohiville (Hamois)',key:'nis-91059C'},{name:'Scy (Hamois)',key:'nis-91059D'},{name:'Emptinne (Hamois)',key:'nis-91059E'},{name:'Natoye (Hamois)',key:'nis-91059F'},{name:'Schaltin (Hamois)',key:'nis-91059G'},{name:'Hastière + deelgemeenten',key:'nis-91142'},{name:'Waulsort (Hastière)',key:'nis-91142C'},{name:'Blaimont (Hastière)',key:'nis-91142D'},{name:'Hastière-Lavaux (Hastière)',key:'nis-91142A'},{name:'Hastière-par-delà (Hastière)',key:'nis-91142B'},{name:'Agimont (Hastière)',key:'nis-91142F'},{name:'Hermeton-sur-Meuse (Hastière)',key:'nis-91142G'},{name:'Heer (Hastière)',key:'nis-91142E'},{name:'Havelange + deelgemeenten',key:'nis-91064'},{name:'Verlée (Havelange)',key:'nis-91064B'},{name:'Maffe (Havelange)',key:'nis-91064C'},{name:'Havelange (Havelange)',key:'nis-91064A'},{name:'Méan (Havelange)',key:'nis-91064D'},{name:'Barvaux-Condroz (Havelange)',key:'nis-91064E'},{name:'Porcheresse (Havelange)',key:'nis-91064F'},{name:'Jeneffe (Havelange)',key:'nis-91064G'},{name:'Miécret (Havelange)',key:'nis-91064H'},{name:'Flostoy (Havelange)',key:'nis-91064J'},{name:'Houyet + deelgemeenten',key:'nis-91072'},{name:'Mesnil-Église (Houyet)',key:'nis-91072C'},{name:'Houyet (Houyet)',key:'nis-91072A'},{name:'Finnevaux (Houyet)',key:'nis-91072D'},{name:'Hour (Houyet)',key:'nis-91072B'},{name:'Mesnil-Saint-Blaise (Houyet)',key:'nis-91072E'},{name:'Hulsonniaux (Houyet)',key:'nis-91072F'},{name:'Celles (Houyet)',key:'nis-91072G'},{name:'Custinne (Houyet)',key:'nis-91072H'},{name:'Ciergnon (Houyet)',key:'nis-91072J'},{name:'Wanlin (Houyet)',key:'nis-91072K'},{name:'Onhaye + deelgemeenten',key:'nis-91103'},{name:'Gerin (Onhaye)',key:'nis-91103B'},{name:'Onhaye (Onhaye)',key:'nis-91103A'},{name:'Serville (Onhaye)',key:'nis-91103D'},{name:'Anthée (Onhaye)',key:'nis-91103C'},{name:'Sommière (Onhaye)',key:'nis-91103F'},{name:'Falaën (Onhaye)',key:'nis-91103E'},{name:'Weillen (Onhaye)',key:'nis-91103G'},{name:'Rochefort + deelgemeenten',key:'nis-91114'},{name:'Rochefort (Rochefort)',key:'nis-91114A'},{name:'Han-sur-Lesse (Rochefort)',key:'nis-91114D'},{name:'Jemelle (Rochefort)',key:'nis-91114B'},{name:'Ave-et-Auffe (Rochefort)',key:'nis-91114G'},{name:'Lessive (Rochefort)',key:'nis-91114F'},{name:'Éprave (Rochefort)',key:'nis-91114E'},{name:'Wavreille (Rochefort)',key:'nis-91114C'},{name:'Lavaux-Sainte-Anne (Rochefort)',key:'nis-91114H'},{name:'Villers-sur-Lesse (Rochefort)',key:'nis-91114J'},{name:'Mont-Gauthier (Rochefort)',key:'nis-91114K'},{name:'Buissonville (Rochefort)',key:'nis-91114L'},{name:'Somme-Leuze + deelgemeenten',key:'nis-91120'},{name:'Noiseux (Somme-Leuze)',key:'nis-91120B'},{name:'Somme-Leuze (Somme-Leuze)',key:'nis-91120A'},{name:'Baillonville (Somme-Leuze)',key:'nis-91120C'},{name:'Waillet (Somme-Leuze)',key:'nis-91120D'},{name:'Sinsin (Somme-Leuze)',key:'nis-91120F'},{name:'Nettinne (Somme-Leuze)',key:'nis-91120G'},{name:'Hogne (Somme-Leuze)',key:'nis-91120E'},{name:'Heure (Somme-Leuze)',key:'nis-91120H'},{name:'Bonsin (Somme-Leuze)',key:'nis-91120J'},{name:'Vresse-sur-Semois + deelgemeenten',key:'nis-91143'},{name:'Laforêt (Vresse-sur-Semois)',key:'nis-91143A-III'},{name:'Chairière (Vresse-sur-Semois)',key:'nis-91143B-III'},{name:'Membre (Vresse-sur-Semois)',key:'nis-91143A-II'},{name:'Mouzaive (Vresse-sur-Semois)',key:'nis-91143B-II'},{name:'Vresse (Vresse-sur-Semois)',key:'nis-91143A-I'},{name:'Alle (Vresse-sur-Semois)',key:'nis-91143B-I'},{name:'Pussemange (Vresse-sur-Semois)',key:'nis-91143C-III'},{name:'Bagimont (Vresse-sur-Semois)',key:'nis-91143C-II'},{name:'Sugny (Vresse-sur-Semois)',key:'nis-91143C-I'},{name:'Bohan (Vresse-sur-Semois)',key:'nis-91143D'},{name:'Nafraiture (Vresse-sur-Semois)',key:'nis-91143F'},{name:'Orchimont (Vresse-sur-Semois)',key:'nis-91143E'},{name:'Yvoir + deelgemeenten',key:'nis-91141'},{name:'Houx (Yvoir)',key:'nis-91141A-III'},{name:'Évrehailles (Yvoir)',key:'nis-91141A-II'},{name:'Yvoir (Yvoir)',key:'nis-91141A-I'},{name:'Godinne (Yvoir)',key:'nis-91141B-I'},{name:'Durnal (Yvoir)',key:'nis-91141C'},{name:'Spontin (Yvoir)',key:'nis-91141D'},{name:'Mont (Yvoir)',key:'nis-91141B-II'},{name:'Purnode (Yvoir)',key:'nis-91141F'},{name:'Dorinne (Yvoir)',key:'nis-91141E'},{name:'Andenne + deelgemeenten',key:'nis-92003'},{name:'Andenne (Andenne)',key:'nis-92003A'},{name:'Coutisse (Andenne)',key:'nis-92003B'},{name:'Bonneville (Andenne)',key:'nis-92003C'},{name:'Thon (Andenne)',key:'nis-92003D'},{name:'Namêche (Andenne)',key:'nis-92003F'},{name:'Sclayn (Andenne)',key:'nis-92003G'},{name:'Maizeret (Andenne)',key:'nis-92003E'},{name:'Vezin (Andenne)',key:'nis-92003H'},{name:'Landenne (Andenne)',key:'nis-92003J'},{name:'Seilles (Andenne)',key:'nis-92003K'},{name:'Assesse + deelgemeenten',key:'nis-92006'},{name:'Assesse (Assesse)',key:'nis-92006A'},{name:'Crupet (Assesse)',key:'nis-92006B'},{name:'Maillen (Assesse)',key:'nis-92006C'},{name:'Sart-Bernard (Assesse)',key:'nis-92006D'},{name:'Sorinne-la-Longue (Assesse)',key:'nis-92006F'},{name:'Courrière (Assesse)',key:'nis-92006E'},{name:'Florée (Assesse)',key:'nis-92006G'},{name:'Eghezée + deelgemeenten',key:'nis-92035'},{name:'Éghezée (Eghezée)',key:'nis-92035A'},{name:'Longchamps (Eghezée)',key:'nis-92035B'},{name:'Mehaigne (Eghezée)',key:'nis-92035D'},{name:'Upigny (Eghezée)',key:'nis-92035C'},{name:'Noville-sur-Méhaigne (Eghezée)',key:'nis-92035E'},{name:'Bolinne (Eghezée)',key:'nis-92035F'},{name:'Taviers (Eghezée)',key:'nis-92035G'},{name:'Boneffe (Eghezée)',key:'nis-92035H'},{name:'Branchon (Eghezée)',key:'nis-92035J'},{name:'Hanret (Eghezée)',key:'nis-92035K'},{name:'Waret-la-Chaussée (Eghezée)',key:'nis-92035M'},{name:'Leuze (Eghezée)',key:'nis-92035L'},{name:'Dhuy (Eghezée)',key:'nis-92035N'},{name:'Liernu (Eghezée)',key:'nis-92035R'},{name:'Aische-en-Refail (Eghezée)',key:'nis-92035S'},{name:'Saint-Germain (Eghezée)',key:'nis-92035P'},{name:'Fernelmont + deelgemeenten',key:'nis-92138'},{name:'Bierwart (Fernelmont)',key:'nis-92138B'},{name:'Pontillas (Fernelmont)',key:'nis-92138C'},{name:'Forville (Fernelmont)',key:'nis-92138A'},{name:'Hingeon (Fernelmont)',key:'nis-92138D'},{name:'Noville-les-Bois (Fernelmont)',key:'nis-92138E'},{name:'Franc-Waret (Fernelmont)',key:'nis-92138F'},{name:'Marchovelette (Fernelmont)',key:'nis-92138G'},{name:'Tillier (Fernelmont)',key:'nis-92138H'},{name:'Hemptinne (Fernelmont)',key:'nis-92138K'},{name:'Cortil-Wodon (Fernelmont)',key:'nis-92138J'},{name:'Floreffe + deelgemeenten',key:'nis-92045'},{name:'Floreffe (Floreffe)',key:'nis-92045A'},{name:'Franière (Floreffe)',key:'nis-92045B'},{name:'Soye (Floreffe)',key:'nis-92045C'},{name:'Floriffoux (Floreffe)',key:'nis-92045D'},{name:'Fosses-la-Ville + deelgemeenten',key:'nis-92048'},{name:'Vitrival (Fosses-la-Ville)',key:'nis-92048B'},{name:'Fosses-la-Ville (Fosses-la-Ville)',key:'nis-92048A'},{name:'Sart-Eustache (Fosses-la-Ville)',key:'nis-92048C'},{name:'Le Roux (Fosses-la-Ville)',key:'nis-92048D'},{name:'Aisemont (Fosses-la-Ville)',key:'nis-92048E'},{name:'Sart-Saint-Laurent (Fosses-la-Ville)',key:'nis-92048F'},{name:'Gembloux + deelgemeenten',key:'nis-92142'},{name:'Sauvenière (Gembloux)',key:'nis-92142A-III'},{name:'Ernage (Gembloux)',key:'nis-92142A-II'},{name:'Lonzée (Gembloux)',key:'nis-92142A-IV'},{name:'Gembloux (Gembloux)',key:'nis-92142A-I'},{name:'Grand-Manil (Gembloux)',key:'nis-92142A-V'},{name:'Grand-Leez (Gembloux)',key:'nis-92142B'},{name:'Beuzet (Gembloux)',key:'nis-92142C'},{name:'Isnes (Gembloux)',key:'nis-92142D'},{name:'Bossière (Gembloux)',key:'nis-92142E'},{name:'Bothey (Gembloux)',key:'nis-92142G'},{name:'Mazy (Gembloux)',key:'nis-92142F'},{name:'Corroy-le-Château (Gembloux)',key:'nis-92142H'},{name:'Gesves + deelgemeenten',key:'nis-92054'},{name:'Faulx-les-Tombes (Gesves)',key:'nis-92054B'},{name:'Gesves (Gesves)',key:'nis-92054A'},{name:'Mozet (Gesves)',key:'nis-92054C'},{name:'Sorée (Gesves)',key:'nis-92054E'},{name:'Haltinne (Gesves)',key:'nis-92054D'},{name:'Jemeppe-sur-Sambre + deelgemeenten',key:'nis-92140'},{name:'Jemeppe (Jemeppe-sur-Sambre)',key:'nis-92140A'},{name:'Balâtre (Jemeppe-sur-Sambre)',key:'nis-92140B'},{name:'Saint-Martin (Jemeppe-sur-Sambre)',key:'nis-92140C'},{name:'Onoz (Jemeppe-sur-Sambre)',key:'nis-92140D'},{name:'Moustier (Jemeppe-sur-Sambre)',key:'nis-92140F'},{name:'Mornimont (Jemeppe-sur-Sambre)',key:'nis-92140G'},{name:'Spy (Jemeppe-sur-Sambre)',key:'nis-92140E'},{name:'Ham-sur-Sambre (Jemeppe-sur-Sambre)',key:'nis-92140H'},{name:'La Bruyère + deelgemeenten',key:'nis-92141'},{name:'Émines (La Bruyère)',key:'nis-92141A'},{name:'Bovesse (La Bruyère)',key:'nis-92141C'},{name:'Rhisnes (La Bruyère)',key:'nis-92141B'},{name:'Saint-Denis (La Bruyère)',key:'nis-92141D'},{name:'Meux (La Bruyère)',key:'nis-92141E'},{name:'Villers-lez-Heest (La Bruyère)',key:'nis-92141F'},{name:'Warisoulx (La Bruyère)',key:'nis-92141G'},{name:'Mettet + deelgemeenten',key:'nis-92087'},{name:'Mettet (Mettet)',key:'nis-92087A'},{name:'Saint-Gérard (Mettet)',key:'nis-92087B'},{name:'Furnaux (Mettet)',key:'nis-92087D'},{name:'Graux (Mettet)',key:'nis-92087C'},{name:'Ermeton-sur-Biert (Mettet)',key:'nis-92087E'},{name:'Biesmerée (Mettet)',key:'nis-92087F'},{name:'Oret (Mettet)',key:'nis-92087H'},{name:'Stave (Mettet)',key:'nis-92087G'},{name:'Biesme (Mettet)',key:'nis-92087J'},{name:'Namen + deelgemeenten',key:'nis-92094'},{name:'Jambes (Namen)',key:'nis-92094B'},{name:'Wépion (Namen)',key:'nis-92094C'},{name:'Namur (Namen)',key:'nis-92094A'},{name:'Malonne (Namen)',key:'nis-92094D'},{name:'Flawinne (Namen)',key:'nis-92094E'},{name:'Temploux (Namen)',key:'nis-92094F'},{name:'Suarlée (Namen)',key:'nis-92094G'},{name:'Belgrade (Namen)',key:'nis-92094H'},{name:'Saint-Servais (Namen)',key:'nis-92094J'},{name:'Vedrin (Namen)',key:'nis-92094L-II'},{name:'Bouge (Namen)',key:'nis-92094K'},{name:'Daussoulx (Namen)',key:'nis-92094L-I'},{name:'Saint-Marc (Namen)',key:'nis-92094M'},{name:'Cognelée (Namen)',key:'nis-92094N-II'},{name:'Champion (Namen)',key:'nis-92094N-I'},{name:'Boninne (Namen)',key:'nis-92094P-II'},{name:'Gelbressée (Namen)',key:'nis-92094P-I'},{name:'Beez (Namen)',key:'nis-92094R'},{name:'Lives-sur-Meuse (Namen)',key:'nis-92094T'},{name:'Loyers (Namen)',key:'nis-92094U'},{name:'Marche-les-Dames (Namen)',key:'nis-92094S'},{name:'Wierde (Namen)',key:'nis-92094V'},{name:'Naninne (Namen)',key:'nis-92094W'},{name:'Erpent (Namen)',key:'nis-92094Y'},{name:'Dave (Namen)',key:'nis-92094X'},{name:'Ohey + deelgemeenten',key:'nis-92097'},{name:'Ohey (Ohey)',key:'nis-92097A'},{name:'Perwez (Ohey)',key:'nis-92097C'},{name:'Haillot (Ohey)',key:'nis-92097B'},{name:'Goesnes (Ohey)',key:'nis-92097D'},{name:'Jallet (Ohey)',key:'nis-92097E'},{name:'Évelette (Ohey)',key:'nis-92097F'},{name:'Profondeville + deelgemeenten',key:'nis-92101'},{name:'Profondeville (Profondeville)',key:'nis-92101A'},{name:'Lustin (Profondeville)',key:'nis-92101B'},{name:'Rivière (Profondeville)',key:'nis-92101C'},{name:'Lesve (Profondeville)',key:'nis-92101E'},{name:'Arbre (Profondeville)',key:'nis-92101D'},{name:'Bois-de-Villers (Profondeville)',key:'nis-92101F'},{name:'Sambreville + deelgemeenten',key:'nis-92137'},{name:'Auvelais (Sambreville)',key:'nis-92137A'},{name:'Arsimont (Sambreville)',key:'nis-92137B'},{name:'Tamines (Sambreville)',key:'nis-92137D'},{name:'Velaine (Sambreville)',key:'nis-92137F'},{name:'Falisolle (Sambreville)',key:'nis-92137C'},{name:'Moignelée (Sambreville)',key:'nis-92137E'},{name:'Keumiée (Sambreville)',key:'nis-92137G'},{name:'Sombreffe + deelgemeenten',key:'nis-92114'},{name:'Tongrinne (Sombreffe)',key:'nis-92114B'},{name:'Boignée (Sombreffe)',key:'nis-92114C'},{name:'Sombreffe (Sombreffe)',key:'nis-92114A'},{name:'Ligny (Sombreffe)',key:'nis-92114D'},{name:'Cerfontaine + deelgemeenten',key:'nis-93010'},{name:'Cerfontaine (Cerfontaine)',key:'nis-93010A'},{name:'Soumoy (Cerfontaine)',key:'nis-93010B'},{name:'Silenrieux (Cerfontaine)',key:'nis-93010C'},{name:'Daussois (Cerfontaine)',key:'nis-93010D'},{name:'Villers-Deux-Églises (Cerfontaine)',key:'nis-93010E'},{name:'Senzeille (Cerfontaine)',key:'nis-93010F'},{name:'Couvin + deelgemeenten',key:'nis-93014'},{name:'Couvin (Couvin)',key:'nis-93014A'},{name:'Petigny (Couvin)',key:'nis-93014B'},{name:'Brûly (Couvin)',key:'nis-93014C'},{name:'Petite-Chapelle (Couvin)',key:'nis-93014D'},{name:'Cul-des-Sarts (Couvin)',key:'nis-93014E'},{name:'Brûly-de-Pesche (Couvin)',key:'nis-93014F'},{name:'Presgaux (Couvin)',key:'nis-93014G'},{name:'Pesche (Couvin)',key:'nis-93014J'},{name:'Gonrieux (Couvin)',key:'nis-93014H'},{name:'Aublain (Couvin)',key:'nis-93014L'},{name:'Dailly (Couvin)',key:'nis-93014K'},{name:'Frasnes (Couvin)',key:'nis-93014N'},{name:'Boussu-en-Fagne (Couvin)',key:'nis-93014M'},{name:'Mariembourg (Couvin)',key:'nis-93014P'},{name:'Doische + deelgemeenten',key:'nis-93018'},{name:'Doische (Doische)',key:'nis-93018A'},{name:'Vaucelles (Doische)',key:'nis-93018B'},{name:'Niverlée (Doische)',key:'nis-93018C'},{name:'Matagne-la-Petite (Doische)',key:'nis-93018D'},{name:'Matagne-la-Grande (Doische)',key:'nis-93018E'},{name:'Romerée (Doische)',key:'nis-93018F'},{name:'Gimnée (Doische)',key:'nis-93018G'},{name:'Soulme (Doische)',key:'nis-93018J'},{name:'Gochenée (Doische)',key:'nis-93018K'},{name:'Vodelée (Doische)',key:'nis-93018H'},{name:'Florennes + deelgemeenten',key:'nis-93022'},{name:'Florennes (Florennes)',key:'nis-93022A'},{name:'Corenne (Florennes)',key:'nis-93022B'},{name:'Flavion (Florennes)',key:'nis-93022C'},{name:'Morville (Florennes)',key:'nis-93022D'},{name:'Hemptinne (Florennes)',key:'nis-93022F'},{name:'Rosée (Florennes)',key:'nis-93022E'},{name:'Saint-Aubin (Florennes)',key:'nis-93022G'},{name:'Thy-le-Bauduin (Florennes)',key:'nis-93022J'},{name:'Morialmé (Florennes)',key:'nis-93022H'},{name:'Hanzinelle (Florennes)',key:'nis-93022K'},{name:'Hanzinne (Florennes)',key:'nis-93022L'},{name:'Philippeville + deelgemeenten',key:'nis-93056'},{name:'Philippeville (Philippeville)',key:'nis-93056A'},{name:'Vodecée (Philippeville)',key:'nis-93056B'},{name:'Franchimont (Philippeville)',key:'nis-93056D'},{name:'Villers-le-Gambon (Philippeville)',key:'nis-93056C'},{name:'Omezée (Philippeville)',key:'nis-93056F'},{name:'Merlemont (Philippeville)',key:'nis-93056H'},{name:'Surice (Philippeville)',key:'nis-93056E'},{name:'Romedenne (Philippeville)',key:'nis-93056G'},{name:'Sart-en-Fagne (Philippeville)',key:'nis-93056J'},{name:'Villers-en-Fagne (Philippeville)',key:'nis-93056K'},{name:'Roly (Philippeville)',key:'nis-93056M'},{name:'Samart (Philippeville)',key:'nis-93056P'},{name:'Sautour (Philippeville)',key:'nis-93056N'},{name:'Fagnolle (Philippeville)',key:'nis-93056L'},{name:'Neuville (Philippeville)',key:'nis-93056R'},{name:'Jamagne (Philippeville)',key:'nis-93056T'},{name:'Jamiolle (Philippeville)',key:'nis-93056S'},{name:'Viroinval + deelgemeenten',key:'nis-93090'},{name:'Olloy-sur-Viroin (Viroinval)',key:'nis-93090A'},{name:'Treignes (Viroinval)',key:'nis-93090C'},{name:'Mazée (Viroinval)',key:'nis-93090D'},{name:'Le Mesnil (Viroinval)',key:'nis-93090E'},{name:'Vierves-sur-Viroin (Viroinval)',key:'nis-93090B'},{name:'Oignies-en-Thiérache (Viroinval)',key:'nis-93090F'},{name:'Nismes (Viroinval)',key:'nis-93090G'},{name:'Dourbes (Viroinval)',key:'nis-93090H'},{name:'Walcourt + deelgemeenten',key:'nis-93088'},{name:'Walcourt (Walcourt)',key:'nis-93088A'},{name:'Fontenelle (Walcourt)',key:'nis-93088C'},{name:'Castillon (Walcourt)',key:'nis-93088D'},{name:'Pry (Walcourt)',key:'nis-93088B'},{name:'Clermont (Walcourt)',key:'nis-93088E'},{name:'Rognée (Walcourt)',key:'nis-93088F'},{name:'Berzée (Walcourt)',key:'nis-93088G'},{name:'Gourdinne (Walcourt)',key:'nis-93088J'},{name:'Thy-le-Château (Walcourt)',key:'nis-93088H'},{name:'Somzée (Walcourt)',key:'nis-93088K'},{name:'Tarcienne (Walcourt)',key:'nis-93088L'},{name:'Chastrès (Walcourt)',key:'nis-93088N'},{name:'Laneffe (Walcourt)',key:'nis-93088M'},{name:'Fraire (Walcourt)',key:'nis-93088P'},{name:'Yves-Gomezée (Walcourt)',key:'nis-93088R'},{name:'Vogenée (Walcourt)',key:'nis-93088S'}])

.constant('citiesNL', [{label:'Aadorp',name:'Aadorp',zip:''},{label:'Aagtekerke',name:'Aagtekerke',zip:''},{label:'Aalden',name:'Aalden',zip:''},{label:'Aalsmeer',name:'Aalsmeer',zip:''},{label:'Aalsmeerderbrug',name:'Aalsmeerderbrug',zip:''},{label:'Aalst',name:'Aalst',zip:''},{label:'Aalsum',name:'Aalsum',zip:''},{label:'Aalten',name:'Aalten',zip:''},{label:'Ter Aar',name:'Ter Aar',zip:''},{label:'Ter Aard',name:'Ter Aard',zip:''},{label:'Aardenburg',name:'Aardenburg',zip:''},{label:'Aarlanderveen',name:'Aarlanderveen',zip:''},{label:'Aarle-Rixtel',name:'Aarle-Rixtel',zip:''},{label:'Aartswoud',name:'Aartswoud',zip:''},{label:'Abbega',name:'Abbega',zip:''},{label:'Abbekerk',name:'Abbekerk',zip:''},{label:'Abbenbroek',name:'Abbenbroek',zip:''},{label:'Abbenes',name:'Abbenes',zip:''},{label:'Abcoude',name:'Abcoude',zip:''},{label:'Achlum',name:'Achlum',zip:''},{label:'Achterveld (Barneveld)',name:'Achterveld (Barneveld)',zip:''},{label:'Achterveld (Leusden)',name:'Achterveld (Leusden)',zip:''},{label:'Achthuizen',name:'Achthuizen',zip:''},{label:'Achtmaal',name:'Achtmaal',zip:''},{label:'Acquoy',name:'Acquoy',zip:''},{label:'Adorp',name:'Adorp',zip:''},{label:'Aduard',name:'Aduard',zip:''},{label:'Aerdenhout',name:'Aerdenhout',zip:''},{label:'Aerdt',name:'Aerdt',zip:''},{label:'Afferden (Druten)',name:'Afferden (Druten)',zip:''},{label:'Afferden (Bergen - Limburg)',name:'Afferden (Bergen - Limburg)',zip:''},{label:'Agelo',name:'Agelo',zip:''},{label:'Akersloot',name:'Akersloot',zip:''},{label:'Akkrum',name:'Akkrum',zip:''},{label:'Akmarijp',name:'Akmarijp',zip:''},{label:'Albergen',name:'Albergen',zip:''},{label:'Alblasserdam',name:'Alblasserdam',zip:''},{label:'Alde Leie',name:'Alde Leie',zip:''},{label:'Aldeboarn',name:'Aldeboarn',zip:''},{label:'Aldtsjerk',name:'Aldtsjerk',zip:''},{label:'Alem',name:'Alem',zip:''},{label:'Alkmaar',name:'Alkmaar',zip:''},{label:'Allingawier',name:'Allingawier',zip:''},{label:'Almelo',name:'Almelo',zip:''},{label:'Almen',name:'Almen',zip:''},{label:'Almere',name:'Almere',zip:''},{label:'Almkerk',name:'Almkerk',zip:''},{label:'Alphen (West Maas en Waal)',name:'Alphen (West Maas en Waal)',zip:''},{label:'Alphen (Alphen-Chaam)',name:'Alphen (Alphen-Chaam)',zip:''},{label:'Alphen aan den Rijn',name:'Alphen aan den Rijn',zip:''},{label:'Alteveer (Noordenveld)',name:'Alteveer (Noordenveld)',zip:''},{label:'Alteveer (Stadskanaal)',name:'Alteveer (Stadskanaal)',zip:''},{label:'Alteveer (De Wolden)',name:'Alteveer (De Wolden)',zip:''},{label:'Alteveer (Hoogeveen)',name:'Alteveer (Hoogeveen)',zip:''},{label:'Altforst',name:'Altforst',zip:''},{label:'Ambt Delden',name:'Ambt Delden',zip:''},{label:'Ameide',name:'Ameide',zip:''},{label:'Amen',name:'Amen',zip:''},{label:'America',name:'America',zip:''},{label:'Amerongen',name:'Amerongen',zip:''},{label:'Amersfoort',name:'Amersfoort',zip:''},{label:'Ammerstol',name:'Ammerstol',zip:''},{label:'Ammerzoden',name:'Ammerzoden',zip:''},{label:'Amstelhoek',name:'Amstelhoek',zip:''},{label:'Amstelveen',name:'Amstelveen',zip:''},{label:'Amstenrade',name:'Amstenrade',zip:''},{label:'Amsterdam',name:'Amsterdam',zip:''},{label:'Amsterdam-Duivendrecht',name:'Amsterdam-Duivendrecht',zip:''},{label:'Andel',name:'Andel',zip:''},{label:'Den Andel',name:'Den Andel',zip:''},{label:'Andelst',name:'Andelst',zip:''},{label:'Anderen',name:'Anderen',zip:''},{label:'Andijk',name:'Andijk',zip:''},{label:'Ane',name:'Ane',zip:''},{label:'Anerveen',name:'Anerveen',zip:''},{label:'Anevelde',name:'Anevelde',zip:''},{label:'Angeren',name:'Angeren',zip:''},{label:'Angerlo',name:'Angerlo',zip:''},{label:'Anjum',name:'Anjum',zip:''},{label:'Ankeveen',name:'Ankeveen',zip:''},{label:'Anloo',name:'Anloo',zip:''},{label:'Anna Paulowna',name:'Anna Paulowna',zip:''},{label:'Annen',name:'Annen',zip:''},{label:'Annerveenschekanaal',name:'Annerveenschekanaal',zip:''},{label:'Ansen (Westerveld)',name:'Ansen (Westerveld)',zip:''},{label:'Ansen (De Wolden)',name:'Ansen (De Wolden)',zip:''},{label:'Ter Apel',name:'Ter Apel',zip:''},{label:'Apeldoorn',name:'Apeldoorn',zip:''},{label:'Ter Apelkanaal',name:'Ter Apelkanaal',zip:''},{label:'Appelscha',name:'Appelscha',zip:''},{label:'Appeltern',name:'Appeltern',zip:''},{label:'Appingedam',name:'Appingedam',zip:''},{label:'Arcen',name:'Arcen',zip:''},{label:'Arkel',name:'Arkel',zip:''},{label:'Arnemuiden',name:'Arnemuiden',zip:''},{label:'Arnhem',name:'Arnhem',zip:''},{label:'Arriën',name:'Arriën',zip:''},{label:'Arum',name:'Arum',zip:''},{label:'Asch',name:'Asch',zip:''},{label:'Asperen',name:'Asperen',zip:''},{label:'Assen',name:'Assen',zip:''},{label:'Assendelft',name:'Assendelft',zip:''},{label:'Asten',name:'Asten',zip:''},{label:'Augsbuurt',name:'Augsbuurt',zip:''},{label:'Augustinusga',name:'Augustinusga',zip:''},{label:'Austerlitz',name:'Austerlitz',zip:''},{label:'Avenhorn',name:'Avenhorn',zip:''},{label:'Axel',name:'Axel',zip:''},{label:'Azewijn',name:'Azewijn',zip:''},{label:'Baaiduinen',name:'Baaiduinen',zip:''},{label:'Baaium',name:'Baaium',zip:''},{label:'Baak',name:'Baak',zip:''},{label:'Baambrugge',name:'Baambrugge',zip:''},{label:'Baard',name:'Baard',zip:''},{label:'Baarland',name:'Baarland',zip:''},{label:'Baarle-Nassau',name:'Baarle-Nassau',zip:''},{label:'Baarlo (Peel en Maas)',name:'Baarlo (Peel en Maas)',zip:''},{label:'Baarlo (Steenwijkerland)',name:'Baarlo (Steenwijkerland)',zip:''},{label:'Baarn',name:'Baarn',zip:''},{label:'Baars',name:'Baars',zip:''},{label:'Babberich',name:'Babberich',zip:''},{label:'Babyloniënbroek',name:'Babyloniënbroek',zip:''},{label:'Bad Nieuweschans',name:'Bad Nieuweschans',zip:''},{label:'Badhoevedorp',name:'Badhoevedorp',zip:''},{label:'Baexem',name:'Baexem',zip:''},{label:'Baflo',name:'Baflo',zip:''},{label:'Bakel',name:'Bakel',zip:''},{label:'Bakhuizen',name:'Bakhuizen',zip:''},{label:'Bakkeveen',name:'Bakkeveen',zip:''},{label:'Balgoij',name:'Balgoij',zip:''},{label:'Balinge',name:'Balinge',zip:''},{label:'Balk',name:'Balk',zip:''},{label:'Balkbrug',name:'Balkbrug',zip:''},{label:'Balloërveld',name:'Balloërveld',zip:''},{label:'Balloo',name:'Balloo',zip:''},{label:'Ballum',name:'Ballum',zip:''},{label:'Baneheide',name:'Baneheide',zip:''},{label:'Banholt',name:'Banholt',zip:''},{label:'Bant',name:'Bant',zip:''},{label:'Bantega',name:'Bantega',zip:''},{label:'Barchem',name:'Barchem',zip:''},{label:'Barendrecht',name:'Barendrecht',zip:''},{label:'Barger-Compascuum',name:'Barger-Compascuum',zip:''},{label:'Barneveld',name:'Barneveld',zip:''},{label:'Barsingerhorn',name:'Barsingerhorn',zip:''},{label:'Basse',name:'Basse',zip:''},{label:'Batenburg',name:'Batenburg',zip:''},{label:'Bathmen',name:'Bathmen',zip:''},{label:'Bavel (Breda)',name:'Bavel (Breda)',zip:''},{label:'Bavel (Alphen-Chaam)',name:'Bavel (Alphen-Chaam)',zip:''},{label:'Bears',name:'Bears',zip:''},{label:'Bedum',name:'Bedum',zip:''},{label:'Beegden',name:'Beegden',zip:''},{label:'Beek (Beek)',name:'Beek (Beek)',zip:''},{label:'Beek (Montferland)',name:'Beek (Montferland)',zip:''},{label:'Beek (Berg en Dal)',name:'Beek (Berg en Dal)',zip:''},{label:'Beek en Donk',name:'Beek en Donk',zip:''},{label:'Beekbergen',name:'Beekbergen',zip:''},{label:'Beemte Broekland',name:'Beemte Broekland',zip:''},{label:'Beers',name:'Beers',zip:''},{label:'Beerta',name:'Beerta',zip:''},{label:'Beerze',name:'Beerze',zip:''},{label:'Beerzerveld',name:'Beerzerveld',zip:''},{label:'Beesd',name:'Beesd',zip:''},{label:'Beesel',name:'Beesel',zip:''},{label:'Beets',name:'Beets',zip:''},{label:'Beetsterzwaag',name:'Beetsterzwaag',zip:''},{label:'Beilen',name:'Beilen',zip:''},{label:'Beinsdorp',name:'Beinsdorp',zip:''},{label:'Belfeld',name:'Belfeld',zip:''},{label:'Bellingwolde',name:'Bellingwolde',zip:''},{label:'Beltrum',name:'Beltrum',zip:''},{label:'Belt-Schutsloot',name:'Belt-Schutsloot',zip:''},{label:'Bemelen',name:'Bemelen',zip:''},{label:'Bemmel',name:'Bemmel',zip:''},{label:'Beneden-Leeuwen',name:'Beneden-Leeuwen',zip:''},{label:'Bennebroek',name:'Bennebroek',zip:''},{label:'Bennekom',name:'Bennekom',zip:''},{label:'Benneveld',name:'Benneveld',zip:''},{label:'Benningbroek',name:'Benningbroek',zip:''},{label:'Benschop',name:'Benschop',zip:''},{label:'Bentelo',name:'Bentelo',zip:''},{label:'Benthuizen',name:'Benthuizen',zip:''},{label:'Bentveld',name:'Bentveld',zip:''},{label:'Berg en Dal',name:'Berg en Dal',zip:''},{label:'Berg en Terblijt',name:'Berg en Terblijt',zip:''},{label:'Bergambacht',name:'Bergambacht',zip:''},{label:'Bergeijk',name:'Bergeijk',zip:''},{label:'Bergen (Noord-Holland)',name:'Bergen (Noord-Holland)',zip:''},{label:'Bergen aan Zee',name:'Bergen aan Zee',zip:''},{label:'Bergen (Limburg)',name:'Bergen (Limburg)',zip:''},{label:'Bergen op Zoom',name:'Bergen op Zoom',zip:''},{label:'Bergentheim',name:'Bergentheim',zip:''},{label:'Bergharen',name:'Bergharen',zip:''},{label:'Berghem',name:'Berghem',zip:''},{label:'Bergschenhoek',name:'Bergschenhoek',zip:''},{label:'Beringe',name:'Beringe',zip:''},{label:'Berkel en Rodenrijs',name:'Berkel en Rodenrijs',zip:''},{label:'Berkel-Enschot',name:'Berkel-Enschot',zip:''},{label:'Berkenwoude',name:'Berkenwoude',zip:''},{label:'Berkhout',name:'Berkhout',zip:''},{label:'Berlicum',name:'Berlicum',zip:''},{label:'Berltsum',name:'Berltsum',zip:''},{label:'Bern',name:'Bern',zip:''},{label:'Best',name:'Best',zip:''},{label:'Beugen',name:'Beugen',zip:''},{label:'Beuningen (Losser)',name:'Beuningen (Losser)',zip:''},{label:'Beuningen (Beuningen)',name:'Beuningen (Beuningen)',zip:''},{label:'Beusichem',name:'Beusichem',zip:''},{label:'Beutenaken',name:'Beutenaken',zip:''},{label:'Beverwijk',name:'Beverwijk',zip:''},{label:'Biddinghuizen',name:'Biddinghuizen',zip:''},{label:'Bierum',name:'Bierum',zip:''},{label:'Biervliet (Terneuzen)',name:'Biervliet (Terneuzen)',zip:''},{label:'Biervliet (Sluis)',name:'Biervliet (Sluis)',zip:''},{label:'Biest-Houtakker',name:'Biest-Houtakker',zip:''},{label:'Biezenmortel',name:'Biezenmortel',zip:''},{label:'Biggekerke',name:'Biggekerke',zip:''},{label:'De Bilt',name:'De Bilt',zip:''},{label:'Bilthoven',name:'Bilthoven',zip:''},{label:'Bingelrade',name:'Bingelrade',zip:''},{label:'Bitgum',name:'Bitgum',zip:''},{label:'Bitgummole',name:'Bitgummole',zip:''},{label:'Bladel',name:'Bladel',zip:''},{label:'Blankenham',name:'Blankenham',zip:''},{label:'Blaricum',name:'Blaricum',zip:''},{label:'Blauwestad',name:'Blauwestad',zip:''},{label:'Blauwhuis',name:'Blauwhuis',zip:''},{label:'Bleiswijk',name:'Bleiswijk',zip:''},{label:'Blesdijke',name:'Blesdijke',zip:''},{label:'Bleskensgraaf ca',name:'Bleskensgraaf ca',zip:''},{label:'De Blesse',name:'De Blesse',zip:''},{label:'Blessum',name:'Blessum',zip:''},{label:'Blije',name:'Blije',zip:''},{label:'Blijham',name:'Blijham',zip:''},{label:'Blitterswijck',name:'Blitterswijck',zip:''},{label:'Bloemendaal',name:'Bloemendaal',zip:''},{label:'Blokker',name:'Blokker',zip:''},{label:'Blokzijl',name:'Blokzijl',zip:''},{label:'Boazum',name:'Boazum',zip:''},{label:'Bocholtz',name:'Bocholtz',zip:''},{label:'Bodegraven',name:'Bodegraven',zip:''},{label:'Boekel',name:'Boekel',zip:''},{label:'Boelenslaan',name:'Boelenslaan',zip:''},{label:'Boer',name:'Boer',zip:''},{label:'Ten Boer',name:'Ten Boer',zip:''},{label:'Boerakker (Marum)',name:'Boerakker (Marum)',zip:''},{label:'Boerakker (Leek)',name:'Boerakker (Leek)',zip:''},{label:'Boesingheliede',name:'Boesingheliede',zip:''},{label:'Boijl',name:'Boijl',zip:''},{label:'Boksum',name:'Boksum',zip:''},{label:'Bolsward',name:'Bolsward',zip:''},{label:'Den Bommel',name:'Den Bommel',zip:''},{label:'Bontebok',name:'Bontebok',zip:''},{label:'Boornbergum',name:'Boornbergum',zip:''},{label:'Boornzwaag',name:'Boornzwaag',zip:''},{label:'Borculo',name:'Borculo',zip:''},{label:'Borger',name:'Borger',zip:''},{label:'Borgercompagnie (Midden-Groningen)',name:'Borgercompagnie (Midden-Groningen)',zip:''},{label:'Borgercompagnie (Veendam)',name:'Borgercompagnie (Veendam)',zip:''},{label:'Borgsweer',name:'Borgsweer',zip:''},{label:'Born',name:'Born',zip:''},{label:'Borne',name:'Borne',zip:''},{label:'Bornerbroek',name:'Bornerbroek',zip:''},{label:'Bornwird',name:'Bornwird',zip:''},{label:'Borssele',name:'Borssele',zip:''},{label:'Bosch en Duin',name:'Bosch en Duin',zip:''},{label:'Boschoord',name:'Boschoord',zip:''},{label:'Boskoop',name:'Boskoop',zip:''},{label:'Bosschenhoofd',name:'Bosschenhoofd',zip:''},{label:'Botlek Rotterdam',name:'Botlek Rotterdam',zip:''},{label:'Bourtange',name:'Bourtange',zip:''},{label:'Bovenkarspel',name:'Bovenkarspel',zip:''},{label:'Boven-Leeuwen',name:'Boven-Leeuwen',zip:''},{label:'Bovensmilde',name:'Bovensmilde',zip:''},{label:'Boxmeer',name:'Boxmeer',zip:''},{label:'Boxtel',name:'Boxtel',zip:''},{label:'Braamt',name:'Braamt',zip:''},{label:'Brakel',name:'Brakel',zip:''},{label:'Brandwijk',name:'Brandwijk',zip:''},{label:'Brantgum',name:'Brantgum',zip:''},{label:'Breda',name:'Breda',zip:''},{label:'Bredevoort',name:'Bredevoort',zip:''},{label:'Breedenbroek',name:'Breedenbroek',zip:''},{label:'Breezand',name:'Breezand',zip:''},{label:'Breezanddijk',name:'Breezanddijk',zip:''},{label:'Breskens',name:'Breskens',zip:''},{label:'Breukelen',name:'Breukelen',zip:''},{label:'Breukeleveen',name:'Breukeleveen',zip:''},{label:'Brielle',name:'Brielle',zip:''},{label:'Briltil',name:'Briltil',zip:''},{label:'Britsum',name:'Britsum',zip:''},{label:'Britswert',name:'Britswert',zip:''},{label:'Broek',name:'Broek',zip:''},{label:'Broek in Waterland',name:'Broek in Waterland',zip:''},{label:'Broek op Langedijk',name:'Broek op Langedijk',zip:''},{label:'Broekhuizen (Horst aan de Maas)',name:'Broekhuizen (Horst aan de Maas)',zip:''},{label:'Broekhuizen (Meppel)',name:'Broekhuizen (Meppel)',zip:''},{label:'Broekhuizenvorst',name:'Broekhuizenvorst',zip:''},{label:'Broekland',name:'Broekland',zip:''},{label:'Broeksterwâld',name:'Broeksterwâld',zip:''},{label:'Bronkhorst',name:'Bronkhorst',zip:''},{label:'Bronneger',name:'Bronneger',zip:''},{label:'Bronnegerveen',name:'Bronnegerveen',zip:''},{label:'Brouwershaven',name:'Brouwershaven',zip:''},{label:'Bruchem',name:'Bruchem',zip:''},{label:'Brucht',name:'Brucht',zip:''},{label:'Bruchterveld',name:'Bruchterveld',zip:''},{label:'Bruinehaar',name:'Bruinehaar',zip:''},{label:'Bruinisse',name:'Bruinisse',zip:''},{label:'Brummen',name:'Brummen',zip:''},{label:'Brunssum',name:'Brunssum',zip:''},{label:'Bruntinge',name:'Bruntinge',zip:''},{label:'Buchten',name:'Buchten',zip:''},{label:'Budel',name:'Budel',zip:''},{label:'Budel-Dorplein',name:'Budel-Dorplein',zip:''},{label:'Budel-Schoot',name:'Budel-Schoot',zip:''},{label:'Buggenum',name:'Buggenum',zip:''},{label:'Buinen',name:'Buinen',zip:''},{label:'Buinerveen',name:'Buinerveen',zip:''},{label:'Buitenkaag',name:'Buitenkaag',zip:''},{label:'Buitenpost',name:'Buitenpost',zip:''},{label:'De Bult',name:'De Bult',zip:''},{label:'Bunde',name:'Bunde',zip:''},{label:'Bunne',name:'Bunne',zip:''},{label:'Bunnik',name:'Bunnik',zip:''},{label:'Bunschoten-Spakenburg',name:'Bunschoten-Spakenburg',zip:''},{label:'Burdaard',name:'Burdaard',zip:''},{label:'Buren (Ameland)',name:'Buren (Ameland)',zip:''},{label:'Buren (Buren)',name:'Buren (Buren)',zip:''},{label:'Den Burg',name:'Den Burg',zip:''},{label:'Burgerbrug',name:'Burgerbrug',zip:''},{label:'Burgerveen',name:'Burgerveen',zip:''},{label:'Burgh-Haamstede',name:'Burgh-Haamstede',zip:''},{label:'Burgum',name:'Burgum',zip:''},{label:'Burgwerd',name:'Burgwerd',zip:''},{label:'Burum',name:'Burum',zip:''},{label:'Bussum',name:'Bussum',zip:''},{label:'Buurmalsen (Buren)',name:'Buurmalsen (Buren)',zip:''},{label:'Buurmalsen (Geldermalsen)',name:'Buurmalsen (Geldermalsen)',zip:''},{label:'Cadier en Keer',name:'Cadier en Keer',zip:''},{label:'Cadzand',name:'Cadzand',zip:''},{label:'Callantsoog',name:'Callantsoog',zip:''},{label:'Capelle aan den IJssel',name:'Capelle aan den IJssel',zip:''},{label:'Castelre',name:'Castelre',zip:''},{label:'Castenray',name:'Castenray',zip:''},{label:'Casteren',name:'Casteren',zip:''},{label:'Castricum',name:'Castricum',zip:''},{label:'Chaam',name:'Chaam',zip:''},{label:'Clinge',name:'Clinge',zip:''},{label:'De Cocksdorp',name:'De Cocksdorp',zip:''},{label:'Coevorden',name:'Coevorden',zip:''},{label:'Colijnsplaat',name:'Colijnsplaat',zip:''},{label:'Collendoorn',name:'Collendoorn',zip:''},{label:'Colmschate',name:'Colmschate',zip:''},{label:'Cornwerd',name:'Cornwerd',zip:''},{label:'Cothen',name:'Cothen',zip:''},{label:'Creil',name:'Creil',zip:''},{label:'Cromvoirt',name:'Cromvoirt',zip:''},{label:'Cruquius',name:'Cruquius',zip:''},{label:'Cuijk',name:'Cuijk',zip:''},{label:'Culemborg',name:'Culemborg',zip:''},{label:'Daarle',name:'Daarle',zip:''},{label:'Daarlerveen',name:'Daarlerveen',zip:''},{label:'Dalem',name:'Dalem',zip:''},{label:'Dalen',name:'Dalen',zip:''},{label:'Dalerpeel',name:'Dalerpeel',zip:''},{label:'Dalerveen',name:'Dalerveen',zip:''},{label:'Dalfsen',name:'Dalfsen',zip:''},{label:'Dalmsholte',name:'Dalmsholte',zip:''},{label:'Damwâld',name:'Damwâld',zip:''},{label:'Darp',name:'Darp',zip:''},{label:'Dearsum',name:'Dearsum',zip:''},{label:'Dedemsvaart',name:'Dedemsvaart',zip:''},{label:'Dedgum',name:'Dedgum',zip:''},{label:'Deelen',name:'Deelen',zip:''},{label:'Deest',name:'Deest',zip:''},{label:'Deil',name:'Deil',zip:''},{label:'Deinum',name:'Deinum',zip:''},{label:'Delden',name:'Delden',zip:''},{label:'Delfgauw',name:'Delfgauw',zip:''},{label:'Delfstrahuizen',name:'Delfstrahuizen',zip:''},{label:'Delft',name:'Delft',zip:''},{label:'Delfzijl',name:'Delfzijl',zip:''},{label:'Delwijnen',name:'Delwijnen',zip:''},{label:'Demen',name:'Demen',zip:''},{label:'Denekamp',name:'Denekamp',zip:''},{label:'Deurne',name:'Deurne',zip:''},{label:'Deurningen (Oldenzaal)',name:'Deurningen (Oldenzaal)',zip:''},{label:'Deurningen (Dinkelland)',name:'Deurningen (Dinkelland)',zip:''},{label:'Deursen-Dennenburg',name:'Deursen-Dennenburg',zip:''},{label:'Deurze',name:'Deurze',zip:''},{label:'Deventer',name:'Deventer',zip:''},{label:'Didam',name:'Didam',zip:''},{label:'Dieden',name:'Dieden',zip:''},{label:'Diemen',name:'Diemen',zip:''},{label:'Diepenheim',name:'Diepenheim',zip:''},{label:'Diepenveen',name:'Diepenveen',zip:''},{label:'Dieren',name:'Dieren',zip:''},{label:'Diessen',name:'Diessen',zip:''},{label:'Diever',name:'Diever',zip:''},{label:'Dieverbrug',name:'Dieverbrug',zip:''},{label:'Diffelen',name:'Diffelen',zip:''},{label:'Dijken',name:'Dijken',zip:''},{label:'Dinteloord',name:'Dinteloord',zip:''},{label:'Dinxperlo',name:'Dinxperlo',zip:''},{label:'Diphoorn',name:'Diphoorn',zip:''},{label:'Dirkshorn',name:'Dirkshorn',zip:''},{label:'Dirksland',name:'Dirksland',zip:''},{label:'Dodewaard',name:'Dodewaard',zip:''},{label:'Doenrade',name:'Doenrade',zip:''},{label:'Doesburg',name:'Doesburg',zip:''},{label:'Doetinchem',name:'Doetinchem',zip:''},{label:'Doeveren',name:'Doeveren',zip:''},{label:'Doezum',name:'Doezum',zip:''},{label:'Dokkum',name:'Dokkum',zip:''},{label:'Den Dolder',name:'Den Dolder',zip:''},{label:'Doldersum',name:'Doldersum',zip:''},{label:'Domburg',name:'Domburg',zip:''},{label:'Donderen',name:'Donderen',zip:''},{label:'Dongen',name:'Dongen',zip:''},{label:'Dongjum',name:'Dongjum',zip:''},{label:'Doniaga',name:'Doniaga',zip:''},{label:'Donkerbroek',name:'Donkerbroek',zip:''},{label:'Doorn',name:'Doorn',zip:''},{label:'Doornenburg',name:'Doornenburg',zip:''},{label:'Doornspijk',name:'Doornspijk',zip:''},{label:'Doorwerth',name:'Doorwerth',zip:''},{label:'Dordrecht',name:'Dordrecht',zip:''},{label:'Dorst',name:'Dorst',zip:''},{label:'Drachten',name:'Drachten',zip:''},{label:'Drachten-Azeven',name:'Drachten-Azeven',zip:''},{label:'Drachtstercompagnie',name:'Drachtstercompagnie',zip:''},{label:'Dreischor',name:'Dreischor',zip:''},{label:'Drempt',name:'Drempt',zip:''},{label:'Dreumel',name:'Dreumel',zip:''},{label:'Driebergen-Rijsenburg',name:'Driebergen-Rijsenburg',zip:''},{label:'Drieborg',name:'Drieborg',zip:''},{label:'Driebruggen',name:'Driebruggen',zip:''},{label:'Driehuis',name:'Driehuis',zip:''},{label:'Driehuizen',name:'Driehuizen',zip:''},{label:'Driel',name:'Driel',zip:''},{label:'Driewegen',name:'Driewegen',zip:''},{label:'Driezum',name:'Driezum',zip:''},{label:'Drijber',name:'Drijber',zip:''},{label:'Drimmelen',name:'Drimmelen',zip:''},{label:'Drogeham',name:'Drogeham',zip:''},{label:'Drogteropslagen',name:'Drogteropslagen',zip:''},{label:'Drongelen',name:'Drongelen',zip:''},{label:'Dronryp',name:'Dronryp',zip:''},{label:'Dronten',name:'Dronten',zip:''},{label:'Drouwen',name:'Drouwen',zip:''},{label:'Drouwenermond',name:'Drouwenermond',zip:''},{label:'Drouwenerveen',name:'Drouwenerveen',zip:''},{label:'Drunen',name:'Drunen',zip:''},{label:'Druten',name:'Druten',zip:''},{label:'Duiven',name:'Duiven',zip:''},{label:'Duivendrecht',name:'Duivendrecht',zip:''},{label:'Duizel',name:'Duizel',zip:''},{label:'Den Dungen',name:'Den Dungen',zip:''},{label:'Dussen',name:'Dussen',zip:''},{label:'Dwingeloo',name:'Dwingeloo',zip:''},{label:'Eagum',name:'Eagum',zip:''},{label:'Earnewâld',name:'Earnewâld',zip:''},{label:'Easterein',name:'Easterein',zip:''},{label:'Easterlittens',name:'Easterlittens',zip:''},{label:'Eastermar',name:'Eastermar',zip:''},{label:'Easterwierrum',name:'Easterwierrum',zip:''},{label:'Echt',name:'Echt',zip:''},{label:'Echteld',name:'Echteld',zip:''},{label:'Echten (De Wolden)',name:'Echten (De Wolden)',zip:''},{label:'Echten (De Fryske Marren)',name:'Echten (De Fryske Marren)',zip:''},{label:'Echtenerbrug',name:'Echtenerbrug',zip:''},{label:'Eck en Wiel',name:'Eck en Wiel',zip:''},{label:'Eckelrade',name:'Eckelrade',zip:''},{label:'Edam',name:'Edam',zip:''},{label:'Ede',name:'Ede',zip:''},{label:'Ederveen',name:'Ederveen',zip:''},{label:'Ee',name:'Ee',zip:''},{label:'Eede',name:'Eede',zip:''},{label:'Eefde',name:'Eefde',zip:''},{label:'Eelde',name:'Eelde',zip:''},{label:'Eelderwolde',name:'Eelderwolde',zip:''},{label:'Eemdijk',name:'Eemdijk',zip:''},{label:'Eemnes',name:'Eemnes',zip:''},{label:'Eemshaven',name:'Eemshaven',zip:''},{label:'Een',name:'Een',zip:''},{label:'Eenrum',name:'Eenrum',zip:''},{label:'Eenum',name:'Eenum',zip:''},{label:'Een-West',name:'Een-West',zip:''},{label:'Eerbeek',name:'Eerbeek',zip:''},{label:'Eersel',name:'Eersel',zip:''},{label:'Ees',name:'Ees',zip:''},{label:'Eesergroen',name:'Eesergroen',zip:''},{label:'Eeserveen',name:'Eeserveen',zip:''},{label:'Eesterga',name:'Eesterga',zip:''},{label:'Eesveen',name:'Eesveen',zip:''},{label:'Eethen',name:'Eethen',zip:''},{label:'Eext',name:'Eext',zip:''},{label:'Eexterveen',name:'Eexterveen',zip:''},{label:'Eexterveenschekanaal',name:'Eexterveenschekanaal',zip:''},{label:'Eexterzandvoort',name:'Eexterzandvoort',zip:''},{label:'Egchel',name:'Egchel',zip:''},{label:'Egmond aan den Hoef',name:'Egmond aan den Hoef',zip:''},{label:'Egmond aan Zee',name:'Egmond aan Zee',zip:''},{label:'Egmond-Binnen',name:'Egmond-Binnen',zip:''},{label:'Eibergen',name:'Eibergen',zip:''},{label:'Eijsden',name:'Eijsden',zip:''},{label:'Eindhoven',name:'Eindhoven',zip:''},{label:'Einighausen',name:'Einighausen',zip:''},{label:'Ekehaar',name:'Ekehaar',zip:''},{label:'Elahuizen',name:'Elahuizen',zip:''},{label:'Elburg',name:'Elburg',zip:''},{label:'Eldersloo',name:'Eldersloo',zip:''},{label:'Eleveld',name:'Eleveld',zip:''},{label:'Elim',name:'Elim',zip:''},{label:'Elkenrade',name:'Elkenrade',zip:''},{label:'Ell',name:'Ell',zip:''},{label:'Ellecom',name:'Ellecom',zip:''},{label:'Ellemeet',name:'Ellemeet',zip:''},{label:'Ellertshaar',name:'Ellertshaar',zip:''},{label:'Ellewoutsdijk',name:'Ellewoutsdijk',zip:''},{label:'Elp',name:'Elp',zip:''},{label:'Elsendorp',name:'Elsendorp',zip:''},{label:'Elshout',name:'Elshout',zip:''},{label:'Elsloo (Stein)',name:'Elsloo (Stein)',zip:''},{label:'Elsloo (Ooststellingwerf)',name:'Elsloo (Ooststellingwerf)',zip:''},{label:'Elspeet',name:'Elspeet',zip:''},{label:'Elst',name:'Elst',zip:''},{label:'Elst Ut',name:'Elst Ut',zip:''},{label:'Emmeloord',name:'Emmeloord',zip:''},{label:'Emmen',name:'Emmen',zip:''},{label:'Emmer-Compascuum',name:'Emmer-Compascuum',zip:''},{label:'Empe',name:'Empe',zip:''},{label:'Emst',name:'Emst',zip:''},{label:'Engwierum',name:'Engwierum',zip:''},{label:'Enkhuizen',name:'Enkhuizen',zip:''},{label:'Ens',name:'Ens',zip:''},{label:'Enschede',name:'Enschede',zip:''},{label:'Enspijk',name:'Enspijk',zip:''},{label:'Enter',name:'Enter',zip:''},{label:'Enumatil',name:'Enumatil',zip:''},{label:'Epe',name:'Epe',zip:''},{label:'Epen',name:'Epen',zip:''},{label:'Eppenhuizen',name:'Eppenhuizen',zip:''},{label:'Epse',name:'Epse',zip:''},{label:'Erica',name:'Erica',zip:''},{label:'Erichem',name:'Erichem',zip:''},{label:'Erlecom',name:'Erlecom',zip:''},{label:'Erm',name:'Erm',zip:''},{label:'Ermelo',name:'Ermelo',zip:''},{label:'Erp',name:'Erp',zip:''},{label:'Esbeek',name:'Esbeek',zip:''},{label:'Esch',name:'Esch',zip:''},{label:'Escharen',name:'Escharen',zip:''},{label:'Espel',name:'Espel',zip:''},{label:'Est',name:'Est',zip:''},{label:'Etten',name:'Etten',zip:''},{label:'Etten-Leur',name:'Etten-Leur',zip:''},{label:'Europoort Rotterdam',name:'Europoort Rotterdam',zip:''},{label:'Eursinge (Midden-Drenthe)',name:'Eursinge (Midden-Drenthe)',zip:''},{label:'Eursinge (De Wolden)',name:'Eursinge (De Wolden)',zip:''},{label:'Everdingen',name:'Everdingen',zip:''},{label:'Evertsoord',name:'Evertsoord',zip:''},{label:'Ewijk',name:'Ewijk',zip:''},{label:'1e Exloërmond',name:'1e Exloërmond',zip:''},{label:'2e Exloërmond',name:'2e Exloërmond',zip:''},{label:'Exloërveen',name:'Exloërveen',zip:''},{label:'Exloo',name:'Exloo',zip:''},{label:'Exmorra',name:'Exmorra',zip:''},{label:'Eygelshoven',name:'Eygelshoven',zip:''},{label:'Eys',name:'Eys',zip:''},{label:'Ezinge',name:'Ezinge',zip:''},{label:'De Falom',name:'De Falom',zip:''},{label:'Farmsum',name:'Farmsum',zip:''},{label:'Feanwâlden',name:'Feanwâlden',zip:''},{label:'Feerwerd',name:'Feerwerd',zip:''},{label:'Feinsum',name:'Feinsum',zip:''},{label:'Ferwert',name:'Ferwert',zip:''},{label:'Ferwoude',name:'Ferwoude',zip:''},{label:'Fijnaart',name:'Fijnaart',zip:''},{label:'Finsterwolde',name:'Finsterwolde',zip:''},{label:'Firdgum',name:'Firdgum',zip:''},{label:'Fleringen',name:'Fleringen',zip:''},{label:'Fluitenberg',name:'Fluitenberg',zip:''},{label:'Fochteloo',name:'Fochteloo',zip:''},{label:'Follega',name:'Follega',zip:''},{label:'Folsgare',name:'Folsgare',zip:''},{label:'Formerum',name:'Formerum',zip:''},{label:'Foudgum',name:'Foudgum',zip:''},{label:'Foxhol',name:'Foxhol',zip:''},{label:'Foxwolde',name:'Foxwolde',zip:''},{label:'Franeker',name:'Franeker',zip:''},{label:'Frederiksoord',name:'Frederiksoord',zip:''},{label:'Friens',name:'Friens',zip:''},{label:'Frieschepalen',name:'Frieschepalen',zip:''},{label:'Froombosch',name:'Froombosch',zip:''},{label:'Gaanderen',name:'Gaanderen',zip:''},{label:'Gaast',name:'Gaast',zip:''},{label:'Gaastmeer',name:'Gaastmeer',zip:''},{label:'Galder',name:'Galder',zip:''},{label:'Gameren',name:'Gameren',zip:''},{label:'Gapinge',name:'Gapinge',zip:''},{label:'Garderen',name:'Garderen',zip:''},{label:'Garmerwolde',name:'Garmerwolde',zip:''},{label:'Garminge',name:'Garminge',zip:''},{label:'Garnwerd',name:'Garnwerd',zip:''},{label:'Garrelsweer',name:'Garrelsweer',zip:''},{label:'Garsthuizen',name:'Garsthuizen',zip:''},{label:'Garyp',name:'Garyp',zip:''},{label:'Gassel',name:'Gassel',zip:''},{label:'Gasselte',name:'Gasselte',zip:''},{label:'Gasselternijveen',name:'Gasselternijveen',zip:''},{label:'Gasselternijveenschemond',name:'Gasselternijveenschemond',zip:''},{label:'Gastel',name:'Gastel',zip:''},{label:'Gasteren',name:'Gasteren',zip:''},{label:'Gauw',name:'Gauw',zip:''},{label:'Geelbroek',name:'Geelbroek',zip:''},{label:'Geerdijk',name:'Geerdijk',zip:''},{label:'Geersdijk',name:'Geersdijk',zip:''},{label:'Geertruidenberg',name:'Geertruidenberg',zip:''},{label:'Geervliet',name:'Geervliet',zip:''},{label:'Gees',name:'Gees',zip:''},{label:'Geesbrug',name:'Geesbrug',zip:''},{label:'Geesteren (Tubbergen)',name:'Geesteren (Tubbergen)',zip:''},{label:'Geesteren (Berkelland)',name:'Geesteren (Berkelland)',zip:''},{label:'Geeuwenbrug',name:'Geeuwenbrug',zip:''},{label:'Geffen',name:'Geffen',zip:''},{label:'Geijsteren',name:'Geijsteren',zip:''},{label:'Geldermalsen',name:'Geldermalsen',zip:''},{label:'Gelderswoude',name:'Gelderswoude',zip:''},{label:'Geldrop',name:'Geldrop',zip:''},{label:'Geleen',name:'Geleen',zip:''},{label:'Gellicum',name:'Gellicum',zip:''},{label:'Gelselaar',name:'Gelselaar',zip:''},{label:'Gemert',name:'Gemert',zip:''},{label:'Gemonde',name:'Gemonde',zip:''},{label:'Genderen',name:'Genderen',zip:''},{label:'Gendringen',name:'Gendringen',zip:''},{label:'Gendt',name:'Gendt',zip:''},{label:'Genemuiden',name:'Genemuiden',zip:''},{label:'Gennep',name:'Gennep',zip:''},{label:'Gerkesklooster',name:'Gerkesklooster',zip:''},{label:'Gersloot',name:'Gersloot',zip:''},{label:'Geulle',name:'Geulle',zip:''},{label:'Giesbeek',name:'Giesbeek',zip:''},{label:'Giessen',name:'Giessen',zip:''},{label:'Giessenburg',name:'Giessenburg',zip:''},{label:'Gieten',name:'Gieten',zip:''},{label:'Gieterveen',name:'Gieterveen',zip:''},{label:'Giethmen',name:'Giethmen',zip:''},{label:'Giethoorn',name:'Giethoorn',zip:''},{label:'Gilze',name:'Gilze',zip:''},{label:'Ginnum',name:'Ginnum',zip:''},{label:'Glane',name:'Glane',zip:''},{label:'Glimmen',name:'Glimmen',zip:''},{label:'De Glind',name:'De Glind',zip:''},{label:'Godlinze',name:'Godlinze',zip:''},{label:'Goedereede',name:'Goedereede',zip:''},{label:'Goënga',name:'Goënga',zip:''},{label:'Goëngahuizen',name:'Goëngahuizen',zip:''},{label:'Goes',name:'Goes',zip:''},{label:'Goingarijp',name:'Goingarijp',zip:''},{label:'Goirle',name:'Goirle',zip:''},{label:'Goor',name:'Goor',zip:''},{label:'De Goorn',name:'De Goorn',zip:''},{label:'Gorinchem',name:'Gorinchem',zip:''},{label:'Gorredijk',name:'Gorredijk',zip:''},{label:'Gorssel',name:'Gorssel',zip:''},{label:'Gouda',name:'Gouda',zip:''},{label:'Gouderak',name:'Gouderak',zip:''},{label:'Goudriaan',name:'Goudriaan',zip:''},{label:'Goudswaard',name:'Goudswaard',zip:''},{label:'Goutum',name:'Goutum',zip:''},{label:'\'t Goy',name:'\'t Goy',zip:''},{label:'Graauw',name:'Graauw',zip:''},{label:'Grafhorst',name:'Grafhorst',zip:''},{label:'Graft',name:'Graft',zip:''},{label:'Gramsbergen',name:'Gramsbergen',zip:''},{label:'Grashoek',name:'Grashoek',zip:''},{label:'Grathem',name:'Grathem',zip:''},{label:'Grave',name:'Grave',zip:''},{label:'\'s-Graveland',name:'\'s-Graveland',zip:''},{label:'\'s-Gravendeel',name:'\'s-Gravendeel',zip:''},{label:'Den Haag',name:'Den Haag',zip:''},{label:'\'s Gravenmoer',name:'\'s Gravenmoer',zip:''},{label:'\'s-Gravenpolder',name:'\'s-Gravenpolder',zip:''},{label:'\'s-Gravenzande',name:'\'s-Gravenzande',zip:''},{label:'Greonterp',name:'Greonterp',zip:''},{label:'Grevenbicht',name:'Grevenbicht',zip:''},{label:'Griendtsveen',name:'Griendtsveen',zip:''},{label:'Grijpskerk',name:'Grijpskerk',zip:''},{label:'Grijpskerke',name:'Grijpskerke',zip:''},{label:'Groede',name:'Groede',zip:''},{label:'Groenekan',name:'Groenekan',zip:''},{label:'Groeningen',name:'Groeningen',zip:''},{label:'Groenlo',name:'Groenlo',zip:''},{label:'Groesbeek',name:'Groesbeek',zip:''},{label:'Groessen',name:'Groessen',zip:''},{label:'Groet',name:'Groet',zip:''},{label:'De Groeve',name:'De Groeve',zip:''},{label:'Grolloo',name:'Grolloo',zip:''},{label:'Groningen',name:'Groningen',zip:''},{label:'Gronsveld',name:'Gronsveld',zip:''},{label:'Groot-Ammers',name:'Groot-Ammers',zip:''},{label:'Grootebroek',name:'Grootebroek',zip:''},{label:'Grootegast',name:'Grootegast',zip:''},{label:'Grootschermer',name:'Grootschermer',zip:''},{label:'Grou',name:'Grou',zip:''},{label:'Grubbenvorst',name:'Grubbenvorst',zip:''},{label:'Gulpen',name:'Gulpen',zip:''},{label:'Guttecoven',name:'Guttecoven',zip:''},{label:'Gytsjerk',name:'Gytsjerk',zip:''},{label:'Haaften',name:'Haaften',zip:''},{label:'Haaksbergen',name:'Haaksbergen',zip:''},{label:'Haalderen',name:'Haalderen',zip:''},{label:'\'t Haantje',name:'\'t Haantje',zip:''},{label:'Haaren',name:'Haaren',zip:''},{label:'Haarle (Tubbergen)',name:'Haarle (Tubbergen)',zip:''},{label:'Haarle (Hellendoorn)',name:'Haarle (Hellendoorn)',zip:''},{label:'Haarlem',name:'Haarlem',zip:''},{label:'Haarlemmerliede',name:'Haarlemmerliede',zip:''},{label:'Haarlo',name:'Haarlo',zip:''},{label:'Haarsteeg',name:'Haarsteeg',zip:''},{label:'Haarzuilens',name:'Haarzuilens',zip:''},{label:'Haastrecht',name:'Haastrecht',zip:''},{label:'Haelen',name:'Haelen',zip:''},{label:'Hagestein',name:'Hagestein',zip:''},{label:'Haghorst',name:'Haghorst',zip:''},{label:'Haler',name:'Haler',zip:''},{label:'Halfweg',name:'Halfweg',zip:''},{label:'Hall',name:'Hall',zip:''},{label:'Halle',name:'Halle',zip:''},{label:'Hallum',name:'Hallum',zip:''},{label:'Halsteren',name:'Halsteren',zip:''},{label:'Den Ham (Zuidhorn)',name:'Den Ham (Zuidhorn)',zip:''},{label:'Den Ham (Twenterand)',name:'Den Ham (Twenterand)',zip:''},{label:'Handel',name:'Handel',zip:''},{label:'Hank',name:'Hank',zip:''},{label:'Hansweert',name:'Hansweert',zip:''},{label:'Hantum',name:'Hantum',zip:''},{label:'Hantumeruitburen',name:'Hantumeruitburen',zip:''},{label:'Hantumhuizen',name:'Hantumhuizen',zip:''},{label:'Hapert',name:'Hapert',zip:''},{label:'Haps',name:'Haps',zip:''},{label:'Harbrinkhoek',name:'Harbrinkhoek',zip:''},{label:'\'t Harde',name:'\'t Harde',zip:''},{label:'Hardenberg',name:'Hardenberg',zip:''},{label:'Harderwijk',name:'Harderwijk',zip:''},{label:'Hardinxveld-Giessendam',name:'Hardinxveld-Giessendam',zip:''},{label:'Haren (Oss)',name:'Haren (Oss)',zip:''},{label:'Haren (Haren)',name:'Haren (Haren)',zip:''},{label:'Harfsen',name:'Harfsen',zip:''},{label:'Harich',name:'Harich',zip:''},{label:'Haringhuizen',name:'Haringhuizen',zip:''},{label:'Harkema',name:'Harkema',zip:''},{label:'Harkstede (Midden-Groningen)',name:'Harkstede (Midden-Groningen)',zip:''},{label:'Harkstede (Groningen)',name:'Harkstede (Groningen)',zip:''},{label:'Harlingen',name:'Harlingen',zip:''},{label:'Harmelen',name:'Harmelen',zip:''},{label:'Harreveld',name:'Harreveld',zip:''},{label:'Harskamp',name:'Harskamp',zip:''},{label:'Hartwerd',name:'Hartwerd',zip:''},{label:'Haskerdijken',name:'Haskerdijken',zip:''},{label:'Haskerhorne',name:'Haskerhorne',zip:''},{label:'Hasselt',name:'Hasselt',zip:''},{label:'Hattem',name:'Hattem',zip:''},{label:'Hattemerbroek',name:'Hattemerbroek',zip:''},{label:'Haule',name:'Haule',zip:''},{label:'Haulerwijk',name:'Haulerwijk',zip:''},{label:'Hauwert',name:'Hauwert',zip:''},{label:'Havelte',name:'Havelte',zip:''},{label:'Havelterberg',name:'Havelterberg',zip:''},{label:'Hazerswoude-Dorp',name:'Hazerswoude-Dorp',zip:''},{label:'Hazerswoude-Rijndijk',name:'Hazerswoude-Rijndijk',zip:''},{label:'Hedel',name:'Hedel',zip:''},{label:'Hedikhuizen',name:'Hedikhuizen',zip:''},{label:'Hee',name:'Hee',zip:''},{label:'Heeg',name:'Heeg',zip:''},{label:'Heel',name:'Heel',zip:''},{label:'Heelsum',name:'Heelsum',zip:''},{label:'Heelweg',name:'Heelweg',zip:''},{label:'Heemserveen',name:'Heemserveen',zip:''},{label:'Heemskerk',name:'Heemskerk',zip:''},{label:'Heemstede',name:'Heemstede',zip:''},{label:'De Heen',name:'De Heen',zip:''},{label:'Heenvliet',name:'Heenvliet',zip:''},{label:'\'s-Heer Abtskerke',name:'\'s-Heer Abtskerke',zip:''},{label:'\'s-Heer Arendskerke',name:'\'s-Heer Arendskerke',zip:''},{label:'\'s-Heer Hendrikskinderen',name:'\'s-Heer Hendrikskinderen',zip:''},{label:'Heerde',name:'Heerde',zip:''},{label:'\'s-Heerenberg',name:'\'s-Heerenberg',zip:''},{label:'\'s-Heerenbroek',name:'\'s-Heerenbroek',zip:''},{label:'\'s-Heerenhoek',name:'\'s-Heerenhoek',zip:''},{label:'Heerenveen',name:'Heerenveen',zip:''},{label:'Heerewaarden',name:'Heerewaarden',zip:''},{label:'Heerhugowaard',name:'Heerhugowaard',zip:''},{label:'Heerjansdam',name:'Heerjansdam',zip:''},{label:'Heerle',name:'Heerle',zip:''},{label:'Heerlen',name:'Heerlen',zip:''},{label:'Heesbeen',name:'Heesbeen',zip:''},{label:'Heesch',name:'Heesch',zip:''},{label:'Heesselt',name:'Heesselt',zip:''},{label:'Heeswijk-Dinther',name:'Heeswijk-Dinther',zip:''},{label:'Heeten',name:'Heeten',zip:''},{label:'Heeze',name:'Heeze',zip:''},{label:'Hegebeintum',name:'Hegebeintum',zip:''},{label:'Hegelsom',name:'Hegelsom',zip:''},{label:'Hei- en Boeicop',name:'Hei- en Boeicop',zip:''},{label:'Heibloem',name:'Heibloem',zip:''},{label:'Heide',name:'Heide',zip:''},{label:'It Heidenskip',name:'It Heidenskip',zip:''},{label:'Ter Heijde',name:'Ter Heijde',zip:''},{label:'Heijen',name:'Heijen',zip:''},{label:'Heijenrath',name:'Heijenrath',zip:''},{label:'Heijningen',name:'Heijningen',zip:''},{label:'Heikant',name:'Heikant',zip:''},{label:'Heilig Landstichting',name:'Heilig Landstichting',zip:''},{label:'Heiligerlee',name:'Heiligerlee',zip:''},{label:'Heiloo',name:'Heiloo',zip:''},{label:'Heinenoord',name:'Heinenoord',zip:''},{label:'Heinkenszand',name:'Heinkenszand',zip:''},{label:'Heino',name:'Heino',zip:''},{label:'Hekelingen',name:'Hekelingen',zip:''},{label:'Hekendorp',name:'Hekendorp',zip:''},{label:'Helden',name:'Helden',zip:''},{label:'Den Helder',name:'Den Helder',zip:''},{label:'Helenaveen',name:'Helenaveen',zip:''},{label:'Hellendoorn',name:'Hellendoorn',zip:''},{label:'Hellevoetsluis',name:'Hellevoetsluis',zip:''},{label:'Hellouw',name:'Hellouw',zip:''},{label:'Hellum',name:'Hellum',zip:''},{label:'Helmond',name:'Helmond',zip:''},{label:'Helvoirt',name:'Helvoirt',zip:''},{label:'Hem',name:'Hem',zip:''},{label:'Hemelum',name:'Hemelum',zip:''},{label:'Hemmen',name:'Hemmen',zip:''},{label:'Hempens',name:'Hempens',zip:''},{label:'Hemrik',name:'Hemrik',zip:''},{label:'Hendrik-Ido-Ambacht',name:'Hendrik-Ido-Ambacht',zip:''},{label:'Hengelo (Hengelo)',name:'Hengelo (Hengelo)',zip:''},{label:'Hengelo (Bronckhorst)',name:'Hengelo (Bronckhorst)',zip:''},{label:'Hengevelde',name:'Hengevelde',zip:''},{label:'Hengstdijk',name:'Hengstdijk',zip:''},{label:'Hensbroek',name:'Hensbroek',zip:''},{label:'Herbaijum',name:'Herbaijum',zip:''},{label:'Herkenbosch',name:'Herkenbosch',zip:''},{label:'Herkingen',name:'Herkingen',zip:''},{label:'Hernen',name:'Hernen',zip:''},{label:'Herpen',name:'Herpen',zip:''},{label:'Herpt',name:'Herpt',zip:''},{label:'Herten',name:'Herten',zip:''},{label:'Hertme',name:'Hertme',zip:''},{label:'\'s-Hertogenbosch',name:'\'s-Hertogenbosch',zip:''},{label:'Herveld',name:'Herveld',zip:''},{label:'Herwen',name:'Herwen',zip:''},{label:'Herwijnen',name:'Herwijnen',zip:''},{label:'Heteren',name:'Heteren',zip:''},{label:'Heukelom',name:'Heukelom',zip:''},{label:'Heukelum',name:'Heukelum',zip:''},{label:'Heumen',name:'Heumen',zip:''},{label:'De Heurne',name:'De Heurne',zip:''},{label:'Heusden (Asten)',name:'Heusden (Asten)',zip:''},{label:'Heusden (Heusden)',name:'Heusden (Heusden)',zip:''},{label:'Heveadorp',name:'Heveadorp',zip:''},{label:'Heythuysen',name:'Heythuysen',zip:''},{label:'Hezingen',name:'Hezingen',zip:''},{label:'Hiaure',name:'Hiaure',zip:''},{label:'Hichtum',name:'Hichtum',zip:''},{label:'Hidaard',name:'Hidaard',zip:''},{label:'Hierden',name:'Hierden',zip:''},{label:'Hieslum',name:'Hieslum',zip:''},{label:'Hijken',name:'Hijken',zip:''},{label:'Hijum',name:'Hijum',zip:''},{label:'Hilaard',name:'Hilaard',zip:''},{label:'Hillegom',name:'Hillegom',zip:''},{label:'Hilvarenbeek',name:'Hilvarenbeek',zip:''},{label:'Hilversum',name:'Hilversum',zip:''},{label:'Hindeloopen',name:'Hindeloopen',zip:''},{label:'Hinnaard',name:'Hinnaard',zip:''},{label:'Hippolytushoef',name:'Hippolytushoef',zip:''},{label:'Hitzum',name:'Hitzum',zip:''},{label:'Hobrede',name:'Hobrede',zip:''},{label:'Hoedekenskerke',name:'Hoedekenskerke',zip:''},{label:'de Hoef',name:'de Hoef',zip:''},{label:'Hoef en Haag',name:'Hoef en Haag',zip:''},{label:'Hoek',name:'Hoek',zip:''},{label:'Hoek van Holland',name:'Hoek van Holland',zip:''},{label:'Hoenderloo (Apeldoorn)',name:'Hoenderloo (Apeldoorn)',zip:''},{label:'Hoenderloo (Ede)',name:'Hoenderloo (Ede)',zip:''},{label:'Hoensbroek',name:'Hoensbroek',zip:''},{label:'Hoenzadriel',name:'Hoenzadriel',zip:''},{label:'De Hoeve',name:'De Hoeve',zip:''},{label:'Hoevelaken',name:'Hoevelaken',zip:''},{label:'Hoeven',name:'Hoeven',zip:''},{label:'Hoge Hexel',name:'Hoge Hexel',zip:''},{label:'Hollandsche Rading',name:'Hollandsche Rading',zip:''},{label:'Hollandscheveld',name:'Hollandscheveld',zip:''},{label:'Hollum',name:'Hollum',zip:''},{label:'Holsloot',name:'Holsloot',zip:''},{label:'Holten',name:'Holten',zip:''},{label:'Holthees',name:'Holthees',zip:''},{label:'Holtheme',name:'Holtheme',zip:''},{label:'Holthone',name:'Holthone',zip:''},{label:'Holtum',name:'Holtum',zip:''},{label:'Holwerd',name:'Holwerd',zip:''},{label:'Holwierde',name:'Holwierde',zip:''},{label:'Hommerts',name:'Hommerts',zip:''},{label:'Homoet',name:'Homoet',zip:''},{label:'Honselersdijk',name:'Honselersdijk',zip:''},{label:'Hoofddorp',name:'Hoofddorp',zip:''},{label:'Hoofdplaat',name:'Hoofdplaat',zip:''},{label:'Hoog Soeren',name:'Hoog Soeren',zip:''},{label:'Hoogblokland',name:'Hoogblokland',zip:''},{label:'Hooge Mierde',name:'Hooge Mierde',zip:''},{label:'Hooge Zwaluwe',name:'Hooge Zwaluwe',zip:''},{label:'Hoogeloon',name:'Hoogeloon',zip:''},{label:'Hoogenweg',name:'Hoogenweg',zip:''},{label:'Hoogerheide',name:'Hoogerheide',zip:''},{label:'Hoogersmilde (Midden-Drenthe)',name:'Hoogersmilde (Midden-Drenthe)',zip:''},{label:'Hoogersmilde (Westerveld)',name:'Hoogersmilde (Westerveld)',zip:''},{label:'Hoogeveen',name:'Hoogeveen',zip:''},{label:'Hoogezand',name:'Hoogezand',zip:''},{label:'Hooghalen',name:'Hooghalen',zip:''},{label:'Hoogkarspel',name:'Hoogkarspel',zip:''},{label:'Hoog-Keppel',name:'Hoog-Keppel',zip:''},{label:'Hoogland',name:'Hoogland',zip:''},{label:'Hooglanderveen',name:'Hooglanderveen',zip:''},{label:'Hoogmade',name:'Hoogmade',zip:''},{label:'Hoogvliet Rotterdam',name:'Hoogvliet Rotterdam',zip:''},{label:'Hoogwoud',name:'Hoogwoud',zip:''},{label:'Hoorn (Hoorn)',name:'Hoorn (Hoorn)',zip:''},{label:'Hoorn (Terschelling)',name:'Hoorn (Terschelling)',zip:''},{label:'Den Hoorn (Texel)',name:'Den Hoorn (Texel)',zip:''},{label:'Den Hoorn (Midden-Delfland)',name:'Den Hoorn (Midden-Delfland)',zip:''},{label:'Hoornaar',name:'Hoornaar',zip:''},{label:'Hoornsterzwaag',name:'Hoornsterzwaag',zip:''},{label:'Horn',name:'Horn',zip:''},{label:'Den Horn',name:'Den Horn',zip:''},{label:'Hornhuizen',name:'Hornhuizen',zip:''},{label:'Horssen',name:'Horssen',zip:''},{label:'Horst',name:'Horst',zip:''},{label:'Den Hout',name:'Den Hout',zip:''},{label:'Houten',name:'Houten',zip:''},{label:'Houtigehage',name:'Houtigehage',zip:''},{label:'Houwerzijl',name:'Houwerzijl',zip:''},{label:'Huijbergen',name:'Huijbergen',zip:''},{label:'Huis ter Heide (Noordenveld)',name:'Huis ter Heide (Noordenveld)',zip:''},{label:'Huis ter Heide (Zeist)',name:'Huis ter Heide (Zeist)',zip:''},{label:'Huisduinen',name:'Huisduinen',zip:''},{label:'Huisseling',name:'Huisseling',zip:''},{label:'Huissen',name:'Huissen',zip:''},{label:'Huizen',name:'Huizen',zip:''},{label:'Huizinge',name:'Huizinge',zip:''},{label:'Hulsberg',name:'Hulsberg',zip:''},{label:'Hulsel',name:'Hulsel',zip:''},{label:'Hulshorst',name:'Hulshorst',zip:''},{label:'Hulst',name:'Hulst',zip:''},{label:'Hulten',name:'Hulten',zip:''},{label:'Hummelo',name:'Hummelo',zip:''},{label:'Húns',name:'Húns',zip:''},{label:'Hunsel',name:'Hunsel',zip:''},{label:'Hurdegaryp',name:'Hurdegaryp',zip:''},{label:'Hurwenen',name:'Hurwenen',zip:''},{label:'Idaerd',name:'Idaerd',zip:''},{label:'Idsegahuizum',name:'Idsegahuizum',zip:''},{label:'Idskenhuizen',name:'Idskenhuizen',zip:''},{label:'Ter Idzard',name:'Ter Idzard',zip:''},{label:'Idzega',name:'Idzega',zip:''},{label:'Iens',name:'Iens',zip:''},{label:'IJhorst',name:'IJhorst',zip:''},{label:'IJlst',name:'IJlst',zip:''},{label:'IJmuiden',name:'IJmuiden',zip:''},{label:'IJsselham',name:'IJsselham',zip:''},{label:'IJsselmuiden',name:'IJsselmuiden',zip:''},{label:'IJsselstein',name:'IJsselstein',zip:''},{label:'IJzendijke',name:'IJzendijke',zip:''},{label:'IJzendoorn',name:'IJzendoorn',zip:''},{label:'Den Ilp',name:'Den Ilp',zip:''},{label:'Ilpendam',name:'Ilpendam',zip:''},{label:'Indijk',name:'Indijk',zip:''},{label:'Ingber',name:'Ingber',zip:''},{label:'Ingelum',name:'Ingelum',zip:''},{label:'Ingen',name:'Ingen',zip:''},{label:'Itens',name:'Itens',zip:''},{label:'Ittervoort',name:'Ittervoort',zip:''},{label:'Jaarsveld',name:'Jaarsveld',zip:''},{label:'Jabeek',name:'Jabeek',zip:''},{label:'Jannum',name:'Jannum',zip:''},{label:'Jellum',name:'Jellum',zip:''},{label:'Jelsum',name:'Jelsum',zip:''},{label:'Jirnsum',name:'Jirnsum',zip:''},{label:'Jislum',name:'Jislum',zip:''},{label:'Jisp',name:'Jisp',zip:''},{label:'Jistrum',name:'Jistrum',zip:''},{label:'Jonkerslân',name:'Jonkerslân',zip:''},{label:'Jonkersvaart',name:'Jonkersvaart',zip:''},{label:'Joppe',name:'Joppe',zip:''},{label:'Jorwert',name:'Jorwert',zip:''},{label:'Joure',name:'Joure',zip:''},{label:'Jouswier',name:'Jouswier',zip:''},{label:'Jubbega',name:'Jubbega',zip:''},{label:'Julianadorp',name:'Julianadorp',zip:''},{label:'Jutrijp',name:'Jutrijp',zip:''},{label:'Kaag',name:'Kaag',zip:''},{label:'Kaard',name:'Kaard',zip:''},{label:'Kaatsheuvel',name:'Kaatsheuvel',zip:''},{label:'Kalenberg',name:'Kalenberg',zip:''},{label:'Kallenkote',name:'Kallenkote',zip:''},{label:'Kamerik',name:'Kamerik',zip:''},{label:'Kampen',name:'Kampen',zip:''},{label:'Kamperland',name:'Kamperland',zip:''},{label:'Kamperveen',name:'Kamperveen',zip:''},{label:'Kantens',name:'Kantens',zip:''},{label:'Kapel Avezaath (Tiel)',name:'Kapel Avezaath (Tiel)',zip:''},{label:'Kapel-Avezaath (Buren)',name:'Kapel-Avezaath (Buren)',zip:''},{label:'Kapelle',name:'Kapelle',zip:''},{label:'Kapellebrug',name:'Kapellebrug',zip:''},{label:'Katlijk',name:'Katlijk',zip:''},{label:'Kats',name:'Kats',zip:''},{label:'Kattendijke',name:'Kattendijke',zip:''},{label:'Katwijk (Katwijk)',name:'Katwijk (Katwijk)',zip:''},{label:'Katwijk (Cuijk)',name:'Katwijk (Cuijk)',zip:''},{label:'Katwoude',name:'Katwoude',zip:''},{label:'Kedichem',name:'Kedichem',zip:''},{label:'Keent',name:'Keent',zip:''},{label:'Keijenborg',name:'Keijenborg',zip:''},{label:'Kekerdom',name:'Kekerdom',zip:''},{label:'Kelpen-Oler',name:'Kelpen-Oler',zip:''},{label:'Kerk Avezaath (Tiel)',name:'Kerk Avezaath (Tiel)',zip:''},{label:'Kerk-Avezaath (Buren)',name:'Kerk-Avezaath (Buren)',zip:''},{label:'Kerkdriel',name:'Kerkdriel',zip:''},{label:'Kerkenveld',name:'Kerkenveld',zip:''},{label:'Kerkrade',name:'Kerkrade',zip:''},{label:'Kerkwerve',name:'Kerkwerve',zip:''},{label:'Kerkwijk',name:'Kerkwijk',zip:''},{label:'Kessel',name:'Kessel',zip:''},{label:'Kesteren',name:'Kesteren',zip:''},{label:'De Kiel',name:'De Kiel',zip:''},{label:'Kiel-Windeweer',name:'Kiel-Windeweer',zip:''},{label:'Kilder',name:'Kilder',zip:''},{label:'Kimswerd',name:'Kimswerd',zip:''},{label:'Kinderdijk',name:'Kinderdijk',zip:''},{label:'Kinnum',name:'Kinnum',zip:''},{label:'Klaaswaal',name:'Klaaswaal',zip:''},{label:'Klarenbeek (Apeldoorn)',name:'Klarenbeek (Apeldoorn)',zip:''},{label:'Klarenbeek (Voorst)',name:'Klarenbeek (Voorst)',zip:''},{label:'Klazienaveen',name:'Klazienaveen',zip:''},{label:'Klazienaveen-Noord',name:'Klazienaveen-Noord',zip:''},{label:'Klein Zundert',name:'Klein Zundert',zip:''},{label:'Klijndijk',name:'Klijndijk',zip:''},{label:'Klimmen',name:'Klimmen',zip:''},{label:'Kloetinge (Goes)',name:'Kloetinge (Goes)',zip:''},{label:'Kloetinge (Kapelle)',name:'Kloetinge (Kapelle)',zip:''},{label:'De Klomp',name:'De Klomp',zip:''},{label:'Klooster Lidlum',name:'Klooster Lidlum',zip:''},{label:'Kloosterburen',name:'Kloosterburen',zip:''},{label:'Kloosterhaar (Twenterand)',name:'Kloosterhaar (Twenterand)',zip:''},{label:'Kloosterhaar (Hardenberg)',name:'Kloosterhaar (Hardenberg)',zip:''},{label:'Kloosterzande',name:'Kloosterzande',zip:''},{label:'Klundert',name:'Klundert',zip:''},{label:'Knegsel',name:'Knegsel',zip:''},{label:'De Knipe',name:'De Knipe',zip:''},{label:'Koarnjum',name:'Koarnjum',zip:''},{label:'Kockengen',name:'Kockengen',zip:''},{label:'Koedijk (Langedijk)',name:'Koedijk (Langedijk)',zip:''},{label:'Koedijk (Alkmaar)',name:'Koedijk (Alkmaar)',zip:''},{label:'Koekange',name:'Koekange',zip:''},{label:'Koewacht',name:'Koewacht',zip:''},{label:'Kolderwolde',name:'Kolderwolde',zip:''},{label:'Kolham',name:'Kolham',zip:''},{label:'Kolhorn',name:'Kolhorn',zip:''},{label:'Kollum',name:'Kollum',zip:''},{label:'Kollumerpomp',name:'Kollumerpomp',zip:''},{label:'Kollumerzwaag',name:'Kollumerzwaag',zip:''},{label:'Kommerzijl',name:'Kommerzijl',zip:''},{label:'Koningsbosch',name:'Koningsbosch',zip:''},{label:'Koningslust',name:'Koningslust',zip:''},{label:'De Koog',name:'De Koog',zip:''},{label:'Koog aan de Zaan',name:'Koog aan de Zaan',zip:''},{label:'Kootstertille',name:'Kootstertille',zip:''},{label:'Kootwijk',name:'Kootwijk',zip:''},{label:'Kootwijkerbroek',name:'Kootwijkerbroek',zip:''},{label:'Kornhorn',name:'Kornhorn',zip:''},{label:'Kornwerderzand',name:'Kornwerderzand',zip:''},{label:'Kortehemmen',name:'Kortehemmen',zip:''},{label:'Kortenhoef',name:'Kortenhoef',zip:''},{label:'Kortgene',name:'Kortgene',zip:''},{label:'Koudekerk aan den Rijn',name:'Koudekerk aan den Rijn',zip:''},{label:'Koudekerke',name:'Koudekerke',zip:''},{label:'Koudum',name:'Koudum',zip:''},{label:'Koufurderrige',name:'Koufurderrige',zip:''},{label:'Krabbendijke',name:'Krabbendijke',zip:''},{label:'Kraggenburg',name:'Kraggenburg',zip:''},{label:'Kreileroord',name:'Kreileroord',zip:''},{label:'Krewerd',name:'Krewerd',zip:''},{label:'De Krim',name:'De Krim',zip:''},{label:'Krimpen aan de Lek',name:'Krimpen aan de Lek',zip:''},{label:'Krimpen aan den IJssel',name:'Krimpen aan den IJssel',zip:''},{label:'Kring van Dorth',name:'Kring van Dorth',zip:''},{label:'Krommenie',name:'Krommenie',zip:''},{label:'Kronenberg',name:'Kronenberg',zip:''},{label:'Kropswolde',name:'Kropswolde',zip:''},{label:'Kruiningen',name:'Kruiningen',zip:''},{label:'Kruisland',name:'Kruisland',zip:''},{label:'Kûbaard',name:'Kûbaard',zip:''},{label:'Kudelstaart',name:'Kudelstaart',zip:''},{label:'Kuinre',name:'Kuinre',zip:''},{label:'Kuitaart',name:'Kuitaart',zip:''},{label:'Kwadendamme',name:'Kwadendamme',zip:''},{label:'Kwadijk',name:'Kwadijk',zip:''},{label:'De Kwakel',name:'De Kwakel',zip:''},{label:'Kwintsheul',name:'Kwintsheul',zip:''},{label:'Laag Zuthem',name:'Laag Zuthem',zip:''},{label:'Laag-Keppel',name:'Laag-Keppel',zip:''},{label:'Laag-Soeren',name:'Laag-Soeren',zip:''},{label:'Lage Mierde',name:'Lage Mierde',zip:''},{label:'Lage Vuursche',name:'Lage Vuursche',zip:''},{label:'Lage Zwaluwe',name:'Lage Zwaluwe',zip:''},{label:'Lageland (Midden-Groningen)',name:'Lageland (Midden-Groningen)',zip:''},{label:'Lageland (Groningen)',name:'Lageland (Groningen)',zip:''},{label:'Lambertschaag',name:'Lambertschaag',zip:''},{label:'Lamswaarde',name:'Lamswaarde',zip:''},{label:'Landerum',name:'Landerum',zip:''},{label:'Landgraaf',name:'Landgraaf',zip:''},{label:'Landhorst',name:'Landhorst',zip:''},{label:'Landsmeer',name:'Landsmeer',zip:''},{label:'Langbroek',name:'Langbroek',zip:''},{label:'Langedijke',name:'Langedijke',zip:''},{label:'Langelille',name:'Langelille',zip:''},{label:'Langelo',name:'Langelo',zip:''},{label:'Langenboom',name:'Langenboom',zip:''},{label:'Langerak',name:'Langerak',zip:''},{label:'Langeveen',name:'Langeveen',zip:''},{label:'Langeweg',name:'Langeweg',zip:''},{label:'Langezwaag',name:'Langezwaag',zip:''},{label:'Langweer',name:'Langweer',zip:''},{label:'Laren (Lochem)',name:'Laren (Lochem)',zip:''},{label:'Laren (Laren)',name:'Laren (Laren)',zip:''},{label:'Lathum',name:'Lathum',zip:''},{label:'Lattrop-Breklenkamp',name:'Lattrop-Breklenkamp',zip:''},{label:'Lauwersoog',name:'Lauwersoog',zip:''},{label:'Lauwerzijl',name:'Lauwerzijl',zip:''},{label:'Ledeacker',name:'Ledeacker',zip:''},{label:'Leek',name:'Leek',zip:''},{label:'Leende',name:'Leende',zip:''},{label:'Leens',name:'Leens',zip:''},{label:'Leerbroek',name:'Leerbroek',zip:''},{label:'Leerdam',name:'Leerdam',zip:''},{label:'Leermens',name:'Leermens',zip:''},{label:'Leersum',name:'Leersum',zip:''},{label:'Leeuwarden',name:'Leeuwarden',zip:''},{label:'Legemeer',name:'Legemeer',zip:''},{label:'Leiden',name:'Leiden',zip:''},{label:'Leiderdorp',name:'Leiderdorp',zip:''},{label:'Leidschendam',name:'Leidschendam',zip:''},{label:'Leimuiden',name:'Leimuiden',zip:''},{label:'Leimuiderbrug',name:'Leimuiderbrug',zip:''},{label:'Lekkerkerk',name:'Lekkerkerk',zip:''},{label:'Lekkum',name:'Lekkum',zip:''},{label:'Lellens',name:'Lellens',zip:''},{label:'Lelystad',name:'Lelystad',zip:''},{label:'Lemele',name:'Lemele',zip:''},{label:'Lemelerveld',name:'Lemelerveld',zip:''},{label:'Lemiers',name:'Lemiers',zip:''},{label:'Lemmer',name:'Lemmer',zip:''},{label:'Lengel',name:'Lengel',zip:''},{label:'Lent',name:'Lent',zip:''},{label:'Leons',name:'Leons',zip:''},{label:'Lepelstraat',name:'Lepelstraat',zip:''},{label:'Lettelbert',name:'Lettelbert',zip:''},{label:'Lettele',name:'Lettele',zip:''},{label:'Leunen',name:'Leunen',zip:''},{label:'Leur',name:'Leur',zip:''},{label:'Leusden',name:'Leusden',zip:''},{label:'Leuth',name:'Leuth',zip:''},{label:'Leutingewolde',name:'Leutingewolde',zip:''},{label:'Leuvenheim',name:'Leuvenheim',zip:''},{label:'Leveroy',name:'Leveroy',zip:''},{label:'Lewedorp',name:'Lewedorp',zip:''},{label:'Lexmond',name:'Lexmond',zip:''},{label:'Lichtaard',name:'Lichtaard',zip:''},{label:'Lichtenvoorde',name:'Lichtenvoorde',zip:''},{label:'Liempde',name:'Liempde',zip:''},{label:'Lienden',name:'Lienden',zip:''},{label:'De Lier',name:'De Lier',zip:''},{label:'Lierderholthuis',name:'Lierderholthuis',zip:''},{label:'Lieren',name:'Lieren',zip:''},{label:'Lierop',name:'Lierop',zip:''},{label:'Lies',name:'Lies',zip:''},{label:'Lieshout',name:'Lieshout',zip:''},{label:'Liessel',name:'Liessel',zip:''},{label:'Lievelde',name:'Lievelde',zip:''},{label:'Lieveren',name:'Lieveren',zip:''},{label:'Lijnden',name:'Lijnden',zip:''},{label:'Limbricht',name:'Limbricht',zip:''},{label:'Limmen',name:'Limmen',zip:''},{label:'Linde',name:'Linde',zip:''},{label:'Linden',name:'Linden',zip:''},{label:'Linne',name:'Linne',zip:''},{label:'Linschoten',name:'Linschoten',zip:''},{label:'Lioessens',name:'Lioessens',zip:''},{label:'Lippenhuizen',name:'Lippenhuizen',zip:''},{label:'Lisse',name:'Lisse',zip:''},{label:'Lisserbroek',name:'Lisserbroek',zip:''},{label:'Lith',name:'Lith',zip:''},{label:'Lithoijen',name:'Lithoijen',zip:''},{label:'Lobith',name:'Lobith',zip:''},{label:'Lochem',name:'Lochem',zip:''},{label:'Loenen',name:'Loenen',zip:''},{label:'Loenen aan de Vecht',name:'Loenen aan de Vecht',zip:''},{label:'Loenersloot',name:'Loenersloot',zip:''},{label:'Loënga',name:'Loënga',zip:''},{label:'Loerbeek',name:'Loerbeek',zip:''},{label:'Lollum',name:'Lollum',zip:''},{label:'Lomm',name:'Lomm',zip:''},{label:'Longerhouw',name:'Longerhouw',zip:''},{label:'Loo Gld (Lingewaard)',name:'Loo Gld (Lingewaard)',zip:''},{label:'Loo Gld (Duiven)',name:'Loo Gld (Duiven)',zip:''},{label:'\'t Loo Oldebroek',name:'\'t Loo Oldebroek',zip:''},{label:'Loon',name:'Loon',zip:''},{label:'Loon op Zand',name:'Loon op Zand',zip:''},{label:'Loosbroek',name:'Loosbroek',zip:''},{label:'Loosdrecht',name:'Loosdrecht',zip:''},{label:'Loozen',name:'Loozen',zip:''},{label:'Lopik',name:'Lopik',zip:''},{label:'Lopikerkapel',name:'Lopikerkapel',zip:''},{label:'Loppersum',name:'Loppersum',zip:''},{label:'Losdorp',name:'Losdorp',zip:''},{label:'Losser',name:'Losser',zip:''},{label:'Lottum',name:'Lottum',zip:''},{label:'Lucaswolde',name:'Lucaswolde',zip:''},{label:'Luddeweer',name:'Luddeweer',zip:''},{label:'Luinjeberd',name:'Luinjeberd',zip:''},{label:'Lunteren',name:'Lunteren',zip:''},{label:'Lutjebroek',name:'Lutjebroek',zip:''},{label:'Lutjegast',name:'Lutjegast',zip:''},{label:'Lutjewinkel',name:'Lutjewinkel',zip:''},{label:'de Lutte',name:'de Lutte',zip:''},{label:'Luttelgeest',name:'Luttelgeest',zip:''},{label:'Lutten',name:'Lutten',zip:''},{label:'Luttenberg',name:'Luttenberg',zip:''},{label:'Luxwoude',name:'Luxwoude',zip:''},{label:'Luyksgestel',name:'Luyksgestel',zip:''},{label:'Lytsewierrum',name:'Lytsewierrum',zip:''},{label:'Maarheeze',name:'Maarheeze',zip:''},{label:'Maarn',name:'Maarn',zip:''},{label:'Maarsbergen',name:'Maarsbergen',zip:''},{label:'Maarssen',name:'Maarssen',zip:''},{label:'Maartensdijk',name:'Maartensdijk',zip:''},{label:'Maasbommel',name:'Maasbommel',zip:''},{label:'Maasbracht',name:'Maasbracht',zip:''},{label:'Maasbree',name:'Maasbree',zip:''},{label:'Maasdam',name:'Maasdam',zip:''},{label:'Maasdijk',name:'Maasdijk',zip:''},{label:'Maashees',name:'Maashees',zip:''},{label:'Maasland',name:'Maasland',zip:''},{label:'Maassluis',name:'Maassluis',zip:''},{label:'Maastricht',name:'Maastricht',zip:''},{label:'Maastricht-Airport',name:'Maastricht-Airport',zip:''},{label:'Maasvlakte Rotterdam',name:'Maasvlakte Rotterdam',zip:''},{label:'Macharen',name:'Macharen',zip:''},{label:'Made',name:'Made',zip:''},{label:'Makkinga',name:'Makkinga',zip:''},{label:'Makkum',name:'Makkum',zip:''},{label:'Malden',name:'Malden',zip:''},{label:'Mander',name:'Mander',zip:''},{label:'Manderveen',name:'Manderveen',zip:''},{label:'Mantgum',name:'Mantgum',zip:''},{label:'Mantinge',name:'Mantinge',zip:''},{label:'Maren-Kessel',name:'Maren-Kessel',zip:''},{label:'Margraten',name:'Margraten',zip:''},{label:'Maria Hoop',name:'Maria Hoop',zip:''},{label:'Mariahout',name:'Mariahout',zip:''},{label:'Mariaparochie',name:'Mariaparochie',zip:''},{label:'Mariënberg',name:'Mariënberg',zip:''},{label:'Mariënheem',name:'Mariënheem',zip:''},{label:'Mariënvelde',name:'Mariënvelde',zip:''},{label:'Marijenkampen',name:'Marijenkampen',zip:''},{label:'Markelo',name:'Markelo',zip:''},{label:'Marken',name:'Marken',zip:''},{label:'Markenbinnen',name:'Markenbinnen',zip:''},{label:'Marknesse',name:'Marknesse',zip:''},{label:'Marle',name:'Marle',zip:''},{label:'Marrum',name:'Marrum',zip:''},{label:'Marsum',name:'Marsum',zip:''},{label:'Marum',name:'Marum',zip:''},{label:'Marwijksoord',name:'Marwijksoord',zip:''},{label:'Mastenbroek (Zwartewaterland)',name:'Mastenbroek (Zwartewaterland)',zip:''},{label:'Mastenbroek (Kampen)',name:'Mastenbroek (Kampen)',zip:''},{label:'Matsloot',name:'Matsloot',zip:''},{label:'Maurik',name:'Maurik',zip:''},{label:'Mechelen',name:'Mechelen',zip:''},{label:'Medemblik',name:'Medemblik',zip:''},{label:'Meeden',name:'Meeden',zip:''},{label:'Meedhuizen',name:'Meedhuizen',zip:''},{label:'Meerkerk',name:'Meerkerk',zip:''},{label:'Meerlo',name:'Meerlo',zip:''},{label:'De Meern',name:'De Meern',zip:''},{label:'Meerssen',name:'Meerssen',zip:''},{label:'Meerstad',name:'Meerstad',zip:''},{label:'Meeuwen',name:'Meeuwen',zip:''},{label:'Megchelen',name:'Megchelen',zip:''},{label:'Megen',name:'Megen',zip:''},{label:'Meijel',name:'Meijel',zip:''},{label:'Melderslo',name:'Melderslo',zip:''},{label:'Melick',name:'Melick',zip:''},{label:'Meliskerke',name:'Meliskerke',zip:''},{label:'Melissant',name:'Melissant',zip:''},{label:'Menaam',name:'Menaam',zip:''},{label:'Mensingeweer',name:'Mensingeweer',zip:''},{label:'Meppel',name:'Meppel',zip:''},{label:'Meppen',name:'Meppen',zip:''},{label:'Merkelbeek',name:'Merkelbeek',zip:''},{label:'Merselo',name:'Merselo',zip:''},{label:'Meteren',name:'Meteren',zip:''},{label:'Meterik',name:'Meterik',zip:''},{label:'Metslawier',name:'Metslawier',zip:''},{label:'Mheer',name:'Mheer',zip:''},{label:'Middelaar',name:'Middelaar',zip:''},{label:'Middelburg',name:'Middelburg',zip:''},{label:'Middelharnis',name:'Middelharnis',zip:''},{label:'Middelie',name:'Middelie',zip:''},{label:'Middelstum',name:'Middelstum',zip:''},{label:'Middenbeemster',name:'Middenbeemster',zip:''},{label:'Middenmeer',name:'Middenmeer',zip:''},{label:'Midlaren',name:'Midlaren',zip:''},{label:'Midlum',name:'Midlum',zip:''},{label:'Midsland',name:'Midsland',zip:''},{label:'Midwolda',name:'Midwolda',zip:''},{label:'Midwolde',name:'Midwolde',zip:''},{label:'Midwoud',name:'Midwoud',zip:''},{label:'Miedum',name:'Miedum',zip:''},{label:'Mierlo',name:'Mierlo',zip:''},{label:'Mijdrecht',name:'Mijdrecht',zip:''},{label:'Mijnsheerenland',name:'Mijnsheerenland',zip:''},{label:'Mildam',name:'Mildam',zip:''},{label:'Milheeze',name:'Milheeze',zip:''},{label:'Mill',name:'Mill',zip:''},{label:'Millingen aan de Rijn',name:'Millingen aan de Rijn',zip:''},{label:'Milsbeek',name:'Milsbeek',zip:''},{label:'Minnertsga',name:'Minnertsga',zip:''},{label:'Mirns',name:'Mirns',zip:''},{label:'Moddergat',name:'Moddergat',zip:''},{label:'De Moer',name:'De Moer',zip:''},{label:'Moerdijk',name:'Moerdijk',zip:''},{label:'Moergestel',name:'Moergestel',zip:''},{label:'Moerkapelle',name:'Moerkapelle',zip:''},{label:'Moerstraten',name:'Moerstraten',zip:''},{label:'Molenaarsgraaf',name:'Molenaarsgraaf',zip:''},{label:'Molenhoek',name:'Molenhoek',zip:''},{label:'Molenschot',name:'Molenschot',zip:''},{label:'Molkwerum',name:'Molkwerum',zip:''},{label:'Monnickendam',name:'Monnickendam',zip:''},{label:'Monster',name:'Monster',zip:''},{label:'Montfoort',name:'Montfoort',zip:''},{label:'Montfort',name:'Montfort',zip:''},{label:'Mook',name:'Mook',zip:''},{label:'Mookhoek',name:'Mookhoek',zip:''},{label:'Moordrecht',name:'Moordrecht',zip:''},{label:'Moorveld',name:'Moorveld',zip:''},{label:'Morra',name:'Morra',zip:''},{label:'De Mortel',name:'De Mortel',zip:''},{label:'Muiden',name:'Muiden',zip:''},{label:'Muiderberg',name:'Muiderberg',zip:''},{label:'Mûnein',name:'Mûnein',zip:''},{label:'Munnekeburen',name:'Munnekeburen',zip:''},{label:'Munnekezijl',name:'Munnekezijl',zip:''},{label:'Munstergeleen',name:'Munstergeleen',zip:''},{label:'Muntendam',name:'Muntendam',zip:''},{label:'Mussel',name:'Mussel',zip:''},{label:'Musselkanaal',name:'Musselkanaal',zip:''},{label:'Naaldwijk',name:'Naaldwijk',zip:''},{label:'Naarden',name:'Naarden',zip:''},{label:'Nagele',name:'Nagele',zip:''},{label:'Nederasselt',name:'Nederasselt',zip:''},{label:'Nederhemert',name:'Nederhemert',zip:''},{label:'Nederhorst den Berg',name:'Nederhorst den Berg',zip:''},{label:'Nederland',name:'Nederland',zip:''},{label:'Nederweert',name:'Nederweert',zip:''},{label:'Nederweert-Eind',name:'Nederweert-Eind',zip:''},{label:'Neede',name:'Neede',zip:''},{label:'Neer',name:'Neer',zip:''},{label:'Neerijnen',name:'Neerijnen',zip:''},{label:'Neeritter',name:'Neeritter',zip:''},{label:'Neerkant',name:'Neerkant',zip:''},{label:'Neerlangel',name:'Neerlangel',zip:''},{label:'Neerloon',name:'Neerloon',zip:''},{label:'Nes (Heerenveen)',name:'Nes (Heerenveen)',zip:''},{label:'Nes (Ameland)',name:'Nes (Ameland)',zip:''},{label:'Nes (Dongeradeel)',name:'Nes (Dongeradeel)',zip:''},{label:'Netersel',name:'Netersel',zip:''},{label:'Netterden',name:'Netterden',zip:''},{label:'Niawier',name:'Niawier',zip:''},{label:'Nibbixwoud',name:'Nibbixwoud',zip:''},{label:'Niebert',name:'Niebert',zip:''},{label:'Niehove',name:'Niehove',zip:''},{label:'Niekerk (Grootegast)',name:'Niekerk (Grootegast)',zip:''},{label:'Niekerk (De Marne)',name:'Niekerk (De Marne)',zip:''},{label:'Nietap',name:'Nietap',zip:''},{label:'Nieuw Annerveen',name:'Nieuw Annerveen',zip:''},{label:'Nieuw Beerta',name:'Nieuw Beerta',zip:''},{label:'Nieuw- en Sint Joosland',name:'Nieuw- en Sint Joosland',zip:''},{label:'Nieuw Heeten',name:'Nieuw Heeten',zip:''},{label:'Nieuw Namen',name:'Nieuw Namen',zip:''},{label:'Nieuw Scheemda',name:'Nieuw Scheemda',zip:''},{label:'Nieuwaal',name:'Nieuwaal',zip:''},{label:'Nieuw-Amsterdam',name:'Nieuw-Amsterdam',zip:''},{label:'Nieuw-Balinge',name:'Nieuw-Balinge',zip:''},{label:'Nieuw-Beijerland',name:'Nieuw-Beijerland',zip:''},{label:'Nieuw-Buinen',name:'Nieuw-Buinen',zip:''},{label:'Nieuw-Dordrecht',name:'Nieuw-Dordrecht',zip:''},{label:'Nieuwdorp',name:'Nieuwdorp',zip:''},{label:'Nieuwe Niedorp',name:'Nieuwe Niedorp',zip:''},{label:'Nieuwe Pekela',name:'Nieuwe Pekela',zip:''},{label:'Nieuwe Wetering',name:'Nieuwe Wetering',zip:''},{label:'Nieuwebrug',name:'Nieuwebrug',zip:''},{label:'Nieuwediep',name:'Nieuwediep',zip:''},{label:'Nieuwegein',name:'Nieuwegein',zip:''},{label:'Nieuwehorne',name:'Nieuwehorne',zip:''},{label:'Nieuwendijk',name:'Nieuwendijk',zip:''},{label:'Nieuwer Ter Aa',name:'Nieuwer Ter Aa',zip:''},{label:'Nieuwerbrug aan den Rijn',name:'Nieuwerbrug aan den Rijn',zip:''},{label:'Nieuwerkerk',name:'Nieuwerkerk',zip:''},{label:'Nieuwerkerk aan den IJssel',name:'Nieuwerkerk aan den IJssel',zip:''},{label:'Nieuweroord (Hoogeveen)',name:'Nieuweroord (Hoogeveen)',zip:''},{label:'Nieuweroord (Midden-Drenthe)',name:'Nieuweroord (Midden-Drenthe)',zip:''},{label:'Nieuwersluis',name:'Nieuwersluis',zip:''},{label:'Nieuweschoot',name:'Nieuweschoot',zip:''},{label:'Nieuwe-Tonge',name:'Nieuwe-Tonge',zip:''},{label:'Nieuwkoop',name:'Nieuwkoop',zip:''},{label:'Nieuwkuijk',name:'Nieuwkuijk',zip:''},{label:'Nieuwland',name:'Nieuwland',zip:''},{label:'Nieuwlande',name:'Nieuwlande',zip:''},{label:'Nieuwlande Coevorden',name:'Nieuwlande Coevorden',zip:''},{label:'Nieuw-Lekkerland',name:'Nieuw-Lekkerland',zip:''},{label:'Nieuwleusen',name:'Nieuwleusen',zip:''},{label:'Nieuwolda',name:'Nieuwolda',zip:''},{label:'Nieuwpoort',name:'Nieuwpoort',zip:''},{label:'Nieuw-Roden',name:'Nieuw-Roden',zip:''},{label:'Nieuw-Schoonebeek',name:'Nieuw-Schoonebeek',zip:''},{label:'Nieuwstadt',name:'Nieuwstadt',zip:''},{label:'Nieuwveen',name:'Nieuwveen',zip:''},{label:'Nieuw-Vennep',name:'Nieuw-Vennep',zip:''},{label:'Nieuwvliet',name:'Nieuwvliet',zip:''},{label:'Nieuw-Vossemeer',name:'Nieuw-Vossemeer',zip:''},{label:'Nieuw-Weerdinge',name:'Nieuw-Weerdinge',zip:''},{label:'Niezijl',name:'Niezijl',zip:''},{label:'Niftrik',name:'Niftrik',zip:''},{label:'Nigtevecht',name:'Nigtevecht',zip:''},{label:'Nij Altoenae',name:'Nij Altoenae',zip:''},{label:'Nij Beets',name:'Nij Beets',zip:''},{label:'Nijbroek',name:'Nijbroek',zip:''},{label:'Nijeberkoop',name:'Nijeberkoop',zip:''},{label:'Nijega',name:'Nijega',zip:''},{label:'Nijehaske',name:'Nijehaske',zip:''},{label:'Nijeholtpade',name:'Nijeholtpade',zip:''},{label:'Nijeholtwolde',name:'Nijeholtwolde',zip:''},{label:'Nijelamer',name:'Nijelamer',zip:''},{label:'Nijemirdum',name:'Nijemirdum',zip:''},{label:'Nijensleek',name:'Nijensleek',zip:''},{label:'Nijetrijne',name:'Nijetrijne',zip:''},{label:'Nijeveen',name:'Nijeveen',zip:''},{label:'Nijhuizum',name:'Nijhuizum',zip:''},{label:'Nijkerk',name:'Nijkerk',zip:''},{label:'Nijkerkerveen',name:'Nijkerkerveen',zip:''},{label:'Nijland',name:'Nijland',zip:''},{label:'Nijlande',name:'Nijlande',zip:''},{label:'Nijmegen',name:'Nijmegen',zip:''},{label:'Nijverdal',name:'Nijverdal',zip:''},{label:'Nispen',name:'Nispen',zip:''},{label:'Nisse',name:'Nisse',zip:''},{label:'Nistelrode',name:'Nistelrode',zip:''},{label:'Noardburgum',name:'Noardburgum',zip:''},{label:'Nooitgedacht',name:'Nooitgedacht',zip:''},{label:'Noorbeek',name:'Noorbeek',zip:''},{label:'Noordbeemster',name:'Noordbeemster',zip:''},{label:'Noordbroek',name:'Noordbroek',zip:''},{label:'Noordeinde (Alkmaar)',name:'Noordeinde (Alkmaar)',zip:''},{label:'Noordeinde (Oldebroek)',name:'Noordeinde (Oldebroek)',zip:''},{label:'Noordeloos',name:'Noordeloos',zip:''},{label:'Noorden',name:'Noorden',zip:''},{label:'Noordgouwe',name:'Noordgouwe',zip:''},{label:'Noordhoek',name:'Noordhoek',zip:''},{label:'Noordhorn',name:'Noordhorn',zip:''},{label:'Noordlaren',name:'Noordlaren',zip:''},{label:'Noord-Scharwoude',name:'Noord-Scharwoude',zip:''},{label:'Noordscheschut',name:'Noordscheschut',zip:''},{label:'Noord-Sleen',name:'Noord-Sleen',zip:''},{label:'Noordwelle',name:'Noordwelle',zip:''},{label:'Noordwijk (Marum)',name:'Noordwijk (Marum)',zip:''},{label:'Noordwijk (Noordwijk)',name:'Noordwijk (Noordwijk)',zip:''},{label:'Noordwijkerhout',name:'Noordwijkerhout',zip:''},{label:'Noordwolde (Bedum)',name:'Noordwolde (Bedum)',zip:''},{label:'Noordwolde (Weststellingwerf)',name:'Noordwolde (Weststellingwerf)',zip:''},{label:'Nootdorp',name:'Nootdorp',zip:''},{label:'Norg',name:'Norg',zip:''},{label:'Notter',name:'Notter',zip:''},{label:'Nuenen',name:'Nuenen',zip:''},{label:'Nuis',name:'Nuis',zip:''},{label:'Nuland',name:'Nuland',zip:''},{label:'Numansdorp',name:'Numansdorp',zip:''},{label:'Nunhem',name:'Nunhem',zip:''},{label:'Nunspeet',name:'Nunspeet',zip:''},{label:'Nuth',name:'Nuth',zip:''},{label:'Nutter',name:'Nutter',zip:''},{label:'Obbicht',name:'Obbicht',zip:''},{label:'Obdam',name:'Obdam',zip:''},{label:'Ochten',name:'Ochten',zip:''},{label:'Odijk',name:'Odijk',zip:''},{label:'Odiliapeel',name:'Odiliapeel',zip:''},{label:'Odoorn',name:'Odoorn',zip:''},{label:'Odoornerveen',name:'Odoornerveen',zip:''},{label:'Oeffelt',name:'Oeffelt',zip:''},{label:'Oegstgeest',name:'Oegstgeest',zip:''},{label:'Oene',name:'Oene',zip:''},{label:'Oentsjerk',name:'Oentsjerk',zip:''},{label:'Den Oever',name:'Den Oever',zip:''},{label:'Offingawier',name:'Offingawier',zip:''},{label:'Ohé en Laak',name:'Ohé en Laak',zip:''},{label:'Oijen',name:'Oijen',zip:''},{label:'Oirlo',name:'Oirlo',zip:''},{label:'Oirsbeek',name:'Oirsbeek',zip:''},{label:'Oirschot',name:'Oirschot',zip:''},{label:'Oisterwijk',name:'Oisterwijk',zip:''},{label:'Okkenbroek',name:'Okkenbroek',zip:''},{label:'Olburgen',name:'Olburgen',zip:''},{label:'Oldeberkoop',name:'Oldeberkoop',zip:''},{label:'Oldebroek',name:'Oldebroek',zip:''},{label:'Oldeholtpade',name:'Oldeholtpade',zip:''},{label:'Oldeholtwolde',name:'Oldeholtwolde',zip:''},{label:'Oldehove',name:'Oldehove',zip:''},{label:'Oldekerk',name:'Oldekerk',zip:''},{label:'Oldelamer',name:'Oldelamer',zip:''},{label:'Oldemarkt',name:'Oldemarkt',zip:''},{label:'Oldenzaal',name:'Oldenzaal',zip:''},{label:'Oldenzijl',name:'Oldenzijl',zip:''},{label:'Oldeouwer',name:'Oldeouwer',zip:''},{label:'Oldetrijne',name:'Oldetrijne',zip:''},{label:'Olst',name:'Olst',zip:''},{label:'Olterterp',name:'Olterterp',zip:''},{label:'Ommel',name:'Ommel',zip:''},{label:'Ommen',name:'Ommen',zip:''},{label:'Ommeren',name:'Ommeren',zip:''},{label:'Onderdendam',name:'Onderdendam',zip:''},{label:'Onna',name:'Onna',zip:''},{label:'Onnen',name:'Onnen',zip:''},{label:'Onstwedde',name:'Onstwedde',zip:''},{label:'Ooij',name:'Ooij',zip:''},{label:'Ooltgensplaat',name:'Ooltgensplaat',zip:''},{label:'Oost West en Middelbeers',name:'Oost West en Middelbeers',zip:''},{label:'Oostburg',name:'Oostburg',zip:''},{label:'Oostdijk',name:'Oostdijk',zip:''},{label:'Oosteind',name:'Oosteind',zip:''},{label:'Oosterbeek',name:'Oosterbeek',zip:''},{label:'Oosterbierum',name:'Oosterbierum',zip:''},{label:'Oosterblokker',name:'Oosterblokker',zip:''},{label:'Oosterend (Terschelling)',name:'Oosterend (Terschelling)',zip:''},{label:'Oosterend (Texel)',name:'Oosterend (Texel)',zip:''},{label:'Oosterhesselen',name:'Oosterhesselen',zip:''},{label:'Oosterhout (Overbetuwe)',name:'Oosterhout (Overbetuwe)',zip:''},{label:'Oosterhout (Oosterhout)',name:'Oosterhout (Oosterhout)',zip:''},{label:'Oosterland',name:'Oosterland',zip:''},{label:'Oosterleek',name:'Oosterleek',zip:''},{label:'Oosternieland',name:'Oosternieland',zip:''},{label:'Oosternijkerk',name:'Oosternijkerk',zip:''},{label:'Oosterstreek',name:'Oosterstreek',zip:''},{label:'Oosterwijk',name:'Oosterwijk',zip:''},{label:'Oosterwijtwerd',name:'Oosterwijtwerd',zip:''},{label:'Oosterwolde (Ooststellingwerf)',name:'Oosterwolde (Ooststellingwerf)',zip:''},{label:'Oosterwolde (Oldebroek)',name:'Oosterwolde (Oldebroek)',zip:''},{label:'Oosterzee',name:'Oosterzee',zip:''},{label:'Oost-Graftdijk',name:'Oost-Graftdijk',zip:''},{label:'Oosthem',name:'Oosthem',zip:''},{label:'Oosthuizen',name:'Oosthuizen',zip:''},{label:'Oostkapelle',name:'Oostkapelle',zip:''},{label:'Oostknollendam',name:'Oostknollendam',zip:''},{label:'Oostrum (Venray)',name:'Oostrum (Venray)',zip:''},{label:'Oostrum (Dongeradeel)',name:'Oostrum (Dongeradeel)',zip:''},{label:'Oost-Souburg',name:'Oost-Souburg',zip:''},{label:'Oostvoorne',name:'Oostvoorne',zip:''},{label:'Oostwold (Oldambt)',name:'Oostwold (Oldambt)',zip:''},{label:'Oostwold (Leek)',name:'Oostwold (Leek)',zip:''},{label:'Oostwoud',name:'Oostwoud',zip:''},{label:'Oostzaan',name:'Oostzaan',zip:''},{label:'Ootmarsum',name:'Ootmarsum',zip:''},{label:'Opeinde',name:'Opeinde',zip:''},{label:'Opende',name:'Opende',zip:''},{label:'Ophemert',name:'Ophemert',zip:''},{label:'Opheusden',name:'Opheusden',zip:''},{label:'Opijnen',name:'Opijnen',zip:''},{label:'Oploo',name:'Oploo',zip:''},{label:'Opmeer',name:'Opmeer',zip:''},{label:'Oppenhuizen',name:'Oppenhuizen',zip:''},{label:'Opperdoes',name:'Opperdoes',zip:''},{label:'Oranje',name:'Oranje',zip:''},{label:'Oranjewoud',name:'Oranjewoud',zip:''},{label:'Orvelte',name:'Orvelte',zip:''},{label:'Ospel',name:'Ospel',zip:''},{label:'Oss',name:'Oss',zip:''},{label:'Ossendrecht',name:'Ossendrecht',zip:''},{label:'Ossenisse',name:'Ossenisse',zip:''},{label:'Ossenwaard',name:'Ossenwaard',zip:''},{label:'Ossenzijl',name:'Ossenzijl',zip:''},{label:'Oterleek',name:'Oterleek',zip:''},{label:'Otterlo',name:'Otterlo',zip:''},{label:'Ottersum',name:'Ottersum',zip:''},{label:'Ottoland',name:'Ottoland',zip:''},{label:'Oud Ade',name:'Oud Ade',zip:''},{label:'Oud Annerveen',name:'Oud Annerveen',zip:''},{label:'Oud Gastel',name:'Oud Gastel',zip:''},{label:'Oud Ootmarsum',name:'Oud Ootmarsum',zip:''},{label:'Oud Zuilen',name:'Oud Zuilen',zip:''},{label:'Oud-Alblas',name:'Oud-Alblas',zip:''},{label:'Oud-Beijerland',name:'Oud-Beijerland',zip:''},{label:'Ouddorp',name:'Ouddorp',zip:''},{label:'Oude Meer',name:'Oude Meer',zip:''},{label:'Oude Niedorp',name:'Oude Niedorp',zip:''},{label:'Oude Pekela',name:'Oude Pekela',zip:''},{label:'Oude Wetering',name:'Oude Wetering',zip:''},{label:'Oude Willem',name:'Oude Willem',zip:''},{label:'Oudebildtzijl',name:'Oudebildtzijl',zip:''},{label:'Oudega (Smallingerland)',name:'Oudega (Smallingerland)',zip:''},{label:'Oudega (De Fryske Marren)',name:'Oudega (De Fryske Marren)',zip:''},{label:'Oudega (Súdwest-Fryslân)',name:'Oudega (Súdwest-Fryslân)',zip:''},{label:'Oudehaske',name:'Oudehaske',zip:''},{label:'Oudehorne',name:'Oudehorne',zip:''},{label:'Oudelande',name:'Oudelande',zip:''},{label:'Oudemirdum',name:'Oudemirdum',zip:''},{label:'Oudemolen (Moerdijk)',name:'Oudemolen (Moerdijk)',zip:''},{label:'Oudemolen (Tynaarlo)',name:'Oudemolen (Tynaarlo)',zip:''},{label:'Oudenbosch',name:'Oudenbosch',zip:''},{label:'Oudendijk',name:'Oudendijk',zip:''},{label:'Oudenhoorn',name:'Oudenhoorn',zip:''},{label:'Ouderkerk aan de Amstel',name:'Ouderkerk aan de Amstel',zip:''},{label:'Ouderkerk aan den IJssel',name:'Ouderkerk aan den IJssel',zip:''},{label:'Oudeschans',name:'Oudeschans',zip:''},{label:'Oudeschild',name:'Oudeschild',zip:''},{label:'Oudeschip',name:'Oudeschip',zip:''},{label:'Oudeschoot',name:'Oudeschoot',zip:''},{label:'Oudesluis',name:'Oudesluis',zip:''},{label:'Oude-Tonge',name:'Oude-Tonge',zip:''},{label:'Oudewater',name:'Oudewater',zip:''},{label:'Oudezijl',name:'Oudezijl',zip:''},{label:'Oudheusden',name:'Oudheusden',zip:''},{label:'Oudkarspel (Schagen)',name:'Oudkarspel (Schagen)',zip:''},{label:'Oudkarspel (Langedijk)',name:'Oudkarspel (Langedijk)',zip:''},{label:'Oudorp',name:'Oudorp',zip:''},{label:'Oud-Vossemeer',name:'Oud-Vossemeer',zip:''},{label:'Oudwoude',name:'Oudwoude',zip:''},{label:'Ouwerkerk',name:'Ouwerkerk',zip:''},{label:'Ouwsterhaule',name:'Ouwsterhaule',zip:''},{label:'Ouwster-Nijega',name:'Ouwster-Nijega',zip:''},{label:'Overasselt',name:'Overasselt',zip:''},{label:'Overberg',name:'Overberg',zip:''},{label:'Overdinkel',name:'Overdinkel',zip:''},{label:'Overlangel',name:'Overlangel',zip:''},{label:'Overloon',name:'Overloon',zip:''},{label:'Overschild',name:'Overschild',zip:''},{label:'Overslag',name:'Overslag',zip:''},{label:'Overveen',name:'Overveen',zip:''},{label:'Ovezande',name:'Ovezande',zip:''},{label:'Paasloo',name:'Paasloo',zip:''},{label:'Paesens',name:'Paesens',zip:''},{label:'Pannerden',name:'Pannerden',zip:''},{label:'Panningen',name:'Panningen',zip:''},{label:'Papekop',name:'Papekop',zip:''},{label:'Papendrecht',name:'Papendrecht',zip:''},{label:'Papenhoven',name:'Papenhoven',zip:''},{label:'Papenvoort',name:'Papenvoort',zip:''},{label:'Parrega',name:'Parrega',zip:''},{label:'Paterswolde',name:'Paterswolde',zip:''},{label:'Peest',name:'Peest',zip:''},{label:'Peins',name:'Peins',zip:''},{label:'Peize',name:'Peize',zip:''},{label:'Peperga',name:'Peperga',zip:''},{label:'Pernis Rotterdam',name:'Pernis Rotterdam',zip:''},{label:'Persingen',name:'Persingen',zip:''},{label:'Pesse (Westerveld)',name:'Pesse (Westerveld)',zip:''},{label:'Pesse (Hoogeveen)',name:'Pesse (Hoogeveen)',zip:''},{label:'Petten',name:'Petten',zip:''},{label:'Philippine',name:'Philippine',zip:''},{label:'Piaam',name:'Piaam',zip:''},{label:'Piershil',name:'Piershil',zip:''},{label:'Pieterburen',name:'Pieterburen',zip:''},{label:'Pietersbierum',name:'Pietersbierum',zip:''},{label:'Pieterzijl',name:'Pieterzijl',zip:''},{label:'Pijnacker',name:'Pijnacker',zip:''},{label:'Pingjum',name:'Pingjum',zip:''},{label:'Plasmolen',name:'Plasmolen',zip:''},{label:'Poederoijen',name:'Poederoijen',zip:''},{label:'Poeldijk',name:'Poeldijk',zip:''},{label:'De Pol',name:'De Pol',zip:''},{label:'Polsbroek',name:'Polsbroek',zip:''},{label:'Poortugaal',name:'Poortugaal',zip:''},{label:'Poortvliet',name:'Poortvliet',zip:''},{label:'Poppenwier',name:'Poppenwier',zip:''},{label:'Ten Post',name:'Ten Post',zip:''},{label:'Posterholt',name:'Posterholt',zip:''},{label:'Prinsenbeek',name:'Prinsenbeek',zip:''},{label:'Puiflijk',name:'Puiflijk',zip:''},{label:'De Punt',name:'De Punt',zip:''},{label:'Punthorst',name:'Punthorst',zip:''},{label:'Purmer (Edam-Volendam)',name:'Purmer (Edam-Volendam)',zip:''},{label:'Purmer (Waterland)',name:'Purmer (Waterland)',zip:''},{label:'Purmerend',name:'Purmerend',zip:''},{label:'Purmerland',name:'Purmerland',zip:''},{label:'Puth',name:'Puth',zip:''},{label:'Putte',name:'Putte',zip:''},{label:'Putten',name:'Putten',zip:''},{label:'Puttershoek',name:'Puttershoek',zip:''},{label:'Raalte',name:'Raalte',zip:''},{label:'Raamsdonk',name:'Raamsdonk',zip:''},{label:'Raamsdonksveer',name:'Raamsdonksveer',zip:''},{label:'Raard',name:'Raard',zip:''},{label:'Radewijk',name:'Radewijk',zip:''},{label:'Radio Kootwijk',name:'Radio Kootwijk',zip:''},{label:'Raerd',name:'Raerd',zip:''},{label:'Randwijk',name:'Randwijk',zip:''},{label:'Ransdaal',name:'Ransdaal',zip:''},{label:'Rasquert',name:'Rasquert',zip:''},{label:'Ravenstein',name:'Ravenstein',zip:''},{label:'Ravenswaaij',name:'Ravenswaaij',zip:''},{label:'Ravenswoud',name:'Ravenswoud',zip:''},{label:'Readtsjerk',name:'Readtsjerk',zip:''},{label:'Reahûs',name:'Reahûs',zip:''},{label:'Reduzum',name:'Reduzum',zip:''},{label:'Reek',name:'Reek',zip:''},{label:'Reeuwijk',name:'Reeuwijk',zip:''},{label:'Reijmerstok',name:'Reijmerstok',zip:''},{label:'Reitsum',name:'Reitsum',zip:''},{label:'Rekken',name:'Rekken',zip:''},{label:'Renesse',name:'Renesse',zip:''},{label:'Renkum',name:'Renkum',zip:''},{label:'Renswoude',name:'Renswoude',zip:''},{label:'Ressen',name:'Ressen',zip:''},{label:'Retranchement',name:'Retranchement',zip:''},{label:'Reusel',name:'Reusel',zip:''},{label:'Reutum',name:'Reutum',zip:''},{label:'Reuver',name:'Reuver',zip:''},{label:'Rha',name:'Rha',zip:''},{label:'Rheden',name:'Rheden',zip:''},{label:'Rhee',name:'Rhee',zip:''},{label:'Rheeze',name:'Rheeze',zip:''},{label:'Rheezerveen',name:'Rheezerveen',zip:''},{label:'Rhenen',name:'Rhenen',zip:''},{label:'Rhenoy',name:'Rhenoy',zip:''},{label:'Rhoon',name:'Rhoon',zip:''},{label:'Ridderkerk',name:'Ridderkerk',zip:''},{label:'Ried',name:'Ried',zip:''},{label:'Riel',name:'Riel',zip:''},{label:'Rien',name:'Rien',zip:''},{label:'Riethoven',name:'Riethoven',zip:''},{label:'Rietmolen',name:'Rietmolen',zip:''},{label:'Rijen',name:'Rijen',zip:''},{label:'Rijkevoort',name:'Rijkevoort',zip:''},{label:'Rijkevoort-De Walsert',name:'Rijkevoort-De Walsert',zip:''},{label:'Rijnsaterwoude',name:'Rijnsaterwoude',zip:''},{label:'Rijnsburg',name:'Rijnsburg',zip:''},{label:'De Rijp',name:'De Rijp',zip:''},{label:'Rijpwetering',name:'Rijpwetering',zip:''},{label:'Rijs',name:'Rijs',zip:''},{label:'Rijsbergen',name:'Rijsbergen',zip:''},{label:'Rijsenhout',name:'Rijsenhout',zip:''},{label:'Rijssen',name:'Rijssen',zip:''},{label:'Rijswijk (Rijswijk)',name:'Rijswijk (Rijswijk)',zip:''},{label:'Rijswijk (Buren)',name:'Rijswijk (Buren)',zip:''},{label:'Rijswijk (Woudrichem)',name:'Rijswijk (Woudrichem)',zip:''},{label:'Rilland',name:'Rilland',zip:''},{label:'Rinsumageast',name:'Rinsumageast',zip:''},{label:'De Rips',name:'De Rips',zip:''},{label:'Ritthem',name:'Ritthem',zip:''},{label:'Rockanje',name:'Rockanje',zip:''},{label:'Roden',name:'Roden',zip:''},{label:'Roderesch',name:'Roderesch',zip:''},{label:'Roderwolde',name:'Roderwolde',zip:''},{label:'Roelofarendsveen',name:'Roelofarendsveen',zip:''},{label:'Roermond',name:'Roermond',zip:''},{label:'Rogat',name:'Rogat',zip:''},{label:'Roggel',name:'Roggel',zip:''},{label:'Rohel',name:'Rohel',zip:''},{label:'Rolde',name:'Rolde',zip:''},{label:'Roodeschool',name:'Roodeschool',zip:''},{label:'Roosendaal',name:'Roosendaal',zip:''},{label:'Roosteren',name:'Roosteren',zip:''},{label:'Rosmalen',name:'Rosmalen',zip:''},{label:'Rossum (Dinkelland)',name:'Rossum (Dinkelland)',zip:''},{label:'Rossum (Maasdriel)',name:'Rossum (Maasdriel)',zip:''},{label:'Roswinkel',name:'Roswinkel',zip:''},{label:'Rotstergaast',name:'Rotstergaast',zip:''},{label:'Rotsterhaule',name:'Rotsterhaule',zip:''},{label:'Rotterdam',name:'Rotterdam',zip:''},{label:'Rotterdam-Albrandswaard',name:'Rotterdam-Albrandswaard',zip:''},{label:'Rottevalle',name:'Rottevalle',zip:''},{label:'Rottum (Eemsmond)',name:'Rottum (Eemsmond)',zip:''},{label:'Rottum (De Fryske Marren)',name:'Rottum (De Fryske Marren)',zip:''},{label:'Rouveen',name:'Rouveen',zip:''},{label:'Rozenburg (Rotterdam)',name:'Rozenburg (Rotterdam)',zip:''},{label:'Rozenburg (Haarlemmermeer)',name:'Rozenburg (Haarlemmermeer)',zip:''},{label:'Rozendaal',name:'Rozendaal',zip:''},{label:'Rucphen',name:'Rucphen',zip:''},{label:'Ruigahuizen',name:'Ruigahuizen',zip:''},{label:'Ruinen (Westerveld)',name:'Ruinen (Westerveld)',zip:''},{label:'Ruinen (De Wolden)',name:'Ruinen (De Wolden)',zip:''},{label:'Ruinerwold',name:'Ruinerwold',zip:''},{label:'Rumpt',name:'Rumpt',zip:''},{label:'Rutten',name:'Rutten',zip:''},{label:'Ruurlo',name:'Ruurlo',zip:''},{label:'Ryptsjerk',name:'Ryptsjerk',zip:''},{label:'Saaksum',name:'Saaksum',zip:''},{label:'Saasveld',name:'Saasveld',zip:''},{label:'Saaxumhuizen',name:'Saaxumhuizen',zip:''},{label:'Sambeek',name:'Sambeek',zip:''},{label:'Sandfirden',name:'Sandfirden',zip:''},{label:'Santpoort-Noord',name:'Santpoort-Noord',zip:''},{label:'Santpoort-Zuid',name:'Santpoort-Zuid',zip:''},{label:'Sappemeer',name:'Sappemeer',zip:''},{label:'Sas van Gent',name:'Sas van Gent',zip:''},{label:'Sassenheim',name:'Sassenheim',zip:''},{label:'Sauwerd',name:'Sauwerd',zip:''},{label:'Schagen',name:'Schagen',zip:''},{label:'Schagerbrug',name:'Schagerbrug',zip:''},{label:'Schaijk',name:'Schaijk',zip:''},{label:'Schalkhaar',name:'Schalkhaar',zip:''},{label:'Schalkwijk',name:'Schalkwijk',zip:''},{label:'Schalsum',name:'Schalsum',zip:''},{label:'Schardam',name:'Schardam',zip:''},{label:'Scharendijke',name:'Scharendijke',zip:''},{label:'Scharmer',name:'Scharmer',zip:''},{label:'Scharnegoutum',name:'Scharnegoutum',zip:''},{label:'Scharsterbrug',name:'Scharsterbrug',zip:''},{label:'Scharwoude',name:'Scharwoude',zip:''},{label:'Scheemda',name:'Scheemda',zip:''},{label:'Scheerwolde',name:'Scheerwolde',zip:''},{label:'Schellinkhout',name:'Schellinkhout',zip:''},{label:'Schelluinen',name:'Schelluinen',zip:''},{label:'Schermerhorn',name:'Schermerhorn',zip:''},{label:'Scherpenisse',name:'Scherpenisse',zip:''},{label:'Scherpenzeel (Weststellingwerf)',name:'Scherpenzeel (Weststellingwerf)',zip:''},{label:'Scherpenzeel (Scherpenzeel)',name:'Scherpenzeel (Scherpenzeel)',zip:''},{label:'Schettens',name:'Schettens',zip:''},{label:'Scheulder',name:'Scheulder',zip:''},{label:'Schiedam',name:'Schiedam',zip:''},{label:'Schiermonnikoog',name:'Schiermonnikoog',zip:''},{label:'Schijf',name:'Schijf',zip:''},{label:'Schijndel',name:'Schijndel',zip:''},{label:'Schildwolde',name:'Schildwolde',zip:''},{label:'Schimmert',name:'Schimmert',zip:''},{label:'Schin op Geul',name:'Schin op Geul',zip:''},{label:'Schinnen',name:'Schinnen',zip:''},{label:'Schinveld',name:'Schinveld',zip:''},{label:'Schipborg',name:'Schipborg',zip:''},{label:'Schiphol',name:'Schiphol',zip:''},{label:'Schiphol-Rijk',name:'Schiphol-Rijk',zip:''},{label:'De Schiphorst',name:'De Schiphorst',zip:''},{label:'Schipluiden',name:'Schipluiden',zip:''},{label:'Schokland',name:'Schokland',zip:''},{label:'Schoondijke',name:'Schoondijke',zip:''},{label:'Schoonebeek',name:'Schoonebeek',zip:''},{label:'Schoonhoven',name:'Schoonhoven',zip:''},{label:'Schoonloo',name:'Schoonloo',zip:''},{label:'Schoonoord',name:'Schoonoord',zip:''},{label:'Schoonrewoerd',name:'Schoonrewoerd',zip:''},{label:'Schoorl',name:'Schoorl',zip:''},{label:'Schore',name:'Schore',zip:''},{label:'Schouwerzijl',name:'Schouwerzijl',zip:''},{label:'Schraard',name:'Schraard',zip:''},{label:'Schuinesloot',name:'Schuinesloot',zip:''},{label:'Sebaldeburen',name:'Sebaldeburen',zip:''},{label:'Sellingen',name:'Sellingen',zip:''},{label:'Serooskerke (Schouwen-Duiveland)',name:'Serooskerke (Schouwen-Duiveland)',zip:''},{label:'Serooskerke (Veere)',name:'Serooskerke (Veere)',zip:''},{label:'Sevenum',name:'Sevenum',zip:''},{label:'Sexbierum',name:'Sexbierum',zip:''},{label:'Sibculo (Twenterand)',name:'Sibculo (Twenterand)',zip:''},{label:'Sibculo (Hardenberg)',name:'Sibculo (Hardenberg)',zip:''},{label:'Sibrandabuorren',name:'Sibrandabuorren',zip:''},{label:'Sibrandahûs',name:'Sibrandahûs',zip:''},{label:'Siddeburen',name:'Siddeburen',zip:''},{label:'Siebengewald',name:'Siebengewald',zip:''},{label:'Siegerswoude',name:'Siegerswoude',zip:''},{label:'Sijbekarspel',name:'Sijbekarspel',zip:''},{label:'Silvolde',name:'Silvolde',zip:''},{label:'Simonshaven',name:'Simonshaven',zip:''},{label:'Simpelveld',name:'Simpelveld',zip:''},{label:'Sinderen',name:'Sinderen',zip:''},{label:'Sint Agatha',name:'Sint Agatha',zip:''},{label:'Sint Annen',name:'Sint Annen',zip:''},{label:'Sint Anthonis',name:'Sint Anthonis',zip:''},{label:'Sint Geertruid',name:'Sint Geertruid',zip:''},{label:'Sint Hubert',name:'Sint Hubert',zip:''},{label:'Sint Jansklooster',name:'Sint Jansklooster',zip:''},{label:'Sint Jansteen',name:'Sint Jansteen',zip:''},{label:'Sint Joost',name:'Sint Joost',zip:''},{label:'Sint Kruis',name:'Sint Kruis',zip:''},{label:'Sint Maarten',name:'Sint Maarten',zip:''},{label:'Sint Maartensbrug',name:'Sint Maartensbrug',zip:''},{label:'Sint Maartensvlotbrug',name:'Sint Maartensvlotbrug',zip:''},{label:'Sint Nicolaasga',name:'Sint Nicolaasga',zip:''},{label:'Sint Odiliënberg',name:'Sint Odiliënberg',zip:''},{label:'Sint Pancras',name:'Sint Pancras',zip:''},{label:'Sint Philipsland',name:'Sint Philipsland',zip:''},{label:'Sint Willebrord',name:'Sint Willebrord',zip:''},{label:'Sint-Annaland',name:'Sint-Annaland',zip:''},{label:'Sint-Annaparochie',name:'Sint-Annaparochie',zip:''},{label:'Sint-Jacobiparochie',name:'Sint-Jacobiparochie',zip:''},{label:'Sintjohannesga',name:'Sintjohannesga',zip:''},{label:'Sint-Maartensdijk',name:'Sint-Maartensdijk',zip:''},{label:'Sint-Michielsgestel',name:'Sint-Michielsgestel',zip:''},{label:'Sint-Oedenrode',name:'Sint-Oedenrode',zip:''},{label:'Sirjansland',name:'Sirjansland',zip:''},{label:'Sittard',name:'Sittard',zip:''},{label:'Skingen',name:'Skingen',zip:''},{label:'Slagharen',name:'Slagharen',zip:''},{label:'Slappeterp',name:'Slappeterp',zip:''},{label:'Sleen',name:'Sleen',zip:''},{label:'Sleeuwijk',name:'Sleeuwijk',zip:''},{label:'Slenaken',name:'Slenaken',zip:''},{label:'Sliedrecht',name:'Sliedrecht',zip:''},{label:'Slijkenburg',name:'Slijkenburg',zip:''},{label:'Slijk-Ewijk',name:'Slijk-Ewijk',zip:''},{label:'Slochteren',name:'Slochteren',zip:''},{label:'Slootdorp',name:'Slootdorp',zip:''},{label:'Sloten',name:'Sloten',zip:''},{label:'Sluis',name:'Sluis',zip:''},{label:'Sluiskil',name:'Sluiskil',zip:''},{label:'Smakt',name:'Smakt',zip:''},{label:'Smalle Ee',name:'Smalle Ee',zip:''},{label:'Smallebrugge',name:'Smallebrugge',zip:''},{label:'Smilde',name:'Smilde',zip:''},{label:'Snakkerburen',name:'Snakkerburen',zip:''},{label:'Sneek',name:'Sneek',zip:''},{label:'Snelrewaard',name:'Snelrewaard',zip:''},{label:'Snikzwaag',name:'Snikzwaag',zip:''},{label:'Soerendonk',name:'Soerendonk',zip:''},{label:'Soest',name:'Soest',zip:''},{label:'Soesterberg',name:'Soesterberg',zip:''},{label:'Someren',name:'Someren',zip:''},{label:'Sommelsdijk',name:'Sommelsdijk',zip:''},{label:'Son en Breugel',name:'Son en Breugel',zip:''},{label:'Sondel',name:'Sondel',zip:''},{label:'Sonnega',name:'Sonnega',zip:''},{label:'Spaarndam (Haarlemmerliede en Spaarnwoude)',name:'Spaarndam (Haarlemmerliede en Spaarnwoude)',zip:''},{label:'Spaarndam (Haarlem)',name:'Spaarndam (Haarlem)',zip:''},{label:'Spanbroek',name:'Spanbroek',zip:''},{label:'Spanga',name:'Spanga',zip:''},{label:'Spankeren',name:'Spankeren',zip:''},{label:'Spannum',name:'Spannum',zip:''},{label:'Spaubeek',name:'Spaubeek',zip:''},{label:'Spier (Midden-Drenthe)',name:'Spier (Midden-Drenthe)',zip:''},{label:'Spier (Westerveld)',name:'Spier (Westerveld)',zip:''},{label:'Spierdijk',name:'Spierdijk',zip:''},{label:'Spijk (Zevenaar)',name:'Spijk (Zevenaar)',zip:''},{label:'Spijk (Delfzijl)',name:'Spijk (Delfzijl)',zip:''},{label:'Spijk (Lingewaal)',name:'Spijk (Lingewaal)',zip:''},{label:'Spijkenisse',name:'Spijkenisse',zip:''},{label:'Spijkerboor (Aa en Hunze)',name:'Spijkerboor (Aa en Hunze)',zip:''},{label:'Spijkerboor (Wormerland)',name:'Spijkerboor (Wormerland)',zip:''},{label:'Sprang-Capelle',name:'Sprang-Capelle',zip:''},{label:'Sprundel',name:'Sprundel',zip:''},{label:'Spui',name:'Spui',zip:''},{label:'Stad aan \'t Haringvliet',name:'Stad aan \'t Haringvliet',zip:''},{label:'Stadskanaal',name:'Stadskanaal',zip:''},{label:'Stampersgat',name:'Stampersgat',zip:''},{label:'Standdaarbuiten',name:'Standdaarbuiten',zip:''},{label:'Staphorst',name:'Staphorst',zip:''},{label:'Starnmeer',name:'Starnmeer',zip:''},{label:'Startenhuizen (Loppersum)',name:'Startenhuizen (Loppersum)',zip:''},{label:'Startenhuizen (Eemsmond)',name:'Startenhuizen (Eemsmond)',zip:''},{label:'Stavenisse',name:'Stavenisse',zip:''},{label:'Stavoren',name:'Stavoren',zip:''},{label:'Stedum',name:'Stedum',zip:''},{label:'De Steeg',name:'De Steeg',zip:''},{label:'Steenbergen (Steenbergen)',name:'Steenbergen (Steenbergen)',zip:''},{label:'Steenbergen (Noordenveld)',name:'Steenbergen (Noordenveld)',zip:''},{label:'Steendam',name:'Steendam',zip:''},{label:'Steenderen',name:'Steenderen',zip:''},{label:'Steenenkamer',name:'Steenenkamer',zip:''},{label:'Steensel',name:'Steensel',zip:''},{label:'Steenwijk',name:'Steenwijk',zip:''},{label:'Steenwijkerwold',name:'Steenwijkerwold',zip:''},{label:'Stegeren',name:'Stegeren',zip:''},{label:'Steggerda',name:'Steggerda',zip:''},{label:'Stein',name:'Stein',zip:''},{label:'Stellendam',name:'Stellendam',zip:''},{label:'Sterksel',name:'Sterksel',zip:''},{label:'Stevensbeek',name:'Stevensbeek',zip:''},{label:'Stevensweert',name:'Stevensweert',zip:''},{label:'Steyl',name:'Steyl',zip:''},{label:'Stieltjeskanaal',name:'Stieltjeskanaal',zip:''},{label:'Stiens',name:'Stiens',zip:''},{label:'Stitswerd',name:'Stitswerd',zip:''},{label:'Stokkum',name:'Stokkum',zip:''},{label:'Stolwijk',name:'Stolwijk',zip:''},{label:'Stompetoren',name:'Stompetoren',zip:''},{label:'Stoutenburg',name:'Stoutenburg',zip:''},{label:'Stoutenburg Noord',name:'Stoutenburg Noord',zip:''},{label:'Stramproy',name:'Stramproy',zip:''},{label:'Streefkerk',name:'Streefkerk',zip:''},{label:'Striep',name:'Striep',zip:''},{label:'Strijbeek',name:'Strijbeek',zip:''},{label:'Strijen',name:'Strijen',zip:''},{label:'Strijensas',name:'Strijensas',zip:''},{label:'Stroe',name:'Stroe',zip:''},{label:'Stroobos',name:'Stroobos',zip:''},{label:'Stuifzand (Midden-Drenthe)',name:'Stuifzand (Midden-Drenthe)',zip:''},{label:'Stuifzand (Hoogeveen)',name:'Stuifzand (Hoogeveen)',zip:''},{label:'Sumar',name:'Sumar',zip:''},{label:'Surhuisterveen',name:'Surhuisterveen',zip:''},{label:'Surhuizum',name:'Surhuizum',zip:''},{label:'Susteren',name:'Susteren',zip:''},{label:'Suwâld',name:'Suwâld',zip:''},{label:'Swalmen',name:'Swalmen',zip:''},{label:'Sweikhuizen',name:'Sweikhuizen',zip:''},{label:'Swichum',name:'Swichum',zip:''},{label:'Swifterbant',name:'Swifterbant',zip:''},{label:'Swolgen',name:'Swolgen',zip:''},{label:'Taarlo',name:'Taarlo',zip:''},{label:'Teeffelen',name:'Teeffelen',zip:''},{label:'Teerns',name:'Teerns',zip:''},{label:'Tegelen',name:'Tegelen',zip:''},{label:'Terband',name:'Terband',zip:''},{label:'Terborg',name:'Terborg',zip:''},{label:'Terheijden',name:'Terheijden',zip:''},{label:'Terherne',name:'Terherne',zip:''},{label:'Terhole',name:'Terhole',zip:''},{label:'Terkaple',name:'Terkaple',zip:''},{label:'Termunten',name:'Termunten',zip:''},{label:'Termunterzijl',name:'Termunterzijl',zip:''},{label:'Ternaard',name:'Ternaard',zip:''},{label:'Terneuzen',name:'Terneuzen',zip:''},{label:'Teroele',name:'Teroele',zip:''},{label:'Terschuur',name:'Terschuur',zip:''},{label:'Tersoal',name:'Tersoal',zip:''},{label:'Terwispel',name:'Terwispel',zip:''},{label:'Terwolde',name:'Terwolde',zip:''},{label:'Teteringen',name:'Teteringen',zip:''},{label:'Teuge',name:'Teuge',zip:''},{label:'Thesinge',name:'Thesinge',zip:''},{label:'Tholen',name:'Tholen',zip:''},{label:'Thorn',name:'Thorn',zip:''},{label:'Tiel',name:'Tiel',zip:''},{label:'Tiendeveen (Hoogeveen)',name:'Tiendeveen (Hoogeveen)',zip:''},{label:'Tiendeveen (Midden-Drenthe)',name:'Tiendeveen (Midden-Drenthe)',zip:''},{label:'Tienhoven (Stichtse Vecht)',name:'Tienhoven (Stichtse Vecht)',zip:''},{label:'Tienhoven (Zederik)',name:'Tienhoven (Zederik)',zip:''},{label:'Tienray',name:'Tienray',zip:''},{label:'Tijnje',name:'Tijnje',zip:''},{label:'De Tike',name:'De Tike',zip:''},{label:'Tilburg',name:'Tilburg',zip:''},{label:'Tilligte',name:'Tilligte',zip:''},{label:'Tinallinge',name:'Tinallinge',zip:''},{label:'Tinte',name:'Tinte',zip:''},{label:'Tirns',name:'Tirns',zip:''},{label:'Tjalhuizum',name:'Tjalhuizum',zip:''},{label:'Tjalleberd',name:'Tjalleberd',zip:''},{label:'Tjerkgaast',name:'Tjerkgaast',zip:''},{label:'Tjerkwerd',name:'Tjerkwerd',zip:''},{label:'Tjuchem',name:'Tjuchem',zip:''},{label:'Tolbert',name:'Tolbert',zip:''},{label:'Toldijk',name:'Toldijk',zip:''},{label:'Tolkamer',name:'Tolkamer',zip:''},{label:'Tollebeek',name:'Tollebeek',zip:''},{label:'Tonden',name:'Tonden',zip:''},{label:'Toornwerd',name:'Toornwerd',zip:''},{label:'Tricht',name:'Tricht',zip:''},{label:'Triemen',name:'Triemen',zip:''},{label:'Tripscompagnie',name:'Tripscompagnie',zip:''},{label:'Tubbergen',name:'Tubbergen',zip:''},{label:'Tuil',name:'Tuil',zip:''},{label:'Tuitjenhorn',name:'Tuitjenhorn',zip:''},{label:'Tuk',name:'Tuk',zip:''},{label:'Tull en \'t Waal',name:'Tull en \'t Waal',zip:''},{label:'Twello',name:'Twello',zip:''},{label:'Twijzel',name:'Twijzel',zip:''},{label:'Twijzelerheide',name:'Twijzelerheide',zip:''},{label:'Twisk',name:'Twisk',zip:''},{label:'Tynaarlo',name:'Tynaarlo',zip:''},{label:'Tytsjerk',name:'Tytsjerk',zip:''},{label:'Tzum',name:'Tzum',zip:''},{label:'Tzummarum',name:'Tzummarum',zip:''},{label:'Ubbena',name:'Ubbena',zip:''},{label:'Ubbergen',name:'Ubbergen',zip:''},{label:'Uddel',name:'Uddel',zip:''},{label:'Uden',name:'Uden',zip:''},{label:'Udenhout',name:'Udenhout',zip:''},{label:'Uffelte',name:'Uffelte',zip:''},{label:'Ugchelen',name:'Ugchelen',zip:''},{label:'Uitdam',name:'Uitdam',zip:''},{label:'Uitgeest',name:'Uitgeest',zip:''},{label:'Uithoorn',name:'Uithoorn',zip:''},{label:'Uithuizen',name:'Uithuizen',zip:''},{label:'Uithuizermeeden',name:'Uithuizermeeden',zip:''},{label:'Uitwellingerga',name:'Uitwellingerga',zip:''},{label:'Uitwijk',name:'Uitwijk',zip:''},{label:'Ulestraten',name:'Ulestraten',zip:''},{label:'Ulft',name:'Ulft',zip:''},{label:'Ulicoten',name:'Ulicoten',zip:''},{label:'Ulrum',name:'Ulrum',zip:''},{label:'Ulvenhout (Breda)',name:'Ulvenhout (Breda)',zip:''},{label:'Ulvenhout (Alphen-Chaam)',name:'Ulvenhout (Alphen-Chaam)',zip:''},{label:'Ureterp',name:'Ureterp',zip:''},{label:'Urk',name:'Urk',zip:''},{label:'Urmond',name:'Urmond',zip:''},{label:'Ursem (Koggenland)',name:'Ursem (Koggenland)',zip:''},{label:'Ursem (Alkmaar)',name:'Ursem (Alkmaar)',zip:''},{label:'Usquert',name:'Usquert',zip:''},{label:'Utrecht',name:'Utrecht',zip:''},{label:'Vaals',name:'Vaals',zip:''},{label:'Vaassen',name:'Vaassen',zip:''},{label:'Valburg',name:'Valburg',zip:''},{label:'Valkenburg (Valkenburg aan de Geul)',name:'Valkenburg (Valkenburg aan de Geul)',zip:''},{label:'Valkenburg (Katwijk)',name:'Valkenburg (Katwijk)',zip:''},{label:'Valkenswaard',name:'Valkenswaard',zip:''},{label:'Valthe',name:'Valthe',zip:''},{label:'Valthermond',name:'Valthermond',zip:''},{label:'2e Valthermond',name:'2e Valthermond',zip:''},{label:'Varik',name:'Varik',zip:''},{label:'Varsselder',name:'Varsselder',zip:''},{label:'Varsseveld',name:'Varsseveld',zip:''},{label:'Vasse',name:'Vasse',zip:''},{label:'Veelerveen',name:'Veelerveen',zip:''},{label:'Veen',name:'Veen',zip:''},{label:'Veendam',name:'Veendam',zip:''},{label:'Veenendaal',name:'Veenendaal',zip:''},{label:'De Veenhoop',name:'De Veenhoop',zip:''},{label:'Veenhuizen',name:'Veenhuizen',zip:''},{label:'Veeningen',name:'Veeningen',zip:''},{label:'Veenklooster',name:'Veenklooster',zip:''},{label:'Veenoord',name:'Veenoord',zip:''},{label:'Veere',name:'Veere',zip:''},{label:'Veessen',name:'Veessen',zip:''},{label:'Vegelinsoord',name:'Vegelinsoord',zip:''},{label:'Veghel',name:'Veghel',zip:''},{label:'\'t Veld',name:'\'t Veld',zip:''},{label:'Velddriel',name:'Velddriel',zip:''},{label:'Den Velde',name:'Den Velde',zip:''},{label:'Velden',name:'Velden',zip:''},{label:'Veldhoven',name:'Veldhoven',zip:''},{label:'Velp (Rheden)',name:'Velp (Rheden)',zip:''},{label:'Velp (Grave)',name:'Velp (Grave)',zip:''},{label:'Velsen-Noord',name:'Velsen-Noord',zip:''},{label:'Velsen-Zuid',name:'Velsen-Zuid',zip:''},{label:'Velserbroek',name:'Velserbroek',zip:''},{label:'Venebrugge',name:'Venebrugge',zip:''},{label:'Venhorst',name:'Venhorst',zip:''},{label:'Venhuizen',name:'Venhuizen',zip:''},{label:'Venlo',name:'Venlo',zip:''},{label:'Venray',name:'Venray',zip:''},{label:'Ven-Zelderheide',name:'Ven-Zelderheide',zip:''},{label:'Vessem',name:'Vessem',zip:''},{label:'Vethuizen',name:'Vethuizen',zip:''},{label:'Veulen',name:'Veulen',zip:''},{label:'Vianen (Vianen)',name:'Vianen (Vianen)',zip:''},{label:'Vianen (Cuijk)',name:'Vianen (Cuijk)',zip:''},{label:'Vierakker',name:'Vierakker',zip:''},{label:'Vierhouten',name:'Vierhouten',zip:''},{label:'Vierhuizen',name:'Vierhuizen',zip:''},{label:'Vierlingsbeek',name:'Vierlingsbeek',zip:''},{label:'Vierpolders',name:'Vierpolders',zip:''},{label:'Vijfhuizen',name:'Vijfhuizen',zip:''},{label:'Vijlen',name:'Vijlen',zip:''},{label:'Vilsteren',name:'Vilsteren',zip:''},{label:'Vinkega',name:'Vinkega',zip:''},{label:'Vinkel (\'s-Hertogenbosch)',name:'Vinkel (\'s-Hertogenbosch)',zip:''},{label:'Vinkel (Bernheze)',name:'Vinkel (Bernheze)',zip:''},{label:'Vinkenbuurt',name:'Vinkenbuurt',zip:''},{label:'Vinkeveen',name:'Vinkeveen',zip:''},{label:'Visvliet',name:'Visvliet',zip:''},{label:'Vlaardingen',name:'Vlaardingen',zip:''},{label:'Vlagtwedde',name:'Vlagtwedde',zip:''},{label:'Vledder',name:'Vledder',zip:''},{label:'Vledderveen (Stadskanaal)',name:'Vledderveen (Stadskanaal)',zip:''},{label:'Vledderveen (Westerveld)',name:'Vledderveen (Westerveld)',zip:''},{label:'Vleuten',name:'Vleuten',zip:''},{label:'Vlieland',name:'Vlieland',zip:''},{label:'Vlierden',name:'Vlierden',zip:''},{label:'Vlijmen',name:'Vlijmen',zip:''},{label:'Vlissingen',name:'Vlissingen',zip:''},{label:'Vlist',name:'Vlist',zip:''},{label:'Vlodrop',name:'Vlodrop',zip:''},{label:'Voerendaal',name:'Voerendaal',zip:''},{label:'Vogelenzang',name:'Vogelenzang',zip:''},{label:'Vogelwaarde',name:'Vogelwaarde',zip:''},{label:'Volendam',name:'Volendam',zip:''},{label:'Volkel',name:'Volkel',zip:''},{label:'Vollenhove',name:'Vollenhove',zip:''},{label:'Vondelingenplaat Rotterdam',name:'Vondelingenplaat Rotterdam',zip:''},{label:'Voorburg',name:'Voorburg',zip:''},{label:'Voorhout',name:'Voorhout',zip:''},{label:'Voorschoten',name:'Voorschoten',zip:''},{label:'Voorst (Oude IJsselstreek)',name:'Voorst (Oude IJsselstreek)',zip:''},{label:'Voorst (Voorst)',name:'Voorst (Voorst)',zip:''},{label:'Voorthuizen',name:'Voorthuizen',zip:''},{label:'Vorchten',name:'Vorchten',zip:''},{label:'Vorden',name:'Vorden',zip:''},{label:'Vorstenbosch',name:'Vorstenbosch',zip:''},{label:'Vortum-Mullem',name:'Vortum-Mullem',zip:''},{label:'Vragender',name:'Vragender',zip:''},{label:'Vredenheim',name:'Vredenheim',zip:''},{label:'Vredepeel',name:'Vredepeel',zip:''},{label:'Vreeland',name:'Vreeland',zip:''},{label:'Vries',name:'Vries',zip:''},{label:'Vriescheloo',name:'Vriescheloo',zip:''},{label:'Vriezenveen',name:'Vriezenveen',zip:''},{label:'Vroomshoop',name:'Vroomshoop',zip:''},{label:'Vrouwenakker',name:'Vrouwenakker',zip:''},{label:'Vrouwenparochie',name:'Vrouwenparochie',zip:''},{label:'Vrouwenpolder',name:'Vrouwenpolder',zip:''},{label:'Vught',name:'Vught',zip:''},{label:'Vuren',name:'Vuren',zip:''},{label:'Waaksens',name:'Waaksens',zip:''},{label:'Waal',name:'Waal',zip:''},{label:'De Waal',name:'De Waal',zip:''},{label:'Waalre',name:'Waalre',zip:''},{label:'Waalwijk',name:'Waalwijk',zip:''},{label:'\'t Waar',name:'\'t Waar',zip:''},{label:'Waarde',name:'Waarde',zip:''},{label:'Waardenburg',name:'Waardenburg',zip:''},{label:'Waarder',name:'Waarder',zip:''},{label:'Waardhuizen',name:'Waardhuizen',zip:''},{label:'Waarland',name:'Waarland',zip:''},{label:'Waaxens',name:'Waaxens',zip:''},{label:'Wachtum',name:'Wachtum',zip:''},{label:'Waddinxveen',name:'Waddinxveen',zip:''},{label:'Wadenoijen',name:'Wadenoijen',zip:''},{label:'Wagenberg',name:'Wagenberg',zip:''},{label:'Wagenborgen',name:'Wagenborgen',zip:''},{label:'Wageningen',name:'Wageningen',zip:''},{label:'Walem',name:'Walem',zip:''},{label:'Walsoorden',name:'Walsoorden',zip:''},{label:'Wâlterswâld',name:'Wâlterswâld',zip:''},{label:'Wamel',name:'Wamel',zip:''},{label:'Wanneperveen',name:'Wanneperveen',zip:''},{label:'Wanroij',name:'Wanroij',zip:''},{label:'Wanssum',name:'Wanssum',zip:''},{label:'Wânswert',name:'Wânswert',zip:''},{label:'Wapenveld',name:'Wapenveld',zip:''},{label:'Wapse',name:'Wapse',zip:''},{label:'Wapserveen',name:'Wapserveen',zip:''},{label:'Warder',name:'Warder',zip:''},{label:'Warffum',name:'Warffum',zip:''},{label:'Warfhuizen',name:'Warfhuizen',zip:''},{label:'Warfstermolen',name:'Warfstermolen',zip:''},{label:'Warmenhuizen',name:'Warmenhuizen',zip:''},{label:'Warmond',name:'Warmond',zip:''},{label:'Warns',name:'Warns',zip:''},{label:'Warnsveld',name:'Warnsveld',zip:''},{label:'Warstiens',name:'Warstiens',zip:''},{label:'Warten',name:'Warten',zip:''},{label:'Waskemeer',name:'Waskemeer',zip:''},{label:'Waspik',name:'Waspik',zip:''},{label:'Wassenaar',name:'Wassenaar',zip:''},{label:'Wateren',name:'Wateren',zip:''},{label:'Watergang',name:'Watergang',zip:''},{label:'Waterhuizen',name:'Waterhuizen',zip:''},{label:'Wateringen',name:'Wateringen',zip:''},{label:'Waterlandkerkje',name:'Waterlandkerkje',zip:''},{label:'Waverveen',name:'Waverveen',zip:''},{label:'Wedde',name:'Wedde',zip:''},{label:'De Weere',name:'De Weere',zip:''},{label:'Weerselo',name:'Weerselo',zip:''},{label:'Weert',name:'Weert',zip:''},{label:'Weesp',name:'Weesp',zip:''},{label:'Wehe-den Hoorn',name:'Wehe-den Hoorn',zip:''},{label:'Wehl',name:'Wehl',zip:''},{label:'Weidum',name:'Weidum',zip:''},{label:'Weiteveen',name:'Weiteveen',zip:''},{label:'Wekerom',name:'Wekerom',zip:''},{label:'Well (Maasdriel)',name:'Well (Maasdriel)',zip:''},{label:'Well (Bergen - Limburg)',name:'Well (Bergen - Limburg)',zip:''},{label:'Wellerlooi',name:'Wellerlooi',zip:''},{label:'Welsum',name:'Welsum',zip:''},{label:'Wemeldinge',name:'Wemeldinge',zip:''},{label:'Wenum Wiesel',name:'Wenum Wiesel',zip:''},{label:'Wergea',name:'Wergea',zip:''},{label:'Werkendam',name:'Werkendam',zip:''},{label:'Werkhoven',name:'Werkhoven',zip:''},{label:'Wernhout',name:'Wernhout',zip:''},{label:'Wervershoof',name:'Wervershoof',zip:''},{label:'Wesepe',name:'Wesepe',zip:''},{label:'Wessem',name:'Wessem',zip:''},{label:'Westbeemster',name:'Westbeemster',zip:''},{label:'Westbroek',name:'Westbroek',zip:''},{label:'Westdorp',name:'Westdorp',zip:''},{label:'Westdorpe',name:'Westdorpe',zip:''},{label:'Westendorp',name:'Westendorp',zip:''},{label:'Westerbeek',name:'Westerbeek',zip:''},{label:'Westerbork',name:'Westerbork',zip:''},{label:'Westerbroek',name:'Westerbroek',zip:''},{label:'De Westereen',name:'De Westereen',zip:''},{label:'Westeremden',name:'Westeremden',zip:''},{label:'Westergeest',name:'Westergeest',zip:''},{label:'Westerhaar-Vriezenveensewijk',name:'Westerhaar-Vriezenveensewijk',zip:''},{label:'Westerhoven',name:'Westerhoven',zip:''},{label:'Westerland',name:'Westerland',zip:''},{label:'Westerlee',name:'Westerlee',zip:''},{label:'Westernieland',name:'Westernieland',zip:''},{label:'Westervelde',name:'Westervelde',zip:''},{label:'Westervoort',name:'Westervoort',zip:''},{label:'Westerwijtwerd',name:'Westerwijtwerd',zip:''},{label:'West-Graftdijk',name:'West-Graftdijk',zip:''},{label:'Westhem',name:'Westhem',zip:''},{label:'Westhoek',name:'Westhoek',zip:''},{label:'Westkapelle',name:'Westkapelle',zip:''},{label:'Westknollendam',name:'Westknollendam',zip:''},{label:'Westmaas',name:'Westmaas',zip:''},{label:'West-Terschelling',name:'West-Terschelling',zip:''},{label:'Westwoud',name:'Westwoud',zip:''},{label:'Westzaan',name:'Westzaan',zip:''},{label:'Wetering',name:'Wetering',zip:''},{label:'Weteringbrug',name:'Weteringbrug',zip:''},{label:'Wetsens',name:'Wetsens',zip:''},{label:'Wetsinge',name:'Wetsinge',zip:''},{label:'Weurt',name:'Weurt',zip:''},{label:'Wezep',name:'Wezep',zip:''},{label:'Wezup',name:'Wezup',zip:''},{label:'Wezuperbrug',name:'Wezuperbrug',zip:''},{label:'Wichmond',name:'Wichmond',zip:''},{label:'Wier',name:'Wier',zip:''},{label:'Wierden',name:'Wierden',zip:''},{label:'Wieringerwaard',name:'Wieringerwaard',zip:''},{label:'Wieringerwerf',name:'Wieringerwerf',zip:''},{label:'Wierum',name:'Wierum',zip:''},{label:'Wijchen',name:'Wijchen',zip:''},{label:'Wijckel',name:'Wijckel',zip:''},{label:'Wijdenes',name:'Wijdenes',zip:''},{label:'Wijdewormer',name:'Wijdewormer',zip:''},{label:'Wijhe',name:'Wijhe',zip:''},{label:'de Wijk',name:'de Wijk',zip:''},{label:'Wijk aan Zee',name:'Wijk aan Zee',zip:''},{label:'Wijk bij Duurstede',name:'Wijk bij Duurstede',zip:''},{label:'Wijk en Aalburg',name:'Wijk en Aalburg',zip:''},{label:'Wijlre',name:'Wijlre',zip:''},{label:'Wijnaldum',name:'Wijnaldum',zip:''},{label:'Wijnandsrade',name:'Wijnandsrade',zip:''},{label:'Wijnbergen',name:'Wijnbergen',zip:''},{label:'Wijngaarden',name:'Wijngaarden',zip:''},{label:'Wijnjewoude',name:'Wijnjewoude',zip:''},{label:'Wijster',name:'Wijster',zip:''},{label:'Wilbertoord',name:'Wilbertoord',zip:''},{label:'Wildervank',name:'Wildervank',zip:''},{label:'De Wilgen',name:'De Wilgen',zip:''},{label:'Wilhelminadorp',name:'Wilhelminadorp',zip:''},{label:'Wilhelminaoord',name:'Wilhelminaoord',zip:''},{label:'Willemsoord',name:'Willemsoord',zip:''},{label:'Willemstad',name:'Willemstad',zip:''},{label:'Wilnis',name:'Wilnis',zip:''},{label:'Wilp',name:'Wilp',zip:''},{label:'De Wilp',name:'De Wilp',zip:''},{label:'Wilsum',name:'Wilsum',zip:''},{label:'Winde',name:'Winde',zip:''},{label:'Windraak',name:'Windraak',zip:''},{label:'Winkel',name:'Winkel',zip:''},{label:'Winneweer',name:'Winneweer',zip:''},{label:'Winschoten',name:'Winschoten',zip:''},{label:'Winssen',name:'Winssen',zip:''},{label:'Winsum (Waadhoeke)',name:'Winsum (Waadhoeke)',zip:''},{label:'Winsum (Winsum)',name:'Winsum (Winsum)',zip:''},{label:'Wintelre',name:'Wintelre',zip:''},{label:'Winterswijk',name:'Winterswijk',zip:''},{label:'Winterswijk Brinkheurne',name:'Winterswijk Brinkheurne',zip:''},{label:'Winterswijk Corle',name:'Winterswijk Corle',zip:''},{label:'Winterswijk Henxel',name:'Winterswijk Henxel',zip:''},{label:'Winterswijk Huppel',name:'Winterswijk Huppel',zip:''},{label:'Winterswijk Kotten',name:'Winterswijk Kotten',zip:''},{label:'Winterswijk Meddo',name:'Winterswijk Meddo',zip:''},{label:'Winterswijk Miste',name:'Winterswijk Miste',zip:''},{label:'Winterswijk Ratum',name:'Winterswijk Ratum',zip:''},{label:'Winterswijk Woold',name:'Winterswijk Woold',zip:''},{label:'Wirdum (Loppersum)',name:'Wirdum (Loppersum)',zip:''},{label:'Wirdum (Leeuwarden)',name:'Wirdum (Leeuwarden)',zip:''},{label:'Wissenkerke',name:'Wissenkerke',zip:''},{label:'Witharen',name:'Witharen',zip:''},{label:'Witmarsum',name:'Witmarsum',zip:''},{label:'Witte Paarden',name:'Witte Paarden',zip:''},{label:'Wittelte',name:'Wittelte',zip:''},{label:'Wittem',name:'Wittem',zip:''},{label:'Witteveen',name:'Witteveen',zip:''},{label:'Wiuwert',name:'Wiuwert',zip:''},{label:'Wjelsryp',name:'Wjelsryp',zip:''},{label:'Woensdrecht',name:'Woensdrecht',zip:''},{label:'Woerden',name:'Woerden',zip:''},{label:'Woerdense Verlaat',name:'Woerdense Verlaat',zip:''},{label:'Wognum',name:'Wognum',zip:''},{label:'Woldendorp',name:'Woldendorp',zip:''},{label:'Wolfheze',name:'Wolfheze',zip:''},{label:'Wolphaartsdijk',name:'Wolphaartsdijk',zip:''},{label:'Wolsum',name:'Wolsum',zip:''},{label:'Woltersum',name:'Woltersum',zip:''},{label:'Wolvega',name:'Wolvega',zip:''},{label:'Wommels',name:'Wommels',zip:''},{label:'Wons',name:'Wons',zip:''},{label:'Workum',name:'Workum',zip:''},{label:'Wormer',name:'Wormer',zip:''},{label:'Wormerveer',name:'Wormerveer',zip:''},{label:'Woubrugge',name:'Woubrugge',zip:''},{label:'Woudbloem',name:'Woudbloem',zip:''},{label:'de Woude',name:'de Woude',zip:''},{label:'Woudenberg',name:'Woudenberg',zip:''},{label:'Woudrichem',name:'Woudrichem',zip:''},{label:'Woudsend',name:'Woudsend',zip:''},{label:'Wouw',name:'Wouw',zip:''},{label:'Wouwse Plantage',name:'Wouwse Plantage',zip:''},{label:'Wyns',name:'Wyns',zip:''},{label:'Wytgaard',name:'Wytgaard',zip:''},{label:'Yde',name:'Yde',zip:''},{label:'Yerseke',name:'Yerseke',zip:''},{label:'Ypecolsga',name:'Ypecolsga',zip:''},{label:'Ysbrechtum',name:'Ysbrechtum',zip:''},{label:'Ysselsteyn',name:'Ysselsteyn',zip:''},{label:'Zaamslag',name:'Zaamslag',zip:''},{label:'Zaandam',name:'Zaandam',zip:''},{label:'Zaandijk',name:'Zaandijk',zip:''},{label:'Zalk',name:'Zalk',zip:''},{label:'Zaltbommel',name:'Zaltbommel',zip:''},{label:'\'t Zand',name:'\'t Zand',zip:''},{label:'Zandberg',name:'Zandberg',zip:''},{label:'Zandeweer',name:'Zandeweer',zip:''},{label:'Zandhuizen',name:'Zandhuizen',zip:''},{label:'Zandpol',name:'Zandpol',zip:''},{label:'\'t Zandt',name:'\'t Zandt',zip:''},{label:'Zandvoort',name:'Zandvoort',zip:''},{label:'Zeddam',name:'Zeddam',zip:''},{label:'Zeegse',name:'Zeegse',zip:''},{label:'Zeeland',name:'Zeeland',zip:''},{label:'Zeerijp',name:'Zeerijp',zip:''},{label:'Zeewolde',name:'Zeewolde',zip:''},{label:'Zegge',name:'Zegge',zip:''},{label:'Zegveld',name:'Zegveld',zip:''},{label:'Zeijen',name:'Zeijen',zip:''},{label:'Zeijerveen',name:'Zeijerveen',zip:''},{label:'Zeijerveld',name:'Zeijerveld',zip:''},{label:'Zeist',name:'Zeist',zip:''},{label:'Zelhem',name:'Zelhem',zip:''},{label:'Zenderen',name:'Zenderen',zip:''},{label:'Zennewijnen (Tiel)',name:'Zennewijnen (Tiel)',zip:''},{label:'Zennewijnen (Neerijnen)',name:'Zennewijnen (Neerijnen)',zip:''},{label:'Zetten',name:'Zetten',zip:''},{label:'Zevenaar',name:'Zevenaar',zip:''},{label:'Zevenbergen',name:'Zevenbergen',zip:''},{label:'Zevenbergschen Hoek (Moerdijk)',name:'Zevenbergschen Hoek (Moerdijk)',zip:''},{label:'Zevenbergschen Hoek (Drimmelen)',name:'Zevenbergschen Hoek (Drimmelen)',zip:''},{label:'Zevenhoven',name:'Zevenhoven',zip:''},{label:'Zevenhuizen (Zuidplas)',name:'Zevenhuizen (Zuidplas)',zip:''},{label:'Zevenhuizen (Leek)',name:'Zevenhuizen (Leek)',zip:''},{label:'Zierikzee',name:'Zierikzee',zip:''},{label:'Zieuwent',name:'Zieuwent',zip:''},{label:'Zijderveld',name:'Zijderveld',zip:''},{label:'Zijdewind',name:'Zijdewind',zip:''},{label:'Zijldijk',name:'Zijldijk',zip:''},{label:'De Zilk',name:'De Zilk',zip:''},{label:'Zoelen',name:'Zoelen',zip:''},{label:'Zoelmond',name:'Zoelmond',zip:''},{label:'Zoetermeer',name:'Zoetermeer',zip:''},{label:'Zoeterwoude',name:'Zoeterwoude',zip:''},{label:'Zonnemaire',name:'Zonnemaire',zip:''},{label:'Zorgvlied',name:'Zorgvlied',zip:''},{label:'Zoutelande',name:'Zoutelande',zip:''},{label:'Zoutkamp',name:'Zoutkamp',zip:''},{label:'Zuid-Beijerland',name:'Zuid-Beijerland',zip:''},{label:'Zuidbroek',name:'Zuidbroek',zip:''},{label:'Zuiddorpe',name:'Zuiddorpe',zip:''},{label:'Zuidermeer',name:'Zuidermeer',zip:''},{label:'Zuiderwoude',name:'Zuiderwoude',zip:''},{label:'Zuidhorn',name:'Zuidhorn',zip:''},{label:'Zuidlaarderveen',name:'Zuidlaarderveen',zip:''},{label:'Zuidland',name:'Zuidland',zip:''},{label:'Zuidlaren',name:'Zuidlaren',zip:''},{label:'Zuidoostbeemster',name:'Zuidoostbeemster',zip:''},{label:'Zuid-Scharwoude',name:'Zuid-Scharwoude',zip:''},{label:'Zuidschermer',name:'Zuidschermer',zip:''},{label:'Zuidveen',name:'Zuidveen',zip:''},{label:'Zuidveld',name:'Zuidveld',zip:''},{label:'Zuidvelde',name:'Zuidvelde',zip:''},{label:'Zuidwolde (Bedum)',name:'Zuidwolde (Bedum)',zip:''},{label:'Zuidwolde (De Wolden)',name:'Zuidwolde (De Wolden)',zip:''},{label:'Zuidzande',name:'Zuidzande',zip:''},{label:'Zuilichem',name:'Zuilichem',zip:''},{label:'Zuna',name:'Zuna',zip:''},{label:'Zundert',name:'Zundert',zip:''},{label:'Zurich',name:'Zurich',zip:''},{label:'Zutphen',name:'Zutphen',zip:''},{label:'Zuurdijk',name:'Zuurdijk',zip:''},{label:'Zwaag',name:'Zwaag',zip:''},{label:'Zwaagdijk-Oost',name:'Zwaagdijk-Oost',zip:''},{label:'Zwaagdijk-West',name:'Zwaagdijk-West',zip:''},{label:'Zwaanshoek',name:'Zwaanshoek',zip:''},{label:'Zwagerbosch',name:'Zwagerbosch',zip:''},{label:'Zwammerdam',name:'Zwammerdam',zip:''},{label:'Zwanenburg',name:'Zwanenburg',zip:''},{label:'Zwartebroek',name:'Zwartebroek',zip:''},{label:'Zwartemeer',name:'Zwartemeer',zip:''},{label:'Zwartewaal',name:'Zwartewaal',zip:''},{label:'Zwartsluis',name:'Zwartsluis',zip:''},{label:'Zweeloo',name:'Zweeloo',zip:''},{label:'Zweins',name:'Zweins',zip:''},{label:'Zwiggelte',name:'Zwiggelte',zip:''},{label:'Zwijndrecht',name:'Zwijndrecht',zip:''},{label:'Zwinderen',name:'Zwinderen',zip:''},{label:'Zwolle',name:'Zwolle',zip:''}])

;
'use strict';

/**
 * @ngdoc module
 * @name udb.search
 * @description
 * The udb search module
 */
angular
  .module('udb.search', [
    'ngCookies',
    'ngSanitize',
    'ui.bootstrap',
    'peg',
    'udb.core',
    'udb.config',
    'udb.router',
    'udb.entry',
    'btford.socket-io',
    'pascalprecht.translate',
    'xeditable'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.event-form
 * @description
 * The udb form module
 */
angular
  .module('udb.event-form', [
    'ngSanitize',
    'ngMessages',
    'ui.bootstrap',
    'udb.config',
    'udb.entry',
    'udb.search',
    'udb.uitpas',
    'ngFileUpload',
    'duScroll',
    'focus-if',
    'angular.filter'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.offer-translate
 * @description
 * The udb form module
 */
angular
  .module('udb.offer-translate', [
    'ngSanitize',
    'ngMessages',
    'ui.bootstrap',
    'udb.config',
    'udb.entry',
    'udb.search',
    'udb.uitpas',
    'ngFileUpload',
    'duScroll',
    'focus-if',
    'angular.filter'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.dashboard
 * @description
 * The udb dashboard module
 */
angular
  .module('udb.dashboard', [
    'ngSanitize',
    'ui.bootstrap',
    'udb.config'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.entry
 * @description
 * The udb entry module
 */
angular
  .module('udb.entry', [
    'ngCookies',
    'ngSanitize',
    'ui.bootstrap',
    'udb.config',
    'udb.search',
    'btford.socket-io',
    'pascalprecht.translate',
    'angularMoment'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.event-detail
 * @description
 * The udb event-detail module
 */
angular
  .module('udb.event-detail', [
    'ngSanitize',
    'ui.bootstrap',
    'udb.config',
    'udb.entry'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.place-detail
 * @description
 * The udb place-detail module
 */
angular
  .module('udb.place-detail', [
    'ngSanitize',
    'ui.bootstrap',
    'udb.config',
    'udb.entry'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.saved-searches
 * @description
 * The udb saved-searches module
 */
angular
  .module('udb.saved-searches', [
    'udb.core',
    'ui.bootstrap',
    'ui.codemirror'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.export
 * @description
 * The udb export module
 */
angular
  .module('udb.export', [
    'ngSanitize',
    'ui.bootstrap',
    'udb.config',
    'udb.search'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.media
 * @description
 * The udb media module
 */
angular
  .module('udb.media', [
    'ngSanitize',
    'ui.bootstrap',
    'udb.core',
    'udb.config'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.management.roles
 * @description
 * # Roles Management Module
 */
angular
  .module('udb.management.roles', [
    'rx'
  ]);
'use strict';

/**
 * @ngdoc module
 * @name udb.management.labels
 * @description
 * # Label Management Module
 */
angular
  .module('udb.management.labels', [
    'rx'
  ]);
'use strict';

/**
 * @ngdoc module
 * @name udb.management.users
 * @description
 * # User Management Module
 */
angular
  .module('udb.management.users', [
    'rx'
  ]);
'use strict';

/**
 * @ngdoc module
 * @name udb.management.moderation
 * @description
 * # Moderation Management Module
 */
angular
  .module('udb.management.moderation', [
    'rx'
  ]);
'use strict';

/**
 * @ngdoc module
 * @name udb.management.organizers
 * @description
 * # Organizers Management Module
 */
angular
  .module('udb.management.organizers', [
    'rx',
    'udb.event-form',
    'udb.organizers',
    'ngTagsInput'
  ]);
'use strict';

/**
 * @ngdoc module
 * @name udb.management
 * @description
 * # Management Module
 */
angular
  .module('udb.management', [
    'udb.core',
    'udb.management.labels',
    'udb.management.roles',
    'udb.management.users',
    'udb.management.moderation',
    'udb.management.organizers'
  ]);

'use strict';
angular.module('peg', []).factory('LuceneQueryParser', function () {
 return (function() {
  /*
   * Generated by PEG.js 0.8.0.
   *
   * http://pegjs.majda.cz/
   */

  function peg$subclass(child, parent) {
    function ctor() { this.constructor = child; }
    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function SyntaxError(message, expected, found, offset, line, column) {
    this.message  = message;
    this.expected = expected;
    this.found    = found;
    this.offset   = offset;
    this.line     = line;
    this.column   = column;

    this.name     = "SyntaxError";
  }

  peg$subclass(SyntaxError, Error);

  function parse(input) {
    var options = arguments.length > 1 ? arguments[1] : {},

        peg$FAILED = {},

        peg$startRuleFunctions = { start: peg$parsestart },
        peg$startRuleFunction  = peg$parsestart,

        peg$c0 = peg$FAILED,
        peg$c1 = [],
        peg$c2 = function(node) {
                return node[0];
            },
        peg$c3 = function() {
                return {};
            },
        peg$c4 = function(operator) {
                return {
                    'operator': operator
                    };
            },
        peg$c5 = function(operator, right) {
                return right;
            },
        peg$c6 = function(left, operator, right) {
                var node= {
                    'left':left
                    };

                var right =
                        right.length == 0
                        ? null
                        : right[0]['right'] == null
                            ? right[0]['left']
                            : right[0];

                if (right != null)
                {
                    node['operator'] = operator==''? '<implicit>' : operator[0];
                    node['right'] = right;
                }

                return node;
            },
        peg$c7 = function(field_exp) {
                return field_exp;
            },
        peg$c8 = "(",
        peg$c9 = { type: "literal", value: "(", description: "\"(\"" },
        peg$c10 = ")",
        peg$c11 = { type: "literal", value: ")", description: "\")\"" },
        peg$c12 = null,
        peg$c13 = function(fieldname, range) {
                range['field'] = fieldname || '<implicit>';

                return range;
            },
        peg$c14 = function(po, fieldname, node) {
                node['field']= fieldname;

                if(po) {
                    node.transformer = po;
                }

                return node;
            },
        peg$c15 = function(po, fieldname, term) {
                var fieldexp = {
                    'field': (fieldname || '<implicit>')
                    };

                if(po) {
                    fieldexp.transformer = po;
                }

                if(!fieldname && po) {
                    fieldexp.prefix = po;
                }

                for(var key in term)
                    fieldexp[key] = term[key];

                return fieldexp;
            },
        peg$c16 = /^[:<>]/,
        peg$c17 = { type: "class", value: "[:<>]", description: "[:<>]" },
        peg$c18 = function(fieldname) {
                return fieldname;
            },
        peg$c19 = /^[^: \t\r\n\f{}()+\-!"\^~[\]]/,
        peg$c20 = { type: "class", value: "[^: \\t\\r\\n\\f{}()+\\-!\"\\^~[\\]]", description: "[^: \\t\\r\\n\\f{}()+\\-!\"\\^~[\\]]" },
        peg$c21 = function(first_character, field) {
                return first_character + field.join('');
            },
        peg$c22 = /^[^: \t\r\n\f{}()+"\^~[\]]/,
        peg$c23 = { type: "class", value: "[^: \\t\\r\\n\\f{}()+\"\\^~[\\]]", description: "[^: \\t\\r\\n\\f{}()+\"\\^~[\\]]" },
        peg$c24 = function(op, term, proximity, boost) {
                var result = { 'term': term, 'quoted': true };

                if(proximity)
                {
                    result['proximity'] = proximity;
                }
                if(boost)
                {
                    result['boost'] = boost;
                }
                if(op)
                {
                    result['prefix'] = op;
                }

                return result;
            },
        peg$c25 = function(op, term, similarity, boost) {
                var result = { 'term': term };
                if(similarity)
                {
                    result['similarity'] = similarity;
                }
                if(boost)
                {
                    result['boost'] = boost;
                }
                if(op)
                {
                    result['prefix'] = op;
                }
                return result;
            },
        peg$c26 = /^[^,: \t\r\n\f{}()+\-"\^~[\]]/,
        peg$c27 = { type: "class", value: "[^,: \\t\\r\\n\\f{}()+\\-\"\\^~[\\]]", description: "[^,: \\t\\r\\n\\f{}()+\\-\"\\^~[\\]]" },
        peg$c28 = function(first_character, term) {
                return first_character + term.join('');
            },
        peg$c29 = /^[^, <>\t\r\n\f{}()"\^~[\]]/,
        peg$c30 = { type: "class", value: "[^, <>\\t\\r\\n\\f{}()\"\\^~[\\]]", description: "[^, <>\\t\\r\\n\\f{}()\"\\^~[\\]]" },
        peg$c31 = "\"",
        peg$c32 = { type: "literal", value: "\"", description: "\"\\\"\"" },
        peg$c33 = /^[^"]/,
        peg$c34 = { type: "class", value: "[^\"]", description: "[^\"]" },
        peg$c35 = function(term) {
                return term.join('');
            },
        peg$c36 = "~",
        peg$c37 = { type: "literal", value: "~", description: "\"~\"" },
        peg$c38 = function(proximity) {
                return proximity;
            },
        peg$c39 = "^",
        peg$c40 = { type: "literal", value: "^", description: "\"^\"" },
        peg$c41 = function(boost) {
                return boost;
            },
        peg$c42 = function(fuzziness) {
                return fuzziness || 0.5;
            },
        peg$c43 = "0.",
        peg$c44 = { type: "literal", value: "0.", description: "\"0.\"" },
        peg$c45 = /^[0-9]/,
        peg$c46 = { type: "class", value: "[0-9]", description: "[0-9]" },
        peg$c47 = function(val) {
                return parseFloat('0.' + val.join(''));
            },
        peg$c48 = function(val) {
                return parseInt(val.join(''));
            },
        peg$c49 = "[",
        peg$c50 = { type: "literal", value: "[", description: "\"[\"" },
        peg$c51 = "TO",
        peg$c52 = { type: "literal", value: "TO", description: "\"TO\"" },
        peg$c53 = "]",
        peg$c54 = { type: "literal", value: "]", description: "\"]\"" },
        peg$c55 = function(term_min, term_max) {
                return {
                    'lowerBound': term_min,
                    'upperBound': term_max,
                    'inclusive': true
                };
            },
        peg$c56 = "{",
        peg$c57 = { type: "literal", value: "{", description: "\"{\"" },
        peg$c58 = "}",
        peg$c59 = { type: "literal", value: "}", description: "\"}\"" },
        peg$c60 = function(term_min, term_max) {
                return {
                    'lowerBound': term_min,
                    'upperBound': term_max,
                    'inclusive': false
                };
            },
        peg$c61 = function(operator) {
                return operator;
            },
        peg$c62 = "OR",
        peg$c63 = { type: "literal", value: "OR", description: "\"OR\"" },
        peg$c64 = "AND",
        peg$c65 = { type: "literal", value: "AND", description: "\"AND\"" },
        peg$c66 = "NOT",
        peg$c67 = { type: "literal", value: "NOT", description: "\"NOT\"" },
        peg$c68 = "||",
        peg$c69 = { type: "literal", value: "||", description: "\"||\"" },
        peg$c70 = function() { return 'OR'; },
        peg$c71 = "&&",
        peg$c72 = { type: "literal", value: "&&", description: "\"&&\"" },
        peg$c73 = function() { return 'AND'; },
        peg$c74 = "+",
        peg$c75 = { type: "literal", value: "+", description: "\"+\"" },
        peg$c76 = "-",
        peg$c77 = { type: "literal", value: "-", description: "\"-\"" },
        peg$c78 = "!",
        peg$c79 = { type: "literal", value: "!", description: "\"!\"" },
        peg$c80 = { type: "other", description: "whitespace" },
        peg$c81 = /^[ \t\r\n\f]/,
        peg$c82 = { type: "class", value: "[ \\t\\r\\n\\f]", description: "[ \\t\\r\\n\\f]" },
        peg$c83 = void 0,
        peg$c84 = { type: "any", description: "any character" },

        peg$currPos          = 0,
        peg$reportedPos      = 0,
        peg$cachedPos        = 0,
        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },
        peg$maxFailPos       = 0,
        peg$maxFailExpected  = [],
        peg$silentFails      = 0,

        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function text() {
      return input.substring(peg$reportedPos, peg$currPos);
    }

    function offset() {
      return peg$reportedPos;
    }

    function line() {
      return peg$computePosDetails(peg$reportedPos).line;
    }

    function column() {
      return peg$computePosDetails(peg$reportedPos).column;
    }

    function expected(description) {
      throw peg$buildException(
        null,
        [{ type: "other", description: description }],
        peg$reportedPos
      );
    }

    function error(message) {
      throw peg$buildException(message, null, peg$reportedPos);
    }

    function peg$computePosDetails(pos) {
      function advance(details, startPos, endPos) {
        var p, ch;

        for (p = startPos; p < endPos; p++) {
          ch = input.charAt(p);
          if (ch === "\n") {
            if (!details.seenCR) { details.line++; }
            details.column = 1;
            details.seenCR = false;
          } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
            details.line++;
            details.column = 1;
            details.seenCR = true;
          } else {
            details.column++;
            details.seenCR = false;
          }
        }
      }

      if (peg$cachedPos !== pos) {
        if (peg$cachedPos > pos) {
          peg$cachedPos = 0;
          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };
        }
        advance(peg$cachedPosDetails, peg$cachedPos, pos);
        peg$cachedPos = pos;
      }

      return peg$cachedPosDetails;
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) { return; }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildException(message, expected, pos) {
      function cleanupExpected(expected) {
        var i = 1;

        expected.sort(function(a, b) {
          if (a.description < b.description) {
            return -1;
          } else if (a.description > b.description) {
            return 1;
          } else {
            return 0;
          }
        });

        while (i < expected.length) {
          if (expected[i - 1] === expected[i]) {
            expected.splice(i, 1);
          } else {
            i++;
          }
        }
      }

      function buildMessage(expected, found) {
        function stringEscape(s) {
          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }

          return s
            .replace(/\\/g,   '\\\\')
            .replace(/"/g,    '\\"')
            .replace(/\x08/g, '\\b')
            .replace(/\t/g,   '\\t')
            .replace(/\n/g,   '\\n')
            .replace(/\f/g,   '\\f')
            .replace(/\r/g,   '\\r')
            .replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(ch) { return '\\x0' + hex(ch); })
            .replace(/[\x10-\x1F\x80-\xFF]/g,    function(ch) { return '\\x'  + hex(ch); })
            .replace(/[\u0180-\u0FFF]/g,         function(ch) { return '\\u0' + hex(ch); })
            .replace(/[\u1080-\uFFFF]/g,         function(ch) { return '\\u'  + hex(ch); });
        }

        var expectedDescs = new Array(expected.length),
            expectedDesc, foundDesc, i;

        for (i = 0; i < expected.length; i++) {
          expectedDescs[i] = expected[i].description;
        }

        expectedDesc = expected.length > 1
          ? expectedDescs.slice(0, -1).join(", ")
              + " or "
              + expectedDescs[expected.length - 1]
          : expectedDescs[0];

        foundDesc = found ? "\"" + stringEscape(found) + "\"" : "end of input";

        return "Expected " + expectedDesc + " but " + foundDesc + " found.";
      }

      var posDetails = peg$computePosDetails(pos),
          found      = pos < input.length ? input.charAt(pos) : null;

      if (expected !== null) {
        cleanupExpected(expected);
      }

      return new SyntaxError(
        message !== null ? message : buildMessage(expected, found),
        expected,
        found,
        pos,
        posDetails.line,
        posDetails.column
      );
    }

    function peg$parsestart() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parse_();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parse_();
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsenode();
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsenode();
          }
        } else {
          s2 = peg$c0;
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c2(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = [];
        s2 = peg$parse_();
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parse_();
        }
        if (s1 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c3();
        }
        s0 = s1;
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parseEOF();
          if (s1 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c3();
          }
          s0 = s1;
        }
      }

      return s0;
    }

    function peg$parsenode() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      s1 = peg$parseoperator_exp();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseEOF();
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c4(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parseoperator_exp();
        if (s1 !== peg$FAILED) {
          s2 = peg$parsenode();
          if (s2 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c5(s1, s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parsegroup_exp();
          if (s1 !== peg$FAILED) {
            s2 = [];
            s3 = peg$parseoperator_exp();
            while (s3 !== peg$FAILED) {
              s2.push(s3);
              s3 = peg$parseoperator_exp();
            }
            if (s2 !== peg$FAILED) {
              s3 = [];
              s4 = peg$parsenode();
              while (s4 !== peg$FAILED) {
                s3.push(s4);
                s4 = peg$parsenode();
              }
              if (s3 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c6(s1, s2, s3);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        }
      }

      return s0;
    }

    function peg$parsegroup_exp() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      s1 = peg$parsefield_exp();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parse_();
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parse_();
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c7(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$parseparen_exp();
      }

      return s0;
    }

    function peg$parseparen_exp() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 40) {
        s1 = peg$c8;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c9); }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsenode();
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsenode();
          }
        } else {
          s2 = peg$c0;
        }
        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 41) {
            s3 = peg$c10;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c11); }
          }
          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parse_();
            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parse_();
            }
            if (s4 !== peg$FAILED) {
              peg$reportedPos = s0;
              s1 = peg$c2(s2);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parsefield_exp() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      s1 = peg$parsefieldname();
      if (s1 === peg$FAILED) {
        s1 = peg$c12;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parserange_operator_exp();
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c13(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parseprefix_operator();
        if (s1 === peg$FAILED) {
          s1 = peg$c12;
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parsefieldname();
          if (s2 !== peg$FAILED) {
            s3 = peg$parseparen_exp();
            if (s3 !== peg$FAILED) {
              peg$reportedPos = s0;
              s1 = peg$c14(s1, s2, s3);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parseprefix_operator();
          if (s1 === peg$FAILED) {
            s1 = peg$c12;
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parsefieldname();
            if (s2 === peg$FAILED) {
              s2 = peg$c12;
            }
            if (s2 !== peg$FAILED) {
              s3 = peg$parseterm();
              if (s3 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c15(s1, s2, s3);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        }
      }

      return s0;
    }

    function peg$parsefieldname() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = peg$parseunquoted_field();
      if (s1 !== peg$FAILED) {
        if (peg$c16.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c17); }
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c18(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseunquoted_field() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (peg$c19.test(input.charAt(peg$currPos))) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c20); }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsefield_char();
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsefield_char();
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c21(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parsefield_char() {
      var s0;

      if (peg$c22.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c23); }
      }

      return s0;
    }

    function peg$parseterm() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      s1 = peg$parseprefix_operator_exp();
      if (s1 === peg$FAILED) {
        s1 = peg$c12;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parsequoted_term();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseproximity_modifier();
          if (s3 === peg$FAILED) {
            s3 = peg$c12;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parseboost_modifier();
            if (s4 === peg$FAILED) {
              s4 = peg$c12;
            }
            if (s4 !== peg$FAILED) {
              s5 = [];
              s6 = peg$parse_();
              while (s6 !== peg$FAILED) {
                s5.push(s6);
                s6 = peg$parse_();
              }
              if (s5 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c24(s1, s2, s3, s4);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parseprefix_operator_exp();
        if (s1 === peg$FAILED) {
          s1 = peg$c12;
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parseunquoted_term();
          if (s2 !== peg$FAILED) {
            s3 = peg$parsefuzzy_modifier();
            if (s3 === peg$FAILED) {
              s3 = peg$c12;
            }
            if (s3 !== peg$FAILED) {
              s4 = peg$parseboost_modifier();
              if (s4 === peg$FAILED) {
                s4 = peg$c12;
              }
              if (s4 !== peg$FAILED) {
                s5 = [];
                s6 = peg$parse_();
                while (s6 !== peg$FAILED) {
                  s5.push(s6);
                  s6 = peg$parse_();
                }
                if (s5 !== peg$FAILED) {
                  peg$reportedPos = s0;
                  s1 = peg$c25(s1, s2, s3, s4);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$c0;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      }

      return s0;
    }

    function peg$parseunquoted_term() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (peg$c26.test(input.charAt(peg$currPos))) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c27); }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parseterm_char();
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parseterm_char();
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c28(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseterm_char() {
      var s0;

      if (peg$c29.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c30); }
      }

      return s0;
    }

    function peg$parsequoted_term() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 34) {
        s1 = peg$c31;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c32); }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        if (peg$c33.test(input.charAt(peg$currPos))) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c34); }
        }
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            if (peg$c33.test(input.charAt(peg$currPos))) {
              s3 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c34); }
            }
          }
        } else {
          s2 = peg$c0;
        }
        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 34) {
            s3 = peg$c31;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c32); }
          }
          if (s3 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c35(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseproximity_modifier() {
      var s0, s1, s2;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 126) {
        s1 = peg$c36;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c37); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseint_exp();
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c38(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseboost_modifier() {
      var s0, s1, s2;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 94) {
        s1 = peg$c39;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c40); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parsedecimal_or_int_exp();
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c41(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parsefuzzy_modifier() {
      var s0, s1, s2;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 126) {
        s1 = peg$c36;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c37); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parsedecimal_exp();
        if (s2 === peg$FAILED) {
          s2 = peg$c12;
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c42(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parsedecimal_or_int_exp() {
      var s0;

      s0 = peg$parsedecimal_exp();
      if (s0 === peg$FAILED) {
        s0 = peg$parseint_exp();
      }

      return s0;
    }

    function peg$parsedecimal_exp() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 2) === peg$c43) {
        s1 = peg$c43;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c44); }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        if (peg$c45.test(input.charAt(peg$currPos))) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c46); }
        }
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            if (peg$c45.test(input.charAt(peg$currPos))) {
              s3 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c46); }
            }
          }
        } else {
          s2 = peg$c0;
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c47(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseint_exp() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = [];
      if (peg$c45.test(input.charAt(peg$currPos))) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c46); }
      }
      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          if (peg$c45.test(input.charAt(peg$currPos))) {
            s2 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s2 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c46); }
          }
        }
      } else {
        s1 = peg$c0;
      }
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c48(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parserange_operator_exp() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 91) {
        s1 = peg$c49;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c50); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseunquoted_term();
        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parse_();
          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parse_();
          }
          if (s3 !== peg$FAILED) {
            if (input.substr(peg$currPos, 2) === peg$c51) {
              s4 = peg$c51;
              peg$currPos += 2;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c52); }
            }
            if (s4 !== peg$FAILED) {
              s5 = [];
              s6 = peg$parse_();
              if (s6 !== peg$FAILED) {
                while (s6 !== peg$FAILED) {
                  s5.push(s6);
                  s6 = peg$parse_();
                }
              } else {
                s5 = peg$c0;
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$parseunquoted_term();
                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 93) {
                    s7 = peg$c53;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c54); }
                  }
                  if (s7 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c55(s2, s6);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c0;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c0;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 123) {
          s1 = peg$c56;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c57); }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parseunquoted_term();
          if (s2 !== peg$FAILED) {
            s3 = [];
            s4 = peg$parse_();
            while (s4 !== peg$FAILED) {
              s3.push(s4);
              s4 = peg$parse_();
            }
            if (s3 !== peg$FAILED) {
              if (input.substr(peg$currPos, 2) === peg$c51) {
                s4 = peg$c51;
                peg$currPos += 2;
              } else {
                s4 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c52); }
              }
              if (s4 !== peg$FAILED) {
                s5 = [];
                s6 = peg$parse_();
                if (s6 !== peg$FAILED) {
                  while (s6 !== peg$FAILED) {
                    s5.push(s6);
                    s6 = peg$parse_();
                  }
                } else {
                  s5 = peg$c0;
                }
                if (s5 !== peg$FAILED) {
                  s6 = peg$parseunquoted_term();
                  if (s6 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 125) {
                      s7 = peg$c58;
                      peg$currPos++;
                    } else {
                      s7 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c59); }
                    }
                    if (s7 !== peg$FAILED) {
                      peg$reportedPos = s0;
                      s1 = peg$c60(s2, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$c0;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c0;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c0;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 123) {
            s1 = peg$c56;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c57); }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parseunquoted_term();
            if (s2 !== peg$FAILED) {
              s3 = [];
              s4 = peg$parse_();
              while (s4 !== peg$FAILED) {
                s3.push(s4);
                s4 = peg$parse_();
              }
              if (s3 !== peg$FAILED) {
                if (input.substr(peg$currPos, 2) === peg$c51) {
                  s4 = peg$c51;
                  peg$currPos += 2;
                } else {
                  s4 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c52); }
                }
                if (s4 !== peg$FAILED) {
                  s5 = [];
                  s6 = peg$parse_();
                  if (s6 !== peg$FAILED) {
                    while (s6 !== peg$FAILED) {
                      s5.push(s6);
                      s6 = peg$parse_();
                    }
                  } else {
                    s5 = peg$c0;
                  }
                  if (s5 !== peg$FAILED) {
                    s6 = peg$parseunquoted_term();
                    if (s6 !== peg$FAILED) {
                      if (input.charCodeAt(peg$currPos) === 93) {
                        s7 = peg$c53;
                        peg$currPos++;
                      } else {
                        s7 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c54); }
                      }
                      if (s7 !== peg$FAILED) {
                        peg$reportedPos = s0;
                        s1 = peg$c55(s2, s6);
                        s0 = s1;
                      } else {
                        peg$currPos = s0;
                        s0 = peg$c0;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$c0;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c0;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c0;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 91) {
              s1 = peg$c49;
              peg$currPos++;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c50); }
            }
            if (s1 !== peg$FAILED) {
              s2 = peg$parseunquoted_term();
              if (s2 !== peg$FAILED) {
                s3 = [];
                s4 = peg$parse_();
                while (s4 !== peg$FAILED) {
                  s3.push(s4);
                  s4 = peg$parse_();
                }
                if (s3 !== peg$FAILED) {
                  if (input.substr(peg$currPos, 2) === peg$c51) {
                    s4 = peg$c51;
                    peg$currPos += 2;
                  } else {
                    s4 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c52); }
                  }
                  if (s4 !== peg$FAILED) {
                    s5 = [];
                    s6 = peg$parse_();
                    if (s6 !== peg$FAILED) {
                      while (s6 !== peg$FAILED) {
                        s5.push(s6);
                        s6 = peg$parse_();
                      }
                    } else {
                      s5 = peg$c0;
                    }
                    if (s5 !== peg$FAILED) {
                      s6 = peg$parseunquoted_term();
                      if (s6 !== peg$FAILED) {
                        if (input.charCodeAt(peg$currPos) === 125) {
                          s7 = peg$c58;
                          peg$currPos++;
                        } else {
                          s7 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c59); }
                        }
                        if (s7 !== peg$FAILED) {
                          peg$reportedPos = s0;
                          s1 = peg$c55(s2, s6);
                          s0 = s1;
                        } else {
                          peg$currPos = s0;
                          s0 = peg$c0;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$c0;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$c0;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c0;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c0;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          }
        }
      }

      return s0;
    }

    function peg$parseoperator_exp() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parse_();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parse_();
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseoperator();
        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            while (s4 !== peg$FAILED) {
              s3.push(s4);
              s4 = peg$parse_();
            }
          } else {
            s3 = peg$c0;
          }
          if (s3 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c61(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = [];
        s2 = peg$parse_();
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parse_();
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parseoperator();
          if (s2 !== peg$FAILED) {
            s3 = peg$parseEOF();
            if (s3 !== peg$FAILED) {
              peg$reportedPos = s0;
              s1 = peg$c61(s2);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      }

      return s0;
    }

    function peg$parseoperator() {
      var s0, s1;

      if (input.substr(peg$currPos, 2) === peg$c62) {
        s0 = peg$c62;
        peg$currPos += 2;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c63); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 3) === peg$c64) {
          s0 = peg$c64;
          peg$currPos += 3;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c65); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 3) === peg$c66) {
            s0 = peg$c66;
            peg$currPos += 3;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c67); }
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.substr(peg$currPos, 2) === peg$c68) {
              s1 = peg$c68;
              peg$currPos += 2;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c69); }
            }
            if (s1 !== peg$FAILED) {
              peg$reportedPos = s0;
              s1 = peg$c70();
            }
            s0 = s1;
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              if (input.substr(peg$currPos, 2) === peg$c71) {
                s1 = peg$c71;
                peg$currPos += 2;
              } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c72); }
              }
              if (s1 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c73();
              }
              s0 = s1;
            }
          }
        }
      }

      return s0;
    }

    function peg$parseprefix_operator_exp() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parse_();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parse_();
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseprefix_operator();
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c61(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseprefix_operator() {
      var s0;

      if (input.charCodeAt(peg$currPos) === 43) {
        s0 = peg$c74;
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c75); }
      }
      if (s0 === peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 45) {
          s0 = peg$c76;
          peg$currPos++;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c77); }
        }
        if (s0 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 33) {
            s0 = peg$c78;
            peg$currPos++;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c79); }
          }
        }
      }

      return s0;
    }

    function peg$parse_() {
      var s0, s1;

      peg$silentFails++;
      s0 = [];
      if (peg$c81.test(input.charAt(peg$currPos))) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c82); }
      }
      if (s1 !== peg$FAILED) {
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          if (peg$c81.test(input.charAt(peg$currPos))) {
            s1 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c82); }
          }
        }
      } else {
        s0 = peg$c0;
      }
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c80); }
      }

      return s0;
    }

    function peg$parseEOF() {
      var s0, s1;

      s0 = peg$currPos;
      peg$silentFails++;
      if (input.length > peg$currPos) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c84); }
      }
      peg$silentFails--;
      if (s1 === peg$FAILED) {
        s0 = peg$c83;
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail({ type: "end", description: "end of input" });
      }

      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);
    }
  }

  return {
    SyntaxError: SyntaxError,
    parse:       parse
  };
})()
});
'use strict';

/**
 * @ngdoc module
 * @name udb.uitpas
 * @description
 * The UDB UiTPAS module
 */
angular
  .module('udb.uitpas', [
    'ui.bootstrap'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.migration
 * @description
 * # Migration Module
 */
angular
  .module('udb.migration', [
    'udb.core',
    'udb.event-form',
    'ui.router'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.duplication
 * @description
 * # Duplication Module
 */
angular
  .module('udb.duplication', [
    'udb.core',
    'udb.event-form',
    'udb.migration'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.cultuurkuur
 * @description
 * # Cultuurkuur Module
 */
angular
  .module('udb.cultuurkuur', [
    'udb.core',
    'udb.event-detail',
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.organizers
 * @description
 * # Organizers Module
 */
angular
  .module('udb.organizers', [
    'rx',
    'udb.event-form',
    'ngTagsInput'
  ]);})();

// Source: src/core/authorization-service.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.core.authorizationService
 * @description
 * # authorizationService
 * Service in the udb.core.
 */
angular
  .module('udb.core')
  .constant('authorization', {
    'editOffer': 'AANBOD_BEWERKEN',
    'moderateOffer': 'AANBOD_MODEREREN',
    'removeOffer': 'AANBOD_VERWIJDEREN',
    'manageOrganisations': 'ORGANISATIES_BEHEREN',
    'manageUsers': 'GEBRUIKERS_BEHEREN',
    'manageLabels': 'LABELS_BEHEREN',
    'editFacilities': 'VOORZIENINGEN_BEWERKEN',
    'createProductions': 'PRODUCTIES_AANMAKEN',
    'createMovies': 'FILMS_AANMAKEN',
  })
  .service('authorizationService', AuthorizationService);

/* @ngInject */
function AuthorizationService($q, uitidAuth, udbApi, $location, $rootScope, $translate) {
  this.isLoggedIn = function () {
    var deferred = $q.defer();

    var deferredUser = udbApi.getMe();
    deferredUser.then(
      function (user) {
        $rootScope.$emit('userLoggedIn', user);
        deferred.resolve(user);
      },
      function () {
        uitidAuth.login();

        // We are redirecting away from the current page, so no need to
        // resolve or reject the deferred.
      }
    );

    return deferred.promise;
  };

  /**
   * @param {string} path
   * @return {Promise.<boolean>}
   *  Resolves to TRUE when no user is logged in and no redirect has occurred.
   */
  this.redirectIfLoggedIn = function (path) {
    var deferredRedirect = $q.defer();

    function redirect() {
      $location.path(path);
      deferredRedirect.resolve(false);
    }

    if (uitidAuth.getToken()) {
      udbApi
        .getMe()
        .then(redirect, deferredRedirect.reject)
        // Send an emit u
        .finally(function () {
          $rootScope.$emit('$changeLocales', $translate.use());
        });
    } else {
      deferredRedirect.resolve(true);
    }

    return deferredRedirect.promise;
  };

  /**
   * @param {string} permission - One of the authorization constants
   */
  this.hasPermission = function (permission) {
    var deferredHasPermission = $q.defer();

    function findPermission(permissionList) {
      var foundPermission = _.find(permissionList, function(p) { return p === permission; });
      deferredHasPermission.resolve(foundPermission ? true : false);
    }

    udbApi
      .getMyPermissions()
      .then(findPermission, deferredHasPermission.reject);

    return deferredHasPermission.promise;
  };

  /**
   * @return RolePermission[]
   */
  this.getPermissions = function () {
    return udbApi.getMyPermissions();
  };

  this.isGodUser = function () {
    return this.hasPermission('GEBRUIKERS_BEHEREN');
  };
}
AuthorizationService.$inject = ["$q", "uitidAuth", "udbApi", "$location", "$rootScope", "$translate"];
})();

// Source: src/core/city-autocomplete.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.core.CityAutocomplete
 * @description
 * Service for city autocompletes.
 */
angular
  .module('udb.core')
  .service('cityAutocomplete', CityAutocomplete);

/* @ngInject */
function CityAutocomplete($q, $http, appConfig, UdbPlace, jsonLDLangFilter) {
  /**
   *
   * Get the places for a city
   *
   * @param {string} zipcode
   * @param {string} country
   * @param {string} freeTextSearch
   * @returns {Promise}
   */
  this.getPlacesByZipcode = function(zipcode, country, freeTextSearch) {
    var deferredPlaces = $q.defer();
    var url = appConfig.baseUrl + 'places/';
    var config = {
      headers: {
        'X-Api-Key': _.get(appConfig, 'apiKey')
      },
      params: {
        'postalCode': zipcode,
        'addressCountry': country,
        'workflowStatus': 'DRAFT,READY_FOR_VALIDATION,APPROVED',
        'disableDefaultFilters': true,
        'isDuplicate': false,
        'embed': true,
        'limit': 1000,
        'sort[created]': 'asc'
      }
    };

    // Add extra param to config if the free text search is defined
    if (freeTextSearch) {
      config.params.text = '*' + freeTextSearch + '*';
    }

    var parsePagedCollection = function (response) {
      var locations = _.map(response.data.member, function (placeJson) {
        var place = new UdbPlace(placeJson);
        return jsonLDLangFilter(place, 'nl');
      });

      deferredPlaces.resolve(locations);
    };

    var failed = function () {
      deferredPlaces.reject('something went wrong while getting places for city with zipcode: ' + zipcode);
    };

    $http.get(url, config).then(parsePagedCollection, failed);

    return deferredPlaces.promise;
  };

  /**
   *
   * Get the places for a city
   *
   * @param {string} city
   * @param {string} country
   * @returns {Promise}
   */
  this.getPlacesByCity = function(city, country) {

    var deferredPlaces = $q.defer();
    var url = appConfig.baseUrl + 'places/';
    var config = {
      headers: {
        'X-Api-Key': _.get(appConfig, 'apiKey')
      },
      params: {
        'q': 'address.\\*.addressLocality:' + city,
        'addressCountry': country,
        'workflowStatus': 'DRAFT,READY_FOR_VALIDATION,APPROVED',
        'disableDefaultFilters': true,
        'embed': true,
        'limit': 1000,
        'sort[created]': 'asc'
      }
    };

    var parsePagedCollection = function (response) {
      var locations = _.map(response.data.member, function (placeJson) {
        var place = new UdbPlace(placeJson);
        return jsonLDLangFilter(place, 'nl');
      });

      deferredPlaces.resolve(locations);
    };

    var failed = function () {
      deferredPlaces.reject('something went wrong while getting places for city with city: ' + city);
    };

    $http.get(url, config).then(parsePagedCollection, failed);

    return deferredPlaces.promise;
  };

  /**
   *
   * Get place by id
   *
   * @param {string} id
   * @returns {Promise}
   */
  this.getPlaceById = function(id) {

    var deferredPlace = $q.defer();
    var url = appConfig.baseUrl + 'place/' + id;
    var config = {
      headers: {
        'X-Api-Key': _.get(appConfig, 'apiKey')
      }
    };

    var parsePagedCollection = function (response) {
      var location = new UdbPlace(response.data);
      location = jsonLDLangFilter(location, 'nl');

      deferredPlace.resolve(location);
    };

    var failed = function () {
      deferredPlace.reject('something went wrong while getting place by id with id: ' + id);
    };

    $http.get(url, config).then(parsePagedCollection, failed);

    return deferredPlace.promise;
  };

}
CityAutocomplete.$inject = ["$q", "$http", "appConfig", "UdbPlace", "jsonLDLangFilter"];
})();

// Source: src/core/components/calendar-summary/calendar-summary.controller.js
(function () {
'use strict';

angular
  .module('udb.core')
  .controller('CalendarSummaryController', calendarSummaryController);

function calendarSummaryController($scope) {
  $scope.getOpeningHoursCount = function(offer) {
    if (offer.calendarType === 'single' && offer.startDate !== offer.endDate) {
      offer.openingHours = [{
        startDate: offer.startDate,
        endDate: offer.endDate
      }];
    }
    return offer.openingHours.length;
  };
}
calendarSummaryController.$inject = ["$scope"];
})();

// Source: src/core/components/calendar-summary/calendar-summary.directive.js
(function () {
'use strict';

angular
  .module('udb.core')
  .directive('udbCalendarSummary', udbCalendarSummary);

function udbCalendarSummary() {
  return {
    restrict: 'E',
    scope: {
      offer: '=',
      showOpeningHours: '='
    },
    templateUrl: 'templates/calendar-summary.directive.html',
    controller: 'CalendarSummaryController'
  };
}
})();

// Source: src/core/components/image-detail/image-detail.directive.js
(function () {
'use strict';

/**
 * @ngdoc component
 * @name udb.image-detail.directive:Image-detail
 * @description
 * # Image-detail
 */
angular
  .module('udb.core')
  .directive('udbImageDetail', function () {
    return {
      templateUrl: 'templates/image-detail.directive.html',
      controller: ImageDetailController,
      restrict: 'A',
      scope: {
        images: '<udbImageDetail',
        main : '<image'
      }
    };
  });

/* @ngInject */
function ImageDetailController($scope, $translate) {
  $scope.language = $translate.use() || 'nl';

  angular.forEach($scope.images, function(image) {
    if (image.contentUrl === $scope.main) {
      image.main = true;
      var reindexedMedia = _.without($scope.images, image);
      reindexedMedia.unshift(image);
      $scope.images = reindexedMedia;
    }
  });

  $scope.translateImageDetail = function (label, translationData) {
    translationData = (translationData !== undefined) ? translationData : {};
    return $translate.instant('imageDetail.' + label, translationData);
  };
}
ImageDetailController.$inject = ["$scope", "$translate"];
})();

// Source: src/core/components/multiselect/multiselect.directive.js
(function () {
(function () {
  'use strict';

  /**
   * @ngdoc directive
   * @name udb.core.directive:udbMultiselect
   * @description
   * # directive for bootstrap-multiselect integration
   */
  angular
  .module('udb.core')
  .directive('udbMultiselect', udbMultiselectDirective);

  function udbMultiselectDirective() {

    return {
      restrict: 'A',
      require: 'ngModel',
      link: function (scope, elem, attrs, ngModel) {

        elem.multiselect({
          buttonText: function(options, select) {
            if (options.length > 0) {
              var labels = [];
              options.each(function() {
                labels.push(angular.element(this).html().substring(0, 2));
              });
              return labels.join(', ') + ' ';
            }
            else {
              return attrs.startLabel;
            }
          }
        });

        // Watch for any changes from outside the directive and refresh
        scope.$watch(attrs.ngModel, function () {
          elem.multiselect('refresh');
        });

      }

    };
  }

})();
})();

// Source: src/core/components/time/time.directive.js
(function () {
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.core.directive:udbTime
 * @description
 * # udbTime
 */
angular
  .module('udb.core')
  .directive('udbTime', udbTimeDirective);

function udbTimeDirective() {
  return {
    restrict: 'A',
    require: 'ngModel',
    link: link
  };

  function link (scope, elem, attr, ngModel) {

    if (!ngModel) {
      return;
    }

    if (attr.type !== 'time') {
      return;
    }

    ngModel.$formatters.unshift(function(value) {
      return value.replace(/:\d{2}[.,]\d{3}$/, '');
    });

    /*elem.bind('blur', function() {
      elem.toggleClass('has-error', elem.$invalid);
    });*/
  }
}
})();
})();

// Source: src/core/components/workflow-status/udb.workflow-status.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.core.directive: udbWorkflowStatus
 * @description
 * # udbWorkflowStatus
 */
angular
  .module('udb.core')
  .directive('udbWorkflowStatus', function () {
    return {
      templateUrl: 'templates/udb.workflow-status.directive.html',
      controller: WorkflowStatusDirectiveController,
      controllerAs: 'cm',
      restrict: 'A',
      scope: {
        event: '<udbWorkflowStatus'
      }
    };
  });

/* @ngInject */
function WorkflowStatusDirectiveController($scope, appConfig) {
  var cm = this;
  cm.event = $scope.event;
  cm.sameAsRelations = sameAsRelations;
  cm.isUrl = isUrl;
  cm.getPublicUrl = getPublicUrl;
  cm.showPublicUrl = showPublicUrl;
  cm.getCultuurkuurKUrl = getCultuurKuurKUrl;
  cm.showCultuurkuurUrl = showCultuurkuurUrl;

  cm.publicationRulesLink = appConfig.publicationRulesLink;
  cm.publicationBrand = appConfig.publicationUrl.brand;

  function sameAsRelations (event) {
    var sameAsRelationsWithoutUIV = _.reject(event.sameAs, function(sameAs) {
      return sameAs.contains('uitinvlaanderen');
    });
    return sameAsRelationsWithoutUIV;
  }

  function isUrl (potentialUrl) {
    return /^(https?)/.test(potentialUrl);
  }

  function getPublicUrl (id) {
    if (isPlace()) {
      if (appConfig.publicationUrl.place) {
        return appConfig.publicationUrl.place + id;
      } else {
        return false;
      }
    } else {
      if (appConfig.publicationUrl.event) {
        return appConfig.publicationUrl.event + id;
      } else {
        return false;
      }
    }
  }

  /**
   * show the publication url
   * @returns {boolean}
   */
  function showPublicUrl () {
    return isPlace() || cm.event.audience.audienceType === 'everyone';
  }

  /**
   * get the url for cultuurkuur
   * @param {string} cdbid
   */
  function getCultuurKuurKUrl (cdbid) {
    if (appConfig.cultuurkuur.cultuurkuurUrl) {
      return appConfig.cultuurkuur.cultuurkuurUrl + 'agenda/e/x/' + cdbid;
    } else {
      return false;
    }
  }

  /**
   * show the publication url
   * @returns {boolean}
   */
  function showCultuurkuurUrl () {
    return !isPlace() && cm.event.audience.audienceType === 'education';
  }

  function isPlace() {
    if (_.includes(cm.event.url, 'place')) {
      return true;
    }
    else {
      return false;
    }
  }
}
WorkflowStatusDirectiveController.$inject = ["$scope", "appConfig"];
})();

// Source: src/core/error-handling/unexpected-error-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.core.controller:UnexpectedErrorModalController
 * @description
 * # UnexpectedErrorModalController
 * Controller of the udb.core
 */
angular
  .module('udb.core')
  .controller('UnexpectedErrorModalController', UnexpectedErrorModalController);

/* @ngInject */
function UnexpectedErrorModalController($scope, $uibModalInstance, errorMessage) {

  var dismiss = function () {
    $uibModalInstance.dismiss('closed');
  };

  $scope.dismiss = dismiss;
  $scope.errorMessage = errorMessage;
}
UnexpectedErrorModalController.$inject = ["$scope", "$uibModalInstance", "errorMessage"];
})();

// Source: src/core/translations/dutch-translations.constant.js
(function () {
'use strict';
// jscs:disable maximumLineLength

/**
 * @ngdoc service
 * @name udbApp.udbDutchTranslations
 * @description
 * # udbDutchTranslations
 * Constant in the udbApp.
 */
angular.module('udb.core')
  .constant('udbDutchTranslations',
  {
    'BE': 'België',
    'NL': 'Nederland',
    'ZZ': 'Locatie in overleg met de school',
    'EN_ADJECTIVE': 'Engelse',
    'FR_ADJECTIVE': 'Franse',
    'DE_ADJECTIVE': 'Duitse',
    'NL_ADJECTIVE': 'Nederlandse',
    'datepicker': {
      'CURRENT': 'Vandaag',
      'CLEAR': 'Verwijder',
      'CLOSE': 'Sluiten'
    },
    '=': 'is gelijk aan',
    '><': 'tussen',
    '+': 'is gelijk aan',
    '!': 'is niet gelijk aan',
    '-': 'is niet gelijk aan',
    '>': 'is groter of gelijk aan',
    '<': 'is kleiner of gelijk aan',
    '>_DATE': 'later dan',
    '<_DATE': 'vroeger dan',
    '=_DATE': 'is gelijk aan',
    '><_DATE': 'tussen',
    'choice': {
      'everyone': 'iedereen',
      'members': 'leden',
      'education': 'onderwijs',
      'Available': 'Gaat door',
      'Unavailable': 'Geannuleerd',
      'TemporarilyUnavailable': 'Uitgesteld',
      'available': 'Beschikbaar',
      'unavailable': 'Volzet of uitverkocht',
      'online': 'online',
      'offline': 'fysiek',
      'mixed': 'gemengd (fysiek / online)',
      'asc': 'oplopend',
      'desc': 'aflopend',
      'today': 'vandaag',
      'tomorrow': 'morgen',
      'thisweekend': 'dit weekend',
      'nextweekend': 'volgend weekend',
      'next7days': 'volgende 7 dagen',
      'next14days': 'volgende 14 dagen',
      'next30days': 'volgende 30 dagen',
      'next3months': 'volgende 3 maanden',
      'next6months': 'volgende 6 maanden',
      'next12months': 'volgende 12 maanden',
      'permanent': 'permanent',
      'event': 'event',
      'place': 'locatie',
      'actor': 'actor',
      'production': 'productie',
      'nl': 'Nederlands',
      'fr': 'Frans',
      'en': 'Engels',
      'de': 'Duits',
      'AF': 'Afghanistan',
      'AX': 'Alandeilanden',
      'AL': 'Albanië',
      'DZ': 'Algerije',
      'AS': 'Amerikaans Samoa',
      'VI': 'Amerikaanse Maagdeneilanden',
      'UM': 'Amerikaanse kleinere afgelegen eilanden',
      'AD': 'Andorra',
      'AO': 'Angola',
      'AI': 'Anguilla',
      'AQ': 'Antarctica',
      'AG': 'Antigua en Barbuda',
      'AR': 'Argentinië',
      'AM': 'Armenië',
      'AW': 'Aruba',
      'AU': 'Australië',
      'AZ': 'Azerbeidzjan',
      'BS': 'Bahama’s',
      'BH': 'Bahrein',
      'BD': 'Bangladesh',
      'BB': 'Barbados',
      'BE': 'België',
      'BZ': 'Belize',
      'BJ': 'Benin',
      'BM': 'Bermuda',
      'BT': 'Bhutan',
      'BO': 'Bolivia',
      'BA': 'Bosnië en Herzegovina',
      'BW': 'Botswana',
      'BV': 'Bouveteiland',
      'BR': 'Brazilië',
      'IO': 'Britse Gebieden in de Indische Oceaan',
      'VG': 'Britse Maagdeneilanden',
      'BN': 'Brunei',
      'BG': 'Bulgarije',
      'BF': 'Burkina Faso',
      'BI': 'Burundi',
      'KH': 'Cambodja',
      'CA': 'Canada',
      'KY': 'Caymaneilanden',
      'CF': 'Centraal-Afrikaanse Republiek',
      'CL': 'Chili',
      'CN': 'China',
      'CX': 'Christmaseiland',
      'CC': 'Cocoseilanden',
      'CO': 'Colombia',
      'KM': 'Comoren',
      'CG': 'Congo',
      'CD': 'Congo-Kinshasa',
      'CK': 'Cookeilanden',
      'CR': 'Costa Rica',
      'CU': 'Cuba',
      'CY': 'Cyprus',
      'DK': 'Denemarken',
      'DJ': 'Djibouti',
      'DM': 'Dominica',
      'DO': 'Dominicaanse Republiek',
      'DE': 'Duitsland',
      'EC': 'Ecuador',
      'EG': 'Egypte',
      'SV': 'El Salvador',
      'GQ': 'Equatoriaal-Guinea',
      'ER': 'Eritrea',
      'EE': 'Estland',
      'ET': 'Ethiopië',
      'FO': 'Faeröer',
      'FK': 'Falklandeilanden',
      'FJ': 'Fiji',
      'PH': 'Filipijnen',
      'FI': 'Finland',
      'FR': 'Frankrijk',
      'GF': 'Frans-Guyana',
      'PF': 'Frans-Polynesië',
      'TF': 'Franse Gebieden in de zuidelijke Indische Oceaan',
      'GA': 'Gabon',
      'GM': 'Gambia',
      'GE': 'Georgië',
      'GH': 'Ghana',
      'GI': 'Gibraltar',
      'GD': 'Grenada',
      'GR': 'Griekenland',
      'GL': 'Groenland',
      'GP': 'Guadeloupe',
      'GU': 'Guam',
      'GT': 'Guatemala',
      'GG': 'Guernsey',
      'GN': 'Guinee',
      'GW': 'Guinee-Bissau',
      'GY': 'Guyana',
      'HT': 'Haïti',
      'HM': 'Heard- en McDonaldeilanden',
      'IM': 'Het Eiland Man',
      'HN': 'Honduras',
      'HU': 'Hongarije',
      'HK': 'Hongkong SAR van China',
      'IS': 'IJsland',
      'IE': 'Ierland',
      'IN': 'India',
      'ID': 'Indonesië',
      'IQ': 'Irak',
      'IR': 'Iran',
      'IL': 'Israël',
      'IT': 'Italië',
      'CI': 'Ivoorkust',
      'JM': 'Jamaica',
      'JP': 'Japan',
      'YE': 'Jemen',
      'JE': 'Jersey',
      'JO': 'Jordanië',
      'CV': 'Kaapverdië',
      'CM': 'Kameroen',
      'KZ': 'Kazachstan',
      'KE': 'Kenia',
      'KG': 'Kirgizië',
      'KI': 'Kiribati',
      'KW': 'Koeweit',
      'HR': 'Kroatië',
      'LA': 'Laos',
      'LS': 'Lesotho',
      'LV': 'Letland',
      'LB': 'Libanon',
      'LR': 'Liberia',
      'LY': 'Libië',
      'LI': 'Liechtenstein',
      'LT': 'Litouwen',
      'LU': 'Luxemburg',
      'MO': 'Macao SAR van China',
      'MK': 'Macedonië',
      'MG': 'Madagaskar',
      'MW': 'Malawi',
      'MV': 'Malediven',
      'MY': 'Maleisië',
      'ML': 'Mali',
      'MT': 'Malta',
      'MA': 'Marokko',
      'MH': 'Marshalleilanden',
      'MQ': 'Martinique',
      'MR': 'Mauritanië',
      'MU': 'Mauritius',
      'YT': 'Mayotte',
      'MX': 'Mexico',
      'FM': 'Micronesië',
      'MD': 'Moldavië',
      'MC': 'Monaco',
      'MN': 'Mongolië',
      'ME': 'Montenegro',
      'MS': 'Montserrat',
      'MZ': 'Mozambique',
      'MM': 'Myanmar',
      'NA': 'Namibië',
      'NR': 'Nauru',
      'NL': 'Nederland',
      'AN': 'Nederlandse Antillen',
      'NP': 'Nepal',
      'NI': 'Nicaragua',
      'NC': 'Nieuw-Caledonië',
      'NZ': 'Nieuw-Zeeland',
      'NE': 'Niger',
      'NG': 'Nigeria',
      'NU': 'Niue',
      'KP': 'Noord-Korea',
      'MP': 'Noordelijke Marianeneilanden',
      'NO': 'Noorwegen',
      'NF': 'Norfolkeiland',
      'UG': 'Oeganda',
      'UA': 'Oekraïne',
      'UZ': 'Oezbekistan',
      'OM': 'Oman',
      'ZZ': 'Onbekend of onjuist gebied',
      'TL': 'Oost-Timor',
      'AT': 'Oostenrijk',
      'PK': 'Pakistan',
      'PW': 'Palau',
      'PS': 'Palestijns Gebied',
      'PA': 'Panama',
      'PG': 'Papoea-Nieuw-Guinea',
      'PY': 'Paraguay',
      'PE': 'Peru',
      'PN': 'Pitcairn',
      'PL': 'Polen',
      'PT': 'Portugal',
      'PR': 'Puerto Rico',
      'QA': 'Qatar',
      'RO': 'Roemenië',
      'RU': 'Rusland',
      'RW': 'Rwanda',
      'RE': 'Réunion',
      'BL': 'Saint Barthélemy',
      'KN': 'Saint Kitts en Nevis',
      'LC': 'Saint Lucia',
      'PM': 'Saint Pierre en Miquelon',
      'VC': 'Saint Vincent en de Grenadines',
      'SB': 'Salomoneilanden',
      'WS': 'Samoa',
      'SM': 'San Marino',
      'ST': 'Sao Tomé en Principe',
      'SA': 'Saoedi-Arabië',
      'SN': 'Senegal',
      'RS': 'Servië',
      'CS': 'Servië en Montenegro',
      'SC': 'Seychellen',
      'SL': 'Sierra Leone',
      'SG': 'Singapore',
      'SH': 'Sint-Helena',
      'MF': 'Sint-Maarten',
      'SI': 'Slovenië',
      'SK': 'Slowakije',
      'SD': 'Soedan',
      'SO': 'Somalië',
      'ES': 'Spanje',
      'LK': 'Sri Lanka',
      'SR': 'Suriname',
      'SJ': 'Svalbard en Jan Mayen',
      'SZ': 'Swaziland',
      'SY': 'Syrië',
      'TJ': 'Tadzjikistan',
      'TW': 'Taiwan',
      'TZ': 'Tanzania',
      'TH': 'Thailand',
      'TG': 'Togo',
      'TK': 'Tokelau',
      'TO': 'Tonga',
      'TT': 'Trinidad en Tobago',
      'TD': 'Tsjaad',
      'CZ': 'Tsjechië',
      'TN': 'Tunesië',
      'TR': 'Turkije',
      'TM': 'Turkmenistan',
      'TC': 'Turks- en Caicoseilanden',
      'TV': 'Tuvalu',
      'UY': 'Uruguay',
      'VU': 'Vanuatu',
      'VA': 'Vaticaanstad',
      'VE': 'Venezuela',
      'GB': 'Verenigd Koninkrijk',
      'AE': 'Verenigde Arabische Emiraten',
      'US': 'Verenigde Staten',
      'VN': 'Vietnam',
      'WF': 'Wallis en Futuna',
      'EH': 'Westelijke Sahara',
      'BY': 'Wit-Rusland',
      'ZM': 'Zambia',
      'ZW': 'Zimbabwe',
      'ZA': 'Zuid-Afrika',
      'GS': 'Zuid-Georgië en Zuidelijke Sandwicheilanden',
      'KR': 'Zuid-Korea',
      'SE': 'Zweden',
      'CH': 'Zwitserland'
    },
    property: {
      'name': 'Titel',
      'description': 'Beschrijving',
      'labels': 'Labels',
      'calendarSummary': 'Kalendersamenvatting',
      'image': 'Afbeelding',
      'videos': 'Videos',
      'location': 'Locatie',
      'address': 'Adres',
      'organizer': 'Organisator',
      'priceInfo': 'Prijsinformatie',
      'kansentarief': 'Kansentarief',
      'bookingInfo': 'Reservatie-info',
      'contactPoint': 'Contactinfo',
      'status': 'Status',
      'bookingAvailability': 'Tickets & plaatsen',
      'attendance': 'Aanwezigheidsvorm (fysiek / online / beide)',
      'creator': 'Auteur',
      'terms.theme': 'Thema',
      'terms.eventtype': 'Type',
      'created': 'Datum aangemaakt',
      'modified': 'Datum laatste aanpassing',
      'publisher': 'Auteur',
      'available': 'Embargodatum',
      'endDate': 'Einddatum',
      'startDate': 'Begindatum',
      'calendarType': 'Tijd type',
      'sameAs': 'Externe IDs',
      'typicalAgeRange': 'Leeftijd',
      'language': 'Taal',
      'audience': 'Toegang',
      'completeness': 'Volledigheid'
    },
    errors: {
      labelNotAllowed: 'Dit label is toegevoegd door een andere gebruiker of organisatie en kan je niet verwijderen.'
    },
    preview: {
      tabs: {
        'data': 'Gegevens',
        'history': 'Historiek',
        'publication': 'Publicatie'
      },
      'not_found': 'Pagina niet gevonden',
      'not_found_help': 'Deze pagina kon niet gevonden worden.',
      'loading': 'Aan het laden...',
      'edit': 'Bewerken',
      'editMovie': 'Bewerken als film',
      'duplicate': 'Kopiëren en aanpassen',
      'duplicate_as_movie': 'Kopiëren en aanpassen als film',
      'change_availability': 'Beschikbaarheid wijzigen',
      'delete': 'Verwijderen',
      'title': 'Titel',
      'type': 'Type',
      'entrance': 'Toegang',
      'description': 'Beschrijving',
      'no_description': 'Geen beschrijving',
      'where': 'Waar',
      'bookable_event_location_info': 'Locatie in overleg met de school.',
      'online': 'Online',
      'online_location': 'Online deelname',
      'online_location_missing': 'Geen url voor online deelname',
      'when': 'Wanneer',
      'labels': 'Labels',
      'labels_error': 'Het toevoegen van het label \'{{labelName}}\' is niet gelukt.',
      'labels_success': 'Het label \'{{addedLabel}}\' werd succesvol toegevoegd.',
      'organizer': 'Organisatie',
      'no_organizer': 'Geen organisatie-informatie',
      'price': 'Prijs',
      'free': 'Gratis',
      'currency': 'euro',
      'no_price': 'Geen prijsinformatie',
      'booking_availability': 'Tickets & plaatsen',
      'booking_unavailable': 'Volzet of uitverkocht',
      'booking_available': 'Beschikbaar',
      'age_label': 'Geschikt voor',
      'all_ages': 'Alle leeftijden',
      'no_age': 'Geen leeftijdsinformatie',
      'videos_label': 'Videos',
      'no_videos': 'Geen video\'s',
      'publiq_url': 'Bekijk op {{publicationBrand}}',
      'translate': 'Vertalen',
      'info_lesson_series': 'Je lessenreeks verschijnt in UiTagenda\'s tot aan het eerste lesmoment.',
      'info_holiday_camp': 'Je kamp of vakantie verschijnt in UiTagenda\'s tot aan de startdag.'
    },
    translate: {
      'ready': 'Klaar met vertalen',
      'translate': 'vertalen',
      'original': 'origineel',
      'edit': 'Bewerk',
      'translation': 'Vertaling',
      'description': 'Beschrijving',
      'title': 'Titel',
      'tariff': 'Prijstarief',
      'address': 'Adres',
      'street': 'Straat en nummer'
    },
    labels: {
      'what': 'Met een label voeg je korte, specifieke trefwoorden toe.',
      'invalid': 'Dit lijkt een ongeldig label. Een label',
      'chars': 'bestaat enkel uit letters of cijfers',
      'excluded': 'bevat enkel \'-\' en \'_\', maar mag niet met deze tekens beginnen',
      'length': 'telt 2 tot 50 karakters'
    },
    calendarSummary: {
      'openinghours': 'meerdere tijdstippen',
      'from': 'Van',
      'till': 'tot',
      'permanent': 'Permanent'
    },
    moderate: {
      'infoAlert': '<p>Welkom op de validatiepagina. Op deze pagina kan je evenementen goed -of afkeuren: <br/><br/><ul><li><strong>Afkeuren.</strong> Afgekeurde evenementen worden niet meer gepubliceerd op UiTinVlaanderen of andere UiTagenda\'s en kunnen niet meer bewerkt worden door de invoerder.</li><li><strong>Goedkeuren.</strong> Goedgekeurde evenementen blijven gepubliceerd op UiTinVlaanderen en de eigen UiTagenda en komen niet opnieuw ter validatie.</li></ul><br/>Een leidraad voor het valideren vind je in <a href="https://helpdesk.publiq.be/hc/nl/articles/360008702459-Welke-activiteiten-mag-ik-invoeren-in-UiTdatabank" target="_blank">de contentregels van UiTdatabank.</a></p>',
      'validate': 'Valideren',
      'approve': 'Goedkeuren',
      'approved': 'Goedgekeurd',
      'reject': 'Afkeuren',
      'rejected': 'Afgekeurd',
      'continue_validation': 'Verder valideren'
    },
    cultuurkuur: {
      'info': 'Dit evenement bevat <a target=\"_blank\" href=\"{{previewLink}}\">extra informatie</a> voor scholen en leerkrachten.',
      'subject': 'Onderwerp',
      'target_group': 'Doelgroep',
      'levels': 'Geschikt voor',
      'grades': 'onderwijsgraden',
      'edit_link': 'Wijzig op cultuurkuur.be',
      'incomplete_help': 'Vervolledig dit evenement op cultuurkuur.be met extra informatie voor scholen en leerkrachten.',
      'continue': 'Doorgaan'
    },
    booking: {
      'label': 'Reservatie',
      'no_booking': 'Geen reservatie-informatie'
    },
    contact: {
      'label': 'Contact',
      'or': 'of',
      'no_contact': 'Geen contactinformatie'
    },
    imageDetail: {
      'label': 'Afbeeldingen',
      'alt_image': 'Afbeelding {{index}}',
      'main_image': 'Hoofdafbeelding',
      'no_images': 'Geen afbeeldingen'
    },
    prices: {
      'title': 'Prijzen toevoegen',
      'base': 'Basistarief',
      'target_group': 'Doelgroep',
      'free': 'Gratis',
      'currency': 'euro',
      'add_price': 'Prijs invoeren',
      'add_tarriff': 'Tarief toevoegen',
      'error': 'Er ging iets fout bij het opslaan van de prijs.',
      'invalid': 'Deze prijsinformatie lijkt ongeldig en kan je daarom niet bewaren.',
      'invalid_tip1': 'Noteer decimalen met een komma.',
      'invalid_tip2': 'Laat geen enkel rij leeg, vul steeds een doelgroep en een bedrag in.',
      'invalid_tip3': 'Geef maximum twee cijfers na de komma.',
      'close': 'Sluiten',
      'save': 'Bewaren'
    },
    location: {
      'title': 'Nieuwe locatie toevoegen',
      'name': 'Naam locatie',
      'name_validation': 'De naam van de locatie is een verplicht veld.',
      'street': 'Straat en nummer',
      'street_validation': 'Straat is een verplicht veld.',
      'city': 'Gemeente',
      'category': 'Categorie',
      'category_help': 'Kies een categorie die deze locatie het best omschrijft.',
      'category_validation': 'Categorie is een verplicht veld.',
      'error': 'Er ging iets fout tijdens het opslaan van je locatie.',
      'invalid_street': 'Dit lijkt een ongeldig adres. Wanneer je spaties gebruikt in het adres, mogen er na de laatste spatie niet meer dan 15 karakters staan.',
      'cancel': 'Annuleren',
      'add': 'Toevoegen',
      'zip': 'Postcode',
      'nlPostalCode_validation': 'Postcode is een verplicht veld.',
      'invalid_PostalCode': 'Dit lijkt een ongeldige postcode. Een postcode bestaat uit 4 cijfers en 2 letters, zonder een spatie ertussen.'
    },
    eventForm: {
      'langWarning': 'Opgelet, je (be)werkt in een andere taal: {{language}}. Is dit niet de bedoeling, neem dan contact op met vragen@uitdatabank.be.',
      step1: {
        'title': 'Wat wil je toevoegen?',
        'label_event': 'Een evenement',
        'show_everything': 'Toon alles',
        'or': 'of',
        'location_label': 'Een locatie',
        'change': 'Wijzigen',
        'refine': 'Verfijn',
        'info_lesson_series': 'Je lessenreeks verschijnt in UiTagenda\'s tot aan het eerste lesmoment.'
      },
      step2: {
        'date_help_event': 'Wanneer vindt dit evenement of deze activiteit plaats?',
        'date_help_place': 'Wanneer is deze plaats of locatie open?',
      },
      step3: {
        'title_event': 'Waar vindt dit evenement of deze activiteit plaats?',
        'title_place': 'Waar is deze plaats of locatie?',
        'choose_city': 'Kies een gemeente',
        'choose_city_helper': 'bv. Gent of 9000',
        'choose_residence': 'Kies een woonplaats',
        'choose_residence_helper': 'bv. Groningen of Amsterdam',
        'placeholder_city': 'Gemeente of postcode',
        'problem_city': 'Er was een probleem tijdens het ophalen van de steden',
        'change': 'Wijzigen',
        'choose_location': 'Kies een locatie',
        'placeholder_location': 'Naam of adres',
        'location_not_found': 'Locatie niet gevonden?',
        'add_location': 'Een locatie toevoegen',
        'location_error': 'Er was een probleem tijdens het ophalen van de locaties',
        'street': 'Straat en nummer',
        'placeholder_street': 'Kerkstraat 1',
        'street_validate': 'Straat en nummer is een verplicht veld.',
        'street_validate_long': 'Dit lijkt een ongeldig adres. Wanneer je spaties gebruikt in het adres, mogen er na de laatste spatie niet meer dan 15 karakters staan.',
        'ok': 'OK',
        'zip': 'Postcode',
        'zip_validate': 'Postcode is een verplicht veld.',
        'invalid_zip': 'Dit lijkt een ongeldige postcode. Een postcode bestaat uit 4 cijfers en 2 letters, zonder een spatie ertussen.',
        'bookable_event_info_alert': 'Evenementen waarvan de locatie in overleg wordt bepaald, worden niet gepubliceerd op UiTinVlaanderen of andere publiekskanalen. Je evenement verschijnt wel op cultuurkuur.be',
        'bookable_event_next_button': 'Ga verder',
        'bookable_event_success_message': 'De locatie wordt bepaald in overleg met de school.'
      },
      step4: {
        age: {
          'age_label': 'Geschikt voor',
          'All ages': 'Alle leeftijden',
          'Toddlers': 'Peuters',
          'Preschoolers': 'Kleuters',
          'Kids': 'Kinderen',
          'Teenagers': 'Tieners',
          'Youngsters': 'Jongeren',
          'Adults': 'Volwassenen',
          'Seniors': 'Senioren',
          'Custom': 'Andere',
          'from': 'Van',
          'till': 'Tot',
          'age': 'jaar',
          'error_max_lower_than_min': 'De maximumleeftijd kan niet lager zijn dan de minimumleeftijd.'
        },
        'basic_data': 'Basisgegevens',
        'name_event': 'Naam van het evenement',
        'name_place': 'Naam van de locatie',
        'help_event': 'Gebruik een <strong>sprekende titel</strong>, bv. \"Fietsen langs kapelletjes\", \"De Sage van de Eenhoorn\".',
        'help_place': 'Gebruik de <strong>officiële benaming</strong>, bv. \"Gravensteen\", \"Abdijsite Herkenrode\", \"Cultuurcentrum De Werf\".',
        'help_description': 'Een <strong>uitgebreide beschrijving</strong> kan je in stap 5 toevoegen.',
        'info_missing': 'Je vulde niet alle verplichte informatie in:',
        'save_error': 'Er ging iets fout tijdens het opslaan van je activiteit. Gelieve later opnieuw te proberen.',
        'continue': 'Doorgaan',
        'doubles_title': 'Vermijd dubbel werk',
        'doubles_help': 'We vonden gelijkaardige items. Controleer deze eerder ingevoerde items.',
        'sure': 'Ben je zeker dat je \"{{name}}\" wil toevoegen?',
        'return_dashboard': 'Nee, keer terug naar dashboard',
        'yes_continue': 'Ja, doorgaan met invoeren',
        suggestions: {
          'from': 'Van',
          'till': 'tot',
          'permanent': 'Permanent'
        }
      },
      step5: {
        'expose_event': 'Laat je evenement extra opvallen',
        'expose_place': 'Laat deze locatie extra opvallen',
        'title': 'Titel',
        'description': 'Beschrijving',
        'add_text': 'Tekst toevoegen',
        'required_200': 'De eerste 200 tekens zijn het belangrijkst om een nieuw publiek aan te spreken.',
        'required_still': 'Nog',
        'required_signs': 'tekens.',
        'required_200_help': 'Plaats de belangrijkste boodschap in de eerste 200 tekens. Je kan nog verder aanvullen met achtergrondinformatie.',
        'empty': 'Leegmaken',
        'tips': {
          'Concert': 'Geef een enthousiaste omschrijving van het concert. <ul><li>Welk(e)<strong> artiest(en)</strong> treden op? </li><li>Welk <strong>genre</strong> is het?</li><li>Welk<strong> album</strong> <strong>of werk </strong>wordt voorgesteld? </li></ul>',
          'Dansvoorstelling': 'Geef een enthousiaste omschrijving van de dansvoorstelling.<ul><li>Wie is de <strong>choreograaf</strong>?</li><li>Wie zijn de<strong> dansers</strong>?</li><li>In welke <strong>stijl</strong> dansen ze?</li><li>Over welk <strong>thema of onderwerp</strong> gaat de voorstelling?</li></ul>',
          'Festival': 'Geef een enthousiaste omschrijving van het festival. <ul> <li>Wie of wat staat er op het <strong>programma?</strong> </li> <li>Welke <strong>(rand)animatie</strong> is er?</li> </ul>',
          'Film': 'Geef een enthousiaste omschrijving van de film. <ul> <li>Schets kort het <strong>verhaal</strong>. </li> <li>Wie is de <strong>regisseur?</strong> </li> <li>Wie zijn de  <strong>hoofdrolspelers?</strong> </li> <li>Heeft de film <strong>prijzen</strong> gewonnen? </li></ul>',
          'Lezing of congres': 'Geef een enthousiaste omschrijving van de lezing of het congres. <ul> <li>Welke<strong> thema’s</strong> komen aan bod? </li><li>Welke <strong>sprekers </strong>nemen het woord?</li></ul>',
          'Theatervoorstelling': 'Geef een enthousiaste omschrijving van de voorstelling.  <ul> <li>Schets kort het <strong>verhaal</strong> of het <strong>thema</strong>. </li> <li>Welk <strong>theatergezelschap</strong> brengt het stuk? </li> <li>Welke <strong>acteurs</strong> spelen mee?</li></ul>',
          'Sportwedstrijd bekijken': 'Geef een enthousiaste omschrijving van de sportwedstrijd. <ul> <li>Welke <strong>ploegen of deelnemers</strong> spelen er mee? </li> <li>In welke<strong> competitie</strong> kadert de wedstrijd?</li></ul>',
          'Markt of braderie': 'Geef een enthousiaste omschrijving van de markt of braderie. <ul> <li>In <strong>welke straten</strong> vindt ze plaats? </li> <li>Welke <strong>kramen of standjes</strong> zullen er zijn? </li><li>Is er <strong>(rand)animatie</strong>?</li></ul>',
          'Opendeurdag': 'Geef een enthousiaste omschrijving van de opendeurdag. Wat kan je <strong>bekijken </strong>of <strong>beleven?</strong>',
          'Beurs': 'Geef een enthousiaste omschrijving van de beurs. Wat kan je kan <strong>bekijken</strong>, <strong>beleven</strong> of <strong>kopen</strong>?',
          'Tentoonstelling': 'Geef een enthousiaste omschrijving van de tentoonstelling. <ul> <li>Welke <strong>kunstenaars</strong> stellen tentoon?</li> <li>Welke<strong> collecties</strong> kan je bekijken? </li> <li>Is er een <strong>(audio)gids</strong> of <strong>brochure</strong> beschikbaar?</li></ul>',
          'Begeleide uitstap of rondleiding': 'Geef een enthousiaste omschrijving van de rondleiding. <ul> <li>Wat valt er langs de route te <strong>bekijken of beleven</strong>? </li> <li>Is er een maximaal <strong>aantal deelnemers</strong>? </li> <li>Wordt de rondleiding doorlopend of op <strong>bepaalde tijdstippen</strong> georganiseerd? </li> <li>Zijn er <strong>speciale aandachtspunten</strong> (bv. laarzen aangewezen)?</li> </ul>',
          'Lessenreeks': 'Geef een enthousiaste omschrijving van de lessenreeks. <ul> <li>Wat leer je er precies? </li> <li>Is er <strong>voorkennis</strong> nodig om deel te nemen? </li> <li>Wat is het <strong>niveau</strong> van de lessen? </li><li>Krijg je op het einde een <strong>diploma</strong> of certificaat?</li></ul>',
          'Cursus met open sessies': 'Geef een enthousiaste omschrijving van de workshop of cursus met open sessies.  <ul> <li>Wat leer je er precies? </li> <li>Is er <strong>voorkennis</strong> nodig om deel te nemen? </li> <li>Wat is het <strong>niveau</strong> van de lessen? </li> <li>Krijg je op het einde een <strong>diploma</strong> of certificaat?</li> </ul>',
          'Kamp of vakantie': 'Geef een enthousiaste omschrijving van het kamp of de vakantie.  <ul> <li>Welke <strong>activiteiten</strong> kan je er doen? </li> <li>Is er een <strong>thema</strong>? </li> <li>Is het kamp <strong>met of zonder overnachtingen</strong>? </li> <li>Wat is het <strong>start en einduur</strong> voor dagkampen en is er vooraf en nadien <strong>opvang</strong> voorzien?</li> </ul>',
          'Festiviteit': 'Geef een enthousiaste omschrijving van de kermis. <ul> <li>Welke <strong>attracties</strong> zijn er? </li> <li>Zijn er<strong> (rand)activiteiten</strong> (quiz, concerten, foodtrucks, marktje ...)?</li> </ul>',
          'Route': 'Geef een enthousiaste omschrijving van de route. <ul> <li>Leg je de route af <strong>te voet, per fiets, per boot </strong>…? </li> <li>Welke mogelijke <strong>tussenstops</strong> zijn er? </li> <li>Wat is de <strong>afstand</strong> of <strong>duur</strong> van de route?</li> <li>Is de route <strong>begeleid</strong>, met een gids, brochure of wegwijzers?</li> </ul>',
          'Party of fuif': 'Geef een enthousiaste omschrijving van de party of fuif. Welke <strong>dj’s</strong> of <strong>bands</strong> treden er op?',
          'Eet of drankfestijn': 'Geef een enthousiaste omschrijving van het eet -of drankfestijn. <ul> <li>Wat staat er op het <strong>menu?</strong> </li> <li>Gaat de opbrengst naar een<strong> goed doel</strong>? </li> <li>Is er <strong>(rand)animatie</strong>?</li> </ul>',
          'Spel of quiz': 'Geef een enthousiaste omschrijving van de quiz of het spel. <ul> <li>Over welke <strong>onderwerpen</strong> gaat de quiz?</li> <li>Heeft het spel een <strong>thema</strong>?</li> <li>Valt er iets te <strong>winnen</strong>?</li> <li>Is er een <strong>maximaal</strong> aantal <strong>deelnemers</strong>?</li> </ul>',
          'Sport en beweging': 'Geef een enthousiaste omschrijving van de sportactiviteit. <ul> <li>Welke <strong>sport</strong>(en) kan je beoefenen? </li> <li>Welk <strong>materiaal</strong> wordt (niet) voorzien?</li> </ul>',
          'Monument': 'Geef hier een wervende omschrijving van het monument. Geef ook aan indien het monument slechts beperkt opengesteld is (vb. enkel salons).'
        },
        'description_error': 'Er ging iets fout bij het opslaan van de beschrijving.',
        'organizer': 'Organisatie',
        'add_organizer': 'Organisatie toevoegen',
        'choose_organizer': 'Kies een organisatie',
        'organizer_not_found': 'Organisatie niet gevonden?',
        'add_new_organizer': 'Nieuwe organisator toevoegen',
        'organizer_error': 'Er ging iets fout bij het opslaan van de organisator.',
        'contact': 'Contact & reservatie',
        'add_contact': 'Contactinformatie toevoegen',
        'website': 'Website',
        'phone': 'Telefoonnummer',
        'e-mail': 'E-mailadres',
        'use_booking': 'Gebruik voor reservatie',
        'booking_exposure': 'Hoe mag deze link verschijnen?',
        'buy_tickets': 'Koop tickets',
        'reserve_places': 'Reserveer plaatsen',
        'check_availability': 'Controleer beschikbaarheid',
        'subscribe': 'Schrijf je in',
        'add_more_contact': 'Meer contactgegevens toevoegen',
        'contact_error': 'Er ging iets fout bij het opslaan van de contact info.',
        'facilities': 'Toegankelijkheid',
        'add_facility': 'Voorzieningen toevoegen',
        'facility_inapplicable': 'Niet van toepassing',
        'change': 'Wijzigen',
        'image_help': 'Voeg een afbeelding toe zodat je bezoekers je activiteit beter herkennen.',
        'images': 'Afbeeldingen',
        'copyright': 'Copyright',
        'delete': 'Verwijderen',
        'main_image': 'Maak hoofdafbeelding',
        'add_image': 'Afbeelding toevoegen',
        priceInfo: {
          'price_label': 'Prijs',
          'add_prices': 'Prijzen toevoegen',
          'free': 'Gratis',
          'prices': 'Prijzen',
          'change': 'Wijzigen',
          'currency': 'euro'
        },
        reservationPeriod: {
          'add_reservation_period': 'Reservatieperiode toevoegen',
          'reservation_period': 'Reservatie periode',
          'from': 'Van',
          'till': 'Tot'
        }
      },
      publish: {
        'publish_now': 'Meteen publiceren',
        'publish_later': 'Later publiceren',
        'edit_done': 'Klaar met bewerken',
        'online_from': 'Online vanaf'
      },
      timeTracker: {
        'automatic_saved': 'Automatisch bewaard om',
        'hour': 'uur',
      },
      embargo: {
        'title': 'Kies een publicatiedatum',
        'help': 'Vanaf wanneer mag dit online verschijnen? <em class="text-info"><i class="fa fa-exclamation-circle" aria-hidden="true"></i> Opgelet, deze datum kan je maar één keer instellen.</em>',
        'error_past': 'Een publicatiedatum kan niet in het verleden liggen.',
        'error_empty': 'Kies een publicatiedatum.',
        'cancel': 'Annuleren',
        'ready': 'Klaar met bewerken'
      },
      imageUpload: {
        'modalTitle': 'Afbeelding toevoegen',
        'defaultError': 'Het geselecteerde bestand voldoet niet aan onze voorwaarden.',
        'noFileSelectedError': 'Er is geen bestand geselecteerd',
        'somethingWentWrongError': 'Er ging iets mis bij het opslaan van de afbeelding.',
        'maxSize': 'Het bestand dat je probeert te uploaden is te groot. De maximum grootte is ',
        'formatNotValidError': 'Het geüpload bestand is geen geldige afbeelding.',
        'extensionsAllowed': 'Enkel bestanden met de extenties .jpeg, .gif of .png zijn toegelaten.',
        'sizeError': 'Het geüpload bestand is te groot.'
      }
    },
    offerStatus: {
      'scheduled': 'Gaat door',
      'cancelled': 'Geannuleerd',
      'postponed': 'Uitgesteld',
      'open': 'Open',
      'temporarilyClosed': 'Tijdelijk gesloten',
      'permanentlyClosed': 'Permanent gesloten',
    },
    bookingAvailability: {
      'unavailable': 'Volzet of uitverkocht'
    },
    calendar: {
      'one_more_days': 'Eén of meerdere dagen',
      'or': 'of',
      'default_days': 'Vaste dagen per week',
      'start_label': 'Start',
      'end_label': 'Einde',
      'whole_day_label': 'Hele dag',
      'start_hour_label': 'Beginuur',
      'end_hour_label': 'Einduur',
      'add_days': 'Dag(en) toevoegen',
      period: {
        'title': 'Start- en einddatum',
        'from': 'Van',
        'till': 'Tot',
        'alert': 'Geef zowel een begin- als einddatum in. De einddatum kan niet voor de begindatum vallen.'
      },
      openingHours: {
        'permanent_title': '24/24, 7/7',
        'permanent_subtitle': 'Elke dag, ieder uur',
        'add_hours': 'Uren toevoegen',
        'opening_hours': 'Openingsuren',
        'change': 'Wijzigen',
        'days': 'Dagen',
        'from': 'Van',
        'till': 'Tot',
        'more_hours': 'Meer openingstijden toevoegen',
        'cancel': 'Annuleren',
        'save': 'Opslaan'
      }
    },
    'facilityLabel': {
      'motor': 'Voorzieningen voor personen met een motorische beperking',
      'visual': 'Voorzieningen voor personen met een visuele beperking',
      'hearing': 'Voorzieningen voor personen met een auditieve beperking',
      'other': 'Andere voorzieningen',
      'place': 'Voorzieningen op deze locatie',
      'mental': 'Voorzieningen voor personen met een verstandelijke beperking',
      'neurodivers': 'Voorzieningen voor neurodiverse personen',
    },
    audience: {
      'entrance': 'Toegang',
      'everyone': 'Voor iedereen',
      'members': 'Enkel voor leden',
      'members_help': 'Je item wordt enkel gepubliceerd op kanalen voor verenigingen en hun leden.',
      'education': 'Specifiek voor scholen',
      'education_help': 'Je item wordt enkel gepubliceerd op cultuureducatieve kanalen zoals cultuurkuur.be. Na het publiceren kan je nog specifieke informatie voor scholen toevoegen.'
    },
    workflowStatus: {
      'label': 'Publicatiestatus',
      'id': 'ID',
      'DRAFT': 'Niet gepubliceerd',
      'READY_FOR_VALIDATION': 'Gepubliceerd',
      'APPROVED': 'Online vanaf',
      'REJECTED': 'Publicatie afgewezen',
      'DELETED': 'Niet gepubliceerd',
      'rules': 'Bekijk de regels',
      'rejected_full': 'Dit item werd afgewezen voor publicatie.'
    },
    queryFieldGroup: {
      'what': 'Wat',
      'where': 'Waar',
      'when': 'Wanneer',
      'input-information': 'Invoerdersinformatie',
      'translations': 'Vertalingen',
      'other': 'Andere'
    },
    'queryFieldLabel': {
      'cdbid': 'identificatiecode (CDBID)',
      'offertype': 'type (aanbod)',
      'keywords': 'label',
      'title': 'titel',
      'category_eventtype_name': 'type (activiteit)',
      'locationtype': 'type (locatie)',
      'category_theme_name': 'thema',
      'text': 'tekst',
      'city': 'gemeente (naam)',
      'zipcode': 'postcode',
      'location_id': 'locatie (id)',
      'country': 'land',
      'location_name': 'locatie (naam)',
      'location_labels': 'locatie (labels)',
      'category_flandersregion_name': 'regio / gemeente',
      'nisRegions': 'regio / gemeente',
      'date': 'datum',
      'permanent': 'permanent',
      'lastupdated': 'laatst aangepast',
      'creationdate': 'gecreëerd',
      'createdby': 'gecreëerd door',
      'availablefrom': 'datum beschikbaar',
      'detail_lang': 'vertaling',
      'organiser_keywords': 'label organisatie',
      'organiser_id': 'organisatie (id)',
      'agefrom': 'leeftijd',
      'attendance_mode': 'aanwezigheidsvorm',
      'price': 'prijs',
      'status': 'status',
      'booking_availability': 'tickets & plaatsen',
      'organiser_label': 'organisatie (naam)',
      'completeness': 'volledigheid',
      'category_facility_name': 'voorzieningen',
      'category_targetaudience_name': 'doelgroep',
      'startdate': 'startdatum',
      'enddate': 'einddatum',
      'lastupdatedby': 'laatst aangepast door',
      'category_publicscope_name': 'publieksbereik'
    },
    'EVENT-EXPORT': {
      'QUERY-IS-MISSING': 'Een export is pas mogelijk nadat je een zoekopdracht hebt uitgevoerd',
      'TOO-MANY-ITEMS': 'Een manuele export met meer dan {{limit}} items is niet mogelijk. Contacteer vragen@uitdatabank.be voor een oplossing op maat.'
    },
    'AANBOD_INVOEREN': 'Aanbod invoeren',
    'AANBOD_BEWERKEN': 'Aanbod bewerken',
    'AANBOD_MODEREREN': 'Aanbod modereren',
    'AANBOD_VERWIJDEREN': 'Aanbod verwijderen',
    'AANBOD_HISTORIEK': 'Historiek raadplegen',
    'ORGANISATIES_BEHEREN': 'Organisaties beheren',
    'GEBRUIKERS_BEHEREN': 'Gebruikers beheren',
    'LABELS_BEHEREN': 'Labels beheren',
    'VOORZIENINGEN_BEWERKEN': 'Voorzieningen bewerken',
    'ORGANISATIES_BEWERKEN': 'Organisaties bewerken',
    'PRODUCTIES_AANMAKEN': 'Producties aanmaken',
    'FILMS_AANMAKEN': 'Films aanmaken',
    'event type missing': 'Koos je een type in <a href="#wat" class="alert-link">stap 1</a>?',
    'timestamp missing': 'Koos je een datum in <a href="#wanneer" class="alert-link">stap 2</a>?',
    'start or end date missing': 'Koos je een begin- en einddatum in <a href="#wanneer" class="alert-link">stap 2</a>?',
    'when missing': 'Maakte je een keuze in <a href="#wanneer" class="alert-link">stap 2</a>?',
    'place missing for event': 'Koos je een plaats in <a href="#waar" class="alert-link">stap 3</a>?',
    'location missing for place': 'Koos je een locatie in <a href="#waar" class="alert-link">stap 3</a>?',
    'title is missing': 'Gaf je je aanbod een titel in <a href="#titel" class="alert-link">stap 4</a>?',
    'age range is missing': 'Gaf je je aanbod een leeftijdsgroep in <a href="#titel" class="alert-link">stap 4</a>?',
    'UNIQUE_ORGANIZER_NOTICE': 'Om organisaties in de UiTdatabank uniek bij te houden, vragen we elke organisatie een unieke & geldige hyperlink.',
    'OPENING_HOURS_ERROR': {
      'openAndClose': 'Vul alle openings- en sluitingstijden in.',
      'dayOfWeek': 'Kies minstens één dag in elke rij die je toevoegde.',
      'openIsBeforeClose': 'Gelieve een sluitingstijd in te geven die later is dan de openingstijd.'
    },
    'TIME_SPAN_REQUIREMENTS': {
      'timedWhenNotAllDay': 'Een eind- en beginuur zijn verplicht wanneer een evenement niet de hele dag duurt.',
      'startBeforeEndDay': 'De einddatum kan niet voor de begindatum vallen.',
      'startBeforeEnd': 'Het einduur kan niet voor het beginuur vallen.',
      'tooFarInFuture': 'De gekozen einddatum en startdatum mogen niet verder dan 10 jaar in de toekomst liggen.'
    },
    uitpas: {
      uitpasInfo: {
        'uitpas': 'UiTPAS',
        'uitpas_alert': 'Dit is een UiTPAS organisator. Selecteer een prijs om specifieke UiTPAS-informatie toe te voegen.',
        'uitpas_info': 'Dit is een UiTPAS activiteit.',
        'cantChangePrice': 'Voor dit evenement zijn al UiTPAS-tickets verkocht met de bestaande prijsinformatie. Je kan de prijsinformatie niet meer wijzigen.',
        'cantChangeOrganiser': 'Voor dit evenement zijn al UiTPAS-tickets verkocht. Je kan de organisatie niet meer wijzigen.',
        'unavailable': 'Voor dit evenement zijn al UiTPAS-tickets verkocht. Je kan de organisatie niet meer wijzigen.'
      },
      cardSystems: {
        'card_systems': 'Kaartsystemen',
        'choose': '--Selecteer een verdeelsleutel--',
        'retry': 'Opnieuw registreren',
        'already_has_ticketsales': 'Voor dit evenement zijn al UiTPAS-tickets verkocht. Je kan de organisatie niet meer wijzigen.',
        'not_found': 'Deze activiteit is nog niet gekend bij UiTPAS.'
      }
    },
    images: {
      'agreement': 'Je staat op het punt (een) afbeelding(en) toe te voegen en openbaar te verspreiden. Je dient daartoe alle geldende auteurs- en portretrechten te respecteren, alsook alle andere toepasselijke wetgeving. Je kan daarvoor aansprakelijk worden gehouden, zoals vastgelegd in de',
      'conditions': 'algemene voorwaarden',
      'conditions_url': 'https://www.publiq.be/nl/gebruikersovereenkomst-uitdatabank',
      'copyright_info': 'Meer informatie over copyright',
      'description': 'Beschrijving',
      'description_help': 'Maximum 250 karakters',
      'copyright': 'Copyright',
      'copyright_help': 'Vermeld de naam van de rechtenhoudende fotograaf. Vul alleen de naam van je eigen vereniging of organisatie in als je zelf de rechten bezit (minimum 2 karakters).',
      'cancel': 'Annuleren',
      'agree': 'Akkoord',
      upload: {
        'select_image': 'Selecteer je foto',
        'choose_file': 'Kies bestand',
        'max_filesize': 'De maximale grootte van je afbeelding is {{maxFileSize}} en heeft als type .jpeg, .gif of .png',
        'upload': 'Opladen'
      },
      edit: {
        'title': 'Afbeelding info bewerken',
        'description_help': 'Een goede beschrijving van je afbeelding wordt gelezen door zoekmachines en gebruikers met een visuele beperking. (max. 250 karakters)',
        'save_error': 'Er ging iets mis bij het opslaan van de afbeelding.',
        'update': 'Bijwerken'
      },
      remove: {
        'title': 'Afbeeldingen verwijderen',
        'sure': 'Ben je zeker dat je deze afbeelding wil verwijderen?',
        'save_error': 'Er ging iets mis bij het verwijderen van de afbeelding.',
      }
    },
    organizer: {
      modal: {
        'title': 'Nieuwe organisatie toevoegen',
        'avoid_doubles': 'Vermijd dubbel werk',
        'unique_notice': 'Om organisaties in de UiTdatabank uniek bij te houden, vragen we elke organisatie een unieke & geldige hyperlink.',
        'website': 'Website',
        'alert_warning': 'Dit adres is al gebruikt door de organisatie \'{{organizerName}}\'. Geef een unieke website of',
        'alert_button': 'gebruik {{organizerName}} als organisatie',
        'name_help': 'De officiële publieke naam van de organisatie.',
        'name_required': 'Gelieve een naam in te vullen',
        'name_maxlength': 'De naam van de organisatie kan maar 250 karakters bevatten.',
        'add_confirm': 'Ben je zeker dat je \"{{newOrganizerName}}\" wil toevoegen als organisatie? Dubbele invoer van organisaties is niet toegelaten.',
        'doubles': 'We vonden deze gelijkaardige items:',
        'select': 'Selecteren',
        'your_input': 'Jij voerde in:',
        'still_enter': 'Toch invoeren',
        'save_error': 'Er ging iets fout tijdens het opslaan van je organisatie.',
        'address_error': 'Gelieve een geldig adres in te vullen.',
        'contact_error': 'Gelieve alle contactinfo correct in te vullen.',
        'close': 'Sluiten',
        'save': 'Bewaren',
        'label_name': 'Naam'
      },
      address: {
        'label_street': 'Straat en nummer',
        'help_street': 'Gelieve straat en nummer in te geven.',
        'help_zip': 'Gelieve een postcode in te geven.',
        'validate_zip': 'Dit lijkt een ongeldige postcode. Een postcode bestaat uit 4 cijfers en 2 letters, zonder een spatie ertussen.',
        'label_city': 'Gemeente',
        'label_residence': 'Woonplaats',
        'help_city': 'Er was een probleem tijdens het ophalen van de steden.',
        'error_city': 'Gelieve een gemeente in te geven.',
        'change': 'Wijzigen',
        'zip': 'Postcode',
        'delete': 'Leegmaken',
        'delete_success': 'Adres succesvol verwijderd',
        'delete_error': 'Er liep iets fout tijdens het verwijderen van jouw adres'
      },
      contact: {
        'title': 'Contact',
        'enter_url': 'Geef een URL in',
        'enter_email': 'Geef een e-mailadres in',
        'enter_phone': 'Geef een telefoonnummer in<small class="text-muted">, bv. 011 32 43 54</small>',
        'required': 'Gelieve dit veld niet leeg te laten.',
        'valid_url': 'Gelieve een geldige url in te vullen.',
        'valid_email': 'Gelieve een geldig e-mailadres in te vullen.',
        'valid_phone': 'Gelieve een geldig telefoonnummer in te vullen.',
        'cancel': 'Annuleren',
        'add': 'Toevoegen',
        'add_phone': 'Telefoonnummer toevoegen',
        'add_email': 'E-mailadres toevoegen',
        'add_url': 'Andere website toevoegen'
      },
      manage: {
        'edit': 'Bewerken',
        'delete': 'Verwijderen',
        'overview': 'Terug naar overzicht',
        'dashboard': 'Terug naar dashboard',
        'ownerships': {
          'manage': 'Beheerders aanpassen'
        },
        'name': 'Naam',
        'description': 'Beschrijving',
        'educational_description': 'Beschrijving Cultuurkuur',
        'address': 'Adres',
        'website': 'Website',
        'phone': 'Telefoonnummer',
        'email': 'E-mailadres',
        'labels': 'Labels',
        'removed': 'Deze organisatie is verwijderd.'
      }
    },
    duplicate: {
      title: 'Kopiëren en aanpassen',
      description: 'Je staat op het punt een evenement te kopiëren. Kies een tijdstip voor dit evenement.',
      error: 'Er ging iets mis tijdens het aanmaken van een kopie!'
    },
    dashboard: {
      'welcome': 'Welkom,',
      'no_items': 'Je hebt nog geen items toegevoegd.',
      'add_activity': 'Een activiteit of locatie toevoegen?',
      'my_activities': 'Mijn activiteiten en locaties',
      'my_organizers': 'Mijn organisaties',
      'add': 'Toevoegen',
      'add_organizer': 'Organisatie toevoegen',
      directive: {
        'no_publish': 'Niet gepubliceerd!',
        'online': 'Online op',
        'edit': 'Bewerken',
        'example': 'Voorbeeld',
        'delete': 'Verwijderen',
        'expired_event': 'Afgelopen evenement'
      },
      delete: {
        'sure': 'Ben je zeker dat je \"{{name}}\" wil verwijderen?',
        'error_location': 'De locatie \"{{name}}\" kan niet verwijderd worden omdat er activiteiten gepland zijn.',
        'error': 'Er ging iets fout bij het verwijderen van de activiteit.',
        'cancel': 'Annuleren',
        'delete': 'Verwijderen'
      }
    },
    entry: {
      'exported_documents': 'Geëxporteerde documenten',
      'notifications': 'Meldingen',
      'in_progress': 'Bezig'
    },
    offerTypes: {
      'Concert': 'Concert',
      'Theatervoorstelling': 'Theatervoorstelling',
      'Lezing of congres': 'Lezing of congres',
      'Dansvoorstelling': 'Dansvoorstelling',
      'Festival': 'Festival',
      'Film': 'Film',
      'Sportwedstrijd bekijken': 'Sportwedstrijd bekijken',
      'Cursus met open sessies': 'Cursus met open sessies',
      'Lessenreeks': 'Lessenreeks',
      'Sport en beweging': 'Sport en beweging',
      'Kamp of vakantie': 'Kamp of vakantie',
      'Begeleide uitstap of rondleiding': 'Begeleide  rondleiding',
      'Route': 'Route',
      'Spel of quiz': 'Spel of quiz',
      'Party of fuif': 'Party of fuif',
      'Festiviteit': 'Festiviteit',
      'Congres of studiedag': 'Congres of studiedag',
      'Eet- of drankfestijn': 'Eet- of drankfestijn',
      'Thema of pretpark': 'Thema of pretpark',
      'Theater': 'Theater',
      'Jeugdhuis of jeugdcentrum': 'Jeugdhuis of jeugdcentrum',
      'Cultuur- of ontmoetingscentrum': 'Cultuur- of ontmoetingscentrum',
      'Discotheek': 'Discotheek',
      'Bibliotheek of documentatiecentrum': 'Bibliotheek of documentatiecentrum',
      'Bioscoop': 'Bioscoop',
      'Horeca': 'Horeca',
      'Openbare ruimte': 'Openbare ruimte',
      'Tentoonstelling': 'Tentoonstelling',
      'Markt, braderie of kermis': 'Markt, braderie of kermis',
      'Natuur, park of tuin': 'Natuur, park of tuin',
      'Beurs': 'Beurs',
      'Monument': 'Monument',
      'Opendeurdag': 'Opendeurdag',
      'Recreatiedomein of centrum': 'Recreatiedomein of centrum',
      'Park of tuin': 'Park of tuin',
      'Archeologische Site': 'Archeologische Site',
      'School of onderwijscentrum': 'School of onderwijscentrum',
      'Sportcentrum': 'Sportcentrum',
      'Winkel': 'Winkel',
      'Speeltuin': 'Speeltuin',
      'Museum of galerij': 'Museum of galerij',
      'Zaal of expohal': 'Zaal of expohal'
    },
    offerThemes: {
      'Antiek en brocante': 'Antiek en brocante',
      'Architectuur': 'Architectuur',
      'Audiovisuele kunst': 'Audiovisuele kunst',
      'Beeldhouwkunst': 'Beeldhouwkunst',
      'Fotografie': 'Fotografie',
      'Grafiek': 'Grafiek',
      'Installatiekunst': 'Installatiekunst',
      'Schilderkunst': 'Schilderkunst',
      'Decoratieve kunst': 'Decoratieve kunst',
      'Design': 'Design',
      'Mode': 'Mode',
      'Meerdere kunstvormen': 'Meerdere kunstvormen',
      'Ballet en klassieke dans': 'Ballet en klassieke dans',
      'Volksdans en werelddans': 'Volksdans en werelddans',
      'Stijl en salondansen': 'Stijl en salondansen',
      'Moderne dans': 'Moderne dans',
      'Erfgoed': 'Erfgoed',
      'Actie- en avonturenfilm': 'Actie- en avonturenfilm',
      'Animatie en kinderfilms': 'Animatie en kinderfilms',
      'Documentaires en reportages': 'Documentaires en reportages',
      'Griezelfilm of horror': 'Griezelfilm of horror',
      'Historische film': 'Historische film',
      'Komedie': 'Komedie',
      'Kortfilm': 'Kortfilm',
      'Filmmusical': 'Filmmusical',
      'Drama': 'Drama',
      'Science fiction': 'Science fiction',
      'Cinefiel': 'Cinefiel',
      'Thriller': 'Thriller',
      'Meerdere filmgenres': 'Meerdere filmgenres',
      'Geschiedenis': 'Geschiedenis',
      'Gezondheid en wellness': 'Gezondheid en wellness',
      'Landbouw en platteland': 'Landbouw en platteland',
      'Milieu en natuur': 'Milieu en natuur',
      'Literatuur': 'Literatuur',
      'Poëzie': 'Poëzie',
      'Fictie': 'Fictie',
      'Non fictie': 'Non fictie',
      'Strips': 'Strips',
      'Klassieke muziek': 'Klassieke muziek',
      'Jazz en blues': 'Jazz en blues',
      'Pop en rock': 'Pop en rock',
      'Hiphop, r&b en rap': 'Hiphop, r&b en rap',
      'Dance muziek': 'Dance muziek',
      'Folk en wereldmuziek': 'Folk en wereldmuziek',
      'Amusementsmuziek': 'Amusementsmuziek',
      'Politiek en maatschappij': 'Politiek en maatschappij',
      'Creativiteit': 'Creativiteit',
      'Computer en techniek': 'Computer en techniek',
      'Opvoeding': 'Opvoeding',
      'Persoon en relaties': 'Persoon en relaties',
      'Interculturele vorming': 'Interculturele vorming',
      'Kunst en kunsteducatie': 'Kunst en kunsteducatie',
      'Gezondheid en zorg': 'Gezondheid en zorg',
      'Samenleving': 'Samenleving',
      'Bal en racketsport': 'Bal en racketsport',
      'Atletiek, wandelen en fietsen': 'Atletiek, wandelen en fietsen',
      'Zwemmen en watersport': 'Zwemmen en watersport',
      'Fitness, gymnastiek, dans en vechtsport': 'Fitness, gymnastiek, dans en vechtsport',
      'Outdoor en Adventure sport': 'Outdoor en Adventure sport',
      'Lucht en motorsport': 'Lucht en motorsport',
      'Volkssporten': 'Volkssporten',
      'Omnisport en andere': 'Omnisport en andere',
      'Tekst- en muziektheater': 'Tekst- en muziektheater',
      'Humor en comedy': 'Humor en comedy',
      'Musical': 'Musical',
      'Figuren en poppentheater': 'Figuren en poppentheater',
      'Opera en operette': 'Opera en operette',
      'Mime en bewegingstheater': 'Mime en bewegingstheater',
      'Wetenschap': 'Wetenschap',
      'Zingeving, filosofie en religie': 'Zingeving, filosofie en religie',
      'Thema onbepaald': 'Thema onbepaald',
      'Circus': 'Circus',
      'Voeding': 'Voeding',
      'Economie': 'Economie',
      'Avontuur': 'Avontuur',
      'Natuur': 'Natuur',
      'Sport': 'Sport',
      'Technologie': 'Technologie',
      'Koken': 'Koken',
      'Themakamp': 'Themakamp',
      'Taal en communicatie': 'Taal'
    },
    offerThemesGroups: {
      'Dans': 'Dans',
      'Kunst en erfgoed': 'Kunst en erfgoed',
      'Muziek': 'Muziek',
      'Sport': 'Sport',
      'Varia': 'Varia'
    },
    weekdays: {
      monday: {
        label: 'Ma',
        name: 'Maandag'
      },
      tuesday: {
        label: 'Di',
        name: 'Dinsdag'
      },
      wednesday: {
        label: 'Wo',
        name: 'Woensdag'
      },
      thursday: {
        label: 'Do',
        name: 'Donderdag'
      },
      friday: {
        label: 'Vr',
        name: 'Vrijdag'
      },
      saturday: {
        label: 'Za',
        name: 'Zaterdag'
      },
      sunday: {
        label: 'Zo',
        name: 'Zondag'
      }
    },
    search: {
      search: 'Zoeken',
      advanced: 'Geavanceerd',
      label: 'Labelen',
      languageIcons: 'Taaliconen toevoegen',
      deselect: 'Deselecteren',
      savedSearches: {
        savedSearches: 'Bewaarde zoekopdrachten',
        items: {
          'Door mij ingevoerd': 'Door mij ingevoerd'
        },
        mySearches: 'Mijn zoekopdrachten',
        title: 'Titel',
        viewResults: 'Resultaten bekijken',
        yourSearch: 'Jouw zoekopdracht',
        save: 'Bewaren',
        modal: {
          mainTitle: 'Zoekopdracht opslaan',
          newTab: 'Nieuwe zoekopdracht',
          existingTab: 'Bestaande zoekopdracht',
          giveName: 'Geef je zoekopdracht een naam',
          selectSavedSearch: 'Kies een bewaarde zoekopdracht',
          save: 'Bewaren',
          cancel: 'Annuleren'
        }
      },
      manage: 'Beheren',
      oneResult: '1 resultaat',
      multipleResults: '{{count}} resultaten',
      description: 'Beschrijving',
      labels: 'Labels',
      picture: 'Afbeelding',
      what: 'Wat',
      where: 'Waar',
      when: 'Wanneer',
      inputInformation: 'Invoer-informatie',
      noEventsFound: 'Geen evenementen gevonden, probeer een andere zoekopdracht.',
      exportButton: 'Activiteiten exporteren',
      modal: 'Je selectie bevat geen activiteiten, probeer een andere zoekopdracht te exporteren.',
      advancedQueryBuilder: {
        title: 'Geavanceerde zoekopdracht bouwer',
        header: {
          info: 'Hier kan je complexe zoekopdrachten bouwen. Hulp nodig? Lees ',
          link: 'onze handleiding'
        },
        group: 'Groep ',
        include: 'Insluiten',
        exclude: 'Uitsluiten',
        addGroup: 'Groep toevoegen',
        cancel: 'Annuleren',
        search: 'Zoeken',
        syntaxError: 'Je query bevat een fout. Op <a href="https://helpdesk.publiq.be/hc/nl/articles/360008632440-Hoe-kan-ik-activiteiten-zoeken-op-basis-van-verschillende-parameters">deze pagina</a> vind je meer informatie over hoe je een zoekopdracht kan samenstellen.',
        invalidField: '{{field}} is geen geldig zoekveld. Op <a href="https://helpdesk.publiq.be/hc/nl/articles/360008632440-Hoe-kan-ik-activiteiten-zoeken-op-basis-van-verschillende-parameters">deze pagina</a> vind je meer informatie over hoe je een zoekopdracht kan samenstellen.',
      },
      organization: {
        name: 'Naam',
        address: 'Adres',
        info: 'Invoerinformatie',
        noAddress: 'Geen adres',
        addOrganizer: 'Organisatie toevoegen',
        searchOrganization: 'Zoeken op organisatie',
        notFound: 'Geen organisaties gevonden',
        error: 'Er ging iets mis tijdens het zoeken:'
      }
    }
  }
);
})();

// Source: src/core/translations/french-translations.constant.js
(function () {
'use strict';
// jscs:disable maximumLineLength

/**
 * @ngdoc service
 * @name udbApp.udbFrenchTranslations
 * @description
 * # udbFrenchTranslations
 * Constant in the udbApp.
 */
angular.module('udb.core')
  .constant('udbFrenchTranslations',
  {
    'BE': 'Belgique',
    'NL': 'Pays-Bas',
    'ZZ': 'Lieu en concertation avec l\'école',
    'EN_ADJECTIVE': 'Anglais',
    'FR_ADJECTIVE': 'Français',
    'DE_ADJECTIVE': 'Duitse',
    'NL_ADJECTIVE': 'Nederlandse',
    'datepicker': {
      'CURRENT': 'Aujourd\'hui',
      'CLEAR': 'Supprimer',
      'CLOSE': 'Fermer'
    },
    '=': 'égale',
    '><': 'entre',
    '+': 'égale',
    '!': 'n\'égale pas',
    '-': 'n\'égale pas',
    '>': 'est plus grand ou égal',
    '<': 'est plus petit ou égal',
    '>_DATE': 'plus tard que',
    '<_DATE': 'plus tôt que',
    '=_DATE': 'égale',
    '><_DATE': 'entre',
    'choix': {
      'everyone': 'tout le monde',
      'members': 'membres',
      'education': 'éducation',
      'Available': 'A lieu',
      'Unavailable': 'Annulé',
      'TemporarilyUnavailable': 'Reporté',
      'available': 'Disponible',
      'unavailable': 'Complet',
      'online': 'en ligne',
      'offline': 'hors ligne',
      'mixed': 'mixte (en ligne / hors ligne)',
      'asc': 'ascendant',
      'desc': 'descendant',
      'today': 'aujourd\'hui',
      'tomorrow': 'demain',
      'thisweekend': 'ce week-end',
      'nextweekend': 'le week-end prochain',
      'next7days': 'les 7 jours suivants',
      'next14days': 'les 14 jours suivants',
      'next30days': 'les 30 jours suivants',
      'next3months': 'les 3 mois suivants',
      'next6months': 'les 6 mois suivants',
      'next12months': 'les 12 mois suivants',
      'permanent': 'permanent',
      'event': 'événement',
      'place': 'lieu',
      'actor': 'acteur',
      'production': 'production',
      'nl': 'néerlandais',
      'fr': 'français',
      'en': 'anglais',
      'de': 'allemand',
      'AF': 'Afghanistan',
      'AX': 'Îles Åland',
      'AL': 'Albanie',
      'DZ': 'Algérie',
      'AS': 'Samoa américaines',
      'VI': 'Îles Vierges des États-Unis',
      'UM': 'Îles mineures éloignées des États-Unis',
      'AD': 'Andorre',
      'AO': 'Angola',
      'AI': 'Anguilla',
      'AQ': 'Antarctique',
      'AG': 'Antigua-et-Barbuda',
      'AR': 'Argentine',
      'AM': 'Arménie',
      'AW': 'Aruba',
      'AU': 'Australie',
      'AZ': 'Azerbaïdjan',
      'BS': 'Bahamas',
      'BH': 'Bahreïn',
      'BD': 'Bangladesh',
      'BB': 'Barbade',
      'BE': 'Belgique',
      'BZ': 'Belize',
      'BJ': 'Bénin',
      'BM': 'Bermudes',
      'BT': 'Bhoutan',
      'BO': 'Bolivie',
      'BA': 'Bosnie-Herzégovine',
      'BW': 'Botswana',
      'BV': 'Île Bouvet',
      'BR': 'Brésil',
      'IO': 'Territoire britannique de l\'océan Indien',
      'VG': 'Îles Vierges britanniques',
      'BN': 'Brunei',
      'BG': 'Bulgarie',
      'BF': 'Burkina Faso',
      'BI': 'Burundi',
      'KH': 'Cambodge',
      'CA': 'Canada',
      'KY': 'Îles Caïmans',
      'CF': 'République centrafricaine',
      'CL': 'Chili',
      'CN': 'Chine',
      'CX': 'Île Christmas',
      'CC': 'Îles Cocos',
      'CO': 'Colombie',
      'KM': 'Comores',
      'CG': 'République du Congo',
      'CD': 'République démocratique du Congo',
      'CK': 'Îles Cook',
      'CR': 'Costa Rica',
      'CU': 'Cuba',
      'CY': 'Chypre',
      'DK': 'Danemark',
      'DJ': 'Djibouti',
      'DM': 'Dominique',
      'DO': 'République dominicaine',
      'DE': 'Allemagne',
      'EC': 'Équateur',
      'EG': 'Égypte',
      'SV': 'Salvador',
      'GQ': 'Guinée équatoriale',
      'ER': 'Érythrée',
      'EE': 'Estonie',
      'ET': 'Éthiopie',
      'FO': 'Îles Féroé',
      'FK': 'Malouines',
      'FJ': 'Fidji',
      'PH': 'Philippines',
      'FI': 'Finlande',
      'FR': 'France',
      'GF': 'Guyane',
      'PF': 'Polynésie française',
      'TF': 'Terres australes et antarctiques françaises',
      'GA': 'Gabon',
      'GM': 'Gambie',
      'GE': 'Géorgie',
      'GH': 'Ghana',
      'GI': 'Gibraltar',
      'GD': 'Grenade',
      'GR': 'Grèce',
      'GL': 'Groenland',
      'GP': 'Guadeloupe',
      'GU': 'Guam',
      'GT': 'Guatemala',
      'GG': 'Guernesey',
      'GN': 'Guinée',
      'GW': 'Guinée-Bissau',
      'GY': 'Guyana',
      'HT': 'Haïti',
      'HM': 'Îles Heard-et-MacDonald',
      'IM': 'Île de Man',
      'HN': 'Honduras',
      'HU': 'Hongrie',
      'HK': 'Hong Kong',
      'IS': 'Islande',
      'IE': 'Irlande ',
      'IN': 'Inde',
      'ID': 'Indonésie',
      'IQ': 'Irak',
      'IR': 'Iran',
      'IL': 'Israël',
      'IT': 'Italie',
      'CI': 'Côte d\'Ivoire',
      'JM': 'Jamaïque',
      'JP': 'Japon',
      'YE': 'Yémen',
      'JE': 'Jersey',
      'JO': 'Jordanie',
      'CV': 'Cap-Vert',
      'CM': 'Cameroun',
      'KZ': 'Kazakhstan',
      'KE': 'Kenya',
      'KG': 'Kirghizistan',
      'KI': 'Kiribati',
      'KW': 'Koweït',
      'HR': 'Croatie',
      'LA': 'Laos',
      'LS': 'Lesotho',
      'LV': 'Lettonie',
      'LB': 'Liban',
      'LR': 'Liberia',
      'LY': 'Libye',
      'LI': 'Liechtenstein',
      'LT': 'Lituanie',
      'LU': 'Luxembourg',
      'MO': 'Macao',
      'MK': 'République de Macédoine',
      'MG': 'Madagascar',
      'MW': 'Malawi',
      'MV': 'Maldives',
      'MY': 'Malaisie',
      'ML': 'Mali',
      'MT': 'Malte',
      'MA': 'Maroc',
      'MH': 'Îles Marshall',
      'MQ': 'Martinique',
      'MR': 'Mauritanie',
      'MU': 'Maurice',
      'YT': 'Mayotte',
      'MX': 'Mexique',
      'FM': 'Micronésie',
      'MD': 'Moldavie',
      'MC': 'Monaco',
      'MN': 'Mongolie',
      'ME': 'Monténégro',
      'MS': 'Montserrat',
      'MZ': 'Mozambique',
      'MM': 'Birmanie',
      'NA': 'Namibie',
      'NR': 'Nauru',
      'NL': 'Pays-Bas',
      'AN': 'Antilles néerlandaises',
      'NP': 'Népal',
      'NI': 'Nicaragua',
      'NC': 'Nouvelle-Calédonie',
      'NZ': 'Nouvelle-Zélande',
      'NE': 'Niger',
      'NG': 'Nigeria',
      'NU': 'Niue',
      'KP': 'Corée du Nord',
      'MP': 'Îles Mariannes du Nord',
      'NO': 'Norvège',
      'NF': 'Île Norfolk',
      'UG': 'Ouganda',
      'UA': 'Ukraine',
      'UZ': 'Ouzbékistan',
      'OM': 'Oman',
      'ZZ': 'Inconnu',
      'TL': 'Timor oriental',
      'AT': 'Autriche',
      'PK': 'Pakistan',
      'PW': 'Palaos',
      'PS': 'Palestine',
      'PA': 'Panama',
      'PG': 'Papouasie-Nouvelle-Guinée',
      'PY': 'Paraguay',
      'PE': 'Pérou',
      'PN': 'Îles Pitcairn',
      'PL': 'Pologne',
      'PT': 'Portugal',
      'PR': 'Porto Rico',
      'QA': 'Qatar',
      'RO': 'Roumanie',
      'RU': 'Russie',
      'RW': 'Rwanda',
      'RE': 'La Réunion',
      'BL': 'Saint-Barthélemy',
      'KN': 'Saint-Christophe-et-Niévès',
      'LC': 'Sainte-Lucie',
      'PM': 'Saint-Pierre-et-Miquelon',
      'VC': 'Saint-Vincent-et-les Grenadines',
      'SB': 'Salomon',
      'WS': 'Samoa',
      'SM': 'Saint-Marin',
      'ST': 'Sao Tomé-et-Principe',
      'SA': 'Arabie saoudite',
      'SN': 'Sénégal',
      'RS': 'Serbie',
      'CS': 'Serbie-et-Monténégro, ',
      'SC': 'Seychelles',
      'SL': 'Sierra Leone',
      'SG': 'Singapour',
      'SH': 'Sainte-Hélène, Ascension et Tristan da Cunha',
      'MF': 'Saint-Martin',
      'SI': 'Slovénie',
      'SK': 'Slovaquie',
      'SD': 'Soudan',
      'SO': 'Somalie',
      'ES': 'Espagne',
      'LK': 'Sri Lanka',
      'SR': 'Suriname',
      'SJ': 'Svalbard et ile Jan Mayen',
      'SZ': 'Swaziland',
      'SY': 'Syrie',
      'TJ': 'Tadjikistan',
      'TW': 'Taïwan / (République de Chine (Taïwan))',
      'TZ': 'Tanzanie',
      'TH': 'Thaïlande',
      'TG': 'Togo',
      'TK': 'Tokelau',
      'TO': 'Tonga',
      'TT': 'Trinité-et-Tobago',
      'TD': 'Tchad',
      'CZ': 'Tchéquie',
      'TN': 'Tunisie',
      'TR': 'Turquie',
      'TM': 'Turkménistan',
      'TC': 'Îles Turques-et-Caïques',
      'TV': 'Tuvalu',
      'UY': 'Uruguay',
      'VU': 'Vanuatu',
      'VA': 'Saint-Siège(État de la Cité du Vatican)',
      'VE': 'Venezuela',
      'GB': 'Royaume-Uni',
      'AE': 'Émirats arabes unis',
      'US': 'États-Unis',
      'VN': 'Viêt Nam',
      'WF': 'Wallis-et-Futuna',
      'EH': 'République arabe sahraouie démocratique',
      'BY': 'Biélorussie',
      'ZM': 'Zambie',
      'ZW': 'Zimbabwe',
      'ZA': 'Afrique du Sud',
      'GS': 'Géorgie du Sud-et-les Îles Sandwich du Sud',
      'KR': 'Corée du Sud',
      'SE': 'Suède',
      'CH': 'Suisse'
    },
    property: {
      'name': 'Titre',
      'description': 'Description',
      'labels': 'Labels',
      'calendarSummary': 'Aperçu du calendre',
      'image': 'Image',
      'videos': 'Vidéos',
      'location': 'Lieu',
      'address': 'Adresse',
      'organizer': 'Organisateur',
      'priceInfo': 'Information du prix',
      'kansentarief': 'Allocataires sociaux',
      'bookingInfo': 'Info réservation',
      'contactPoint': 'Info contact',
      'status': 'État',
      'bookingAvailability': 'Billets & places',
      'attendance': 'forme de présence',
      'creator': 'Auteur',
      'terms.theme': 'Thème',
      'terms.eventtype': 'Type',
      'created': 'Date début',
      'modified': 'Date dernière modification',
      'publisher': 'Auteur',
      'available': 'Disponible',
      'endDate': 'Date fin',
      'startDate': 'Date départ',
      'calendarType': 'Type temps',
      'sameAs': 'IDs externes',
      'typicalAgeRange': ' ge',
      'language': 'Langue',
      'audience': 'Accès',
      'completeness': 'Intégralité'
    },
    errors: {
      labelNotAllowed: 'Ce label a été ajouté par un autre utilisateur ou une autre organisation et ne peut pas être supprimé.'
    },
    preview: {
      tabs: {
        'data': 'Données',
        'history': 'Historique',
        'publication': 'Publication'
      },
      'not_found': 'Page introuvable',
      'not_found_help': 'Cette page n\'a pas pu être trouvée.',
      'loading': 'Chargement...',
      'edit': 'Modifier',
      'duplicate': 'Copier et modifier',
      'change_availability': 'Modifier la disponibilité',
      'delete': 'Supprimer',
      'title': 'Titre',
      'type': 'Type',
      'entrance': 'Entrée',
      'description': 'Description',
      'no_description': 'Aucune description',
      'where': 'Où',
      'when': 'Quand',
      'online': 'Online',
      'online_location': 'Participation en ligne',
      'online_location_missing': 'Pas d\'url pour la participation en ligne',
      'labels': 'Labels',
      'labels_error': 'Le label \'{{labelName}}\' n\'a pas pu être ajouté.',
      'labels_success': 'Le label \'{{addedLabel}}\' a été ajouté avec succès.',
      'organizer': 'Organisation',
      'no_organizer': 'Pas d\'information de l\'organisation',
      'price': 'Prix',
      'free': 'Gratuit',
      'booking_availability': 'Billets & places',
      'booking_unavailable': 'Complet',
      'booking_available': 'Disponible',
      'no_price': 'Pas d\'information du prix',
      'currency': 'euro',
      'age_label': 'Adapté à',
      'all_ages': 'Tous les âges',
      'no_age': 'Pas d\'information de l\'âge',
      'videos_label': 'Vidéos',
      'no_videos': 'Aucune vidéo',
      'publiq_url': 'Voir sur {{publicationBrand}}',
      'translate': 'Traduire',
      'info_lesson_series': 'Votre série de cours apparaît dans les agendas UiT jusqu\'au premier moment de la cours.',
      'info_holiday_camp': 'Votre camp de vacances apparaîtront dans des calendriers en ligne jusqu\'au jour du début.'
    },
    translate: {
      'ready': 'Prêt à traduire',
      'translate': 'traduire',
      'original': 'l\'original',
      'edit': 'Modifier',
      'translation': 'Traduction',
      'description': 'Description',
      'title': 'Titre',
      'tariff': 'Prix',
      'address': 'Adresse',
      'street': 'Rue et numéro'
    },
    labels: {
      'what': 'Ajoutez des mots clés courts et spécifiques.',
      'invalid': 'Ce label ne semble pas valable. Un label ',
      'chars': 'Ne comporte que des lettres ou des chiffres',
      'excluded': 'Ne comporte que \'-\' ou \'_\' mais ne peut commencer avec ces caractêres',
      'length': 'Comporte de 2 à 50 caractères'
    },
    calendarSummary: {
      'openinghours': 'plusieurs moments',
      'from': 'De',
      'till': 'à',
      'permanent': 'Permanent'
    },
    moderate: {
      'infoAlert': '<p>Bienvenue sur la page de validation. Sur cette page, vous pouvez approuver ou rejeter les événements : <br/><br/><ul><li><strong>Rejeter.</strong> Les événements rejetés ne sont plus publiés sur UiTinVlaanderen ou d\'autres agendas et ne peuvent plus être modifiés par l\'importateur.</li><li><strong>Approuver.</strong> Les événements approuvés resteront publiés sur UiTinVlaanderen et d\'autres calendriers UiT. Ils ne seront pas soumis à une nouvelle validation.</li></ul><br/>Vous trouverez des directives pour la validation dans <a href="https://helpdesk.publiq.be/hc/nl/articles/360008702459-Welke-activiteiten-mag-ik-invoeren-in-UiTdatabank" target="_blank">les règles de contenu de la base de données UiTdatabank.</a></p>',
      'validate': 'Valider',
      'approve': 'Approuver',
      'approved': 'Approuvé',
      'reject': 'Rejeter',
      'rejected': 'Rejeté',
      'continue_validation': 'Continuer la validation'
    },
    cultuurkuur: {
      'info': 'Cet événement contient <a target=\"_blank\" href=\"{{previewLink}}\">de l\'information extra</a> pour les écoles et les enseignants.',
      'subject': 'Sujet',
      'target_group': 'Public cible',
      'levels': 'Adapté à',
      'grades': 'degrés d\'éducation',
      'edit_link': 'Modifier sur cultuurkuur.be',
      'incomplete_help': 'Introduisez cet événement sur cultuurkuur.be avec de l\'information extra pour les écoles et les enseignants.',
      'continue': 'Continuer'
    },
    booking: {
      'label': 'Réservation',
      'no_booking': 'Pas d\'information de réservation'
    },
    contact: {
      'label': 'Contact',
      'or': 'ou',
      'no_contact': 'Pas d\'information du contact'
    },
    imageDetail: {
      'label': 'Images',
      'alt_image': 'Image {{index}}',
      'main_image': 'Image principale',
      'no_images': 'Pas d\'images'
    },
    prices: {
      'title': 'Ajouter des prix',
      'base': 'Tarif de base',
      'target_group': 'Public cible',
      'free': 'Gratuit',
      'currency': 'euro',
      'add_price': 'Ajouter prix',
      'add_tarriff': 'Ajouter tarif',
      'error': 'Il y a eu une erreur dans l\'enregistrement du prix.',
      'invalid': 'Cette information du prix semble invalide et ne peut pas être enregistrée.',
      'invalid_tip1': 'Notez les décimales avec une virgule.',
      'invalid_tip2': 'Ne laissez aucune ligne vide, remplissez toujours un public cible et un montant.',
      'invalid_tip3': 'Donnez au maximum deux chiffres après la virgule.',
      'close': 'Fermer',
      'save': 'Sauver'
    },
    location: {
      'title': 'Ajouter un nouveau lieu',
      'name': 'Nom de lieu',
      'name_validation': 'Le nom du lieu est un domaine obligatoire.',
      'street': 'Rue et numéro',
      'street_validation': 'Rue est un domaine obligatoire.',
      'city': 'Commune',
      'category': 'Catégorie',
      'category_help': 'Choisissez la catégorie qui décrit le mieux ce lieu.',
      'category_validation': 'Catégorie est un domaine obligatoire.',
      'error': 'Il s\'est produit une erreur lors de l\'enregistrement du lieu.',
      'invalid_street': 'Cela semble une adresse invalide. Si vous utilisez des espaces dans l\'adresse, vous ne pouvez pas avoir plus de 15 caractères après le dernier espace.',
      'cancel': 'Annuler',
      'add': 'Ajouter',
      'zip': 'Code postal',
      'nlPostalCode_validation': 'Code postal est un domaine obligatoire.',
      'invalid_PostalCode': 'Il semble que le code postale n\'est pas valable. Un code postal comporte 4 chiffres et 2 lettres sans espace.'
    },
    eventForm: {
      'langWarning': 'Attention, vous éditez dans une autre langue: {{language}}. Si ce n\'est pas votre intention, contactez-nous à vragen@uitdatabank.be.',
      step1: {
        'title': 'Qu\'est-ce que vous voulez ajouter ?',
        'label_event': 'Un événement',
        'show_everything': 'Montrez tout',
        'or': 'ou',
        'location_label': 'Un lieu',
        'change': 'Modifier',
        'refine': 'Affiner',
        'info_lesson_series': 'Votre série de cours apparaît dans les agendas UiT jusqu\'au premier moment de la cours.'
      },
      step2: {
        'date_help_event': 'L\'événement ou l\'activité a lieu quand ?',
        'date_help_place': 'Cet endroit ou ce lieu est ouvert(e) quand ?',
      },
      step3: {
        'title_event': 'Où l\'événement ou l\'activité a-t-il/elle lieu ?',
        'title_place': 'Où se trouve cet endroit ou ce lieu ?',
        'choose_city': 'Choisissez une commune',
        'choose_city_helper': 'p. ex Mons ou 7000',
        'choose_residence': 'Choisir le lieu de résidence',
        'choose_residence_helper': 'par ex. Groningue ou Amsterdam',
        'placeholder_city': 'Commune ou code postal',
        'problem_city': 'Il y a eu un problème durant la collection des villes',
        'change': 'Modifier',
        'choose_location': 'Choisissez un lieu',
        'placeholder_location': 'Nom ou adresse',
        'location_not_found': 'Lieu non trouvé ?',
        'add_location': 'Ajouter un lieu',
        'location_error': 'Il y a eu un problème dans la collection des lieux',
        'street': 'Rue et numéro',
        'placeholder_street': 'Rue de l\'église 1',
        'straat_validate': 'Rue et numéro sont des domaines obligatoires.',
        'street_validate_long': 'Cela semble une adresse invalide. Si vous utilisez des espaces dans l\'adresse, vous ne pouvez pas avoir plus de 15 caractères après le dernier espace.',
        'ok': 'OK',
        'zip': 'Code postal',
        'bookable_event_info_alert': 'Les événements dont le lieu est déterminée en consultation ne sont pas publiés sur UiTinVlaanderen ou d\'autres chaînes publiques. Votre événement apparaîtra sur cultuurkuur.be',
        'bookable_event_next_button': 'Continuer',
        'bookable_event_success_message': 'Le lieu est déterminé en consultation avec l\'école.'
      },
      step4: {
        age: {
          'age_label': 'Adapté à',
          'All ages': 'De tous âges',
          'Toddlers': 'Tout-petits',
          'Preschoolers': 'Jeunes enfants',
          'Kids': 'Enfants d’âge scolaire',
          'Teenagers': 'Adolescents',
          'Youngsters': 'Jeunes',
          'Adults': 'Adultes',
          'Seniors': 'Seniors',
          'Custom': 'Autres',
          'from': 'De',
          'till': 'à',
          'age': 'ans',
          'error_max_lower_than_min': 'L\'âge maximum ne peut être inférieur à l\'âge minimum.'
        },
        'basic_data': 'Données de base',
        'name_event': 'Nom de l\'événement',
        'name_place': 'Nom du lieu',
        'help_event': 'Choisissez un <strong>bon titre</strong>, p.ex. \"Rouler à vélo le long des chapelles\", \"La Saga de la Licorne\".',
        'help_place': 'Utilisez la <strong>dénomination officielle</strong>, p.ex. \"Argos, centre pour l\'art et les médias\", \"Site de l\'abbaye Herkenrode\", \"Centre culturel De Werf\".',
        'help_description': 'Vous pouvez ajouter une <strong>description détaillée</strong> dans l\'étape 5.',
        'info_missing': 'Vous n\'avez pas rempli tous les champs d\'informations obligatoires:',
        'save_error': 'Une erreur s\'est produite lors de l\'enregistrement de votre activité. Merci de réessayer un peu plus tard.',
        'continue': 'Continuer',
        'doubles_title': 'Évitez les doubles emplois',
        'doubles_help': 'Nous avons trouvé des éléments similaires. Controlez les éléments importés auparavant.',
        'sure': 'Vous êtes sûr que vous voulez ajouter \"{{name}}\" ?',
        'return_dashboard': 'Non, retourner au tableau de bord',
        'yes_continue': 'Oui, procéder l\'importation',
        suggestions: {
          'from': 'De',
          'till': 'à',
          'permanent': 'Permanent'
        }
      },
      step5: {
        'expose_event': 'Augmentez la visibilité de votre évènement',
        'expose_place': 'Augmentez la visibilité de votre lieu',
        'title': 'Titre',
        'description': 'Description',
        'add_text': 'Ajouter texte',
        'required_200': 'Pour attirer un nouveau public, les 200 premier caractères sont les plus importants.',
        'required_still': 'Encore',
        'required_signs': 'caractères.',
        'required_200_help': 'Intégrez le message le plus important dans les 200 premiers caractères. Vous pouvez ensuite ajouter des informations générales.',
        'empty': 'Vider',
        'tips': {
          'Concert': 'Donnez une description enthousiaste du concert. <ul> <li>Quel(s) <strong>artiste(s)</strong> se produisent ?</li> <li>De quel <strong>genre</strong> s\'agit-il ?</li> <li>Quel <strong>album ou œuvre</strong> sera présenté ?</li> </ul>',
          'Dansvoorstelling': 'Donnez une description enthousiaste du spectacle de danse. <ul> <li>Qui est le <strong>chorégraphe</strong> ?</li> <li>Qui sont les <strong>danseurs</strong> ?</li> <li>Dans quel <strong>style</strong> dansent-ils ?</li> <li>Quel est le <strong>thème ou le sujet</strong> de la représentation ?</li> </ul>',
          'Festival': 'Donnez une description enthousiaste du festival. <ul> <li>Qui ou quoi est au <strong>programme</strong> ?</li> <li>Quelle est l\'<strong>animation</strong> (périphérique) ?</li> </ul>',
          'Film': 'Donnez une description enthousiaste du cinéma. <ul> <li>Faites une brève description de <strong>l\'histoire</strong>.</li> <li>Qui est le <strong>réalisateur</strong> ?</li> <li>Qui sont les <strong>protagonistes</strong> ?</li> <li>Le film a-t-il remporté des <strong>prix</strong> ?</li> </ul>',
          'Lezing of congres': 'Donnez une description enthousiaste de la conférence où congrès <ul> <li>Quels <strong>thèmes</strong> sont couverts ?</li> <li>Quels <strong>orateurs</strong> prennent la parole ?</li> </ul>',
          'Theatervoorstelling': 'Donnez une description enthousiaste du théâtre. <ul> <li>Esquissez brièvement <strong>l\'histoire</strong> ou le <strong>thème</strong>.</li> <li>Quelle<strong> compagnie de théâtre</strong> jouera la pièce ?</li> <li>Quels sont les <strong>acteurs</strong> qui jouent ?</li> </ul>',
          'Sportwedstrijd bekijken': 'Donnez une description enthousiaste de la compétition sportive. <ul> <li>Quelles <strong>équipes</strong> ou <strong>quels participants </strong>jouent ?</li> <li>Dans quelle <strong>compétition</strong> se déroule la compétition ?</li> </ul>',
          'Markt of braderie': 'Donnez une description enthousiaste du marché, foire ou fête foraine <ul> <li>Dans <strong>quelles rues </strong>a-t-il lieu ?</li> <li>Quels seront les <strong>stands</strong> ou les <strong>stands de vente</strong> ?</li> <li>Y a-t-il une <strong>animation</strong> (de bord) ?</li> </ul>',
          'Opendeurdag': 'Donnez une description enthousiaste de la journée portes ouvertes. Que pouvez-vous <strong>voir</strong> ou <strong>vivre</strong> ?',
          'Beurs': 'Donnez une description enthousiaste de la foire. Que pouvez-vous <strong>voir</strong>, <strong>vivre</strong> ou <strong>acheter</strong> ?',
          'Tentoonstelling': 'Donnez une description enthousiaste de l\'exposition. <ul> <li>Quels sont les <strong>artistes</strong> qui exposent ?</li> <li>Quelles <strong>collections</strong> peuvent être vues ?</li> <li>Existe-t-il un <strong>guide (audio)</strong> ou une <strong>brochure</strong> ?</li> </ul>',
          'Begeleide uitstap of rondleiding': 'Donnez une description enthousiaste de la visite guidée. <ul> <li>Qu\'y a-t-il à <strong>voir</strong> ou à <strong>vivre</strong> le long du parcours ?</li> <li>Y a-t-il un <strong>nombre</strong> maximum de <strong>participants</strong> ?</li> <li>La visite guidée est-elle organisée en continu ou à des moments précis ?</li> <li>Y a-t-il des <strong>points d\'attention</strong> particuliers (par exemple, des bottes indiquées) ?</li> </ul>',
          'Lessenreeks': 'Donnez une description enthousiaste de la série de cours. <ul> <li>Qu\'y apprenez-vous exactement ?</li> <li>Des <strong>connaissances préalables</strong> sont-elles nécessaires pour participer ?</li> <li>Quel est le <strong>niveau</strong> des cours ?</li> <li>Recevez-vous un <strong>diplôme</strong> ou un certificat à la fin ?</li> </ul>',
          'Cursus met open sessies': 'Donnez une description enthousiaste du cours avec sessions ouvertes ou workshop. <ul> <li>Qu\'y apprenez-vous exactement ?</li> <li>Des <strong>connaissances préalables</strong> sont-elles nécessaires pour participer ?</li> <li>Quel est le <strong>niveau</strong> des cours ?</li> <li>Recevez-vous un <strong>diplôme</strong> ou un certificat à la fin ?</li> </ul>',
          'Kamp of vakantie': 'Donnez une description enthousiaste du camp de vacances <ul> <li>Quelles <strong>activités</strong> pouvez-vous y faire ?</li> <li>Y a-t-il un <strong>thème</strong> ?</li> <li>Est-il <strong>avec ou sans nuitées</strong> ?</li> <li>Quelle est <strong>l\'heure de début</strong> <strong>et de fin</strong> des camps de jour et les soins sont-ils <strong>fournis</strong> avant et après ?</li> </ul>',
          'Festiviteit': 'Donnez une description enthousiaste de la festivité <ul> <li>Quelles sont les <strong>attractions</strong> ?</li> <li>Y a-t-il des <strong>activités (périphériques)</strong>: quiz, concerts, food trucks, marché,... ?</li> </ul>',
          'Route': 'Donnez une description enthousiaste de l\'itinéraire. <ul> <li>Faites-vous le <strong>trajet à pied, en vélo, en bateau</strong>,.. ?</li> <li>Quels sont les <strong>arrêts possibles</strong> ?</li> <li>Quelle est la <strong>distance</strong> ou la <strong>durée</strong> de l\'itinéraire ?</li> <li>L\'itinéraire est-il <strong>accompagné</strong>, avec un guide, une brochure ou des panneaux indicateurs ?</li> </ul>',
          'Party of fuif': 'Donnez une description enthousiaste de la soirée. Quels <strong>deejays</strong> ou <strong>groupes</strong> se produisent ?',
          'Eet of drankfestijn': 'Donnez une description enthousiaste du festin de nourriture ou de boisson. <ul> <li>Qu\'y a-t-il au <strong>menu</strong> ?</li> <li>Les <strong>recettes</strong> seront-elles versées à une <strong>organisation caritative</strong> ?</li> <li>Y a-t-il une <strong>animation (périphérique)</strong> ?</li> </ul>',
          'Spel of quiz': 'Donnez une description enthousiaste du quiz ou du jeu. <ul> <li>Sur quels <strong>sujets</strong> porte le quiz ?</li> <li>Le jeu a-t-il un <strong>thème</strong> ?</li> <li>Y a-t-il quelque chose à <strong>gagner</strong> ?</li> <li>Y a-t-il un <strong>nombre maximum de participants</strong> ?</li> </ul>',
          'Sport en beweging': 'Donnez une description enthousiaste de l\'activité sportive. <ul> <li>Quel(s) <strong>sport(s)</strong> pouvez-vous pratiquer ?</li> <li>Quel <strong>matériel</strong> est (non) fourni ?</li> </ul>',
          'Monument': 'Donnez ici une description saillante du monument. Indiquez également si l\'ouverture du monument est limitée (p.ex. seulement des salons).'
        },
        'description_error': 'Il y a eu une erreur dans l\'enregistrement de la description.',
        'organizer': 'Organisation',
        'add_organizer': 'Ajouter l\'organisation',
        'choose_organizer': 'Choisissez une organisation',
        'organizer_not_found': 'L\'organisation n\'a pas été trouvée ?',
        'add_new_organizer': 'Ajouter un nouvel organisateur',
        'organizer_error': 'Il y a eu une erreur dans l\'enregistrement de l\'organisateur.',
        'contact': 'Contact & réservation',
        'add_contact': 'Ajouter plus de coordonnées',
        'website': 'Site web',
        'phone': 'Numéro de téléphone',
        'e-mail': 'Adresse mail',
        'use_booking': 'Utiliser pour la réservation',
        'booking_exposure': 'Comment ce lien peut-il apparaître ?',
        'buy_tickets': 'Achetez des tickets',
        'reserve_places': 'Réservez des places',
        'check_availability': 'Controlez la disponibilité',
        'subscribe': 'Inscrivez-vous',
        'add_more_contact': 'Ajouter plus de coordonnées',
        'contact_error': 'Il y a eu une erreur dans l\'enregistrement de l\'information du contact.',
        'facilities': 'Accessibilité',
        'add_facility': 'Ajouter des dispositions',
        'facility_inapplicable': 'Pas d\'application',
        'change': 'Modifier',
        'image_help': 'Ajoutez une image de sorte que les visiteurs reconnaissent mieux votre activité.',
        'images': 'Images',
        'copyright': 'Copyright',
        'delete': 'Supprimer',
        'main_image': 'Créer image principale',
        'add_image': 'Ajouter une image',
        priceInfo: {
          'price_label': 'Tarif',
          'add_prices': 'Ajouter prix',
          'free': 'Gratuit',
          'prices': 'Prix',
          'change': 'Modifier',
          'currency': 'euro'
        },
        reservationPeriod: {
          'add_reservation_period': 'Ajouter une période de réservation',
          'reservation_period': 'Période de réservation',
          'from': 'De',
          'till': 'à'
        }
      },
      publish: {
        'publish_now': 'Publier immédiatement',
        'publish_later': 'Publier plus tard',
        'edit_done': 'Modification terminée',
        'online_from': 'Publié le'
      },
      timeTracker: {
        'automatic_saved': 'Sauvegardé automatiquement à',
        'hour': 'heures',
      },
      embargo: {
        'title': 'Choisissez une date de publication',
        'help': 'A partir de quand l\'activité peut-elle apparaître en ligne ? <em class="text-info"><i class="fa fa-exclamation-circle" aria-hidden="true"></i> Attention, vous ne pouvez définir cette date qu\'une seule fois.</em>',
        'error_past': 'Une date de publication ne peut pas être antérieure.',
        'error_empty': 'Choisissez une date de publication.',
        'cancel': 'Annuler',
        'ready': 'Prêt à modifier'
      },
      imageUpload: {
        'modalTitle': 'Ajouter une image',
        'defaultError': 'Le fichier sélectionné ne répond pas à nos critères.',
        'noFileSelectedError': 'Il n\'y a pas de fichier sélectionné',
        'somethingWentWrongError': 'Une erreur s\'est produite lors de l\'enregistrement de l\'image.',
        'maxSize': 'Le fichier que vous souhaitez télécharger est trop gros. La taille maximale est ',
        'formatNotValidError': 'Le fichier téléchargé n\'est pas une image valable.',
        'extensionsAllowed': 'Seuls les fichiers avec les extensions .jpeg, .gif ou .png sont autorisés.',
        'sizeError': 'Le fichier téléchargé est trop grand.'
      }
    },
    offerStatus: {
      'scheduled': 'A lieu',
      'cancelled': 'Annulé',
      'postponed': 'Reporté',
      'open': 'Ouvert',
      'temporarilyClosed': 'Fermé temporairement',
      'permanentlyClosed': 'Fermé définitivement',
    },
    bookingAvailability: {
      'unavailable': 'Complet'
    },
    calendar: {
      'one_more_days': 'Jours récurrents ou variables',
      'or': 'ou',
      'default_days': 'Période continue',
      'start_label': 'Début',
      'end_label': 'Fin',
      'whole_day_label': 'Toute la journée',
      'start_hour_label': 'Heure de début',
      'end_hour_label': 'Heure de fin',
      'add_days': 'Ajouter des jours',
      period: {
        'title': 'Date de début et de fin',
        'from': 'De',
        'till': 'à',
        'alert': 'Introduisez la date de début ainsi que la date de fin. La date de fin ne peut pas tomber avant la date de début.'
      },
      openingHours: {
        'permanent_title': '24/24, 7/7',
        'permanent_subtitle': 'Chaque jour, chaque heure',
        'add_hours': 'Ajouter des heures',
        'opening_hours': 'Heures d\'ouverture',
        'change': 'Modifier',
        'days': 'Jours',
        'from': 'De',
        'till': 'à',
        'more_hours': 'Ajouter plus d\'heures d\'ouverture',
        'cancel': 'Annuler',
        'save': 'Sauver'
      }
    },
    'facilityLabel': {
      'motor': 'Dispositions pour des personnes de motricité réduite',
      'visual': 'Dispositions pour des malvoyants',
      'hearing': 'Dispositions pour des personnes d\'une limitation auditive',
      'other': 'Autres dispositions',
      'place': 'Dispositions de cette location',
      'mental': 'Dispositions pour des personnes handicapées mentales',
      'neurodivers': 'Dispositions pour des personnes neurodiverses',
    },
    audience: {
      'entrance': 'Accès',
      'everyone': 'Pour tout le monde',
      'members': 'Seulement pour des membres',
      'members_help': 'Votre article est seulement publié sur des chaînes pour des associations et leurs membres.',
      'education': 'Spécifiquement pour des écoles',
      'education_help': 'Votre article est seulement publié sur des chaînes d\'éducation culturelle. Après la publication vous pouvez encore ajouter de l\'information spécifique pour des écoles.'
    },
    workflowStatus: {
      'label': 'État de publication',
      'id': 'ID',
      'DRAFT': 'Pas publié',
      'READY_FOR_VALIDATION': 'Prêt à être publié',
      'APPROVED': 'Publié le',
      'REJECTED': 'Publication rejetée',
      'DELETED': 'Pas publié',
      'rules': 'Regardez les règles',
      'rejected_full': 'Cet item a été rejeté.'
    },
    queryFieldGroup: {
      'what': 'Quoi',
      'where': 'Où',
      'when': 'Quand',
      'input-information': 'Information input',
      'translations': 'Traductions',
      'other': 'Autres'
    },
    'queryFieldLabel': {
      'cdbid': 'code d\'identification (CDBID)',
      'offertype': 'type (offre)',
      'keywords': 'label',
      'title': 'titre',
      'category_eventtype_name': 'type (activité)',
      'locationtype': 'type (location)',
      'category_theme_name': 'thème',
      'text': 'texte',
      'city': 'commune (nom)',
      'zipcode': 'code postal',
      'location_id': 'location (id)',
      'country': 'pays',
      'location_name': 'location (nom)',
      'location_labels': 'location (labels)',
      'category_flandersregion_name': 'région / commune',
      'nisRegions': 'région / commune',
      'date': 'date',
      'permanent': 'permanent',
      'lastupdated': 'modifié dernièrement',
      'creationdate': 'créé',
      'createdby': 'créé par',
      'availablefrom': 'disponible le',
      'detail_lang': 'traduction',
      'organiser_keywords': 'label organisation',
      'organiser_id': 'organisation (id)',
      'agefrom': 'âge',
      'attendance_mode': 'forme de présence',
      'price': 'prix',
      'status': 'status',
      'booking_availability': 'billets & places',
      'organiser_label': 'organisation (nom)',
      'completeness': 'intégralité',
      'category_facility_name': 'dispositions',
      'category_targetaudience_name': 'public cible',
      'startdate': 'date de début',
      'enddate': 'date de fin',
      'lastupdatedby': 'modifié dernièrement par',
      'category_publicscope_name': 'portée de public'
    },
    'EVENT-EXPORT': {
      'QUERY-IS-MISSING': 'Une exportation est seulement possible après avoir exécuté une recherche',
      'TOO-MANY-ITEMS': 'Une exportation manuelle contenant plus de {{limit}} items n\'est pas possible. Contactez vragen@uitdatabank.be pour une solution sur mesure.'
    },
    'AANBOD_INVOEREN': 'Importer l\'offre',
    'AANBOD_BEWERKEN': 'Modifier l\'offre',
    'AANBOD_MODEREREN': 'Modérer l\'offre',
    'AANBOD_VERWIJDEREN': 'Supprimer l\'offre',
    'AANBOD_HISTORIEK': 'Consulter l\'historique',
    'ORGANISATIES_BEHEREN': 'Gérer les organisations',
    'GEBRUIKERS_BEHEREN': 'Gérer les utilisateurs',
    'LABELS_BEHEREN': 'Gérer les labels',
    'VOORZIENINGEN_BEWERKEN': 'Modifier les dispositions',
    'ORGANISATIES_BEWERKEN': 'Modifier les organisations',
    'PRODUCTIES_AANMAKEN': 'Gérer les productions',
    'FILMS_AANMAKEN': 'Gérer les films',
    'event type missing': 'Choisissez un type à <a href="#quoi" class="alert-link">l\'étape 1</a> ?',
    'timestamp missing': 'Avez-vous choisi une date en <a href="#quand" class="alert-link">étape 2</a> ?',
    'start or end date missing': 'Avez-vous choisi une date de début et de fin en <a href="#quand" class="alert-link">étape 2</a> ?',
    'when missing': 'Avez-vous fait un choix en <a href="#quand" class="alert-link">étape 2</a> ?',
    'place missing for event': 'Avez-vous choisi un lieu en <a href="#où" class="alert-link">étape 3</a> ?',
    'location missing for place': 'Avez-vous choisi un lieu en <a href="#où" class="alert-link">étape 3</a> ?',
    'title is missing': 'Avez-vous choisi une titre en <a href="#titel" class="alert-link">étape 4</a> ?',
    'age range is missing': 'Avez-vous choisi une tranche d\'âge en <a href="#titel" class="alert-link">étape 4</a> ?',
    'UNIQUE_ORGANIZER_NOTICE': 'Pour préserver à chaque organisation une identité unique dans UiTdatabank, nous demandons à chaque organisation de fournir un hyperlien unique et valide.',
    'OPENING_HOURS_ERROR': {
      'openAndClose': 'Introduisez toutes les heures d\'ouverture et de fermeture.',
      'dayOfWeek': 'Choisissez au moins un jour dans chaque ligne ajoutée.',
      'openIsBeforeClose': 'L\'heure de fermeture doit être postérieure à l\'heure d’ouverture.'
    },
    'TIME_SPAN_REQUIREMENTS': {
      'timedWhenNotAllDay': 'L\'heure de début et de fin est obligatoire quand un événement ne dure pas toute la journée.',
      'startBeforeEndDay': 'La date de fin ne peut pas tomber avant la date de début.',
      'startBeforeEnd': 'L\'heure de fin ne peut pas tomber avant l\'heure de début.',
      'tooFarInFuture': 'La date de fin et la date de début choisies ne peuvent pas dépasser 10 ans.'
    },
    uitpas: {
      uitpasInfo: {
        'uitpas': 'UiTPAS',
        'uitpas_alert': 'Ceci est un organisateur UiTPAS. Sélectionnez le prix afin d\'ajouter de l\'information spécifique concernant UiTPAS.',
        'uitpas_info': 'Ceci est une activité UiTPAS.',
        'cantChangePrice': 'Pour cet événement des tickets ont été vendus dont l\'information du prix existe déjà. Vous ne pouvez plus modifier l\'information du prix.',
        'cantChangeOrganiser': 'Pour cet événement des tickets UiTPAS ont déjà été vendus. Vous ne pouvez plus modifier l\'organisation.',
        'unavailable': 'Pour cet événement des tickets UiTPAS ont déjà été vendus. Vous ne pouvez plus modifier l\'organisation.'
      },
      cardSystems: {
        'card_systems': '<Systèmes des cartes',
        'choose': '--Sélectionnez une clé de répartition--',
        'retry': 'Enregistrer à nouveau',
        'already_has_ticketsales': 'Pour cet événement des tickets UiTPAS ont déjà été vendus. Vous ne pouvez plus modifier l\'organisation.',
        'not_found': 'Cette activité n\'est pas encore connue par UiTPAS.'
      }
    },
    images: {
      'agreement': 'Vous êtes sur le point d\'ajouter une ou plusieurs images et de les diffuser publiquement. Pour ceci il faut respecter tous les droits d\'auteur et de portrait applicables, ainsi que d\'autres législations en vigueur. Dans le cas contraire, vous pouvez en être tenu responsable, comme précisé dans les',
      'conditions': 'conditions générales',
      'conditions_url': 'https://www.publiq.be/fr/accord-utilisation-uitdatabank',
      'copyright_info': 'Plus d\'informations sur le copyright',
      'description': 'Description',
      'description_help': 'Maximum 250 caractères',
      'copyright': 'Copyright',
      'copyright_help': 'Mentionnez le nom de photographe légitime. Mentionnez le nom de votre association ou organisation uniquement si vous êtes propriétaire des droits (au moins 2 caractères).',
      'cancel': 'Annuler',
      'agree': 'Accepter',
      upload: {
        'select_image': 'Sélectionnez votre photo',
        'choose_file': 'Choisissez un fichier',
        'max_filesize': 'La dimension maximale de votre image est {{maxFileSize}} et a comme type .jpeg, .gif of .png',
        'upload': 'Télécharger'
      },
      edit: {
        'title': 'Modifier l\'information de l\'image',
        'description_help': 'Une bonne description de l\'image est lue par les moteurs de recherche et des utilisateurs malvoyants. (max. 250 caractères)',
        'save_error': 'Il y a eu une erreur dans l\'enregistrement de l\'image.',
        'update': 'actualiser'
      },
      remove: {
        'title': 'Supprimer l\'image',
        'sure': 'Vous êtes sûr de vouloir supprimer cette image ?',
        'save_error': 'Il y a eu une erreur dans la suppression de l\'image.',
      }
    },
    organizer: {
      modal: {
        'title': 'Ajouter une nouvelle organisation',
        'avoid_doubles': 'Évitez les doubles emplois',
        'unique_notice': 'Pour préserver à chaque organisation une identité unique dans UiTdatabank, nous demandons à chaque organisation de fournir un hyperlien unique et valide.',
        'website': 'Site web',
        'alert_warning': 'Cette adresse est déjà utilisée par l\'organisation \'{{organizerName}}\'. Donnez un site web unique ou',
        'alert_button': 'utilisez {{organizerName}} comme organisation',
        'name_help': 'Le nom public officiel de l\'organisation.',
        'name_required': 'Veuillez introduire un nom',
        'name_maxlength': 'Le nom de l\'organisation ne peut contenir que 250 caractères.',
        'add_confirm': 'Vous êtes sûr d\'ajouter \"{{newOrganizerName}}\" comme organisation ? La  double importation d\'organisations n\'est pas permise.',
        'doubles': 'Nous avons trouvé des items similaires:',
        'select': 'Sélectionner',
        'your_input': 'Vous avez importé:',
        'still_enter': 'Importer quand même',
        'save_error': 'Il y a eu une erreur dans l\'enregistrement de l\'organisation.',
        'address_error': 'Veuillez introduire une adresse valable.',
        'contact_error': 'Veuillez introduire l\'information du contact correctement.',
        'close': 'Fermer',
        'save': 'Sauver',
        'label_name': 'Nom'
      },
      address: {
        'label_street': 'Rue et numéro',
        'help_street': 'Veuillez introduire la rue et le numéro.',
        'label_city': 'Commune',
        'placeholder_city': 'Commune of code postal',
        'help_city': 'Il y a eu un problème dans la collection des villes.',
        'error_city': 'Veuillez introduire une commune.',
        'change': 'Modifier',
        'delete': 'Vider',
        'delete_success': 'Adresse supprimée avec succès',
        'delete_error': 'Une erreur s\'est produite lors de la suppression de votre adresse'
      },
      contact: {
        'title': 'Contact',
        'enter_url': 'Entrez un lien hypertexte',
        'enter_email': 'Introduisez une adresse mail',
        'enter_phone': 'Introduisez un numéro de téléphone<small class="text-muted">, p.ex. 011 32 43 54</small>',
        'required': 'Veuillez compléter ce domaine.',
        'valid_url': 'Cette url n\'est pas valable.',
        'valid_email': 'Cette adresse e-mail n\'est pas valable.',
        'valid_phone': 'Ce numéro de téléphone n\'est pas valable.',
        'cancel': 'Annuler',
        'add': 'Ajouter',
        'add_phone': 'Ajouter un numéro de téléphone',
        'add_email': 'Ajouter une adresse mail',
        'add_url': 'Ajouter un autre site web'
      },
      manage: {
        'edit': 'Modifier',
        'delete': 'Supprimer',
        'overview': 'Retourner à l\'aperçu',
        'dashboard': 'Retourner au tableau de bord',
        'ownerships': {
          'manage': 'Gestion des demandes'
        },
        'name': 'Nom',
        'description': 'Description',
        'educational_description': 'Description de Cultuurkuur',
        'address': 'Adresse',
        'website': 'Site Internet',
        'phone': 'Numéro de téléphone',
        'email': 'Adresse e-mail',
        'labels': 'Labels',
        'removed': 'Cette organisation a été supprimée.'
      }
    },
    duplicate: {
      title: 'Copier et modifier',
      description: 'Vous êtes sur le point de copier un événement. Choisissez une date pour cet événement.',
      error: 'Il y a eu une erreur dans la création d\'une copie !'
    },
    dashboard: {
      'welcome': 'Bienvenue,',
      'no_items': 'Vous n\'avez pas encore ajouté d\'éléments.',
      'add_activity': 'Ajouter une activité ou une location ?',
      'my_activities': 'Mes activitées et lieux',
      'my_organizers': 'Mes organisations',
      'add': 'Ajouter',
      'add_organizer': 'Ajouter une organisation',
      directive: {
        'no_publish': 'Pas publié !',
        'online': 'En ligne le',
        'edit': 'Modifier',
        'example': 'Exemple',
        'delete': 'Supprimer',
        'expired_event': 'Événement terminé'
      },
      delete: {
        'sure': 'Vous êtes sûr de vouloir supprimer \"{{name}}\" ?',
        'error_location': 'Le lieu \"{{name}}\" ne peut pas être supprimée car des activités y ont encore lieu.',
        'error': 'Il y a eu une erreur dans la suppression de l\'activité.',
        'cancel': 'Annuler',
        'delete': 'Supprimer'
      }
    },
    entry: {
      'exported_documents': 'Documents exportés',
      'notifications': 'Notifications',
      'in_progress': 'Occupé'
    },
    offerTypes: {
      'Concert': 'Concert',
      'Theatervoorstelling': 'Théâtre',
      'Lezing of congres': 'Conférence ou congrès',
      'Dansvoorstelling': 'Spectacle de danse',
      'Festival': 'Festival',
      'Toeristisch evenement': 'Événement touristique',
      'Film': 'Cinéma',
      'Sportwedstrijd bekijken': 'Assister à une compétition sportive',
      'Cursus met open sessies': 'Cours avec sessions ouvertes',
      'Lessenreeks': 'Série de cours',
      'Sport en beweging': 'Activité sportive',
      'Kamp of vakantie': 'Camp de vacances',
      'Begeleide uitstap of rondleiding': 'Tour ou excursion guidée',
      'Route': 'Itinéraire',
      'Spel of quiz': 'Jeu ou quiz',
      'Party of fuif': 'Soirée',
      'Festiviteit': 'Festivité',
      'Congres of studiedag': 'Congrès ou journée d\'étude',
      'Eet- of drankfestijn': 'Festin de nourriture ou de boisson',
      'Thema of pretpark': 'Parc à thème ou parc d\'attractions',
      'Theater': 'Théâtre',
      'Jeugdhuis of jeugdcentrum': 'Maison de jeunes ou centre de jeunesse',
      'Cultuur- of ontmoetingscentrum': 'Centre culturel ou centre de réunion',
      'Discotheek': 'Discothèque',
      'Bibliotheek of documentatiecentrum': 'Bibliothèque ou centre de documentation',
      'Bioscoop': 'Cinéma',
      'Horeca': 'Horeca',
      'Openbare ruimte': 'Espace public',
      'Tentoonstelling': 'Exposition',
      'Markt, braderie of kermis': 'Marché, foire ou fête foraine',
      'Natuurgebied of park': 'Zone naturelle ou parc',
      'Natuur, park of tuin': 'Zone naturelle ou parc',
      'Beurs': 'Foire',
      'Monument': 'Monument',
      'Opendeurdag': 'Journée portes ouvertes',
      'Recreatiedomein of centrum': 'Centre de loisirs ou centre de récréation',
      'Park of tuin': 'Jardin ou parc',
      'Archeologische Site': 'Site archéologique',
      'School of onderwijscentrum': 'École ou centre éducatif',
      'Sportcentrum': 'Centre sportif',
      'Winkel': 'Magasin',
      'Speeltuin': 'Aire de jeu',
      'Museum of galerij': 'Musée ou galerie',
      'Zaal of expohal': 'Hall ou salle d\'expo'
    },
    offerThemes: {
      'Antiek en brocante': 'Antiquités ou brocantes',
      'Architectuur': 'Architecture',
      'Audiovisuele kunst': 'Arts graphiques',
      'Beeldhouwkunst': 'Sculpture',
      'Fotografie': 'Photographie',
      'Grafiek': 'Art grafique',
      'Installatiekunst': 'Installation',
      'Schilderkunst': 'Peinture',
      'Decoratieve kunst': 'Arts décoratifs',
      'Design': 'Design',
      'Mode': 'Mode',
      'Meerdere kunstvormen': 'Arts pluridisciplinaires',
      'Ballet en klassieke dans': 'Ballet et danse classique',
      'Volksdans en werelddans': 'Danse folklorique et mondiale',
      'Stijl en salondansen': 'Danse de salon et stylée',
      'Moderne dans': 'Danse moderne',
      'Erfgoed': 'Patrimoine',
      'Avontuur': 'Aventure',
      'Natuur': 'Nature',
      'Sport': 'Sport',
      'Technologie': 'La technologie',
      'Koken': 'La cuisine',
      'Actie- en avonturenfilm': 'Film d\'action et d\'aventure',
      'Animatie en kinderfilms': 'Films animés et films pour enfants',
      'Documentaires en reportages': 'Documentaires et reportages',
      'Griezelfilm of horror': 'Films d\'épouvantes ou orreurs',
      'Historische film': 'Films historiques',
      'Komedie': 'Comédie',
      'Kortfilm': 'Court métrage',
      'Filmmusical': 'Comédie musicale',
      'Drama': 'Films dramatiques',
      'Science fiction': 'Science fiction',
      'Cinefiel': 'Cinéphile',
      'Thriller': 'Films à suspense',
      'Meerdere filmgenres': 'Films de tous genres',
      'Geschiedenis': 'Histoire et archéologie',
      'Gezondheid en wellness': 'Santé et bien-être',
      'Landbouw en platteland': 'Agriculture et campagne',
      'Milieu en natuur': 'Environnement et nature',
      'Literatuur': 'Littérature',
      'Poezie': 'Poésie',
      'Fictie': 'Fiction',
      'Non fictie': 'Non fiction',
      'Strips': 'Bandes dessinées',
      'Klassieke muziek': 'Musique classique',
      'Jazz en blues': 'Jazz et blues',
      'Pop en rock': 'Pop et rock',
      'Hiphop, r&b en rap': 'Hiphop, r&b et rap',
      'Dance muziek': 'Musique de danse',
      'Folk en wereldmuziek': 'Musique folklorique et mondiale',
      'Amusementsmuziek': 'Cabaret',
      'Politiek en maatschappij': 'Politique et société',
      'Creativiteit': 'Créativité',
      'Computer en techniek': 'Ordinateurs et technologie',
      'Opvoeding': 'Éducation',
      'Persoon en relaties': 'Hommes et relations',
      'Interculturele vorming': 'Formation interculturelle',
      'Kunst en kunsteducatie': 'Arts et formation artistique',
      'Gezondheid en zorg': 'Santé et soins',
      'Samenleving': 'Vivre en société',
      'Bal en racketsport': 'Sports de balles et raquettes',
      'Atletiek, wandelen en fietsen': 'Athlétisme, marche et cyclisme',
      'Zwemmen en watersport': 'Natation et sports nautiques',
      'Fitness, gymnastiek, dans en vechtsport': 'Fitness, gymnastique, danse et arts martiaux',
      'Outdoor en Adventure sport': 'Sports de plein air et d\'aventure',
      'Lucht en motorsport': 'Sports aero et moteurs',
      'Volkssporten': 'Sports folkloriques',
      'Omnisport en andere': 'Omnisports et autres',
      'Tekst en muziektheater': 'Théâtre dramatique et musical',
      'Humor en comedy': 'L\'humour et la comédie',
      'Musical': 'Comédie musicale',
      'Figuren en poppentheater': 'Théâtre de marionnettes',
      'Opera en operette': 'Opéra et opérette',
      'Mime en bewegingstheater': 'Mime et theéâtre de mouvements',
      'Wetenschap': 'Sciences',
      'Zingeving, filosofie en religie': 'Sens de la vie, philosophie et religion',
      'Thema onbepaald': 'Thème non défini',
      'Circus': 'Cirque',
      'Voeding': 'Nutrition',
      'Economie': 'Économie',
      'Themakamp': 'Camp thématique',
      'Taal en communicatie': 'Langue'
    },
    offerThemesGroups: {
      'Dans': 'Danse',
      'Kunst en erfgoed': 'Art et Patrimoine',
      'Muziek': 'Musique',
      'Sport': 'Sport',
      'Varia': 'Divers'
    },
    weekdays: {
      monday: {
        label: 'lun.',
        name: 'Lundi'
      },
      tuesday: {
        label: 'mar.',
        name: 'Mardi'
      },
      wednesday: {
        label: 'mer.',
        name: 'Mercredi'
      },
      thursday: {
        label: 'jeu.',
        name: 'Jeudi'
      },
      friday: {
        label: 'ven.',
        name: 'Vendredi'
      },
      saturday: {
        label: 'sam.',
        name: 'Samedi'
      },
      sunday: {
        label: 'dim.',
        name: 'Dimanche'
      }
    },
    search: {
      search: 'Chercher',
      advanced: 'Avancé',
      label: 'Mettre un label',
      deselect: 'Annuler la sélection',
      savedSearches: {
        savedSearches: 'Recherches conservées',
        items: {
          'Door mij ingevoerd': 'Encodé par moi'
        },
        mySearches: 'Mes recherches',
        title: 'Titre',
        viewResults: 'Consulter résultats',
        yourSearch: 'Votre recherche',
        save: 'Conserver',
        modal: {
          mainTitle: 'Enregistrer la recherche',
          newTab: 'Nouvelle recherche',
          existingTab: 'Recherche existante',
          giveName: 'Donnez un nom à votre recherche',
          selectSavedSearch: 'Choisissez une recherche existante',
          save: 'Enregistrer',
          cancel: 'Annuler'
        }
      },
      manage: 'Gérer',
      oneResult: '1 résultat',
      multipleResults: '{{count}} résultats',
      description: 'Description',
      labels: 'Labels',
      picture: 'Image',
      what: 'Quoi',
      where: 'Où',
      when: 'Quand',
      inputInformation: 'Information encodage',
      noEventsFound: 'Aucun événements trouvés, essayez une autre recherche.',
      exportButton: 'Activités d\'exportation',
      modal: 'Votre sélection ne contient aucune activité, veuillez essayer d’exporter une autre recherche.',
      advancedQueryBuilder: {
        title: 'Moteur de recherche avancée',
        header: {
          info: 'Ici vous pouvez effectuer des recherches avancées. Besoin d\'aide ? Lisez ',
          link: 'le mode d\'emploi'
        },
        group: 'Groupe ',
        include: 'Inclure',
        exclude: 'Exclure',
        addGroup: 'Ajouter groupe',
        cancel: 'Annuler',
        search: 'Rechercher',
        syntaxError: 'Votre requête contient une erreur. Sur <a href="https://helpdesk.publiq.be/hc/nl/articles/360008632440-Hoe-kan-ik-activiteiten-zoeken-op-basis-van-verschillende-parameters">cette page</a>, vous trouverez plus d\'informations sur la manière de rédiger une requête.',
        invalidField: '{{field}} n\'est pas un paramètre valide. Sur <a href="https://helpdesk.publiq.be/hc/nl/articles/360008632440-Hoe-kan-ik-activiteiten-zoeken-op-basis-van-verschillende-parameters">cette page</a>, vous trouverez plus d\'informations sur la manière de rédiger une requête.',
      },
      organization: {
        name: 'Nom',
        address: 'Adresse',
        info: 'Information encodage',
        noAddress: 'Pas d\'adresse',
        addOrganizer: 'Ajouter une organisation',
        searchOrganization: 'Recherche par organisation',
        notFound: 'Aucune organisation trouvée',
        error: 'Une erreur s\'est produite lors de la recherche:'
      }
    }
  }
);
})();

// Source: src/core/translations/german-translations.constant.js
(function () {
'use strict';
// jscs:disable maximumLineLength

/**
 * @ngdoc service
 * @name udbApp.udbGermanTranslations
 * @description
 * # udbGermanTranslations
 * Constant in the udbApp.
 */
angular.module('udb.core').constant('udbGermanTranslations', {
  'BE': 'Belgien',
  'NL': 'Niederlande',
  'ZZ': 'Ort in Absprache mit der Schule',
  'EN_ADJECTIVE': 'englische',
  'FR_ADJECTIVE': 'französische',
  'DE_ADJECTIVE': 'deutsche',
  'NL_ADJECTIVE': 'niederländische',
  'datepicker': {
    'CURRENT': 'Heute',
    'CLEAR': 'Löschen',
    'CLOSE': 'Schließen',
  },
  '=': 'ist gleich',
  '><': 'zwischen',
  '+': 'ist gleich',
  '!': 'ist ungleich',
  '-': 'ist ungleich',
  '>': 'ist größer oder gleich',
  '<': 'ist kleiner oder gleich',
  '>_DATE': 'später als',
  '<_DATE': 'früher als',
  '=_DATE': 'ist gleich',
  '><_DATE': 'zwischen',
  'choice': {
    'everyone': 'alle',
    'members': 'Mitglieder',
    'education': 'Bildung',
    'Available': 'Findet statt',
    'Unavailable': 'Abgesagt',
    'TemporarilyUnavailable': 'Verlegt',
    'available': 'Verfügbar',
    'unavailable': 'Voll oder ausverkauft',
    'online': 'online',
    'offline': 'physisch',
    'mixed': 'gemischt (physisch / offline)',
    'asc': 'aufsteigend',
    'desc': 'absteigend',
    'today': 'heute',
    'tomorrow': 'morgen',
    'thisweekend': 'dieses Wochenende',
    'nextweekend': 'nächstes Wochenende',
    'next7days': 'die nächsten 7 Tage',
    'next14days': 'die nächsten 14 Tage',
    'next30days': 'die nächsten 30 Tage',
    'next3months': 'die nächsten 3 Monate',
    'next6months': 'die nächsten 6 Monate',
    'next12months': 'die nächsten 12 Monate',
    'permanent': 'permanent',
    'event': 'Veranstaltung',
    'place': 'Ort',
    'actor': 'Schauspieler',
    'production': 'Produktion',
    'nl': 'Niederländisch',
    'fr': 'Französisch',
    'en': 'Englisch',
    'de': 'Deutsch',
    'AF': 'Afghanistan',
    'AX': 'Ålandinseln',
    'AL': 'Albanien',
    'DZ': 'Algerien',
    'AS': 'Amerikanisch-Samoa',
    'VI': 'Amerikanische Jungferninseln',
    'UM': 'Kleinere abgelegene Inseln der Vereinigten Staaten',
    'AD': 'Andorra',
    'AO': 'Angola',
    'AI': 'Anguilla',
    'AQ': 'Antarktis',
    'AG': 'Antigua und Barbuda',
    'AR': 'Argentinien',
    'AM': 'Armenien',
    'AW': 'Aruba',
    'AU': 'Australien',
    'AZ': 'Aserbaidschan',
    'BS': 'Bahama’s',
    'BH': 'Bahrein',
    'BD': 'Bangladesch',
    'BB': 'Barbados',
    'BE': 'Belgien',
    'BZ': 'Belize',
    'BJ': 'Benin',
    'BM': 'Bermuda',
    'BT': 'Bhutan',
    'BO': 'Bolivien',
    'BA': 'Bosnien und Herzegowina',
    'BW': 'Botswana',
    'BV': 'Bouvetinsel',
    'BR': 'Brasilien',
    'IO': 'Britisches Territorium im Indischen Ozean',
    'VG': 'Britische Jungferninseln',
    'BN': 'Brunei',
    'BG': 'Bulgarien',
    'BF': 'Burkina Faso',
    'BI': 'Burundi',
    'KH': 'Kambodscha',
    'CA': 'Kanada',
    'KY': 'Kaimaninseln',
    'CF': 'Zentralafrikanische Republik',
    'CL': 'Chile',
    'CN': 'China',
    'CX': 'Weihnachtsinsel',
    'CC': 'Kokosinseln',
    'CO': 'Kolumbien',
    'KM': 'Komoren',
    'CG': 'Kongo',
    'CD': 'Kongo-Kinshasa',
    'CK': 'Cookinseln',
    'CR': 'Costa Rica',
    'CU': 'Kuba',
    'CY': 'Zypern',
    'DK': 'Dänemark',
    'DJ': 'Dschibuti',
    'DM': 'Dominica',
    'DO': 'Dominikanische Republik',
    'DE': 'Deutschland',
    'EC': 'Ecuador',
    'EG': 'Ägypten',
    'SV': 'El Salvador',
    'GQ': 'Äquatorialguinea',
    'ER': 'Eritrea',
    'EE': 'Estland',
    'ET': 'Äthiopien',
    'FO': 'Färöer Inseln',
    'FK': 'Falklandinseln',
    'FJ': 'Fidschi',
    'PH': 'Philippinen',
    'FI': 'Finnland',
    'FR': 'Frankreich',
    'GF': 'Französisch-Guayana',
    'PF': 'Französisch-Polynesien',
    'TF': 'Französische Süd- und Antarktisgebiete',
    'GA': 'Gabun',
    'GM': 'Gambia',
    'GE': 'Georgien',
    'GH': 'Ghana',
    'GI': 'Gibraltar',
    'GD': 'Grenada',
    'GR': 'Griechenland',
    'GL': 'Grönland',
    'GP': 'Guadeloupe',
    'GU': 'Guam',
    'GT': 'Guatemala',
    'GG': 'Guernsey',
    'GN': 'Guinea',
    'GW': 'Guinea-Bissau',
    'GY': 'Guyana',
    'HT': 'Haiti',
    'HM': 'Heard- und McDonald-Inseln',
    'IM': 'Insel Man',
    'HN': 'Honduras',
    'HU': 'Ungarn',
    'HK': 'Hongkong',
    'IS': 'Island',
    'IE': 'Irland',
    'IN': 'Indien',
    'ID': 'Indonesien',
    'IQ': 'Irak',
    'IR': 'Iran',
    'IL': 'Israel',
    'IT': 'Italien',
    'CI': 'Elfenbeinküste',
    'JM': 'Jamaika',
    'JP': 'Japan',
    'YE': 'Jemen',
    'JE': 'Jersey',
    'JO': 'Jordanien',
    'CV': 'Kapverden',
    'CM': 'Kamerun',
    'KZ': 'Kasachstan',
    'KE': 'Kenia',
    'KG': 'Kirgisistan',
    'KI': 'Kiribati',
    'KW': 'Kuwait',
    'HR': 'Kroatien',
    'LA': 'Laos',
    'LS': 'Lesotho',
    'LV': 'Lettland',
    'LB': 'Libanon',
    'LR': 'Liberia',
    'LY': 'Libyen',
    'LI': 'Liechtenstein',
    'LT': 'Litauen',
    'LU': 'Luxemburg',
    'MO': 'Macau',
    'MK': 'Mazedonien',
    'MG': 'Madagaskar',
    'MW': 'Malawi',
    'MV': 'Malediven',
    'MY': 'Malaysia',
    'ML': 'Mali',
    'MT': 'Malta',
    'MA': 'Marokko',
    'MH': 'Marshallinseln',
    'MQ': 'Martinique',
    'MR': 'Mauretanien',
    'MU': 'Mauritius',
    'YT': 'Mayotte',
    'MX': 'Mexiko',
    'FM': 'Mikronesien',
    'MD': 'Moldawien',
    'MC': 'Monaco',
    'MN': 'Mongolei',
    'ME': 'Montenegro',
    'MS': 'Montserrat',
    'MZ': 'Mosambik',
    'MM': 'Myanmar',
    'NA': 'Namibien',
    'NR': 'Nauru',
    'NL': 'Niederlande',
    'AN': 'Niederländische Antillen',
    'NP': 'Nepal',
    'NI': 'Nicaragua',
    'NC': 'Neukaledonien',
    'NZ': 'Neuseeland',
    'NE': 'Niger',
    'NG': 'Nigeria',
    'NU': 'Niue',
    'KP': 'Nordkorea',
    'MP': 'Nördliche Marianen',
    'NO': 'Norwegen',
    'NF': 'Norfolkinsel',
    'UG': 'Uganda',
    'UA': 'Ukraine',
    'UZ': 'Usbekistan',
    'OM': 'Oman',
    'ZZ': 'Unbekanntes oder ungenaues Territorium',
    'TL': 'Osttimor',
    'AT': 'Österreich',
    'PK': 'Pakistan',
    'PW': 'Palau',
    'PS': 'Palestinien',
    'PA': 'Panama',
    'PG': 'Papua Neuguinea',
    'PY': 'Paraguay',
    'PE': 'Peru',
    'PN': 'Pitcairn',
    'PL': 'Polen',
    'PT': 'Portugal',
    'PR': 'Puerto Rico',
    'QA': 'Katar',
    'RO': 'Rumänien',
    'RU': 'Russland',
    'RW': 'Ruanda',
    'RE': 'Réunion',
    'BL': 'Saint Barthélemy',
    'KN': 'St. Kitts und Nevis',
    'LC': 'St. Lucia',
    'PM': 'St. Pierre und Miquelon',
    'VC': 'St. Vincent und Grenadinen',
    'SB': 'Salomoninseln',
    'WS': 'Samoa',
    'SM': 'San Marino',
    'ST': 'Sao Tome und Principe',
    'SA': 'Saudi-Arabien',
    'SN': 'Senegal',
    'RS': 'Serbien',
    'CS': 'Serbien-Montenegro',
    'SC': 'Seychellen',
    'SL': 'Sierra Leone',
    'SG': 'Singapur',
    'SH': 'St. Helena',
    'MF': 'Sint Maarten',
    'SI': 'Slowenien',
    'SK': 'Slowakei',
    'SD': 'Sudan',
    'SO': 'Somalia',
    'ES': 'Spanien',
    'LK': 'Sri Lanka',
    'SR': 'Suriname',
    'SJ': 'Spitzbergen und Jan Mayen',
    'SZ': 'Swaziland',
    'SY': 'Syrien',
    'TJ': 'Tadschikistan',
    'TW': 'Taiwan',
    'TZ': 'Tansania',
    'TH': 'Thailand',
    'TG': 'Togo',
    'TK': 'Tokelau',
    'TO': 'Tonga',
    'TT': 'Trinidad und Tobago',
    'TD': 'Tschad',
    'CZ': 'Tschechien',
    'TN': 'Tunesien',
    'TR': 'Türkei',
    'TM': 'Turkmenistan',
    'TC': 'Türkische und Caicos-Inseln',
    'TV': 'Tuvalu',
    'UY': 'Uruguay',
    'VU': 'Vanuatu',
    'VA': 'Vatikan',
    'VE': 'Venezuela',
    'GB': 'Großbritannien',
    'AE': 'Vereinigte Arabische Emirate',
    'US': 'USA',
    'VN': 'Vietnam',
    'WF': 'Wallis und Futuna',
    'EH': 'Westsahara',
    'BY': 'Weißrussland',
    'ZM': 'Sambia',
    'ZW': 'Simbabwe',
    'ZA': 'Südafrika',
    'GS': 'Südgeorgien und die Südlichen Sandwichinseln',
    'KR': 'Südkorea',
    'SE': 'Schweden',
    'CH': 'Schweiz',
  },
  'property': {
    'name': 'Titel',
    'description': 'Beschreibung',
    'labels': 'Labels',
    'calendarSummary': 'Kalenderzusammenfassung',
    'image': 'Abbildung',
    'location': 'Ort',
    'address': 'Adresse',
    'organizer': 'Organisator',
    'priceInfo': 'Preisinformation',
    'kansentarief': 'Ermäßigter Tarif',
    'bookingInfo': 'Buchungsinfo',
    'contactPoint': 'Kontaktinfo',
    'status': 'Status',
    'bookingAvailability': 'Tickets & Plätze',
    'attendance': 'Anwesenheits-Modus',
    'creator': 'Autor',
    'terms.theme': 'Thema',
    'terms.eventtype': 'Typ',
    'created': 'Datum erstellt',
    'modified': 'Datum letzte Anpassung',
    'publisher': 'Autor',
    'available': 'Embargodatum',
    'endDate': 'Enddatum',
    'startDate': 'Startdatum',
    'calendarType': 'Zeitart',
    'sameAs': 'Externe IDs',
    'typicalAgeRange': 'Alter',
    'language': 'Sprache',
    'audience': 'Zutritt',
    'completeness': 'Integrität'
  },
  'errors': {
    'labelNotAllowed': 'Dieses Label wurde von einem anderen Benutzer oder einer anderen Organisation hinzugefügt und kann nicht entfernt werden.'
  },
  'preview': {
    'tabs': {
      'data': 'Angaben',
      'history': 'Verlauf',
      'publication': 'Veröffentlichung',
    },
    'not_found': 'Seite nicht gefunden',
    'not_found_help': 'Diese Seite konnte nicht gefunden werden.',
    'loading': 'Laden...',
    'edit': 'Bearbeiten',
    'duplicate': 'Kopieren und anpassen',
    'change_availability': 'Verfügbarkeit ändern',
    'delete': 'Löschen',
    'title': 'Titel',
    'type': 'Typ',
    'entrance': 'Zutritt',
    'description': 'Beschreibung',
    'no_description': 'Keine Beschreibung',
    'where': 'Wo',
    'bookable_event_location_info': 'Ort in Absprache mit der Schule.',
    'online': 'Online',
    'online_location': 'Online-Teilnahme',
    'online_location_missing': 'Keine Url für Online-Teilnahme',
    'when': 'Wann',
    'labels': 'Labels',
    'labels_error': 'Das Hinzufügen von Label \'{{labelName}}\' war nicht möglich.',
    'labels_success': 'Das Label \'{{addedLabel}}\' wurde erfolgreich hinzugefügt.',
    'organizer': 'Organisation',
    'no_organizer': 'Keine Organisationsinformation',
    'price': 'Preis',
    'free': 'Kostenlos',
    'currency': 'Euro',
    'no_price': 'Keine Preisinformation',
    'booking_availability': 'Tickets & Plätze',
    'booking_unavailable': 'Voll oder ausverkauft',
    'booking_available': 'Verfügbar',
    'age_label': 'Geeignet für',
    'all_ages': 'Alle Altersgruppen',
    'no_age': 'Keine Altersinformation',
    'videos_label': 'Videos',
    'no_videos': 'Keine Videos',
    'publiq_url': 'Auf {{publicationBrand}}ansehen',
    'translate': 'Übersetzen',
    'info_lesson_series': 'Ihre Unterrichtsreihe erscheint bis zum ersten Unterrichtszeitpunkt in UiT-Agenden.',
    'info_holiday_camp': 'Ihr Camp oder Urlaub wird bis zum Starttag in online Agendas angezeigt.'
  },
  'translate': {
    'ready': 'Fertig mit übersetzen',
    'translate': 'übersetzen',
    'original': 'Original',
    'edit': 'Bearbeiten',
    'translation': 'Übersetzung',
    'description': 'Beschreibung',
    'title': 'Titel',
    'tariff': 'Preistarif',
    'address': 'Adresse',
    'street': 'Straße und Hausnummer',
  },
  'labels': {
    'what': 'Mit einem Label fügen Sie kurze, konkrete Suchbegriffe hinzu.',
    'invalid': 'Dies scheint ein ungültiges Label zu sein. Ein Label',
    'chars': 'besteht ausschließlich aus Buchstaben oder Zahlen',
    'excluded':
      'enthält lediglich \'-\' und \'_\', aber darf nicht mit diesen Zeichen anfangen',
    'length': 'umfasst 2 bis 50 Zeichen',
  },
  'calendarSummary': {
    'openinghours': 'mehrere Zeiten',
    'from': 'Von',
    'till': 'bis',
    'permanent': 'Permanent',
  },
  'moderate': {
    'infoAlert': '<p>Willkommen auf der Validierungsseite. Auf dieser Seite können Sie Veranstaltungen genehmigen oder ablehnen: <br/><br/><ul><li><strong>Ablehnen.</strong> Abgelehnte Veranstaltungen werden nicht mehr auf UiTinVlaanderen oder anderen UiT-Agenden veröffentlicht und können vom Importeur nicht mehr bearbeitet werden.</li><li><strong>Genehmigen.</strong> Genehmigte Veranstaltungen bleiben auf UiTinVlaanderen und anderen UiTagenda-Plattformen veröffentlicht. Sie werden nicht erneut zur Validierung vorgelegt.</li></ul><br/>Eine Anleitung zur Validierung finden Sie in <a href="https://helpdesk.publiq.be/hc/nl/articles/360008702459-Welke-activiteiten-mag-ik-invoeren-in-UiTdatabank" target="_blank">den Inhaltsregeln der UiTdatabank.</a></p>',
    'validate': 'Validieren',
    'approve': 'Genehmigen',
    'approved': 'Genehmigt',
    'reject': 'Ablehnen',
    'rejected': 'Abgelehnt',
    'continue_validation': 'Mit Validierung fortfahren',
  },
  'cultuurkuur': {
    'info': 'Diese Veranstaltung enthält <a target="_blank" href="{{previewLink}}">extra Informationen</a> für Schulen und Lehrkräfte.',
    'subject': 'Betreff',
    'target_group': 'Zielgruppe',
    'levels': 'Geeignet für',
    'grades': 'Bildungsgrade',
    'edit_link': 'Auf cultuurkuur.be ändern',
    'incomplete_help':
      'Fügen Sie ergänzende Informationen für Schulen und Lehrkräfte auf cultuurkuur.be hinzu.',
    'continue': 'Weiter',
  },
  'booking': {
    'label': 'Buchung',
    'no_booking': 'Keine Buchungsinformation',
  },
  'contact': {
    'label': 'Kontakt',
    'or': 'oder',
    'no_contact': 'Keine Kontaktinformation',
  },
  'imageDetail': {
    'label': 'Abbildungen',
    'alt_image': 'Abbildung {{index}}',
    'main_image': 'Hauptabbildung',
    'no_images': 'Keine Abbildungen',
  },
  'prices': {
    'title': 'Preise hinzufügen',
    'base': 'Basistarif',
    'target_group': 'Zielgruppe',
    'free': 'Kostenlos',
    'currency': 'Euro',
    'add_price': 'Preis eingeben',
    'add_tarriff': 'Tarif hinzufügen',
    'error': 'Beim Speichern des Preises ist ein Fehler aufgetreten.',
    'invalid':
      'Diese Preisinformation scheint ungültig zu sein und kann daher nicht gespeichert werden.',
    'invalid_tip1': 'Notieren Sie Dezimalstellen mit einem Komma.',
    'invalid_tip2':
      'Lassen Sie keine Reihe frei, geben Sie immer eine Zielgruppe und einen Betrag ein.',
    'invalid_tip3': 'Geben Sie maximal zwei Ziffern nach dem Komma ein.',
    'close': 'Schließen',
    'save': 'Speichern',
  },
  'location': {
    'title': 'Neuen Ort hinzufügen',
    'name': 'Bezeichnung Ort',
    'name_validation': 'Die Bezeichnung des Ortes ist ein Pflichtfeld.',
    'street': 'Straße und Hausnummer',
    'street_validation': 'Straße ist ein Pflichtfeld.',
    'city': 'Stadt',
    'category': 'Kategorie',
    'category_help':
      'Wählen Sie eine Kategorie, die diesen Ort am besten umschreibt.',
    'category_validation': 'Kategorie ist ein Pflichtfeld.',
    'error': 'Beim Speichern Ihres Ortes ist ein Fehler aufgetreten.',
    'invalid_street':
      'Dies scheint eine ungültige Adresse zu sein. Wenn Sie Leerzeichen in der Adresse verwenden, dürfen nach dem letzten Leerzeichen nicht mehr als 15 Zeichen stehen.',
    'cancel': 'Abbrechen',
    'add': 'Hinzufügen',
    'zip': 'Postleitzahl',
    'nlPostalCode_validation': 'Postleitzahl ist ein Pflichtfeld.',
    'invalid_PostalCode':
      'Dies scheint eine ungültige Postleitzahl zu sein. Eine Postleitzahl besteht aus 5 Ziffern.',
  },
  'eventForm': {
    'langWarning':
      'Achtung, Sie (be)arbeiten in einer anderen Sprache: {{language}}. Falls dies nicht beabsichtigt ist, wenden Sie sich bitte an vragen@uitdatabank.be.',
    'step1': {
      'title': 'Was möchten Sie hinzufügen?',
      'label_event': 'Eine Veranstaltung',
      'show_everything': 'Alles anzeigen',
      'or': 'oder',
      'location_label': 'Einen Ort',
      'change': 'Ändern',
      'refine': 'Verfeinern',
      'info_lesson_series': 'Ihre Unterrichtsreihe erscheint bis zum ersten Unterrichtszeitpunkt in UiT-Agenden.'
    },
    'step2': {
      'date_help_event':
        'Wann findet diese Veranstaltung oder diese Aktivität statt?',
      'date_help_place': 'Wann ist diese Stelle oder dieser Ort geöffnet?',
    },
    'step3': {
      'title_event': 'Wo findet diese Veranstaltung oder diese Aktivität statt?',
      'title_place': 'Wo befindet sich diese Stelle oder dieser Ort?',
      'choose_city': 'Wählen Sie eine Stadt',
      'choose_city_helper': 'zB. Gent oder 9000',
      'choose_residence': 'Wählen Sie eine Wohnanschrift',
      'choose_residence_helper': 'zB. Groningen oder Amsterdam',
      'placeholder_city': 'Stadt oder Postleitzahl',
      'problem_city': 'Beim Abrufen der Städte ist ein Problem aufgetreten',
      'change': 'Ändern',
      'choose_location': 'Wählen Sie einen Ort',
      'placeholder_location': 'Name oder Adresse',
      'location_not_found': 'Ort nicht gefunden?',
      'add_location': 'Einen Ort hinzufügen',
      'location_error': 'Beim Abrufen der Orte ist ein Fehler aufgetreten',
      'street': 'Straße und Hausnummer',
      'placeholder_street': 'Kerkstraat 1',
      'street_validate': 'Straße und Hausnummer ist ein Pflichtfeld.',
      'street_validate_long':
        'Dies scheint eine ungültige Adresse zu sein. Wenn Sie Leerzeichen in der Adresse verwenden, dürfen nach dem letzten Leerzeichen nicht mehr als 15 Zeichen stehen.',
      'ok': 'OK',
      'zip': 'Postleitzahl',
      'zip_validate': 'Postleitzahl ist ein Pflichtfeld.',
      'invalid_zip':
        'Dies scheint eine ungültige Postleitzahl zu sein. Eine Postleitzahl besteht aus 5 Ziffern.',
      'bookable_event_info_alert':
        'Veranstaltungen, bei denen der Ort in Absprache festgelegt wird, werden nicht auf UiTinVlaanderen oder anderen Öffentlichkeitskanälen veröffentlicht. Ihre Veranstaltung wird jedoch auf cultuurkuur.be angezeigt',
      'bookable_event_next_button': 'Weiter',
      'bookable_event_success_message':
        'Der Ort wird in Absprache mit der Schule festgelegt.',
    },
    'step4': {
      'age': {
        'age_label': 'Geeignet für',
        'All ages': 'Alle Altersgruppen',
        'Toddlers': 'Kleinkinder',
        'Preschoolers': 'Kindergartenkinder',
        'Kids': 'Kinder',
        'Teenagers': 'Teenager',
        'Youngsters': 'Junge',
        'Adults': 'Erwachsene',
        'Seniors': 'Senioren',
        'Custom': 'Andere',
        'from': 'Von',
        'till': 'Bis',
        'age': 'Jahre',
        'error_max_lower_than_min':
          'Das Höchstalter kann nicht unter dem Mindestalter liegen.',
      },
      'basic_data': 'Basisangaben',
      'name_event': 'Name der Veranstaltung',
      'name_place': 'Bezeichnung des Ortes',
      'help_event':
        'Verwenden Sie einen <strong>aussagekräftigen Titel</strong>, zB. "Radtour entlang von Kapellen", "Die Sage vom Einhorn".',
      'help_place':
        'Verwenden Sie die <strong>offizielle Bezeichnung</strong>, zB. "Gravensteen", "Abdijsite Herkenrode", "Cultuurcentrum De Werf".',
      'help_description':
        'Eine <strong>ausführliche Beschreibung</strong> können Sie in Schritt 5 hinzufügen.',
      'info_missing': 'Nicht alle Pflichtfelder wurden ausgefüllt:',
      'save_error':
        'Beim Speichern der Aktivität ist ein Fehler aufgetreten. Probieren Sie es später noch einmal.',
      'continue': 'Weiter',
      'doubles_title': 'Vermeiden Sie doppelte Arbeit',
      'doubles_help':
        'Wir haben vergleichbare Items gefunden. Überprüfen Sie diese bereits eher eingegebenen Items.',
      'sure': 'Sind Sie sicher, dass Sie "{{name}}" hinzufügen möchten?',
      'return_dashboard': 'Nein, zurück zum Dashboard',
      'yes_continue': 'Ja, mit der Eingabe fortfahren',
      'suggestions': {
        'from': 'Von',
        'till': 'bis',
        'permanent': 'Permanent',
      },
    },
    'step5': {
      'expose_event': 'Heben Sie Ihre Veranstaltung besonders hervor',
      'expose_place': 'Heben Sie diesen Ort besonders hervor',
      'title': 'Titel',
      'description': 'Beschreibung',
      'add_text': 'Text hinzufügen',
      'required_200':
        'Die ersten 200 Zeichen sind am wichtigsten, wenn Sie sich an ein neues Publikum richten.',
      'required_still': 'Noch',
      'required_signs': 'Zeichen.',
      'required_200_help':
        'Bringen Sie die wichtigste Botschaft in den ersten 200 Zeichen unter. Sie können noch zusätzliche Hintergrundinformationen hinzufügen.',
      'empty': 'Leeren',
      'tips': {
        'Concert':
          'Schreiben Sie eine enthusiastische Umschreibung des Konzerts. <ul><li>Welche(r)<strong> Künstler(innen)</strong> treten auf? </li><li>Um welches <strong>Genre</strong> handelt es sich?</li><li>Welches<strong> Album</strong> <strong>oder Werk </strong>wird vorgestellt? </li></ul>',
        'Dansvoorstelling':
          'Schreiben Sie eine enthusiastische Umschreibung der Tanzvorführung.<ul><li>Wer ist der <strong>Choreograph</strong>?</li><li>Wer sind die<strong> Tänzer</strong>?</li><li>Welchen <strong>Stil</strong> tanzen sie?</li><li>Um welches <strong>Thema oder Problem</strong> dreht sich die Vorstellung?</li></ul>',
        'Festival':
          'Schreiben Sie eine enthusiastische Umschreibung des Festivals. <ul> <li>Wer oder was steht auf dem <strong>Programm?</strong> </li> <li>Welche <strong>(Neben)Aktivitäten</strong> gibt es?</li> </ul>',
        'Film': 'Schreiben Sie eine enthusiastische Umschreibung des Films. <ul> <li>Umreißen Sie kurz die <strong>Geschichte</strong>. </li> <li>Wer ist der <strong>Regisseur?</strong> </li> <li>Wer spielt die  <strong>Hauptrolle?</strong> </li> <li>Hat der Film <strong>Preise</strong> gewonnen? </li></ul>',
        'Lezing of congres':
          'Schreiben Sie eine enthusiastische Umschreibung der Lesung oder des Kongresses. <ul> <li>Welche<strong> Themas</strong> werden behandelt? </li><li>Welche <strong>Sprecher </strong>nehmen das Wort?</li></ul>',
        'Theatervoorstelling':
          'Schreiben Sie eine enthusiastische Umschreibung der Vorstellung.  <ul> <li>Umreißen Sie kurz die <strong>Geschichte</strong> oder das <strong>Thema</strong>. </li> <li>Welches <strong>Theaterensemble</strong> führt das Stück auf? </li> <li>Welche <strong>Darsteller</strong> spielen mit?</li></ul>',
        'Sportwedstrijd bekijken':
          'Schreiben Sie eine enthusiastische Umschreibung des Sportwettkampfes. <ul> <li>Welche <strong>Mannschaften oder Teilnehmer</strong> treten an? </li> <li>In welcher<strong> Liga</strong> findet der Wettkampf statt?</li></ul>',
        'Markt of braderie':
          'Schreiben Sie eine enthusiastische Umschreibung des Markts oder Straßenfests. <ul> <li>In <strong>welchen Straßen</strong> findet dieser statt? </li> <li>Welche <strong>Stände</strong> werden anwesend sein? </li><li>Gibt es <strong>(Neben)Aktivitäten</strong>?</li></ul>',
        'Opendeurdag':
          'Schreiben Sie eine enthusiastische Umschreibung vom Tag der offenen Tür. Was kann man <strong>sehen </strong>oder <strong>erleben?</strong>',
        'Beurs':
          'Schreiben Sie eine enthusiastische Umschreibung der Messe. Was kann man <strong>ansehen</strong>, <strong>erleben</strong> oder <strong>kaufen</strong>?',
        'Tentoonstelling':
          'Schreiben Sie eine enthusiastische Umschreibung der Ausstellung. <ul> <li>Welche <strong>Künstler</strong> stellen aus?</li> <li>Welche<strong> Kollektionen</strong> können betrachtet werden? </li> <li>Steht ein <strong>(Audio)Guide</strong> oder <strong>eine Broschüre</strong> zur Verfügung?</li></ul>',
        'Begeleide uitstap of rondleiding':
          'Schreiben Sie eine enthusiastische Umschreibung des Rundgangs. <ul> <li>Was kann man entlang der Strecke <strong>sehen oder erleben</strong>? </li> <li>Gibt es eine maximale <strong>Anzahl Teilnehmer</strong>? </li> <li>Wird der Rundgang durchgehen oder zu <strong>bestimmten Zeiten</strong> organisiert? </li> <li>Gibt es <strong>Dinge zu beachten</strong> (zB. Stiefel notwendig)?</li> </ul>',
        'Lessenreeks':
          'Schreiben Sie eine enthusiastische Umschreibung der Vorlesungsreihe. <ul> <li>Was genau lernt man? </li> <li>Benötigt man <strong>Vorkenntnisse</strong> um teilzunehmen? </li> <li>Welches <strong>Niveau</strong> haben die Vorlesungen? </li><li>Erhält man am Ende ein <strong>Diplom</strong> oder Zertifikat?</li></ul>',
        'Cursus met open sessies':
          'Schreiben Sie eine enthusiastische Umschreibung des Workshops oder Kurses mit öffentlichen Sitzungen.  <ul> <li>Was genau lernt man? </li> <li>Benötigt man <strong>Vorkenntnisse</strong> um teilzunehmen? </li> <li>Welches <strong>Niveau</strong> haben die Vorlesungen? </li> <li>Erhält man am Ende ein <strong>Diplom</strong> oder Zertifikat?</li> </ul>',
        'Kamp of vakantie':
          'Schreiben Sie eine enthusiastische Umschreibung des Camps oder Ferienlagers.  <ul> <li>Welche <strong>Aktivitäten</strong> gibt es? </li> <li>Gibt es ein <strong>Thema</strong>? </li> <li>Gibt es beim Camp <strong>Übernachtungsmöglichkeiten</strong>? </li> <li>Wann <strong>beginnt und endet</strong> das Tagescamp und gibt es davor und danach <strong>Betreuungsmöglichkeiten</strong>?</li> </ul>',
        'Festiviteit':
          'Schreiben Sie eine enthusiastische Umschreibung des Jahrmarkts. <ul> <li>Welche <strong>Attraktionen</strong> gibt es? </li> <li>Gibt es<strong> (Neben)Aktivitäten</strong> (Quiz, Konzerte, Foodtrucks, Markt...)?</li> </ul>',
        'Route':
          'Schreiben Sie eine enthusiastische Umschreibung des Ausflugs. <ul> <li>Findet dieser <strong>zu Fuß, mit dem Rad, mit dem Boot </strong>…statt? </li> <li>Welche möglichen <strong>Zwischenstopps</strong> gibt es? </li> <li>Wie lang ist die <strong>Strecke</strong> oder <strong>Dauer</strong> dieses Ausflugs?</li> <li>Findet der Ausflug <strong>in Begleitung</strong>, mit einem Guide, einer Broschüre oder mit Wegweisern statt?</li> </ul>',
        'Party of fuif':
          'Schreiben Sie eine enthusiastische Umschreibung der Party. Welche <strong>DJs</strong> oder <strong>Bands</strong> treten auf?',
        'Eet of drankfestijn':
          'Schreiben Sie eine enthusiastische Umschreibung des Spendenmahls. <ul> <li>Was steht auf der <strong>Speisekarte?</strong> </li> <li>Geht der Erlös an einen<strong> guten Zweck</strong>? </li> <li>Gibt es <strong>(Neben)Aktivitäten</strong>?</li> </ul>',
        'Spel of quiz':
          'Schreiben Sie eine enthusiastische Umschreibung des Quiz oder Spiels. <ul> <li>Um welche <strong>Themen</strong> dreht sich das Quiz?</li> <li>Hat das Spiel ein <strong>Thema</strong>?</li> <li>Gibt es etwas zu <strong>gewinnen</strong>?</li> <li>Gibt es eine <strong>maximale</strong> Anzahl <strong>Teilnehmer</strong>?</li> </ul>',
        'Sport en beweging':
          'Schreiben Sie eine enthusiastische Umschreibung der Sportaktivität. <ul> <li>Welche <strong>Sportart</strong>(en) können ausgeübt werden? </li> <li>Welche <strong>Geräte</strong> werden (nicht) gestellt?</li> </ul>',
        'Monument':
          'Schreiben Sie eine enthusiastische Umschreibung des Monuments. Geben Sie auch an, ob das Monument nur eingeschränkt zugänglich ist (zB. nur Salons).',
      },
      'description_error':
        'Beim Speichern der Beschreibung ist ein Fehler aufgetreten.',
      'organizer': 'Organisation',
      'add_organizer': 'Organisation hinzufügen',
      'choose_organizer': 'Wählen Sie eine Organisation',
      'organizer_not_found': 'Organisation nicht gefunden?',
      'add_new_organizer': 'Neuen Organisator hinzufügen',
      'organizer_error':
        'Beim Speichern des Organisators ist ein Fehler aufgetreten.',
      'contact': 'Kontakt & Reservierung',
      'add_contact': 'Kontaktinformation hinzufügen',
      'website': 'Website',
      'phone': 'Telefonnummer',
      'e-mail': 'E-Mail-Adresse',
      'use_booking': 'Für Reservierung verwenden',
      'booking_exposure': 'Wie soll dieser Link angezeigt werden?',
      'buy_tickets': 'Tickets kaufen',
      'reserve_places': 'Plätze reservieren',
      'check_availability': 'Verfügbarkeit kontrollieren',
      'subscribe': 'Melden Sie sich an',
      'add_more_contact': 'Weitere Kontaktangaben hinzufügen',
      'contact_error':
        'Beim Speichern der Kontaktinformation ist ein Fehler aufgetreten.',
      'facilities': 'Ausstattungen',
      'add_facility': 'Ausstattung hinzufügen',
      'facility_inapplicable': 'Nicht zutreffend',
      'change': 'Ändern',
      'image_help':
        'Fügen Sie eine Abbildung hinzu, damit die Besucher Ihre Aktivität besser erkennen können.',
      'images': 'Abbildungen',
      'copyright': 'Copyright',
      'delete': 'Löschen',
      'main_image': 'Hauptabbildung erstellen',
      'add_image': 'Abbildung hinzufügen',
      'priceInfo': {
        'price_label': 'Preis',
        'add_prices': 'Preise hinzufügen',
        'free': 'Kostenlos',
        'prices': 'Preise',
        'change': 'Ändern',
        'currency': 'Euro',
      },
      'reservationPeriod': {
        'add_reservation_period': 'Reservierungszeitraum hinzufügen',
        'reservation_period': 'Reservierungszeitraum',
        'from': 'Von',
        'till': 'Bis',
      },
    },
    'publish': {
      'publish_now': 'Direkt veröffentlichen',
      'publish_later': 'Später veröffentlichen',
      'edit_done': 'Fertig mit bearbeiten',
      'online_from': 'Online ab',
    },
    'timeTracker': {
      'automatic_saved': 'Automatisch gespeichert um',
      'hour': 'Stunde',
    },
    'embargo': {
      'title': 'Wählen Sie ein Veröffentlichungsdatum',
      'help': 'Ab wann soll dies online angezeigt werden? <em class="text-info"><i class="fa fa-exclamation-circle" aria-hidden="true"></i> Achtung, dieses Datum kann nur einmalig eingestellt werden.</em>',
      'error_past':
        'Das Veröffentlichungsdatum kann nicht in der Vergangenheit liegen.',
      'error_empty': 'Wählen Sie ein Veröffentlichungsdatum.',
      'cancel': 'Abbrechen',
      'ready': 'Fertig mit bearbeiten',
    },
    'imageUpload': {
      'modalTitle': 'Abbildung hinzufügen',
      'defaultError':
        'Die ausgewählte Datei entspricht nicht den Voraussetzungen.',
      'noFileSelectedError': 'Keine Datei ausgewählt',
      'somethingWentWrongError':
        'Beim Speichern der Abbildung ist ein Fehler aufgetreten.',
      'maxSize':
        'Die Datei, die Sie hochladen möchten, ist zu groß. Die maximale Größe beträgt ',
      'formatNotValidError':
        'Die hochgeladene Datei ist keine gültige Abbildung.',
      'extensionsAllowed':
        'Nur Dateien mit den Dateierweiterungen .jpeg, .gif oder.png sind zugelassen.',
      'sizeError': 'Die hochgeladene Datei ist zu groß.',
    },
  },
  'offerStatus': {
    'scheduled': 'Findet statt',
    'cancelled': 'Abgesagt',
    'postponed': 'Verlegt',
    'open': 'Offen',
    'temporarilyClosed': 'Zeitweise geschlossen',
    'permanentlyClosed': 'Permanent geschlossen',
  },
  'bookingAvailability': {
    'unavailable': 'Voll oder ausverkauft',
  },
  'calendar': {
    'one_more_days': 'Ein oder mehrere Tage',
    'or': 'oder',
    'default_days': 'Feste Tage pro Woche',
    'start_label': 'Start',
    'end_label': 'Ende',
    'whole_day_label': 'Ganztags',
    'start_hour_label': 'Beginn',
    'end_hour_label': 'Ende',
    'add_days': 'Tag(e) hinzufügen',
    'period': {
      'title': 'Start- und Enddatum',
      'from': 'Von',
      'till': 'Bis',
      'alert':
        'Geben Sie sowohl Start- als auch Enddatum ein. Das Enddatum kann nicht vor dem Startdatum liegen.',
    },
    'openingHours': {
      'permanent_title': '24/24, 7/7',
      'permanent_subtitle': 'Jeden Tag, jede Stunde',
      'add_hours': 'Zeiten hinzufügen',
      'opening_hours': 'Öffnungszeiten',
      'change': 'Ändern',
      'days': 'Tage',
      'from': 'Von',
      'till': 'Bis',
      'more_hours': 'Weitere Öffnungszeiten hinzufügen',
      'cancel': 'Abbrechen',
      'save': 'Speichern',
    },
  },
  'facilityLabel': {
    'motor': 'Vorrichtungen für Personen mit körperlichen Einschränkungen',
    'visual': 'Vorrichtungen für Personen mit Sichteinschränkungen',
    'hearing': 'Vorrichtungen für Personen mit Höreinschränkungen',
    'other': 'Andere Vorrichtungen',
    'place': 'Vorrichtungen an diesem Ort',
    'mental': 'Vorrichtungen für Personen mit geistigen Einschränkungen',
    'neurodivers': 'Vorrichtungen für neurodiverse Personen',
  },
  'audience': {
    'entrance': 'Zutritt',
    'everyone': 'Für alle',
    'members': 'Nur für Mitglieder',
    'members_help':
      'Ihr Item wird nur auf Kanälen für Vereinigungen und deren Mitglieder veröffentlicht.',
    'education': 'Nur für Schulen',
    'education_help':
      'Ihr Item wird nur auf Kultur- und Bildungskanälen wie cultuurkuur.be veröffentlicht. Nach der Veröffentlichung können Sie noch spezielle Informationen für Schulen hinzufügen.',
  },
  'workflowStatus': {
    'label': 'Publikationsstatus',
    'id': 'ID',
    'DRAFT': 'Nicht veröffentlicht',
    'READY_FOR_VALIDATION': 'Veröffentlicht',
    'APPROVED': 'Online ab',
    'REJECTED': 'Veröffentlichung abgelehnt',
    'DELETED': 'Nicht veröffentlicht',
    'rules': 'Sehen Sie sich die Regeln an',
    'rejected_full': 'Die Veröffentlichung dieses Items wurde abgelehnt.',
  },
  'queryFieldGroup': {
    'what': 'Was',
    'where': 'Wo',
    'when': 'Wann',
    'input-information': 'Eingabeinformation',
    'translations': 'Übersetzungen',
    'other': 'Andere',
  },
  'queryFieldLabel': {
    'cdbid': 'Identifikationscode (CDBID)',
    'offertype': 'Art (Angebot)',
    'keywords': 'label',
    'title': 'Titel',
    'category_eventtype_name': 'Art (Aktivität)',
    'locationtype': 'Art (Ort)',
    'category_theme_name': 'Thema',
    'text': 'Text',
    'city': 'Stadt (Name)',
    'zipcode': 'Postleitzahl',
    'location_id': 'Ort (id)',
    'country': 'Land',
    'location_name': 'Ort (Name)',
    'location_labels': 'Ort (Labels)',
    'category_flandersregion_name': 'Region / Stadt',
    'nisRegions': 'Region / Stadt',
    'date': 'Datum',
    'permanent': 'permanent',
    'lastupdated': 'Letzte Änderung',
    'creationdate': 'erstellt am',
    'createdby': 'erstellt durch',
    'availablefrom': 'Datum verfügbar',
    'detail_lang': 'Übersetzung',
    'organiser_keywords': 'Label Organisation',
    'organiser_id': 'Organisation (ID)',
    'agefrom': 'Alter',
    'attendance_mode': 'Anwesenheits-Modus',
    'price': 'Preis',
    'status': 'Status',
    'booking_availability': 'Tickets & Plätze',
    'organiser_label': 'Organisation (Name)',
    'completeness': 'integrität',
    'add_facility': 'Ausstattung',
    'category_targetaudience_name': 'Zielgruppe',
    'startdate': 'Startdatum',
    'enddate': 'Enddatum',
    'lastupdatedby': 'Letzte Änderung durch',
    'category_publicscope_name': 'Öffentlichkeitsreichweite',
  },
  'EVENT-EXPORT': {
    'QUERY-IS-MISSING':
      'Exportieren ist erst möglich, nachdem Sie eine Suchanfrage ausgeführt haben',
    'TOO-MANY-ITEMS':
      'Manuelles Exportieren mit mehr als {{limit}} Items ist nicht möglich. Kontaktieren Sie vragen@uitdatabank.be für eine individuelle Lösung.',
  },
  'ANGEBOT_EINGEBEN': 'Angebot eingeben',
  'ANGEBOT_BEARBEITEN': 'Angebot bearbeiten',
  'ANGEBOT_MODERIEREN': 'Angebot moderieren',
  'ANGEBOT_ENTFERNEN': 'Angebot entfernen',
  'ORGANISATIONEN_VERWALTEN': 'Organisationen verwalten',
  'BENUTZER_VERWALTEN': 'Benutzer verwalten',
  'LABELS_VERWALTEN': 'Labels verwalten',
  'AUSSTATTUNGEN_BEARBEITEN': 'Ausstattungen bearbeiten',
  'ORGANISATIONEN_BEARBEITEN': 'Organisationen bearbeiten',
  'PRODUKTIONEN_ERSTELLEN': 'Produktionen erstellen',
  'FILME_ERSTELLEN': 'Filme erstellen',
  'event type missing':
    'Haben Sie eine Art in <a href="#wat" class="alert-link">Schritt 1 gewählt</a>?',
  'timestamp missing':
    'Haben Sie ein Datum in <a href="#wanneer" class="alert-link">Schritt 2 gewählt</a>?',
  'start or end date missing':
    'Haben Sie ein Start- und Enddatum in <a href="#wanneer" class="alert-link">Schritt 2 gewählt</a>?',
  'when missing':
    'Haben Sie eine Auswahl in <a href="#wanneer" class="alert-link">Schritt 2 getroffen</a>?',
  'place missing for event':
    'Haben Sie eine Stelle in <a href="#waar" class="alert-link">Schritt 3 gewählt</a>?',
  'location missing for place':
    'Haben Sie einen Ort in <a href="#waar" class="alert-link">Schritt 3 gewählt</a>?',
  'title is missing':
    'Haben Sie ein Angebot und einen Titel in <a href="#titel" class="alert-link">Schritt 4 eingegeben</a>?',
  'age range is missing':
    'Haben Sie ein Angebot und eine Altersgruppe in <a href="#titel" class="alert-link">Schritt 4 eingegeben</a>?',
  'UNIQUE_ORGANIZER_NOTICE':
    'Um Organisationen in der UiTdatabank separat zu hinterlegen, bitten wir jede Organisation um einen individuellen & gültigen Hyperlink.',
  'OPENING_HOURS_ERROR': {
    'openAndClose': 'Tragen Sie alle Öffnungs- und Schließungszeiten ein.',
    'dayOfWeek':
      'Wählen Sie mindestens einen Tag in jeder Reihe, die Sie hinzugefügt haben.',
    'openIsBeforeClose':
      'Bitte geben Sie eine Schließungszeit ein, die später als die Öffnungszeit ist.',
  },
  'TIME_SPAN_REQUIREMENTS': {
    'timedWhenNotAllDay':
      'Eine Eingabe von Beginn und Ende ist notwendig, wenn eine Veranstaltung nicht den ganzen Tag dauert.',
    'startBeforeEndDay': 'Das Enddatum kann nicht vor dem Startdatum liegen.',
    'startBeforeEnd': 'Das Ende kann nicht vor dem Beginn liegen.',
    'tooFarInFuture':
      'Das gewählte Enddatum und Startdatum können nicht mehr als 10 Jahre in der Zukunft liegen.',
  },
  'uitpas': {
    'uitpasInfo': {
      'uitpas': 'UiTPAS',
      'uitpas_alert':
        'Dies ist ein UiTPAS-Organisator. Wählen Sie einen Preis, um eine bestimmte UiTPAS-Information hinzuzufügen.',
      'uitpas_info': 'Dies ist eine UiTPAS-Aktivität.',
      'cantChangePrice':
        'Für diese Veranstaltung wurden bereits UiTPAS-Tickets mit der bestehenden Preisinformation verkauft. Sie können die Preisinformation nicht mehr anpassen.',
      'cantChangeOrganiser':
        'Für diese Veranstaltung wurden bereits UiTPAS-Tickets verkauft. Sie können die Organisation nicht mehr anpassen.',
      'unavailable':
        'Für diese Veranstaltung sind bereits UiTPAS-Tickets verkauft worden. Sie können die Organisation nicht mehr ändern.',
    },
    'cardSystems': {
      'card_systems': 'Kartensysteme',
      'choose': '--Wählen Sie einen Verteilerschlüssel--',
      'retry': 'Erneut registrieren',
      'already_has_ticketsales': 'Für diese Veranstaltung sind bereits UiTPAS-Tickets verkauft worden. Sie können die Organisation nicht mehr ändern.',
      'not_found': 'Diese Veranstaltung ist dem UiTPAS noch nicht bekannt.'
    },
  },
  'images': {
    'agreement':
      'Sie sind dabei, (eine) Abbildung(en) hinzuzufügen und öffentlich zu machen. Dazu müssen Sie alle geltenden Urheber- und Bildnisrechte, sowie alle anderen anwendbaren Gesetze einhalten. Sie können dafür haftbar gemacht werden, entsprechend den',
    'conditions': 'allgemeinen Geschäftsbedingungen',
    'conditions_url':
      'https://www.publiq.be/nl/gebruikersovereenkomst-uitdatabank',
    'copyright_info': 'Weitere Informationen zum Copyright',
    'description': 'Beschreibung',
    'description_help': 'Maximum 250 Zeichen',
    'copyright': 'Copyright',
    'copyright_help':
      'Geben Sie den Namen des rechteinhabenden Fotografen an. Geben Sie ausschließlich den Namen Ihrer eigenen Vereinigung oder Organisation an, wenn Sie selbst die Rechte besitzen (mindestens 2 Zeichen).',
    'cancel': 'Abbrechen',
    'agree': 'Zustimmen',
    'upload': {
      'select_image': 'Foto auswählen',
      'choose_file': 'Datei wählen',
      'max_filesize':
        'Die maximale Größe Ihrer Abbildung beträgt {{maxFileSize}} und hat als Erweiterung .jpeg, .gif oder .png',
      'upload': 'Hochladen',
    },
    'edit': {
      'title': 'Abbildungsinfo bearbeiten',
      'description_help':
        'Eine gute Beschreibung Ihrer Abbildung wird von Suchmaschinen und Nutzern mit einer Sichteinschränkung gelesen. (max. 250 Zeichen)',
      'save_error': 'Beim Speichern der Abbildung ist ein Fehler aufgetreten.',
      'update': 'Aktualisieren',
    },
    'remove': {
      'title': 'Abbildungen entfernen',
      'sure': 'Sind Sie sicher, dass Sie diese Abbildung entfernen möchten?',
      'save_error': 'Beim Entfernen der Abbildung ist ein Fehler aufgetreten.',
    },
  },
  'organizer': {
    'modal': {
      'title': 'Neue Organisation hinzufügen',
      'avoid_doubles': 'Vermeiden Sie doppelte Arbeit',
      'unique_notice':
        'Um Organisationen in der UiTdatabank separat zu hinterlegen, bitten wir jede Organisation um einen individuellen & gültigen Hyperlink.',
      'website': 'Website',
      'alert_warning':
        'Diese Adresse ist bereits in Benutzung durch die Organisation \'{{organizerName}}\'. Geben Sie eine individuelle Website an oder',
      'alert_button': 'verwenden Sie {{organizerName}} als Organisation',
      'name_help': 'Der offizielle, öffentliche Name der Organisation.',
      'name_required': 'Bitte tragen Sie einen Namen ein',
      'name_maxlength':
        'Der Name der Organisation kann nur 250 Zeichen umfassen.',
      'add_confirm':
        'Sind Sie sicher, dass Sie "{{newOrganizerName}}" als Organisation hinzufügen möchten? Eine doppelte Eingabe von Organisationen ist nicht gestattet.',
      'doubles': 'Wir haben diese vergleichbaren Items gefunden:',
      'select': 'Auswählen',
      'your_input': 'Ihre Eingabe:',
      'still_enter': 'Dennoch eingeben',
      'save_error':
        'Beim Speichern Ihrer Organisation ist ein Fehler aufgetreten.',
      'address_error': 'Bitte tragen Sie eine gültige Adresse ein.',
      'contact_error': 'Bitte alle Kontaktinformationen korrekt eintragen.',
      'close': 'Schließen',
      'save': 'Speichern',
      'label_name': 'Name',
    },
    'address': {
      'label_street': 'Straße und Hausnummer',
      'help_street': 'Bitte geben Sie eine Straße und Hausnummer ein.',
      'help_zip': 'Bitte geben Sie eine Postleitzahl ein.',
      'validate_zip':
        'Dies scheint eine ungültige Postleitzahl zu sein. Eine Postleitzahl besteht aus 5 Ziffern.',
      'label_city': 'Stadt',
      'label_residence': 'Wohnanschrift',
      'help_city': 'Beim Abrufen der Städte ist ein Problem aufgetreten.',
      'error_city': 'Bitte geben Sie eine Stadt ein.',
      'change': 'Ändern',
      'zip': 'Postleitzahl',
      'delete': 'Leeren',
      'delete_success': 'Adresse erfolgreich gelöscht',
      'delete_error': 'Beim Löschen Ihrer Adresse ist ein Fehler aufgetreten',
    },
    'contact': {
      'title': 'Kontakt',
      'enter_url': 'Geben Sie ein URL ein',
      'enter_email': 'Geben Sie eine E-Mail-Adresse ein',
      'enter_phone':
        'Geben Sie eine Telefonnummer ein<small class="text-muted">, zB. 011 32 43 54</small>',
      'required': 'Bitte dieses Feld nicht leer lassen.',
      'valid_url': 'Bitte eine gültige URL eingeben.',
      'valid_email': 'Bitte eine gültige E-Mail-Adresse eingeben.',
      'valid_phone': 'Bitte eine gültige Telefonnummer eingeben.',
      'cancel': 'Abbrechen',
      'add': 'Hinzufügen',
      'add_phone': 'Telefonnummer hinzufügen',
      'add_email': 'E-Mail-Adresse hinzufügen',
      'add_url': 'Andere Website hinzufügen',
    },
    'manage': {
      'edit': 'Bearbeiten',
      'delete': 'Löschen',
      'overview': 'Zurück zur Übersicht',
      'dashboard': 'Zurück zum Dashboard',
      'ownerships': {
        'manage': 'Anforderungsmanagement'
      },
      'name': 'Name',
      'description': 'Beschreibung',
      'educational_description': 'Beschreibung für Cultuurkuur',
      'address': 'Adresse',
      'website': 'Website',
      'phone': 'Telefonnummer',
      'email': 'E-Mail-Adresse',
      'labels': 'Labels',
      'removed': 'Diese Organisation wurde entfernt.',
    },
  },
  'duplicate': {
    'title': 'Kopieren und anpassen',
    'description':
      'Sie sind dabei, eine Veranstaltung zu kopieren. Wählen Sie einen Zeitpunkt für diese Veranstaltung.',
    'error': 'Beim Erstellen der Kopie ist ein Fehler aufgetreten!',
  },
  'dashboard': {
    'welcome': 'Willkommen,',
    'no_items': 'Sie haben noch keine Items hinzugefügt.',
    'add_activity': 'Eine Aktivität oder einen Ort hinzufügen?',
    'my_activities': 'Meine Aktivitäten und Orte',
    'my_organizers': 'Meine Organisationen',
    'add': 'Hinzufügen',
    'add_organizer': 'Organisation hinzufügen',
    'directive': {
      'no_publish': 'Nicht veröffentlicht!',
      'online': 'Online auf',
      'edit': 'Bearbeiten',
      'example': 'Beispiel',
      'delete': 'Löschen',
      'expired_event': 'Abgelaufene Veranstaltung',
    },
    'delete': {
      'sure': 'Sind Sie sicher, dass Sie "{{name}}" löschen möchten?',
      'error_location':
        'Der Ort "{{name}}" kann nicht gelöscht werden, da dort Aktivitäten geplant sind.',
      'error': 'Beim Löschen der Aktivität ist ein Fehler aufgetreten.',
      'cancel': 'Abbrechen',
      'delete': 'Löschen',
    },
  },
  'entry': {
    'exported_documents': 'Exportierte Dokumente',
    'notifications': 'Benachrichtigungen',
    'in_progress': 'In Behandlung',
  },
  'offerTypes': {
    'Concert': 'Konzert',
    'Theatervoorstelling': 'Theatervorstellung',
    'Lezing of congres': 'Lesung oder Kongress',
    'Dansvoorstelling': 'Tanzvorführung',
    'Festival': 'Festival',
    'Film': 'Film',
    'Sportwedstrijd bekijken': 'Sportwettkampf ansehen',
    'Cursus met open sessies': 'Kurs mit öffentlichen Sitzungen',
    'Lessenreeks': 'Vorlesungsreihe',
    'Sport en beweging': 'Sport und Bewegung',
    'Kamp of vakantie': 'Camp oder Ferienlager',
    'Begeleide uitstap of rondleiding': 'Begleiteter  Rundgang',
    'Route': 'Ausflug',
    'Spel of quiz': 'Spiel oder Quiz',
    'Party of fuif': 'Party',
    'Festiviteit': 'Feiern',
    'Congres of studiedag': 'Kongress oder Studientag',
    'Eet- of drankfestijn': 'Spendenmahl',
    'Themen- oder Vergnügungspark': 'Themen- oder Vergnügungspark',
    'Theater': 'Theater',
    'Jeugdhuis of jeugdcentrum': 'Jugendzentrum',
    'Cultuur- of ontmoetingscentrum': 'Kultur- oder Begegnungszentrum',
    'Discotheek': 'Diskothek',
    'Bibliotheek of documentatiecentrum':
      'Bibliothek oder Dokumentationszentrum',
    'Bioscoop': 'Kino',
    'Horeca': 'Gastgewerbe',
    'Openbare ruimte': 'Öffentliche Einrichtungen',
    'Tentoonstelling': 'Ausstellung',
    'Markt, braderie of kermis': 'Markt, Straßenfest oder Jahrmarkt',
    'Natuur, park of tuin': 'Natur, Park oder Garten',
    'Beurs': 'Messe',
    'Monument': 'Monument',
    'Opendeurdag': 'Tag der offenen Tür',
    'Recreatiedomein of centrum': 'Freizeitbereich oder -zentrum',
    'Park of tuin': 'Park oder Garten',
    'Archeologische Site': 'Archäologische Stätte',
    'School of onderwijscentrum': 'Schule oder Bildungszentrum',
    'Sportcentrum': 'Sportzentrum',
    'Winkel': 'Laden',
    'Speeltuin': 'Spielplats',
    'Museum of galerij': 'Museum oder Galerie',
    'Zaal of expohal': 'Saal oder Expo-Halle',
  },
  'offerThemes': {
    'Antiek en brocante': 'Antik und Trödel',
    'Architectuur': 'Architektur',
    'Audiovisuele kunst': 'Audiovisuelle Kunst',
    'Beeldhouwkunst': 'Bildhauerei',
    'Fotografie': 'Fotografie',
    'Grafiek': 'Grafik',
    'Installatiekunst': 'Installationskunst',
    'Schilderkunst': 'Malerei',
    'Decoratieve kunst': 'Dekorative Kunst',
    'Design': 'Design',
    'Mode': 'Mode',
    'Meerdere kunstvormen': 'Mehrere Kunstformen',
    'Ballet en klassieke dans': 'Ballett und klassische Tänze',
    'Volksdans en werelddans': 'Volkstanz und Welttänze',
    'Stijl en salondansen': 'Stil- und Salontanz',
    'Moderne dans': 'Moderner Tanz',
    'Erfgoed': 'Kulturerbe',
    'Actie- en avonturenfilm': 'Action- und Abenteuerfilm',
    'Animatie en kinderfilms': 'Animations- und Kinderfilme',
    'Documentaires en reportages': 'Dokumentationen und Reportagen',
    'Griezelfilm of horror': 'Gruselfilm oder Horror',
    'Historische film': 'Historischer Film',
    'Komedie': 'Komödie',
    'Kortfilm': 'Kurzfilm',
    'Filmmusical': 'Filmmusical',
    'Drama': 'Drama',
    'Science fiction': 'Science-Fiction',
    'Cinefiel': 'Filmliebhaber',
    'Thriller': 'Thriller',
    'Meerdere filmgenres': 'Mehrere Filmgenres',
    'Geschiedenis': 'Geschichte',
    'Gezondheid en wellness': 'Gesundheit und Wellness',
    'Landbouw en platteland': 'Landbau und Landleben',
    'Milieu en natuur': 'Umwelt und Natur',
    'Literatuur': 'Literatur',
    'Poëzie': 'Poesie',
    'Fictie': 'Fiction',
    'Non fictie': 'Sachbücher',
    'Strips': 'Comics',
    'Klassieke muziek': 'Klassische Musik',
    'Jazz en blues': 'Jazz und Blues',
    'Pop en rock': 'Pop und Rock',
    'Hiphop, r&b en rap': 'Hip-Hop, R&B und Rap',
    'Dance muziek': 'Dance-Music',
    'Folk en wereldmuziek': 'Volks- und Weltmusik',
    'Amusementsmuziek': 'Pomusik',
    'Politiek en maatschappij': 'Politik und Gesellschaft',
    'Creativiteit': 'Kreativität',
    'Computer en techniek': 'Computer und Technik',
    'Opvoeding': 'Erziehung',
    'Persoon en relaties': 'Persönliche Entwicklung und Beziehungen',
    'Interculturele vorming': 'Interkulturelle Entwicklung',
    'Kunst en kunsteducatie': 'Kunst und Kunsterziehung',
    'Gezondheid en zorg': 'Gesundheit und Pflege',
    'Samenleving': 'Gesellschaft',
    'Bal en racketsport': 'Ballsport und Rückschlagspiele',
    'Atletiek, wandelen en fietsen': 'Athletik, wandern und Radfahren',
    'Zwemmen en watersport': 'Schwimmen und Wassersport',
    'Fitness, gymnastiek, dans en vechtsport':
      'Fitness, Gymnastik, Tanz und Kampfsport',
    'Outdoor en Adventure sport': 'Outdoor- und Abenteuersport',
    'Lucht en motorsport': 'Flug- und Motorsport',
    'Volkssporten': 'Volkssportarten',
    'Omnisport en andere': 'Omnisport und andere',
    'Tekst- en muziektheater': 'Text- und Musiktheater',
    'Humor en comedy': 'Humor und Comedy',
    'Musical': 'Musical',
    'Figuren en poppentheater': 'Figur- und Puppentheater',
    'Opera en operette': 'Opera und Operette',
    'Mime en bewegingstheater': 'Pantomimen- und Bewegungstheater',
    'Wetenschap': 'Wissenschaft',
    'Zingeving, filosofie en religie': 'Sinngebung, Philosophie und Religion',
    'Thema onbepaald': 'Thema unbestimmt',
    'Circus': 'Zirkus',
    'Voeding': 'Ernährung',
    'Economie': 'Wirtschaft',
    'Avontuur': 'Abenteuer',
    'Natuur': 'Natur',
    'Sport': 'Sport',
    'Technologie': 'Technologie',
    'Koken': 'Kochen',
    'Themakamp': 'Themencamp',
    'Taal en communicatie': 'Sprache',
  },
  'offerThemesGroups': {
    'Dans': 'Tanz',
    'Kunst en erfgoed': 'Kunst und Kulturerbe',
    'Muziek': 'Musik',
    'Sport': 'Sport',
    'Varia': 'Diverses',
  },
  'weekdays': {
    'monday': {
      'label': 'Mo',
      'name': 'Montag',
    },
    'tuesday': {
      'label': 'Di',
      'name': 'Dienstag',
    },
    'wednesday': {
      'label': 'Mi',
      'name': 'Mittwoch',
    },
    'thursday': {
      'label': 'Do',
      'name': 'Donnerstag',
    },
    'friday': {
      'label': 'Fr',
      'name': 'Freitag',
    },
    'saturday': {
      'label': 'Sa',
      'name': 'Samstag',
    },
    'sunday': {
      'label': 'So',
      'name': 'Sonntag',
    },
  },
  'search': {
    'search': 'Suchen',
    'advanced': 'Erweitert',
    'label': 'Labeln',
    'deselect': 'Auswahl aufheben',
    'savedSearches': {
      'savedSearches': 'Gespeicherte Suchanfragen',
      'items': {
        'Von mir eingegeben': 'Von mir eingegeben',
      },
      'mySearches': 'Meine Suchanfragen',
      'title': 'Titel',
      'viewResults': 'Ergebnisse ansehen',
      'yourSearch': 'Ihre Suchanfrage',
      'save': 'Speichern',
      'modal': {
        'mainTitle': 'Suche speichern',
        'newTab': 'Neue Suche',
        'existingTab': 'Vorhandene Suche',
        'giveName': 'Gib deiner Suche einen Namen',
        'selectSavedSearch': 'Wähle eine vorhandene Suche',
        'save': 'Speichern',
        'cancel': 'Abbrechen'
      }
    },
    'manage': 'Verwalten',
    'oneResult': '1 Ergebnis',
    'multipleResults': '{{count}} Ergebnisse',
    'description': 'Beschreibung',
    'labels': 'Labels',
    'picture': 'Abbildung',
    'what': 'Was',
    'where': 'Wo',
    'when': 'Wann',
    'inputInformation': 'Eingabeinformation',
    'noEventsFound':
      'Keine Veranstaltungen gefunden, probieren Sie eine andere Suchanfrage.',
    'exportButton': 'Aktivitäten exportieren',
    'modal':
      'Ihre Auswahl enthält keine Aktivitäten, probieren Sie, eine andere Suchanfrage zu exportieren.',
    'advancedQueryBuilder': {
      'title': 'Ersteller erweiterte Suchanfragen',
      'header': {
        'info': 'Hier können Sie komplexe Suchanfragen erstellen. Benötigen Sie Hilfe? Lesen Sie',
        'link': 'unsere Anleitung',
      },
      'group': 'Gruppe ',
      'include': 'Einschließen',
      'exclude': 'Ausschließen',
      'addGroup': 'Gruppe hinzufügen',
      'cancel': 'Abbrechen',
      'search': 'Suchen',
      syntaxError: 'Ihre Abfrage enthält einen Fehler. Auf <a href="https://helpdesk.publiq.be/hc/nl/articles/360008632440-Hoe-kan-ik-activiteiten-zoeken-op-basis-van-verschillende-parameters">dieser Seite</a> finden Sie weitere Informationen über das Verfassen einer Abfrage',
      invalidField: '{{field}} ist kein gültiges Suchfeld. Auf <a href="https://helpdesk.publiq.be/hc/nl/articles/360008632440-Hoe-kan-ik-activiteiten-zoeken-op-basis-van-verschillende-parameters">dieser Seite</a> finden Sie weitere Informationen über das Verfassen einer Abfrage',
    },
    organization: {
      name: 'Name',
      address: 'Adresse',
      info: 'Eingabeinformation',
      noAddress: 'Keine Adresse',
      addOrganizer: 'Organisation hinzufügen',
      searchOrganization: 'Suche nach Organisation',
      notFound: 'Keine Organisation gefunden',
      error: 'Beim Suchen ist ein Fehler aufgetreten:'
    }
  },
});
})();

// Source: src/core/udb-api.service.js
(function () {
'use strict';

/**
 * @typedef {Object} UiTIDUser
 * @property {string} id        The UiTID of the user.
 * @property {string} nick      A user nickname.
 */

/**
 * @typedef {Object} PagedCollection
 * @property {string} @context
 * @property {string} @type
 * @property {int} itemsPerPage
 * @property {int} totalItems
 * @property {Object[]} member
 */

/**
 * @typedef {Object} OfferIdentifier
 * @property {string} @id
 * @property {string} @type
 * @property {string} @context
 */

/**
 * @typedef {Object} Permission
 * @property {string} @key
 * @property {string} @name
 */

/**
 * @typedef {Object} ApiProblem
 * @property {URL} type
 * @property {string} title
 * @property {string} detail
 * @property {URL} instance
 * @property {Number} status
 */

/**
 * @typedef {Object} CommandInfo
 * @property {string} commandId
 */

/**
 * @readonly
 * @enum {string}
 */
var OfferTypes = {
  EVENT: 'event',
  PLACE: 'place'
};

/**
 * @ngdoc service
 * @name udb.core.udbApi
 * @description
 * # udbApi
 * udb api service
 */
angular
  .module('udb.core')
  .service('udbApi', UdbApi);

/* @ngInject */
function UdbApi(
  $q,
  $http,
  appConfig,
  $cookies,
  uitidAuth,
  $cacheFactory,
  UdbEvent,
  UdbPlace,
  UdbOrganizer,
  Upload,
  $translate
) {
  var apiUrl = appConfig.baseApiUrl;
  var defaultApiConfig = {
    headers: {
      'Content-Type': 'application/json',
      'Authorization': 'Bearer ' + uitidAuth.getToken(),
      'X-Api-Key': _.get(appConfig, 'apiKey')
    },
    params: {}
  };
  var offerCache = $cacheFactory('offerCache');

  function withoutAuthorization(apiConfig) {
    var config = _.cloneDeep(apiConfig);
    config.withCredentials = false;
    /**
     * @todo: use _.unset when lodash is updated to v4: https://lodash.com/docs/4.17.4#unset
     */
    delete config.headers.Authorization;

    return config;
  }

  this.mainLanguage = $translate.use() || 'nl';

  /**
   * Removes an item from the offerCache.
   * @param {string} id - The uuid of the offer.
   */
  this.removeItemFromCache = function (id) {
    var offer = offerCache.get(id);

    if (offer) {
      offerCache.remove(id);
    }
  };

  this.createSavedSearch = function (name, queryString) {
    var post = {
      name: name,
      query: queryString
    };
    return $http
      .post(appConfig.baseUrl + 'saved-searches/v3', post, defaultApiConfig)
      .then(returnUnwrappedData);
  };

  this.getSavedSearches = function () {
    return $http
      .get(appConfig.baseUrl + 'saved-searches/v3', defaultApiConfig)
      .then(returnUnwrappedData);
  };

  this.deleteSavedSearch = function (searchId) {
    return $http
      .delete(appConfig.baseUrl + 'saved-searches/v3/' + searchId, defaultApiConfig)
      .then(returnUnwrappedData);
  };

  this.editSavedSearch = function (searchId, name, query) {
    return $http
      .put(appConfig.baseUrl + 'saved-searches/v3/' + searchId, {name: name, query: query}, defaultApiConfig)
      .then(returnUnwrappedData);
  };

  /**
   * @param {string} queryString - The query used to find offers.
   * @param {number} [start] - From which offset the result set should start.
   * @param {boolean} showUnavailable - Include offers which are normally unavailable.
   * @returns {Promise.<PagedCollection>} A promise that signals a successful retrieval of
   *  search results or a failure.
   */
  this.findOffers = function (queryString, start, showUnavailable) {
    var offset = start || 0,
        searchParams = {
          start: offset,
          disableDefaultFilters: true,
          workflowStatus: 'READY_FOR_VALIDATION,APPROVED',
          embed: true
        };

    var requestOptions = _.cloneDeep(defaultApiConfig);
    requestOptions.params = searchParams;

    if (queryString.length) {
      searchParams.q = queryString;
    }

    if (showUnavailable) {
      var uniqueStatuses = ['DRAFT', 'REJECTED', 'DELETED'].concat(searchParams.workflowStatus.split(','));
      searchParams.workflowStatus = _.uniq(uniqueStatuses).join(',');
    }

    return $http
      .get(appConfig.baseUrl + 'offers/', withoutAuthorization(requestOptions))
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} queryString - The query used to find events.
   * @param {number} [start] - From which event offset the result set should start.
   * @returns {Promise.<PagedCollection>} A promise that signals a successful retrieval of
   *  search results or a failure.
   */
  this.findEvents = function (queryString, start) {
    var offset = start || 0,
        searchParams = {
          start: offset
        };
    var requestOptions = _.cloneDeep(defaultApiConfig);
    requestOptions.params = searchParams;

    if (queryString.length) {
      searchParams.query = queryString;
    }

    return $http
      .get(apiUrl + 'search', requestOptions)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} queryString - The query used to find offer to moderate.
   * @param {number} [start] - From which offset the result set should start.
   * @param {number} [itemsPerPage] - How many items should be in the result set.
   * @returns {Promise.<PagedCollection>} A promise that signals a successful retrieval of
   *  search results or a failure.
   */
  this.findToModerate = function (queryString, start, itemsPerPage) {
    var path = appConfig.baseUrl + 'events/' + '?q=' + queryString +  '';
    var currentDate = moment.utc().format();

    var searchParams = {
      start: start,
      limit: itemsPerPage,
      workflowStatus: 'READY_FOR_VALIDATION',
      audienceType: 'everyone',
      availableFrom: currentDate,
      availableTo: '*'
    };

    var requestOptions = _.cloneDeep(defaultApiConfig);
    requestOptions.params = searchParams;

    return $http
      .get(path, requestOptions)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {URL} offerLocation
   * @return {UdbPlace|UdbEvent|UdbOrganizer}
   */
  this.getOffer = function(offerLocation) {
    var deferredOffer = $q.defer();
    var offer = offerCache.get(offerLocation);
    function cacheAndResolveOffer(jsonOffer) {
      var type = jsonOffer['@id'].split('/').reverse()[1];
      var offer = formatJsonLDEntity(type, jsonOffer);
      offer.parseJson(jsonOffer);
      offerCache.put(offerLocation, offer);
      deferredOffer.resolve(offer);
    }

    if (offer) {
      deferredOffer.resolve(offer);
    } else {
      $http
        .get(offerLocation.toString() + '?embedUitpasPrices=false', defaultApiConfig)
        .success(cacheAndResolveOffer)
        .error(deferredOffer.reject);
    }

    return deferredOffer.promise;
  };

  /**
   * @param {Array} events
   * @return {Array}
   */
  this.reformatJsonLDData = function(events) {
    events.member = events.member.map(function(member) {
      var memberContext = (member['@context']) ? member['@context'].split('/').pop() : '';
      memberContext = memberContext.charAt(0).toUpperCase() + memberContext.slice(1);
      member['@type'] = (member['@type']) ? member['@type'] : memberContext;
      return member;
    });
    return events;
  };

  /**
   * @param {object} jsonLD
   * @return {object}
   */
  this.formatJsonLDEntity = function(jsonLD) {
    var type = jsonLD['@type'].toLowerCase();
    var offer = formatJsonLDEntity(type, jsonLD);
    return offer;
  };

  /**
   * @param {string} type
   * @param {object} jsonLD
   * @return {object}
   */
  function formatJsonLDEntity(type, jsonLD) {
    var offer = {};
    switch (type) {
      case 'event':
        offer = new UdbEvent();
        break;
      case 'place':
        offer = new UdbPlace();
        break;
      case 'organizers':
        offer = new UdbOrganizer();
        break;
      default:
        console.warn('Unsupported ' +  type + ' in UdbApi.formateOfferClass');
    }
    offer.parseJson(jsonLD);
    return offer;
  }

  this.getOrganizerByLDId = function(organizerLDId) {
    var organizerId = organizerLDId.split('/').pop();
    return this.getOrganizerById(organizerId);
  };

  // TODO: Give organizers their own cache instead of using offer?
  this.getOrganizerById = function(organizerId) {
    var deferredOrganizer = $q.defer();

    var organizer = offerCache.get(organizerId);

    if (organizer) {
      deferredOrganizer.resolve(organizer);
    } else {
      var organizerRequest  = $http.get(
        appConfig.baseUrl + 'organizers/' + organizerId, defaultApiConfig
      );

      organizerRequest.success(function(jsonOrganizer) {
        var organizer = new UdbOrganizer();
        organizer.parseJson(jsonOrganizer);
        offerCache.put(organizerId, organizer);
        deferredOrganizer.resolve(organizer);
      });
    }
    return deferredOrganizer.promise;
  };

  /**
   * @param {number} start
   * @param {number} limit
   * @param {string|null} website
   * @param {string|null} query
   *
   * @return {Promise.<PagedCollection>}
   */
  this.findOrganisations = function(start, limit, website, query) {
    var params = {
      limit: limit ? limit : 10,
      start: start ? start : 0,
      embed: true
    };
    if (website) {
      params.website = website;
    }
    if (query) {
      params.name = query;
    }

    var configWithQueryParams = _.set(withoutAuthorization(defaultApiConfig), 'params', params);
    return $http
      .get(appConfig.baseUrl + 'organizers/', configWithQueryParams)
      .then(returnUnwrappedData);
  };

  /**
   * @param {string} organizerId
   * @param {string} labelName
   * @returns {Promise.<CommandInfo|ApiProblem>}
   */
  this.addLabelToOrganizer = function(organizerId, labelName) {
    return $http
      .put(appConfig.baseUrl + 'organizers/' + organizerId + '/labels/' + labelName, {}, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} organizerId
   * @param {string} labelName
   * @returns {Promise.<CommandInfo|ApiProblem>}
   */
  this.deleteLabelFromOrganizer = function(organizerId, labelName) {
    return $http
        .delete(appConfig.baseUrl + 'organizers/' + organizerId + '/labels/' + labelName, defaultApiConfig)
        .then(returnUnwrappedData, returnApiProblem);
  };
  /**
   * @param {string} organizerId
   * @param {string} website
   * @returns {Promise.<CommandInfo|ApiProblem>}
   */
  this.updateOrganizerWebsite = function(organizerId, website) {
    var params = {
      url: website
    };

    return $http
        .put(appConfig.baseUrl + 'organizers/' + organizerId + '/url', params, defaultApiConfig)
        .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} organizerId
   * @param {string} name
   * @param {string} language
   * @returns {Promise.<CommandInfo|ApiProblem>}
   */
  this.updateOrganizerName = function(organizerId, name, language) {
    var params = {
      name: name
    };

    return $http
        .put(appConfig.baseUrl + 'organizers/' + organizerId + '/name/' + language, params, defaultApiConfig)
        .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} organizerId
   * @param {Object} address
   * @param {string} language
   * @returns {Promise.<CommandInfo|ApiProblem>}
   */
  this.updateOrganizerAddress = function(organizerId, address, language) {

    return $http
        .put(appConfig.baseUrl + 'organizers/' + organizerId + '/address/' + language, address, defaultApiConfig)
        .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} organizerId
   * @returns {Promise.<CommandInfo|ApiProblem>}
   */
  this.removeOrganizerAddress = function(organizerId) {

    return $http
        .delete(appConfig.baseUrl + 'organizers/' + organizerId + '/address', defaultApiConfig)
        .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} organizerId
   * @param {Array} contact
   * @returns {Promise.<CommandInfo|ApiProblem>}
   */
  this.updateOrganizerContact = function(organizerId, contact) {

    return $http
        .put(appConfig.baseUrl + 'organizers/' + organizerId + '/contactPoint', contact, defaultApiConfig)
        .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} organizerId
   *  roleId for the role to retrieve permissions for
   * @return {Promise.Array<Permission>}
   */
  this.getOrganizerPermissions = function (organizerId) {
    var requestConfig = defaultApiConfig;
    return $http
        .get(appConfig.baseUrl + 'organizers/' + organizerId + '/permissions', requestConfig)
        .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} id
   * @param {string} type
   * @return {*}
   */
  this.getHistory = function (id, type) {
    var endpoint = (type === 'place') ? 'places/' : 'event/';
    return $http
      .get(appConfig.baseUrl + endpoint + id + '/history', defaultApiConfig)
      .then(returnUnwrappedData);
  };

  /**
   * @returns {Promise.<UiTIDUser>}
   *   A promise with the credentials of the currently logged in user.
   */
  this.getMe = function () {
    var deferredUser = $q.defer();
    var activeUser = uitidAuth.getUser();

    function storeAndResolveUser (userData) {
      var user = {
        id: userData.id,
        nick: userData.nick,
        uuid: userData.uuid,
        username: userData.username,
        email: userData.email
      };

      $cookies.putObject('user', user);
      deferredUser.resolve(user);
    }

    if (activeUser) {
      deferredUser.resolve(activeUser);
    } else if (uitidAuth.getToken()) {
      // set the freshest, newest token
      defaultApiConfig.headers.Authorization = 'Bearer ' + uitidAuth.getToken();

      $http
        .get(appConfig.baseUrl + 'user', defaultApiConfig)
        .success(storeAndResolveUser)
        .error(deferredUser.reject);
    } else {
      deferredUser.reject();
    }

    return deferredUser.promise;
  };

  /**
   * Get my user permissions
   */
  this.getMyPermissions = function () {
    var deferredPermissions = $q.defer();
    var token = uitidAuth.getToken();

    // cache the permissions with user token
    // == will need to fetch permissions for each login
    function storeAndResolvePermissions (permissionsList) {
      offerCache.put(token, permissionsList);
      deferredPermissions.resolve(permissionsList);
    }

    if (token) {
      var permissions = offerCache.get(token);
      if (!permissions) {
        $http
          .get(appConfig.baseUrl + 'user/permissions/', defaultApiConfig)
          .success(storeAndResolvePermissions)
          .error(function (_, status) {
            if (status === -1) {
              return;
            }
            window.parent.postMessage({
              source: 'UDB',
              type: 'HTTP_ERROR_CODE',
              code: status || 403
            }, '*');
            deferredPermissions.reject();
          });
      } else {
        deferredPermissions.resolve(permissions);
      }
    } else {
      window.parent.postMessage({
        source: 'UDB',
        type: 'HTTP_ERROR_CODE',
        code: 401
      }, '*');
      deferredPermissions.reject();
    }

    return deferredPermissions.promise;
  };

  /**
   * Get the editing permission for an offer.

   * @param {URL} offerLocation
   */
  this.hasPermission = function(offerLocation) {
    return $http.get(
      offerLocation + '/permission',
      defaultApiConfig
    ).then(function (response) {
      return !!response.data.hasPermission;
    });
  };

  this.getUserPermissions = function(offerLocation) {
    return $http.get(
      offerLocation + '/permissions',
      defaultApiConfig
    ).then(function (response) {
      return response.data.permissions;
    });
  };

  /**
   * @param {OfferIdentifier[]} offers
   * @param {string} label
   * @return {Promise}
   */
  this.labelOffers = function (offers, label) {
    return $http.post(appConfig.baseUrl + 'offers/labels',
      {
        'label': label,
        'offers': offers
      },
      defaultApiConfig
    );
  };

  /**
   * @param {string} query
   * @param {string} label
   * @return {Promise}
   */
  this.labelQuery = function (query, label) {
    return $http.post(appConfig.baseUrl + 'query/labels',
      {
        'label': label,
        'query': query
      },
      defaultApiConfig
    );
  };

  /**
   * @param {string} query
   * @param {string} [email]
   * @param {string} format
   * @param {string[]} properties
   * @param {boolean} perDay
   * @param {URL[]} selection
   * @param {Object} [customizations]
   * @return {*}
   */
  this.exportEvents = function (query, email, format, properties, perDay, selection, customizations) {

    var exportData = {
      query: query,
      selection: _.map(selection, function (url) {
        return url.toString();
      }),
      order: format === 'pdf' ? {availableTo: 'asc'} : {},
      include: properties,
      perDay: perDay,
      customizations: customizations || {}
    };

    if (email) {
      exportData.email = email;
    }

    return $http.post(appConfig.baseUrl + 'events/export/' + format, exportData, defaultApiConfig);
  };

  /**
   * @param {URL} offerLocation
   * @param {string} propertyName
   *  'title' or 'description'
   * @param {string} language
   *  ISO 639-1 language code: https://en.wikipedia.org/wiki/ISO_639-1
   *  Languages known to be supported: nl, en, fr, de.
   * @param {string} translation
   *
   * @return {Promise}
   */
  this.translateProperty = function (offerLocation, propertyName, language, translation) {
    var translationData = {};
    translationData[propertyName] = translation;

    if (propertyName === 'name') {
      propertyName = 'title';
    }

    return $http.post(
      offerLocation + '/' + language + '/' + propertyName,
      translationData,
      defaultApiConfig
    );
  };

  this.translateAddress = function (offerId, language, translation) {
    return $http.put(
        appConfig.baseUrl + 'places/' + offerId + '/address/' + language,
        {
          addressCountry: translation.addressCountry,
          addressLocality: translation.addressLocality,
          postalCode: translation.postalCode,
          streetAddress: translation.streetAddress
        },
        defaultApiConfig
    );
  };

  var offerPropertyPaths = {
    typicalAgeRange: 'typical-age-range'
  };

  /**
   * Update the property for a given id.
   *
   * @param {URL} offerLocation
   *   The location of the offer to update
   * @param {string} property
   *   Property to update
   * @param {string} value
   *   Value to save
   */
  this.updateProperty = function(offerLocation, property, value) {
    // TODO: having both in path and updateData is duplicate
    var updateData = {};
    updateData[property] = value;
    var path = offerPropertyPaths[property] ? offerPropertyPaths[property] : property;

    return $http.post(
      offerLocation +  '/' + path,
      updateData,
      defaultApiConfig
    );
  };

  this.updateTypicalAgeRange = function(offerLocation, typicalAgeRange) {
    var updateData = {
      'typicalAgeRange': typicalAgeRange
    };
    return $http.put(
      offerLocation + '/typicalAgeRange',
      updateData,
      defaultApiConfig
    );
  };

  this.updatePriceInfo = function(offerLocation, price) {
    return $http.put(
      offerLocation + '/priceInfo',
      price,
      defaultApiConfig
    );
  };

  /**
   * @param {URL} offerLocation
   *   The location of the offer to update
   * @param {string[]} facilities
   *   A list of facility ids
   */
  this.updateOfferFacilities = function (offerLocation, facilities) {
    return $http.put(
      offerLocation + '/facilities/',
      {facilities: facilities},
      defaultApiConfig
    );
  };

  /**
   * @param {URL} offerLocation
   * @param {string} label
   *
   * @return {Promise}
   */
  this.labelOffer = function (offerLocation, label) {
    return $http.post(
      offerLocation + '/labels',
      {'label': label},
      defaultApiConfig
    );
  };

  /**
   * @param {URL} offerLocation
   * @param {string} label
   *
   * @return {Promise}
   */
  this.unlabelOffer = function (offerLocation, label) {
    // @see https://stackoverflow.com/questions/332872/encode-url-in-javascript
    return $http
      .delete(offerLocation + '/labels/' + encodeURIComponent(label), defaultApiConfig)
      .catch(returnApiProblem);
  };

  /**
   * @param {EventFormData} offer
   *
   * @return {Promise.<URL>}
   */
  this.deleteOffer = function (offer) {
    return $http['delete'](
      offer['@id'],
      defaultApiConfig
    );
  };

  /**
   * @param {udbOrganizer} organization
   *
   * @return {Promise.<Object|ApiProblem>}
   */
  this.deleteOrganization = function (organization) {
    return $http
      .delete(organization['@id'], defaultApiConfig)
      .catch(returnApiProblem);
  };

  /**
   * @param {string} type   either 'place' or 'event'
   * @param {EventFormData} offer
   *
   * @return {Promise.<URL>}
   */
  this.createOffer = function (type, offer) {
    return $http.post(
      appConfig.baseUrl + type,
      offer,
      defaultApiConfig
    ).then(function(response) {
      return new URL(response.data.url);
    });
  };

  /**
   * @param {URL} placeLocation
   * @returns {OfferIdentifier[]}
   */
  this.findEventsAtPlace = function(placeLocation) {
    function unwrapEvents(wrappedEvents) {
      var eventIdentifiers = _.map(wrappedEvents.events, function(event) {
        return {'@id': appConfig.baseUrl + 'event/' + event['@id']};
      });
      return $q.resolve(eventIdentifiers);
    }

    return $http
      .get(placeLocation + '/events', defaultApiConfig)
      .then(function (response) {
        return returnUnwrappedData(response)
          .then(unwrapEvents);
      });
  };

  /**
   * Create a new organizer.
   */
  this.createOrganizer = function(organizer) {
    return $http.post(
      appConfig.baseUrl + 'organizers/',
      organizer,
      defaultApiConfig
    );
  };

  /**
   * Update the major info of an offer.
   * @param {URL} offerLocation
   * @param {EventFormData} info
   */
  this.updateMajorInfo = function(offerLocation, info) {
    return $http.post(
      offerLocation + '/major-info',
      info,
      defaultApiConfig
    );
  };

  /**
   * Delete the typical age range for an offer.
   * @param {URL} offerLocation
   */
  this.deleteTypicalAgeRange = function(offerLocation) {

    return $http.delete(
      offerLocation + '/typical-age-range',
      defaultApiConfig
    );
  };

  /**
   * Delete the organizer for an offer.
   * @param {URL} offerLocation
   * @param {string} organizerId
   */
  this.deleteOfferOrganizer = function(offerLocation, organizerId) {

    return $http.delete(
      offerLocation + '/organizer/' + organizerId,
      defaultApiConfig
    );
  };

  /**
   * Add a new image.
   * @param {URL} itemLocation
   * @param {string} imageId
   * @return {Promise}
   */
  this.addImage = function(itemLocation, imageId) {

    var postData = {
      mediaObjectId: imageId
    };

    return $http
      .post(
        itemLocation + '/images',
        postData,
        defaultApiConfig
      );
  };

  /**
   * Update the image info of an item.
   * @param {URL} itemLocation
   * @param {string} imageId
   * @param {string} description
   * @param {string} copyrightHolder
   * @return {Promise}
   *
   */
  this.updateImage = function(itemLocation, imageId, description, copyrightHolder) {
    var postData = {
      description: description,
      copyrightHolder: copyrightHolder
    };

    return $http
      .post(
        itemLocation + '/images/' + imageId,
        postData,
        defaultApiConfig
      );
  };

  /**
   * Remove an image from an item.
   *
   * @param {URL} itemLocation
   * @param {string} imageId
   *
   * @return {Promise}
   */
  this.removeImage = function(itemLocation, imageId) {
    return $http.delete(
      itemLocation + '/images/' + imageId,
      defaultApiConfig
    );
  };

  /**
   * Select the main image for an item.
   *
   * @param {URL} itemLocation
   * @param {string} imageId
   *
   * @return {Promise.<Object>}
   */
  this.selectMainImage = function(itemLocation, imageId) {
    var postData = {
      mediaObjectId: imageId
    };

    return $http
      .post(
        itemLocation + '/images/main',
        postData,
        defaultApiConfig
      );
  };

  /**
   * @param {URL} itemLocation
   * @param {('everyone'|'members'|'education')} audienceType
   *
   * @returns {Promise.<CommandInfo|ApiProblem>}
   */
  this.setAudienceType = function (itemLocation, audienceType) {
    return $http
      .put(itemLocation.toString() + '/audience', {'audienceType': audienceType}, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  function returnUnwrappedData(response) {
    return $q.resolve(response.data);
  }

  /**
   * @param {int} page
   * @return {Promise.<PagedCollection>}
   */
  this.getDashboardItems = function(page) {
    var params = {
      'disableDefaultFilters': true,
      'workflowStatus': 'DRAFT,READY_FOR_VALIDATION,APPROVED,REJECTED',
      'sort[modified]': 'desc',
      'limit': 50,
      'start': (page - 1) * 50,
      'embed': true
    };

    var createdByQueryMode = _.get(appConfig, 'created_by_query_mode', 'uuid');

    return this.getMe()
      .then(function(userData) {
        var userId = userData.uuid;
        var userEmail = userData.email;

        if (createdByQueryMode === 'uuid') {
          params.creator = userId;
        } else if (createdByQueryMode === 'email') {
          params.creator = userEmail;
        } else if (createdByQueryMode === 'mixed') {
          params.q = 'creator:(' + userId + ' OR ' + userEmail + ')';
        }

        var requestConfig = _.cloneDeep(defaultApiConfig);
        requestConfig.params = params;

        return $http
          .get(appConfig.baseUrl + 'offers/', requestConfig)
          .then(returnUnwrappedData);
      });
  };

  /**
   * @param {int} page
   * @return {Promise.<PagedCollection>}
   */
  this.getDashboardOrganizers = function(page) {
    var requestConfig = _.cloneDeep(defaultApiConfig);

    return this.getMe()
      .then(function(userData) {
        var userId = userData.uuid;

        requestConfig.params = {
          'creator': userId,
          'sort[modified]': 'desc',
          'limit': 50,
          'start': (page - 1) * 50,
          'embed': true
        };

        return $http
          .get(appConfig.baseUrl + 'organizers/', requestConfig)
          .then(returnUnwrappedData);
      });
  };

  this.uploadMedia = function (imageFile, description, copyrightHolder, language) {
    var uploadOptions = {
      url: appConfig.baseUrl + 'images/',
      fields: {
        description: description,
        copyrightHolder: copyrightHolder,
        language: language
      },
      file: imageFile
    };
    var config = _.assign(defaultApiConfig, uploadOptions);

    return Upload.upload(config);
  };

  this.getMedia = function (imageId) {
    return $http
      .get(
        appConfig.baseUrl + 'media/' + imageId,
        defaultApiConfig
      )
      .then(returnUnwrappedData);
  };

  /**
   * @param {string}  name
   * @param {boolean} isVisible
   * @param {boolean} isPrivate
   * @param {string}  [parentId]
   * @return {Promise.<Object|ApiProblem>}
   */
  this.createLabel = function (name, isVisible, isPrivate, parentId) {
    var labelData = {
      name: name,
      visibility: isVisible ? 'visible' : 'invisible',
      privacy: isPrivate ? 'private' : 'public'
    };

    if (parentId) {
      labelData.parentId = parentId;
    }

    return $http
      .post(appConfig.baseUrl + 'labels/', labelData, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} labelId
   * @param {string} command
   * @return {Promise.<Object|ApiProblem>}
   */
  this.updateLabel = function (labelId, command) {
    return $http.patch(
      appConfig.baseUrl + 'labels/' + labelId,
      {'command': command},
      defaultApiConfig
    ).then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {uuid} labelId
   * @return {Promise.<Object|ApiProblem>}
   */
  this.deleteLabel = function (labelId) {
    return $http
      .delete(appConfig.baseUrl + 'labels/' + labelId, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {uuid} labelId
   * @return {Promise.<Label>}
   */
  this.getLabelById = function (labelId) {
    return $http
      .get(appConfig.baseUrl + 'labels/' + labelId, defaultApiConfig)
      .then(returnUnwrappedData);
  };

  /**
   * @param {string} query
   *  Matches case-insensitive and any part of a label.
   * @param {Number} [limit]
   *  The limit of results per page.
   * @param {Number} [start]
   * @param {Boolean} [suggestion]
   * @return {Promise.<PagedCollection>}
   */
  this.findLabels = function (query, limit, start, suggestion) {
    var requestConfig = _.cloneDeep(defaultApiConfig);
    requestConfig.params = {
      query: query,
      suggestion: suggestion === false ? undefined : true,
      limit: limit ? limit : 30,
      start: start ? start : 0
    };

    return $http
      .get(appConfig.baseUrl + 'labels/', requestConfig)
      .then(returnUnwrappedData);
  };

  /**
   * @param {uuid} roleId
   * @return {Promise.<Role>}
   */
  this.getRoleById = function (roleId) {
    return $http
      .get(appConfig.baseUrl + 'roles/' + roleId, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} query
   *  Matches case-insensitive and any part of a label.
   * @param {Number} [limit]
   *  The limit of results per page.
   * @param {Number} [start]
   * @return {Promise.<PagedCollection>}
   */
  this.findRoles = function (query, limit, start) {
    var requestConfig = _.cloneDeep(defaultApiConfig);
    requestConfig.params = {
      query: query,
      limit: limit ? limit : 30,
      start: start ? start : 0
    };

    return $http
      .get(appConfig.baseUrl + 'roles/', requestConfig)
      .then(returnUnwrappedData);
  };

  /**
   * @param {string}  name
   * @return {Promise.<Object|ApiProblem>} Object containing created roleId
   */
  this.createRole = function (name) {
    var roleData = {
      name: name
    };

    return $http
      .post(appConfig.baseUrl + 'roles/', roleData, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {uuid}    roleId
   * @param {string}  name
   * @return {Promise.<Object|ApiProblem>} Object containing created roleId
   */
  this.updateRoleName = function (roleId, name) {
    var requestOptions = _.cloneDeep(defaultApiConfig);
    requestOptions.headers['Content-Type'] = 'application/ld+json;domain-model=RenameRole';

    var updateData = {
      'name': name
    };

    return $http
      .patch(appConfig.baseUrl + 'roles/' + roleId, updateData, requestOptions)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   *
   * @param {uuid}    roleId
   * @param {string}  constraint
   * @return {Promise.<Object|ApiProblem>} Object containing created constraint.
   */
  this.createRoleConstraint = function (roleId, constraint) {
    var requestOptions = _.cloneDeep(defaultApiConfig);
    requestOptions.headers['Content-Type'] = 'application/ld+json;domain-model=addConstraint';

    var constraintData = {
      query: constraint
    };

    return $http
        .post(appConfig.baseUrl + 'roles/' + roleId + '/constraints/', constraintData, requestOptions)
        .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   *
   * @param {uuid}    roleId
   * @param {string}  constraint
   * @return {Promise.<Object|ApiProblem>} Object containing updated constraint.
   */
  this.updateRoleConstraint = function (roleId, constraint) {
    var requestOptions = _.cloneDeep(defaultApiConfig);
    requestOptions.headers['Content-Type'] = 'application/ld+json;domain-model=updateConstraint';

    var updateData = {
      query: constraint
    };

    return $http
        .put(appConfig.baseUrl + 'roles/' + roleId + '/constraints/', updateData, requestOptions)
        .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   *
   * @param {uuid}    roleId
   * @return {Promise.<Object|ApiProblem>} Object containing updated constraint.
   */
  this.removeRoleConstraint = function (roleId) {
    var requestOptions = _.cloneDeep(defaultApiConfig);
    requestOptions.headers['Content-Type'] = 'application/ld+json;domain-model=removeConstraint';

    return $http
        .delete(appConfig.baseUrl + 'roles/' + roleId + '/constraints/', requestOptions)
        .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @return {Promise.Array<Permission>}
   */
  this.getPermissions = function () {
    var requestConfig = defaultApiConfig;

    return $http
      .get(appConfig.baseUrl + 'permissions/', requestConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} roleId
   *  roleId for the role to retrieve permissions for
   * @return {Promise.Array<Permission>}
   */
  this.getRolePermissions = function (roleId) {
    var requestConfig = defaultApiConfig;
    return $http
      .get(appConfig.baseUrl + 'roles/' + roleId + '/permissions/', requestConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} roleId
   *  roleId for the role to retrieve users for
   * @return {Promise.Array<User>}
   */
  this.getRoleUsers = function (roleId) {
    var requestConfig = defaultApiConfig;
    return $http
      .get(appConfig.baseUrl + 'roles/' + roleId + '/users/', requestConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} permissionKey
   *  The key for the permission
   * @param {string} roleId
   *  roleId for the role
   * @return {Promise}
   */
  this.addPermissionToRole = function (permissionKey, roleId) {
    var requestConfig = defaultApiConfig;

    return $http
      .put(appConfig.baseUrl + 'roles/' + roleId + '/permissions/' + permissionKey, {}, requestConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} permissionKey
   *  The key for the permission
   * @param {string} roleId
   *  roleId for the role
   * @return {Promise}
   */
  this.removePermissionFromRole = function (permissionKey, roleId) {
    var requestConfig = defaultApiConfig;

    return $http
      .delete(appConfig.baseUrl + 'roles/' + roleId + '/permissions/' + permissionKey, requestConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} userId
   *  The id of the user
   * @param {string} roleId
   *  roleId for the role
   * @return {Promise}
   */
  this.addUserToRole = function (userId, roleId) {
    var requestConfig = defaultApiConfig;

    return $http
      .put(appConfig.baseUrl + 'roles/' + roleId + '/users/' + userId, {}, requestConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} email
   *  A valid email address with a specific domain. The wildcard '*' can be used in the local part.
   * @param {Number} [limit]
   *  The limit of results per page.
   * @param {Number} [start]
   * @return {Promise.<PagedCollection>}
   */
  this.findUsersByEmail = function (email, limit, start) {
    var requestConfig = _.cloneDeep(defaultApiConfig);
    requestConfig.params = {
      email: email ? email : '',
      limit: limit ? limit : 30,
      start: start ? start : 0
    };

    return $http
      .get(appConfig.baseUrl + 'users/', requestConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} email
   *  The e-mailaddress of a user.
   * @return {Promise}
   */
  this.findUserWithEmail = function(email) {
    var requestConfig = _.cloneDeep(defaultApiConfig);

    return $http
      .get(appConfig.baseUrl + 'users/emails/' + email, requestConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {uuid} roleId
   *  The uuid of the role to be removed.
   * @return {Promise}
   */
  this.removeRole = function (roleId) {
    return $http
      .delete(appConfig.baseUrl + 'roles/' + roleId, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} roleId
   *  roleId for the role to retrieve labels for
   * @return {Promise.Array<Permission>}
   */
  this.getRoleLabels = function (roleId) {
    return $http
      .get(appConfig.baseUrl + 'roles/' + roleId + '/labels/', defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} roleId
   *  roleId for the role
   * @param {string} labelId
   *  The id of the label to be added
   * @return {Promise}
   */
  this.addLabelToRole = function (roleId, labelId) {
    return $http
      .put(appConfig.baseUrl + 'roles/' + roleId + '/labels/' + labelId, {}, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} roleId
   *  roleId for the role
   * @param {string} labelId
   *  The id of the label to be removed
   * @return {Promise}
   */
  this.removeLabelFromRole = function (roleId, labelId) {
    return $http
      .delete(appConfig.baseUrl + 'roles/' + roleId + '/labels/' + labelId, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} roleId
   *  roleId for the role
   * @param {string} userId
   *  The id of the user to be removed
   * @return {Promise}
   */
  this.removeUserFromRole = function (roleId, userId) {
    return $http
      .delete(appConfig.baseUrl + 'roles/' + roleId + '/users/' + userId, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} userId
   *
   * @returns {Promise.<User>}
   */
  this.getUser = function(userId) {
    return $http
      .get(appConfig.baseUrl + 'users/' + userId, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} userId
   *
   * @return {Promise.<Object[]>}
   */
  this.getUserRoles = function (userId) {
    return $http
      .get(appConfig.baseUrl + 'users/' + userId + '/roles/', defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @return {Promise.<Object[]>}
   */
  this.getMyRoles = function () {
    return $http
      .get(appConfig.baseUrl + 'user/roles/', defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {URL} offerUrl
   * @param {string} domainModel
   * @param {string} reason (optional)
   */
  this.patchOffer = function (offerUrl, domainModel, reason) {
    var requestOptions = _.cloneDeep(defaultApiConfig);
    requestOptions.headers['Content-Type'] = 'application/ld+json;domain-model=' + domainModel;

    var updateData = {
      'reason': reason
    };

    return $http
      .patch(offerUrl, (reason ? updateData : {}), requestOptions)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {URL} offerUrl
   * @param {Date} [publicationDate]
   * @returns {Promise.<Object|ApiProblem>}
   */
  this.publishOffer = function (offerUrl, publicationDate) {
    var requestOptions = _.cloneDeep(defaultApiConfig);
    requestOptions.headers['Content-Type'] = 'application/ld+json;domain-model=Publish';
    var data = publicationDate instanceof Date ? {publicationDate: publicationDate} : {};

    return $http
      .patch(offerUrl.toString(), data, requestOptions)
      .then(returnUnwrappedData, returnApiProblem);
  };

  this.getCalendarSummary = function(offerId, format, language) {
    var plainConfig = _.cloneDeep(defaultApiConfig);
    var offerUrl = appConfig.baseUrl + 'events/' + offerId;
    var langCode = language + '_BE';
    plainConfig.headers.Accept = 'text/html';

    return $http
      .get(offerUrl + '/calsum?format=' + format + '&langCode=' + langCode, plainConfig)
      .then(returnUnwrappedData);
  };

  /**
   * @param {URL} eventUrl
   * @param {Object} newCalendarData
   * @return {Promise.<Object|ApiProblem>} Object containing the duplicate info
   */
  this.duplicateEvent = function(eventUrl, newCalendarData) {
    return $http
      .post(eventUrl + '/copies/', newCalendarData, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {Object} errorResponse
   * @return {Promise.<ApiProblem>}
   */
  function returnApiProblem(errorResponse) {
    if (errorResponse) {
      var problem = {
        type: new URL(_.get(errorResponse, 'data.type', appConfig.baseUrl + 'problem')),
        title: _.get(errorResponse, 'data.title', 'Something went wrong.'),
        detail: _.get(errorResponse, 'data.detail', 'We failed to perform the requested action!'),
        status: errorResponse.status
      };

      return $q.reject(problem);
    }
  }
}
UdbApi.$inject = ["$q", "$http", "appConfig", "$cookies", "uitidAuth", "$cacheFactory", "UdbEvent", "UdbPlace", "UdbOrganizer", "Upload", "$translate"];
})();

// Source: src/core/udb-event.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.core.UdbEvent
 * @description
 * # UdbEvent
 * UdbEvent factory
 */
angular
  .module('udb.core')
  .factory('UdbEvent', UdbEventFactory);

/* @ngInject */
function UdbEventFactory(EventTranslationState, UdbPlace, UdbOrganizer) {

  var EventPricing = {
    FREE: 'free',
    UNKNOWN: 'unknown',
    PAYED: 'payed'
  };

  function getCategoryLabel(jsonEvent, domain) {
    var label;
    var category = _.find(jsonEvent.terms, function (category) {
      return category.domain === domain;
    });

    if (category) {
      label = category.label;
    }

    return category;
  }

  function getPricing(jsonEvent) {
    var pricing = EventPricing.UNKNOWN;

    if (jsonEvent.bookingInfo && jsonEvent.bookingInfo.length > 0) {
      var price = parseFloat(jsonEvent.bookingInfo[0].price);
      if (price > 0) {
        pricing = EventPricing.PAYED;
      } else {
        pricing = EventPricing.FREE;
      }
    }

    return pricing;
  }

  function updateTranslationState(event) {

    var languages = {'en': false, 'fr': false, 'de': false},
        properties = ['name', 'description'];

    _.forEach(languages, function (language, languageKey) {
      var translationCount = 0,
          state;

      _.forEach(properties, function (property) {
        if (event[property] && event[property][languageKey]) {
          ++translationCount;
        }
      });

      if (translationCount) {
        if (translationCount === properties.length) {
          state = EventTranslationState.ALL;
        } else {
          state = EventTranslationState.SOME;
        }
      } else {
        state = EventTranslationState.NONE;
      }

      languages[languageKey] = state;
    });

    event.translationState = languages;
  }

  /**
   * Get the images that exist for this event.
   */
  function getImages(jsonEvent) {
    var images = [];
    if (jsonEvent.mediaObject) {
      for (var i = 0; i < jsonEvent.mediaObject.length; i++) {
        if (jsonEvent.mediaObject[i]['@type'] === 'schema:ImageObject') {
          images.push(jsonEvent.mediaObject[i]);
        }
      }
    }
    return images;

  }

  /**
   * @class UdbEvent
   * @constructor
   * @param {object}  jsonEvent
   */
  var UdbEvent = function (jsonEvent) {
    this.id = '';
    this.name = {};
    this.place = {};
    this.type = {};
    this.theme = {};
    this.status = {};
    this.subEvent = [];
    /** @type {OpeningHoursData[]} **/
    this.openingHours = [];

    if (jsonEvent) {
      this.parseJson(jsonEvent);
    }
  };

  UdbEvent.prototype = {
    parseJson: function (jsonEvent) {
      this.id = jsonEvent['@id'].split('/').pop();
      this['@id'] = jsonEvent['@id'];
      this['@type'] = jsonEvent['@type'];
      this.apiUrl = new URL(jsonEvent['@id']);
      this.name = jsonEvent.name || {};
      this.description = angular.copy(jsonEvent.description) || {};
      this.calendarSummary = jsonEvent.calendarSummary;
      this.location = new UdbPlace(jsonEvent.location);
      // @todo Use getImages() later on.
      this.image = jsonEvent.image;
      this.images = _.reject(getImages(jsonEvent), 'contentUrl', jsonEvent.image);
      this.videos = jsonEvent.videos || [];
      this.labels = _.union(jsonEvent.labels, jsonEvent.hiddenLabels);
      if (jsonEvent.organizer) {
        // if it's a full organizer object, parse it as one
        if (jsonEvent.organizer['@id']) {
          this.organizer = new UdbOrganizer(jsonEvent.organizer);
          this.hasDummyOrganizer = false;
        } else {
          // just create an object
          this.organizer = {
            name: jsonEvent.organizer.name,
            email: jsonEvent.organizer.email ? (jsonEvent.organizer.email[0] || '-') : '-',
            phone: jsonEvent.organizer.phone ? (jsonEvent.organizer.phone[0] || '-') : '-'
          };
          this.hasDummyOrganizer = true;
        }
      }
      if (jsonEvent.bookingInfo && jsonEvent.bookingInfo.length > 0) {
        this.price = parseFloat(jsonEvent.bookingInfo[0].price);
      }
      this.pricing = getPricing(jsonEvent);
      this.priceInfo = jsonEvent.priceInfo || [];
      this.publisher = jsonEvent.publisher || '';
      this.created = new Date(jsonEvent.created);
      this.modified = new Date(jsonEvent.modified);
      this.creator = jsonEvent.creator || '';
      this.type = getCategoryLabel(jsonEvent, 'eventtype') || '';
      this.theme = getCategoryLabel(jsonEvent, 'theme') || '';
      this.onlineUrl = jsonEvent.onlineUrl;
      this.attendanceMode = jsonEvent.attendanceMode;
      this.status = jsonEvent.status;
      this.bookingAvailability = jsonEvent.bookingAvailability;
      this.calendarType = jsonEvent.calendarType || '';
      this.startDate = jsonEvent.startDate;
      this.endDate = jsonEvent.endDate;
      this.subEvent = jsonEvent.subEvent || [];
      this.openingHours = jsonEvent.openingHours || [];
      this.mediaObject = jsonEvent.mediaObject || [];
      this.typicalAgeRange = jsonEvent.typicalAgeRange || '';
      this.bookingInfo = jsonEvent.bookingInfo || {};
      if (this.bookingInfo.urlLabel) {
        this.bookingInfo.urlLabel = _.get(
          jsonEvent.bookingInfo.urlLabel,
          jsonEvent.mainLanguage,
          jsonEvent.bookingInfo.urlLabel
        );
      }
      this.contactPoint = jsonEvent.contactPoint || {
        'url': [],
        'phone': [],
        'email': []
      };
      this.url = 'event/' + this.id;
      this.sameAs = jsonEvent.sameAs;
      this.additionalData = jsonEvent.additionalData || {};
      if (jsonEvent.typicalAgeRange) {
        this.typicalAgeRange = jsonEvent.typicalAgeRange;
      }
      if (jsonEvent.available) {
        this.available = jsonEvent.available;
      }
      if (jsonEvent.workflowStatus) {
        this.workflowStatus = jsonEvent.workflowStatus;
      }
      this.availableFrom = jsonEvent.availableFrom;
      this.uitpasData = {};

      this.audience = {
        audienceType: _.get(jsonEvent, 'audience.audienceType', 'everyone')
      };

      this.educationFields = [];
      this.educationLevels = [];
      this.educationTargetAudience = [];

      if (jsonEvent.terms) {
        this.educationFields = _.filter(jsonEvent.terms, 'domain', 'educationfield');
        this.educationLevels = _.filter(jsonEvent.terms, 'domain', 'educationlevel');
        this.educationTargetAudience = _.filter(jsonEvent.terms, function(term) {
          var leerlingenId = '2.1.14.0.0';
          var leerkrachtenId = '2.1.13.0.0';
          return (term.domain === 'targetaudience' && (term.id === leerlingenId || term.id === leerkrachtenId));
        });
      }

      this.facilities = _.filter(_.get(jsonEvent, 'terms', []), {domain: 'facility'});
      this.mainLanguage = jsonEvent.mainLanguage || 'nl';
      this.languages = jsonEvent.languages || [];
    },

    /**
     * Set the name of the event for a given langcode.
     */
    setName: function(name, langcode) {
      this.name[langcode] = name;
    },

    /**
     * Get the name of the event for a given langcode.
     */
    getName: function(langcode) {
      return this.name[langcode];
    },

    /**
     * Set the event type for this event.
     */
    setEventType: function(id, label) {
      this.type = {
        'id' : id,
        'label' : label,
        'domain' : 'eventtype',
      };
    },

    /**
     * Get the event type for this event.
     */
    getEventType: function() {
      return this.type;
    },

    /**
     * Get the label for the event type.
     */
    getEventTypeLabel: function() {
      return this.type.label ? this.type.label : '';
    },

    /**
     * Set the event type for this event.
     */
    setTheme: function(id, label) {
      this.theme = {
        'id' : id,
        'label' : label,
        'domain' : 'thema',
      };
    },

    /**
     * Get the event type for this event.
     */
    getTheme: function() {
      return this.theme;
    },

    /**
     * Get the label for the theme.
     */
    getThemeLabel: function() {
      return this.theme.label ? this.theme.label : '';
    },

    /**
     * Reset the opening hours.
     */
    resetOpeningHours: function() {
      this.openingHours = [];
    },

    /**
     * Get the opening hours for this event.
     *
     * @returns {OpeningHoursData[]}
     */
    getOpeningHours: function() {
      return this.openingHours;
    },

    /**
     * Set the location of this event.
     */
    setLocation: function(location) {
      this.location = location;
    },

    getLocation: function() {
      return this.location;
    },

    /**
     * Label the event with a label or a list of labels
     * @param {string|string[]} label
     */
    label: function (label) {
      var newLabels = [];
      var existingLabels = this.labels;

      if (_.isArray(label)) {
        newLabels = label;
      }

      if (_.isString(label)) {
        newLabels = [label];
      }

      newLabels = _.filter(newLabels, function (newLabel) {
        var similarLabel = _.find(existingLabels, function (existingLabel) {
          return existingLabel.toUpperCase() === newLabel.toUpperCase();
        });

        return !similarLabel;
      });

      this.labels = _.union(this.labels, newLabels);
    },

    /**
     * Unlabel a label from an event
     * @param {string} labelName
     */
    unlabel: function (labelName) {
      _.remove(this.labels, function (label) {
        return label === labelName;
      });
    },
    updateTranslationState: function (event) {
      event = event || this;
      updateTranslationState(event);
    },
    isExpired: function () {
      return this.calendarType !== 'permanent' && (new Date(this.endDate) < new Date());
    },
    hasFutureAvailableFrom: function() {
      var tomorrow = moment(new Date()).add(1, 'days');
      tomorrow.hours(0);
      tomorrow.minutes(0);
      tomorrow.seconds(0);
      if (this.availableFrom || this.availableFrom !== '') {
        var publicationDate = new Date(this.availableFrom);
        if (tomorrow < publicationDate) {
          return true;
        }
        else {
          return false;
        }
      } else {
        return false;
      }
    }
  };

  return (UdbEvent);
}
UdbEventFactory.$inject = ["EventTranslationState", "UdbPlace", "UdbOrganizer"];
})();

// Source: src/core/udb-organizer.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.core.directive:udbOrganizer
 * @description
 * # udbOrganizer
 */
angular
  .module('udb.core')
  .directive('udbOrganizer', udbOrganizer);

/* @ngInject */
function udbOrganizer(udbApi) {
  var event = {
    restrict: 'A',
    link: function postLink(scope, iElement, iAttrs) {

      // The organizer object that's returned from the server
      var organizer;

      if (!scope.organizer.title) {
        scope.fetching = true;
        var promise = udbApi.getOrganizerByLDId(scope.organizer.id);

        promise.then(function (organizerObject) {
          scope.organizer = organizerObject;
          scope.fetching = false;
        });
      } else {
        scope.fetching = false;
      }

    }
  };

  return event;
}
udbOrganizer.$inject = ["udbApi"];
})();

// Source: src/core/udb-organizer.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.core.UdbOrganizer
 * @description
 * # UdbOrganizer
 * UdbOrganizer factory
 */
angular
  .module('udb.core')
  .factory('UdbOrganizer', UdbOrganizerFactory);

/* @ngInject */
function UdbOrganizerFactory(UitpasLabels, EventTranslationState) {

  function isUitpas(organizer) {
    return hasUitpasLabel(organizer.labels) ||
      hasUitpasLabel(organizer.hiddenLabels);
  }

  function hasUitpasLabel(labels) {
    return arrayToLowerCase(labels) &&
        !_.isEmpty(_.intersection(arrayToLowerCase(labels), _.values(arrayToLowerCase(UitpasLabels))));
  }

  function arrayToLowerCase(array) {
    var lowerCaseArray = [];
    _.each(array, function(element, key) {
      lowerCaseArray[key] = element.toLowerCase();
    });

    return lowerCaseArray;
  }

  function getFirst(jsonOrganizer, path) {
    return _
      .chain(jsonOrganizer)
      .get(path, [])
      .first()
      .value();
  }

  function updateTranslationState(organizer) {

    var languages = {'en': false, 'fr': false, 'de': false},
        properties = ['name'];

    _.forEach(languages, function (language, languageKey) {
      var translationCount = 0,
          state;

      _.forEach(properties, function (property) {
        if (organizer[property] && organizer[property][languageKey]) {
          ++translationCount;
        }
      });

      if (translationCount) {
        if (translationCount === properties.length) {
          state = EventTranslationState.ALL;
        } else {
          state = EventTranslationState.SOME;
        }
      } else {
        state = EventTranslationState.NONE;
      }

      languages[languageKey] = state;
    });

    organizer.translationState = languages;
  }

  /**
   * @class UdbOrganizer
   * @constructor
   */
  var UdbOrganizer = function (jsonOrganizer) {
    this.id = '';
    this.name = '';

    if (jsonOrganizer) {
      this.parseJson(jsonOrganizer);
    }
  };

  UdbOrganizer.prototype = {
    parseJson: function (jsonOrganizer) {
      this['@id'] = jsonOrganizer['@id'];
      this.id = jsonOrganizer['@id'].split('/').pop();
      // 1. Main language is now a required property.
      // Organizers can be created in a given main language.
      // 2. Previous projections had a default main language of nl.
      // 3. Even older projections had a non-translated name.
      // @todo @mainLanguage after a full replay only case 1 needs to be supported.
      this.name = _.get(jsonOrganizer.name, jsonOrganizer.mainLanguage, null) ||
          _.get(jsonOrganizer.name, 'nl', null) ||
        _.get(jsonOrganizer, 'name', '');
      this.description = _.get(jsonOrganizer.description, jsonOrganizer.mainLanguage, null) ||
        _.get(jsonOrganizer.description, 'nl', null) ||
        _.get(jsonOrganizer, 'description', '');
      this.educationalDescription = _.get(jsonOrganizer.educationalDescription, jsonOrganizer.mainLanguage, null) ||
          _.get(jsonOrganizer.educationalDescription, 'nl', null) ||
          _.get(jsonOrganizer, 'educationalDescription', '');
      this.address = _.get(jsonOrganizer.address, jsonOrganizer.mainLanguage, null) ||
          _.get(jsonOrganizer.address, 'nl', null) || jsonOrganizer.address || [];
      this.email = getFirst(jsonOrganizer, 'contactPoint.email');
      this.phone = getFirst(jsonOrganizer, 'contactPoint.phone');
      //this.url = jsonOrganizer.url;
      this.website = jsonOrganizer.url;
      this.contactPoint = jsonOrganizer.contactPoint;
      this.mediaObject = jsonOrganizer.images || [];
      this.image = jsonOrganizer.mainImage;
      this.labels = _.union(jsonOrganizer.labels, jsonOrganizer.hiddenLabels);
      this.hiddenLabels = jsonOrganizer.hiddenLabels || [];
      this.isUitpas = isUitpas(jsonOrganizer);
      this.created = new Date(jsonOrganizer.created);
      this.deleted = Boolean(jsonOrganizer.workflowStatus === 'DELETED');
      this.detailUrl = '/organizer/' + this.id;
    },
    updateTranslationState: function (organizer) {
      organizer = organizer || this;
      updateTranslationState(organizer);
    },
    regex : {
      url: new RegExp(/^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u00a1-\uffff][a-z0-9\u00a1-\uffff_-]{0,62})?[a-z0-9\u00a1-\uffff]\.)+(?:[a-z\u00a1-\uffff]{2,}\.?))(?::\d{2,5})?(?:[/?#]\S*)?$/i)
    }
  };

  return (UdbOrganizer);
}
UdbOrganizerFactory.$inject = ["UitpasLabels", "EventTranslationState"];
})();

// Source: src/core/udb-organizers.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.core.organizers
 * @description
 * Service for organizers.
 */
angular
  .module('udb.core')
  .service('udbOrganizers', UdbOrganizers);

/* @ngInject */
function UdbOrganizers($q, udbApi, udbUitpasApi, UdbOrganizer) {

  /**
   * @param {string} name
   *  The name of the organizer to fuzzy search against.
   *
   * @return {Promise.<UdbOrganizer[]>}
   */
  this.suggestOrganizers = function(name) {
    var deferredOrganizer = $q.defer();

    function returnOrganizerSuggestions(pagedOrganizers) {
      var organizers = _.map(pagedOrganizers.member, function (jsonOrganizer) {
        return new UdbOrganizer(jsonOrganizer);
      });

      deferredOrganizer.resolve(organizers);
    }

    udbApi
      .findOrganisations(0, 10, null, name)
      .then(returnOrganizerSuggestions);

    return deferredOrganizer.promise;
  };

  this.findOrganizersWebsite = function(website) {
    return udbApi
        .findOrganisations(0, 10, website, null);
  };

  this.findOrganizersCardsystem = function(organizerId) {
    return udbUitpasApi
        .findOrganisationsCardSystems(organizerId);
  };

}
UdbOrganizers.$inject = ["$q", "udbApi", "udbUitpasApi", "UdbOrganizer"];
})();

// Source: src/core/udb-place.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.core.UdbTimestamps
 * @description
 * # UdbTimestamps
 * Contains timestamps info for the calendar
 */
angular
  .module('udb.core')
  .factory('UdbPlace', UdbPlaceFactory);

/* @ngInject */
function UdbPlaceFactory(EventTranslationState, placeCategories, UdbOrganizer) {

  function getCategoryByType(jsonPlace, domain) {
    var category = _.find(jsonPlace.terms, function (category) {
      return category.domain === domain;
    });

    if (category) {
      return category;
    }

    return;
  }

  /**
   * Return all categories for a given type.
   */
  function getCategoriesByType(jsonPlace, domain) {
    var categories = [];

    if (jsonPlace.terms) {
      for (var i = 0; i < jsonPlace.terms.length; i++) {
        if (jsonPlace.terms[i].domain === domain) {
          categories.push(jsonPlace.terms[i]);
        }
      }
    }

    return categories;
  }

  function updateTranslationState(place) {
    var languages = {'en': false, 'fr': false, 'de': false},
        properties = ['name', 'description'];

    _.forEach(languages, function (language, languageKey) {
      var translationCount = 0,
          state;

      _.forEach(properties, function (property) {
        if (place[property] && place[property][languageKey]) {
          ++translationCount;
        }
      });

      if (translationCount) {
        if (translationCount === properties.length) {
          state = EventTranslationState.ALL;
        } else {
          state = EventTranslationState.SOME;
        }
      } else {
        state = EventTranslationState.NONE;
      }

      languages[languageKey] = state;
    });

    place.translationState = languages;
  }

  /**
   * Get the images that exist for this event.
   */
  function getImages(jsonPlace) {

    var images = [];
    if (jsonPlace.mediaObject) {
      for (var i = 0; i < jsonPlace.mediaObject.length; i++) {
        if (jsonPlace.mediaObject[i]['@type'] === 'schema:ImageObject') {
          images.push(jsonPlace.mediaObject[i]);
        }
      }
    }

    return images;

  }

  /**
   * @class UdbPlace
   * @constructor
   */
  var UdbPlace = function (placeJson) {
    this.id = '';
    this.name = {};
    this.type = '';
    this.theme = {};
    this.status = {};
    this.calendar = {};
    this.address = {};
    /*this.address = {
      'addressCountry' : 'BE',
      'addressLocality' : '',
      'postalCode' : '',
      'streetAddress' : ''
    };*/

    if (placeJson) {
      this.parseJson(placeJson);
    }
  };

  UdbPlace.prototype = {
    parseJson: function (jsonPlace) {

      this.id = jsonPlace['@id'] ? jsonPlace['@id'].split('/').pop() : '';
      this['@id'] = jsonPlace['@id'];
      this['@type'] = jsonPlace['@type'];
      if (jsonPlace['@id']) {
        this.apiUrl = new URL(jsonPlace['@id']);
      }
      this.name = jsonPlace.name || {};
      //this.address = (jsonPlace.address && jsonPlace.address.nl) || jsonPlace.address || this.address;
      this.address = jsonPlace.address || {};
      this.theme = getCategoryByType(jsonPlace, 'theme') || {};
      this.status = jsonPlace.status;
      this.description = angular.copy(jsonPlace.description) || {};
      this.calendarType = jsonPlace.calendarType || '';
      this.startDate = jsonPlace.startDate;
      this.endDate = jsonPlace.endDate;
      this.openingHours = jsonPlace.openingHours || [];
      this.typicalAgeRange = jsonPlace.typicalAgeRange || '';
      this.priceInfo = jsonPlace.priceInfo || [];
      this.bookingInfo = jsonPlace.bookingInfo || {};
      if (this.bookingInfo.urlLabel) {
        this.bookingInfo.urlLabel = _.get(
          jsonPlace.bookingInfo.urlLabel,
          jsonPlace.mainLanguage,
          jsonPlace.bookingInfo.urlLabel
        );
      }
      this.contactPoint = jsonPlace.contactPoint || {
        'url': [],
        'phone': [],
        'email': []
      };
      if (jsonPlace.organizer) {
        // if it's a full organizer object, parse it as one
        if (jsonPlace.organizer['@id']) {
          this.organizer = new UdbOrganizer(jsonPlace.organizer);
        } else {
          // just create an object
          this.organizer = {
            name: jsonPlace.organizer.name,
            email: jsonPlace.organizer.email ? (jsonPlace.organizer.email[0] || '-') : '-',
            phone: jsonPlace.organizer.phone ? (jsonPlace.organizer.phone[0] || '-') : '-'
          };
        }
      }
      this.image = jsonPlace.image;
      this.images = _.reject(getImages(jsonPlace), 'contentUrl', jsonPlace.image);
      this.labels = _.union(jsonPlace.labels, jsonPlace.hiddenLabels);
      this.mediaObject = jsonPlace.mediaObject || [];
      this.videos = jsonPlace.videos || [];
      this.facilities = getCategoriesByType(jsonPlace, 'facility') || [];
      this.additionalData = jsonPlace.additionalData || {};
      if (jsonPlace['@id']) {
        this.url = 'place/' + this.id;
      }
      this.creator = jsonPlace.creator;
      if (jsonPlace.created) {
        this.created = new Date(jsonPlace.created);
      }
      this.modified = jsonPlace.modified;

      if (jsonPlace.terms) {
        var place = this;

        // Only add terms related to locations.
        angular.forEach(jsonPlace.terms, function (term) {
          angular.forEach(placeCategories, function(category) {
            if (term.id === category.id) {
              place.type = term;
              return;
            }
          });
        });
      }

      if (jsonPlace.workflowStatus) {
        this.workflowStatus = jsonPlace.workflowStatus;
      }

      if (jsonPlace.availableFrom) {
        this.availableFrom = jsonPlace.availableFrom;
      }

      this.facilities = _.filter(_.get(jsonPlace, 'terms', []), {domain: 'facility'});
      this.mainLanguage = jsonPlace.mainLanguage || 'nl';
      this.languages = jsonPlace.languages || [];

      if (jsonPlace.isDummyPlaceForEducationEvents) {
        this.isDummyPlaceForEducationEvents = jsonPlace.isDummyPlaceForEducationEvents;
      }
      if (this.id === '00000000-0000-0000-0000-000000000000') {
        this.isVirtualLocation = true;
      }

      this.isRealLocation = !this.isDummyPlaceForEducationEvents && !this.isVirtualLocation;
    },

    /**
     * Set the name of the event for a given langcode.
     */
    setName: function(name, langcode) {
      this.name[langcode] = name;
    },

    /**
     * Get the name of the event for a given langcode.
     */
    getName: function(langcode) {
      return this.name[langcode];
    },

    /**
     * Set the event type for this event.
     */
    setEventType: function(id, label) {
      this.type = {
        'id' : id,
        'label' : label,
        'domain' : 'eventtype',
      };
    },

    /**
     * Get the event type for this event.
     */
    getEventType: function() {
      return this.type;
    },

    /**
     * Get the label for the event type.
     */
    getEventTypeLabel: function() {
      return this.type.label ? this.type.label : '';
    },

    /**
     * Set the event type for this event.
     */
    setTheme: function(id, label) {
      this.theme = {
        'id' : id,
        'label' : label,
        'domain' : 'thema',
      };
    },

    /**
     * Get the event type for this event.
     */
    getTheme: function() {
      return this.theme;
    },

    /**
     * Get the label for the theme.
     */
    getThemeLabel: function() {
      return this.theme.label ? this.theme.label : '';
    },

    /**
     * Reset the opening hours.
     */
    resetOpeningHours: function() {
      this.openinghours = [];
    },

    /**
     * Get the opening hours for this event.
     *
     * @returns {OpeningHoursData[]}
     */
    getOpeningHours: function() {
      return this.openinghours;
    },

    setCountry: function(country) {
      this.address.country = country;
    },

    setLocality: function(locality) {
      this.address.addressLocality = locality;
    },

    setPostal: function(postalCode) {
      this.address.postalCode = postalCode;
    },

    setStreet: function(street) {
      this.address.streetAddress = street;
    },

    getCountry: function() {
      return this.address.country;
    },

    getLocality: function() {
      return this.address.addressLocality;
    },

    getPostal: function() {
      return this.address.postalCode;
    },

    getStreet: function(street) {
      return this.address.streetAddress;
    },

    /**
     * Label the event with a label or a list of labels
     * @param {string|string[]} label
     */
    label: function (label) {
      var newLabels = [];
      var existingLabels = this.labels;

      if (_.isArray(label)) {
        newLabels = label;
      }

      if (_.isString(label)) {
        newLabels = [label];
      }

      newLabels = _.filter(newLabels, function (newLabel) {
        var similarLabel = _.find(existingLabels, function (existingLabel) {
          return existingLabel.toUpperCase() === newLabel.toUpperCase();
        });

        return !similarLabel;
      });

      this.labels = _.union(this.labels, newLabels);
    },

    /**
     * Unlabel a label from an event
     * @param {string} labelName
     */
    unlabel: function (labelName) {
      _.remove(this.labels, function (label) {
        return label === labelName;
      });
    },

    updateTranslationState: function (event) {
      event = event || this;
      updateTranslationState(event);
    },
    isExpired: function () {
      return this.calendarType !== 'permanent' && (new Date(this.endDate) < new Date());
    },
    hasFutureAvailableFrom: function() {
      var tomorrow = moment(new Date()).add(1, 'days');
      tomorrow.hours(0);
      tomorrow.minutes(0);
      tomorrow.seconds(0);
      if (this.availableFrom || this.availableFrom !== '') {
        var publicationDate = new Date(this.availableFrom);
        if (tomorrow < publicationDate) {
          return true;
        }
        else {
          return false;
        }
      } else {
        return false;
      }
    }

  };

  return (UdbPlace);
}
UdbPlaceFactory.$inject = ["EventTranslationState", "placeCategories", "UdbOrganizer"];
})();

// Source: src/core/udb3-content.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.core.Udb3Content
 * @description
 * Service to get udb3 content.
 */
angular
  .module('udb.core')
  .service('udb3Content', Udb3Content);

/* @ngInject */
function Udb3Content($q, $http, appConfig) {

  /**
   * Get the udb3 content for the current user.
   */

  this.getUdb3ContentForCurrentUser = function() {

    return $http.get(appConfig.baseApiUrl + 'udb3_content_current_user');

  };

}
Udb3Content.$inject = ["$q", "$http", "appConfig"];
})();

// Source: src/core/uitid-auth.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.core.uitidAuth
 * @description
 * # uitidAuth
 * Service in the udb.core.
 */
angular
  .module('udb.core')
  .service('uitidAuth', UitidAuth);

/* @ngInject */
function UitidAuth($window, $location, appConfig, $cookies, jwtHelper) {

  function removeCookies () {
    $cookies.remove('token');
    $cookies.remove('user');
  }

  function buildBaseUrl() {
    var baseUrl = $location.protocol() + '://' + $location.host();
    var port = $location.port();

    return (port === 80) ? baseUrl : baseUrl + ':' + port;
  }

  /**
   * Log the active user out.
   */
  this.logout = function () {
    var destination = buildBaseUrl(),
      logoutUrl = appConfig.authUrl + 'logout';

    removeCookies();

    // redirect to login page
    logoutUrl += '?destination=' + encodeURIComponent(destination);
    $window.location.href = logoutUrl;
  };

  /**
   * Login by redirecting to UiTiD
   */
  this.login = function (language) {
    var currentLocation = $location.absUrl(),
        loginUrl = appConfig.authUrl + 'connect';

    removeCookies();

    // redirect to login page
    loginUrl += '?destination=' + encodeURIComponent(currentLocation) + '&lang=' + language;
    $window.location.href = loginUrl;
  };

  this.register = function (language) {
    var currentLocation = $location.absUrl(),
        registrationUrl = appConfig.authUrl + 'register';

    removeCookies();

    // redirect to login page
    registrationUrl += '?destination=' + encodeURIComponent(currentLocation) + '&lang=' + language;
    $window.location.href = registrationUrl;
  };

  this.setToken = function (token) {
    $cookies.put('token', token);
    // When setting a new token the stored user cookie, which is used in API calls as a parameter, should be removed.
    // The next time an API call is made this user cookie will be recreated from the token cookie.
    $cookies.remove('user');
  };

  /**
   * @return {string|undefined}
   *  The JWToken of the currently logged in user or undefined.
   */
  this.getToken = function () {
    var service = this;
    var currentToken = $cookies.get('token');

    // check if a new JWT is set in the search parameters and parse it
    var queryParameters = $location.search();
    var newToken = queryParameters.jwt;

    if (newToken && newToken !== currentToken) {
      currentToken = newToken;
      service.setToken(newToken);

      if (window === window.parent) {
        // Redirect to the current URL but without jwt param, but only if the app is not running in an iframe.
        // @see https://jira.uitdatabank.be/browse/III-3408
        $location.search('jwt', null);
      }
    }

    return currentToken;
  };

  // TODO: Have this method return a promise, an event can be broadcast to keep other components updated.
  /**
   * Returns the currently logged in user
   */
  this.getUser = function () {
    return $cookies.getObject('user');
  };
}
UitidAuth.$inject = ["$window", "$location", "appConfig", "$cookies", "jwtHelper"];
})();

// Source: src/cultuurkuur/event-cultuurkuur.component.js
(function () {
'use strict';

angular
  .module('udb.cultuurkuur')
  .component('udbEventCultuurkuurComponent', {
    bindings: {
      event: '<',
      permission: '<'
    },
    templateUrl: 'templates/event-cultuurkuur.html',
    controller: EventCultuurKuurComponentController
  });

/**
 * @ngInject
 */

function EventCultuurKuurComponentController(appConfig, uitidAuth, cultuurkuurLabels) {
  var cm = this;
  cm.cultuurkuurMaintenance = _.get(appConfig, 'cultuurkuur.maintenance');
  if (!cm.cultuurkuurMaintenance) {
    var cultuurkuurUrl = _.get(appConfig, 'cultuurkuur.cultuurkuurUrl');
    cm.user = uitidAuth.getUser();
    cm.previewLink = cultuurkuurUrl + 'agenda/e/x/' + cm.event.id + getUTMParameters('preview1.0');
    cm.editLink = cultuurkuurUrl + 'event/' + cm.event.id + '/edit' + getUTMParameters('edit1.0');
    cm.continueLink = cultuurkuurUrl + 'event/' + cm.event.id + '/edit' + getUTMParameters('continue1.0');
    cm.educationFieldsViaLabels = getCultuurkuurLabels('educationFields');
    cm.educationLevelsViaLabels = getCultuurkuurLabels('educationLevels');
    cm.targetAudienceViaLabels = getCultuurkuurLabels('targetAudience');

    cm.cultuurKuurInfo = {
      levels:
        cm.educationLevelsViaLabels.length > 0 ?
        cm.educationLevelsViaLabels :
        _.pluck(cm.event.educationLevels, 'label'),
      fields:
        cm.educationFieldsViaLabels.length > 0 ?
        cm.educationFieldsViaLabels :
        _.pluck(cm.event.educationFields, 'label'),
      targetAudience:
        cm.targetAudienceViaLabels.length > 0 ?
        cm.targetAudienceViaLabels :
        _.pluck(cm.event.educationTargetAudience, 'label')
    };

    cm.isIncomplete =  (cm.cultuurKuurInfo.levels.length === 0 && cm.cultuurKuurInfo.fields.length === 0);

    cm.forSchools = cm.event.audience.audienceType === 'education';
  }
  else {
    cm.cultuurkuurMessage = _.get(appConfig, 'cultuurkuur.cultuurkuurMessage');
  }

  function getUTMParameters(type) {
    return '?utm_source=uitdatabank.be' +
    '&utm_medium=referral' +
    '&utm_campaign=udb3' +
    '&utm_content=' + type +
    '&uid=' + cm.user.id;
  }

  function getCultuurkuurLabels(type) {
    var mergedLabels = cm.event.labels.concat(cm.event.hiddenLabels);
    var fieldLabels = mergedLabels
      .filter(function(label) {
        return (cultuurkuurLabels[type].indexOf(label) > -1);
      })
      .map(function(label) {
        return label.replace('cultuurkuur_', '');
      });

    return fieldLabels;
  }
}
EventCultuurKuurComponentController.$inject = ["appConfig", "uitidAuth", "cultuurkuurLabels"];
})();

// Source: src/dashboard/components/dashboard-event-item.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.dashboard.directive:udbDashboardEventItem
 * @description
 *  Renders a dashboard item for place
 */
angular
  .module('udb.dashboard')
  .directive('udbDashboardEventItem', udbDashboardEventItem);

/* @ngInject */
function udbDashboardEventItem() {
  var dashboardEventItemDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'offerCtrl',
    templateUrl: 'templates/dashboard-item.directive.html'
  };

  return dashboardEventItemDirective;
}
})();

// Source: src/dashboard/components/dashboard-organizer-item.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.dashboard.directive:udbDashboardEventItem
 * @description
 *  Renders a dashboard item for place
 */
angular
  .module('udb.dashboard')
  .directive('udbDashboardOrganizerItem', udbDashboardOrganizerItem);

/* @ngInject */
function udbDashboardOrganizerItem() {
  var dashboardOrganizerItemDirective = {
    restrict: 'AE',
    controller: 'OrganizerController',
    controllerAs: 'organizerCtrl',
    templateUrl: 'templates/dashboard-organizer-item.directive.html'
  };

  return dashboardOrganizerItemDirective;
}
})();

// Source: src/dashboard/components/dashboard-place-item.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.dashboard.directive:udbDashboardPlaceItem
 * @description
 *  Renders a dashboard item for place.
 */
angular
  .module('udb.dashboard')
  .directive('udbDashboardPlaceItem', udbDashboardPlaceItem);

/* @ngInject */
function udbDashboardPlaceItem() {
  var dashboardPlaceItemDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'offerCtrl',
    templateUrl: 'templates/dashboard-item.directive.html'
  };

  return dashboardPlaceItemDirective;
}
})();

// Source: src/dashboard/components/event-delete-confirm-modal.controller.js
(function () {

'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventDeleteConfirmModalCtrl
 * @description
 * # EventDeleteConfirmModalCtrl
 * Modal to delete an event.
 */
angular
  .module('udb.dashboard')
  .controller('EventDeleteConfirmModalCtrl', EventDeleteConfirmModalController);

/* @ngInject */
function EventDeleteConfirmModalController($scope, $uibModalInstance, eventCrud, item) {

  $scope.item = item;
  $scope.saving = false;
  $scope.error = false;

  $scope.cancelRemoval = cancelRemoval;
  $scope.deleteEvent = deleteEvent;

  /**
   * Delete the event.
   */
  function deleteEvent() {
    $scope.error = false;
    $scope.saving = true;

    function showError() {
      $scope.saving = false;
      $scope.error = true;
    }

    eventCrud
      .deleteOffer(item)
      .then($uibModalInstance.close)
      .catch(showError);
  }

  /**
   * Cancel, modal dismiss.
   */
  function cancelRemoval() {
    $uibModalInstance.dismiss();
  }

}
EventDeleteConfirmModalController.$inject = ["$scope", "$uibModalInstance", "eventCrud", "item"];
})();

// Source: src/dashboard/components/organizer.controller.js
(function () {
'use strict';

/**
 * @ngdoc controller
 * @name udb.dashboard.controller:OrganizerController
 * @description
 * # OrganizerController
 */
angular
    .module('udb.dashboard')
    .controller('OrganizerController', OrganizerController);

/* @ngInject */
function OrganizerController(
    udbApi,
    $scope,
    jsonLDLangFilter,
    EventTranslationState,
    offerTranslator,
    offerLabeller,
    $window,
    $q,
    $translate
) {
  var controller = this;
  var cachedOrganizer;
  var defaultLanguage = $translate.use() || 'nl';

  controller.translation = false;
  controller.activeLanguage = defaultLanguage;
  controller.languageSelector = [
    {'lang': 'fr'},
    {'lang': 'en'},
    {'lang': 'de'}
  ];
  controller.labelRemoved = labelRemoved;

  controller.init = function () {
    if (!$scope.event.name) {
      controller.fetching = true;
      return udbApi
          .getOffer($scope.event['@id'])
          .then(function (offerObject) {

            cachedOrganizer = offerObject;
            cachedOrganizer.updateTranslationState();

            $scope.event = jsonLDLangFilter(cachedOrganizer, defaultLanguage, true);
            $scope.offerType = 'organizer';

            controller.fetching = false;
            watchLabels();
            return cachedOrganizer;
          });
    } else {
      $scope.event = jsonLDLangFilter($scope.event, defaultLanguage, true);
      $scope.event.id = $scope.event['@id'].split('/').pop();
      $scope.offerType = 'organizer';
      controller.fetching = false;
    }
  };

  // initialize controller and take optional event actions
  $q.when(controller.init())
      .finally(function () {
        controller.editable = true;
      });

  function watchLabels() {
    $scope.$watch(function () {
      return cachedOrganizer.labels;
    }, function (labels) {
      $scope.event.labels = angular.copy(labels);
    });
  }

  controller.hasActiveTranslation = function () {
    var organizer = cachedOrganizer;
    return organizer && organizer.translationState[controller.activeLanguage] !== EventTranslationState.NONE;
  };

  controller.getLanguageTranslationIcon = function (lang) {
    var icon = EventTranslationState.NONE.icon;

    if (cachedOrganizer && lang) {
      icon = cachedOrganizer.translationState[lang].icon;
    }

    return icon;
  };

  controller.translate = function () {
    controller.applyPropertyChanges('name');
  };

  /**
   * Sets the provided language as active or toggles it off when already active
   *
   * @param {String} lang
   */
  controller.toggleLanguage = function (lang) {
    if (lang === controller.activeLanguage) {
      controller.stopTranslating();
    } else {
      controller.activeLanguage = lang;
      controller.translation = jsonLDLangFilter(cachedOrganizer, controller.activeLanguage);
    }
  };

  controller.hasPropertyChanged = function (propertyName) {
    var lang = controller.activeLanguage,
        translation = controller.translation;

    return controller.translation && cachedOrganizer[propertyName][lang] !== translation[propertyName];
  };

  controller.undoPropertyChanges = function (propertyName) {
    var lang = controller.activeLanguage,
        translation = controller.translation;

    if (translation) {
      translation[propertyName] = cachedOrganizer[propertyName][lang];
    }
  };

  controller.applyPropertyChanges = function (propertyName) {
    var translation = controller.translation[propertyName];
    translateEventProperty(propertyName, translation, propertyName);
  };

  controller.stopTranslating = function () {
    controller.translation = undefined;
    controller.activeLanguage = defaultLanguage;
  };

  function translateEventProperty(property, translation, apiProperty) {
    var language = controller.activeLanguage,
        udbProperty = apiProperty || property;

    if (translation && translation !== cachedOrganizer[property][language]) {
      offerTranslator
          .translateProperty(cachedOrganizer, udbProperty, language, translation)
          .then(cachedOrganizer.updateTranslationState(cachedOrganizer));
    }
  }

  // Labelling
  /**
   * @param {Label} newLabel
   */
  controller.labelAdded = function (newLabel) {
    var similarLabel = _.find(cachedOrganizer.labels, function (label) {
      return newLabel.name.toUpperCase() === label.toUpperCase();
    });
    if (similarLabel) {
      $scope.$apply(function () {
        $scope.event.labels = angular.copy(cachedOrganizer.labels);
      });
      $window.alert('Het label "' + newLabel.name + '" is reeds toegevoegd als "' + similarLabel + '".');
    } else {
      offerLabeller.label(cachedOrganizer, newLabel.name)
          .then(function(response) {
            if (response.success) {
              controller.labelResponse = 'success';
              controller.addedLabel = response.name;
            }
            else {
              controller.labelResponse = 'error';
              controller.labelsError = response;
            }
            $scope.event.labels = angular.copy(cachedOrganizer.labels);
          });
    }
  };

  function clearLabelsError() {
    controller.labelResponse = '';
    controller.labelsError = '';
  }

  /**
   * @param {ApiProblem} problem
   */
  function showUnlabelProblem(problem) {
    $scope.event.labels = angular.copy(cachedOrganizer.labels);
    controller.labelResponse = 'unlabelError';
    controller.labelsError = problem.title;
  }

  /**
   * @param {Label} label
   */
  function labelRemoved(label) {
    clearLabelsError();

    return $q(function(resolve, reject) {
      offerLabeller
      .unlabel(cachedOrganizer, label.name)
      .then(resolve)
      .catch(function (err) {
        showUnlabelProblem(err);
        reject(err);
      });
    });
  }
}
OrganizerController.$inject = ["udbApi", "$scope", "jsonLDLangFilter", "EventTranslationState", "offerTranslator", "offerLabeller", "$window", "$q", "$translate"];
})();

// Source: src/dashboard/components/place-delete-confirm-modal.controller.js
(function () {

'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:PlaceDeleteConfirmModalCtrl
 * @description
 * # PlaceDeleteConfirmModalCtrl
 * Modal to delete an event.
 */
angular
  .module('udb.dashboard')
  .controller('PlaceDeleteConfirmModalCtrl', PlaceDeleteConfirmModalController);

/* @ngInject */
function PlaceDeleteConfirmModalController(
  $scope,
  $uibModalInstance,
  eventCrud,
  place,
  events,
  appConfig
) {
  $scope.place = place;
  $scope.saving = false;
  $scope.events = events ? events : [];
  $scope.hasEvents = $scope.events.length > 0;
  $scope.baseUrl = appConfig.udb3BaseUrl;
  $scope.cancelRemoval = cancelRemoval;
  $scope.deletePlace = deletePlace;

  function deletePlace() {
    $scope.saving = true;
    $scope.error = false;

    function showError() {
      $scope.saving = false;
      $scope.error = true;
    }

    eventCrud
      .deleteOffer(place)
      .then($uibModalInstance.close)
      .catch(showError);
  }

  /**
   * Cancel, modal dismiss.
   */
  function cancelRemoval() {
    $uibModalInstance.dismiss();
  }

}
PlaceDeleteConfirmModalController.$inject = ["$scope", "$uibModalInstance", "eventCrud", "place", "events", "appConfig"];
})();

// Source: src/dashboard/dashboard.controller.js
(function () {
(function () {
  'use strict';

  /**
   * @ngdoc function
   * @name udbApp.controller:DashboardCtrl
   * @description
   * # DashboardCtrl
   * dashboard
   */
  angular
    .module('udb.dashboard')
    .controller('DashboardController', DashboardController);

  /* @ngInject */
  function DashboardController(
      $document,
      $uibModal,
      udbApi,
      eventCrud,
      offerLocator,
      SearchResultViewer,
      appConfig,
      moment,
      $state,
      $translate
  ) {

    var dash = this;
    var language = $translate.use();
    dash.pagedItemViewer = new SearchResultViewer(50, 1);
    dash.pagedItemViewerOrganizers = new SearchResultViewer(50, 1);
    dash.openDeleteConfirmModal = openDeleteConfirmModal;
    dash.updateItemViewer = updateItemViewer;
    dash.openCreateOrganizerModal = openCreateOrganizerModal;
    dash.updateOrganizerViewer = updateOrganizerViewer;
    dash.toggleInfoMessage = (appConfig.toggleInfoMessage);
    dash.username = '';
    dash.hideOnlineDate = false;
    if (appConfig.infoMessage && appConfig.infoMessage[language]) {
      dash.infoMessage = appConfig.infoMessage[language];
    }

    if (typeof(appConfig.addOffer) !== 'undefined') {
      if (typeof(appConfig.addOffer.toggle) !== 'undefined') {
        dash.toggleAddOffer = appConfig.addOffer.toggle;

        if (appConfig.addOffer.toggle) {
          if (typeof(appConfig.addOffer.expirationDate) !== 'undefined' ||
              appConfig.addOffer.expirationDate !== '') {
            if (moment().isAfter(moment(appConfig.addOffer.expirationDate))) {
              dash.toggleAddOffer = false;
            }
            else {
              dash.toggleAddOffer = true;
            }
          }
        }
      }
      else {
        dash.toggleAddOffer = true;
      }

      if (typeof(appConfig.addOffer.expirationMessage) !== 'undefined' ||
          appConfig.addOffer.expirationMessage !== '') {
        dash.addOfferExpirationMessage = appConfig.addOffer.expirationMessage;
      }
      else {
        dash.addOfferExpirationMessage = '';
      }
    }
    else {
      dash.toggleAddOffer = true;
    }

    if (typeof(appConfig.offerEditor.defaultPublicationDate) !== 'undefined') {
      var defaultPublicationDate = appConfig.offerEditor.defaultPublicationDate;
      if (defaultPublicationDate !== '') {
        dash.hideOnlineDate = true;
      }
    }

    if (typeof(appConfig.publicationRulesLink) !== 'undefined') {
      var publicationRulesLink = appConfig.publicationRulesLink;
      if (publicationRulesLink !== '') {
        dash.publicationRulesLink = publicationRulesLink;
      }
    }

    if (typeof(appConfig.enableMyOrganizers) !== 'undefined') {
      var enableMyOrganizers = appConfig.enableMyOrganizers;
      if (enableMyOrganizers !== '') {
        dash.enableMyOrganizers = enableMyOrganizers;
      }
    }

    udbApi
      .getMe()
      .then(greetUser);

    function greetUser(user) {
      dash.username = user.username;
    }

    function reformatJsonLDData(results) {
      if (results.member) {
        results.member = results.member.map(function(member) {
          var memberContext = (member['@context']) ? member['@context'].split('/').pop() : '';
          memberContext = memberContext.charAt(0).toUpperCase() + memberContext.slice(1);
          member['@type'] = (member['@type']) ? member['@type'] : memberContext;
          return member;
        });
      }
      return results;
    }

    /**
     * @param {PagedCollection} results
     */
    function setItemViewerResults(results) {
      results = reformatJsonLDData(results);
      offerLocator.addPagedCollection(results);
      dash.pagedItemViewer.setResults(results);
      $document.scrollTop(0);
    }

    function updateItemViewer() {
      udbApi
        .getDashboardItems(dash.pagedItemViewer.currentPage)
        .then(setItemViewerResults);
    }
    updateItemViewer();

    /**
     * @param {PagedCollection} results
     */
    function setOrganizerViewerResults(results) {
      results = reformatJsonLDData(results);
      offerLocator.addPagedCollection(results);
      dash.pagedItemViewerOrganizers.setResults(results);
      $document.scrollTop(0);
    }

    function updateOrganizerViewer() {
      udbApi
          .getDashboardOrganizers(dash.pagedItemViewer.currentPage)
          .then(setOrganizerViewerResults);
    }
    updateOrganizerViewer();

    function openEventDeleteConfirmModal(item) {
      var modalInstance = $uibModal.open({
        templateUrl: 'templates/event-delete-confirm-modal.html',
        controller: 'EventDeleteConfirmModalCtrl',
        resolve: {
          item: function () {
            return item;
          }
        }
      });
      modalInstance.result.then(function () {
        item.showDeleted = true;
      });
    }

    function openPlaceDeleteConfirmModal(place) {

      function displayModal(place, events) {
        var modalInstance = $uibModal.open({
          templateUrl: 'templates/place-delete-confirm-modal.html',
          controller: 'PlaceDeleteConfirmModalCtrl',
          resolve: {
            place: function () {
              return place;
            },
            events: function () {
              return events;
            }
          }
        });

        modalInstance.result.then(function () {
          place.showDeleted = true;
        });
      }

      function showModalWithEvents(events) {
        displayModal(place, events);
      }

      // Check if this place has planned events.
      eventCrud
        .findEventsAtPlace(place.apiUrl)
        .then(showModalWithEvents);
    }

    /**
     * Open the confirmation modal to delete an event/place.
     *
     * @param {Object} item
     */
    function openDeleteConfirmModal(item) {
      var itemType = item['@id'].indexOf('place') === -1 ? 'event' : 'place';

      // Fix for III-2625. Escaping single quotes won't work here.
      item.name = item.name.replace(/'/g, '');

      if (itemType === 'event') {
        openEventDeleteConfirmModal(item);
      }
      else {
        openPlaceDeleteConfirmModal(item);
      }
    }

    function openCreateOrganizerModal() {
      var modalInstance = $uibModal.open({
        templateUrl: 'templates/event-form-organizer-modal.html',
        controller: 'EventFormOrganizerModalController',
        resolve: {
          organizerName: function () {
            return '';
          }
        }
      });

      modalInstance.result.then(function(organization) {
        $state.go('management.organizers.detail', {id: organization.id});
      });
    }
  }
  DashboardController.$inject = ["$document", "$uibModal", "udbApi", "eventCrud", "offerLocator", "SearchResultViewer", "appConfig", "moment", "$state", "$translate"];

})();
})();

// Source: src/dashboard/dashboard.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.dashboard.directive:dashboard.html
 * @description
 * # udb dashboard directive
 */
angular
  .module('udb.dashboard')
  .directive('udbDashboard', udbDashboardDirective);

/* @ngInject */
function udbDashboardDirective() {
  return {
    templateUrl: 'templates/dashboard.html',
    controller: 'DashboardController',
    controllerAs: 'dash',
    restrict: 'EA'
  };
}
})();

// Source: src/duplication/event-duplication-calendar.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:DuplicationCalendarController
 * @description
 * # Duplication Calendar Controller
 */
angular
  .module('udb.duplication')
  .controller('DuplicationCalendarController', DuplicationCalendarController);

/* @ngInject */
function DuplicationCalendarController(EventFormData, OpeningHoursCollection, $rootScope, $controller, $scope) {
  var calendar = this;
  var duplicateFormData = EventFormData.clone();

  function duplicateTimingChanged(formData) {
    $rootScope.$emit('duplicateTimingChanged', formData);
  }

  $controller('BaseCalendarController', {calendar: calendar, $scope: $scope});

  calendar.init(duplicateFormData, _.cloneDeep(OpeningHoursCollection));

  calendar.timeSpans.forEach(function(timeSpan) {timeSpan.status = {type: 'Available'};});
  calendar.timeSpans.forEach(function(timeSpan) {timeSpan.bookingAvailability = {type: 'Available'};});

  calendar.formData
    .timingChanged$
    .subscribe(duplicateTimingChanged);
}
DuplicationCalendarController.$inject = ["EventFormData", "OpeningHoursCollection", "$rootScope", "$controller", "$scope"];
})();

// Source: src/duplication/event-duplication-calendar.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.duplication.directive:udbEventDuplicationCalendar
 * @description
 *  Shows the calendar when you try to create a duplicate event.
 */
angular
  .module('udb.duplication')
  .directive('udbEventDuplicationCalendar', udbEventDuplicationCalendar);

/* @ngInject */
function udbEventDuplicationCalendar() {
  return {
    restrict: 'AE',
    controller: 'DuplicationCalendarController',
    controllerAs: 'calendar',
    templateUrl: 'templates/form-event-calendar.component.html'
  };
}
})();

// Source: src/duplication/event-duplication-footer.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.duplication.component:udbEventDuplicationFooter
 * @description
 * # Event Duplication Footer
 * Footer component for migrating events
 */
angular
  .module('udb.duplication')
  .component('udbEventDuplicationFooter', {
    templateUrl: 'templates/event-duplication-footer.component.html',
    controller: EventDuplicationFooterController,
    controllerAs: 'duplication'
  });

function pickFirstEventArgument(event) {
  return event[1];
}

/* @ngInject */
function EventDuplicationFooterController($rootScope, eventDuplicator, $state, rx) {
  var controller = this;
  var duplicateTimingChanged$ = $rootScope
    .$eventToObservable('duplicateTimingChanged')
    .map(pickFirstEventArgument);
  var createDuplicate$ = rx.createObservableFunction(controller, 'createDuplicate');

  var duplicateFormData$ = duplicateTimingChanged$.startWith(false);

  duplicateFormData$
    .subscribe(function (duplicateFormData) {
      controller.readyForDuplication = !!duplicateFormData;
    });

  createDuplicate$
    .withLatestFrom(duplicateFormData$, function (createDuplicate, duplicateFormData) {
      if (duplicateFormData) {
        showAsyncDuplication();
        eventDuplicator
          .duplicate(duplicateFormData)
          .then(showDuplicate, showAsyncError);
      }
    })
    .subscribe();

  /**
   * @param {string} duplicateId
   */
  function showDuplicate(duplicateId) {
    $state.go('split.eventEdit', {id: duplicateId});
  }

  function showAsyncError() {
    controller.asyncError = true;
    controller.duplicating = false;
  }

  function showAsyncDuplication() {
    controller.asyncError = false;
    controller.duplicating = true;
  }
}
EventDuplicationFooterController.$inject = ["$rootScope", "eventDuplicator", "$state", "rx"];
})();

// Source: src/duplication/event-duplication-step.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.duplication.component:udbEventDuplicationStep
 * @description
 * # Event Duplication Step
 * Step component for migrating events
 */
angular
  .module('udb.duplication')
  .component('udbEventDuplicationStep', {
    templateUrl: 'templates/event-duplication-step.component.html',
    controller: EventDuplicationStepController,
    controllerAs: 'duplication'
  });

/* @ngInject */
function EventDuplicationStepController(EventFormData) {
  var controller = this;

  controller.eventId = EventFormData.id;

  controller.readyToDuplicate = function () {
    return false;
  };
}
EventDuplicationStepController.$inject = ["EventFormData"];
})();

// Source: src/duplication/event-duplicator.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.duplication.eventDuplicator
 * @description
 * Event Duplicator Service
 */
angular
  .module('udb.duplication')
  .service('eventDuplicator', EventDuplicatorService);

/* @ngInject */
function EventDuplicatorService(udbApi, offerLocator) {
  var calendarDataProperties = [
    'calendar'
  ];

  /**
   * @param {object} duplicateInfo
   * @return {string}
   */
  function rememberDuplicateLocationAndReturnId(duplicateInfo) {
    offerLocator.add(duplicateInfo.eventId, duplicateInfo.url);

    return duplicateInfo.eventId;
  }

  /**
   * Duplicate an event using form date with the new timing info
   * @param {EventFormData} formData
   * @return {Promise.<string>}
   *  promises the duplicate id
   */
  this.duplicate = function(formData) {
    var calendarData = _.pick(formData, calendarDataProperties);

    if (formData.openingHours) {
      calendarData.calendar.openingHours = formData.openingHours;
    }

    return udbApi
      .duplicateEvent(formData.apiUrl, calendarData.calendar)
      .then(rememberDuplicateLocationAndReturnId);
  };
}
EventDuplicatorService.$inject = ["udbApi", "offerLocator"];
})();

// Source: src/entry/components/job-logo-states.constant.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc service
 * @name udb.entry.JobLogoStates
 * @description
 * # JobLogoStates
 * All the possible job logo states defined as a constant
 */
angular
  .module('udb.entry')
  .constant('JobLogoStates',
  /**
   * Enum for job logo states
   * @readonly
   * @enum {string}
   */
  {
    WARNING: 'warning',
    COMPLETE: 'complete',
    BUSY: 'busy',
    IDLE: 'idle'
  });
})();

// Source: src/entry/components/job-logo.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.entry.controller:JobLogoController
 * @description
 * # Job logo controller
 * Controller of the udb.entry
 */
angular
  .module('udb.entry')
  .controller('JobLogoController', JobLogoController);

/* @ngInject */
function JobLogoController(JobLogoStates, jobLogger, $rootScope) {
  var jl = this;

  /**
   * Calculate the current state the logo should be in
   * @return {boolean} current state
   */
  jl.updateCurrentState = function () {
    var stateChecks = [
      {
        state: JobLogoStates.WARNING,
        check: !_.isEmpty(jobLogger.getFailedJobs())
      },
      {
        state: JobLogoStates.COMPLETE,
        check: !_.isEmpty(jobLogger.getFinishedExportJobs())
      },
      {
        state: JobLogoStates.BUSY,
        check: jobLogger.hasActiveJobs()
      },
      {
        state: JobLogoStates.IDLE,
        // if you get this far there are no visible jobs
        check: true
      }
    ];

    var currentState = _.find(stateChecks, function (stateCheck) {
      return stateCheck.check;
    }).state;

    jl.state = currentState;
  };

  jl.getState = function () {
    return jl.state;
  };

  // set the initial state
  jl.updateCurrentState();

  $rootScope.$on('jobListsUpdated', jl.updateCurrentState);
}
JobLogoController.$inject = ["JobLogoStates", "jobLogger", "$rootScope"];
})();

// Source: src/entry/components/job-logo.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.entry.directive:jobLogo
 * @description
 * # udbJobLogo
 */
angular
  .module('udb.entry')
  .directive('udbJobLogo', udbJobLogo);

/* @ngInject */
function udbJobLogo() {
  var directive = {
    templateUrl: 'templates/job-logo.directive.html',
    restrict: 'EA',
    link: link,
    controllerAs: 'jl',
    controller: 'JobLogoController'
  };
  return directive;

  function link(scope, element, attrs) {
  }
}
})();

// Source: src/entry/crud/event-crud.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.eventCrud
 * @description
 * Service for creating / updating events.
 */
angular
  .module('udb.entry')
  .service('eventCrud', EventCrud);

/* @ngInject */
function EventCrud(
  udbApi,
  udbUitpasApi,
  $rootScope,
  $q,
  offerLocator
) {

  var service = this;

  /**
   * @param {EventFormData} formData
   */
  function pickMajorInfoFromFormData(formData) {
    var majorInfo = _.pick(formData, function(property, name) {
      var isStream = name.charAt(name.length - 1) === '$';
      return (_.isDate(property) || !_.isEmpty(property)) && !isStream;
    });

    if (majorInfo.location && majorInfo.location.id) {
      majorInfo.location = majorInfo.location.id;
    }

    majorInfo.calendar.status = majorInfo.status;

    if (majorInfo.openingHours) {
      majorInfo.calendar.openingHours = majorInfo.openingHours;
    }

    return majorInfo;
  }

  /**
   * Creates a new offer and add the job to the logger.
   *
   * @param {EventFormData}  eventFormData
   *  The form data required to create an offer.
   *
   * @return {Promise.<EventFormData>}
   */
  service.createOffer = function (eventFormData) {

    var type = eventFormData.isEvent ? 'event' : 'place';

    var updateEventFormData = function(url) {
      eventFormData.apiUrl = url;
      eventFormData.id = url.toString().split('/').pop();

      offerLocator.add(eventFormData.id, eventFormData.apiUrl);
      $rootScope.$emit('eventFormSaved', eventFormData);

      udbApi
        .getOffer(url)
        .then(function(offer) {
          $rootScope.$emit('offerCreated', offer);
        });

      return eventFormData;
    };

    var majorInfo = pickMajorInfoFromFormData(eventFormData);

    return udbApi
      .createOffer(type, majorInfo)
      .then(updateEventFormData);
  };

  /**
   * Find all the events that take place here.
   *
   * @param {URL} url
   *
   * @return {Promise.<OfferIdentifier[]>}
   */
  service.findEventsAtPlace = function(url) {
    return udbApi.findEventsAtPlace(url);
  };

  /**
   * Delete an offer.
   *
   * @param {UdbPlace|UdbEvent} offer
   *
   * @return {Promise}
   */
  service.deleteOffer = function (offer) {
    function flagAsDeleted() {
      offer.showDeleted = true;
    }

    return udbApi
      .deleteOffer(offer)
      .then(flagAsDeleted);
  };

  /**
   * Update the major info of an event / place.
   * @param {EventFormData} eventFormData
   */
  service.updateMajorInfo = function(eventFormData) {
    var majorInfo = pickMajorInfoFromFormData(eventFormData);

    udbApi
      .updateMajorInfo(eventFormData.apiUrl, majorInfo)
      .then(responseHandlerFactory(eventFormData));
  };

  /**
   * Creates a new organizer.
   */
  service.createOrganizer = function(organizer) {
    return udbApi.createOrganizer(organizer);
  };

  /**
   * Update the main language description and add it to the job logger.
   *
   * @param {EventFormData} item
   * @returns {Promise}
   */
  service.updateDescription = function(item) {
    return udbApi
      .translateProperty(item.apiUrl, 'description', item.mainLanguage, item.description[item.mainLanguage])
      .then(responseHandlerFactory(item));
  };

  /**
   * Update the adress of a place and add it to the job logger.
   *
   * @param {EventFormData} item
   * @returns {Promise}
   */
  service.translateAddress = function(item) {
    return updateOfferProperty(item, 'typicalAgeRange', 'updateTypicalAgeRange');
  };

  /**
   * Update the typical age range and add it to the job logger.
   *
   * @param {EventFormData} item
   * @returns {Promise}
   */
  service.updateTypicalAgeRange = function(item) {
    var type = item.isEvent ? 'events' : 'places';
    var path = item.apiUrl.origin + '/' + type + '/' + item.id;
    return udbApi
      .updateTypicalAgeRange(path, item.typicalAgeRange)
      .then(responseHandlerFactory(item));
  };

  /**
   * Update the typical age range and add it to the job logger.
   *
   * @param {EventFormData} item
   * @returns {Promise}
   */
  service.deleteTypicalAgeRange = function(item) {
    return udbApi
      .deleteTypicalAgeRange(item.apiUrl)
      .then(responseHandlerFactory(item));
  };

  /**
   * Update the connected organizer and it to the job logger.
   *
   * @param {EventFormData} item
   * @returns {Promise}
   */
  service.updateOrganizer = function(item) {
    return udbApi
      .updateProperty(item.apiUrl, 'organizer', item.organizer.id)
      .then(responseHandlerFactory(item));
  };

  /**
   * Delete the organizer for the event / place.
   *
   * @param {EventFormData} item
   * @returns {Promise}
   */
  service.deleteOfferOrganizer = function(item) {
    return udbApi
      .deleteOfferOrganizer(item.apiUrl, item.organizer.id)
      .then(responseHandlerFactory(item));
  };

  /**
   * Update UiTPAS info for the event.
   *
   * @param {EventFormData} item
   * @returns {Promise}
   */
  service.updateEventUitpasData = function(item) {
    return udbUitpasApi
        .updateEventUitpasData(item.usedDistributionKeys, item.id)
        .then(responseHandlerFactory(item));
  };

  /**
   * Get the Uitpas data from an event.
   * @param {string} cdbid
   * @returns {Promise}
   */
  service.getEventUitpasData = function(cdbid) {
    return udbUitpasApi.getEventUitpasData(cdbid);
  };

  /**
   * Update the price info and add it to the job logger.
   *
   * @param {EventFormData} item
   * @returns {Promise}
   */
  service.updatePriceInfo = function(item) {
    return udbApi
      .updatePriceInfo(item.apiUrl, item.priceInfo)
      .then(responseHandlerFactory(item));
  };

  /**
   * Update the contact point and add it to the job logger.
   *
   * @param {EventFormData} item
   * @returns {Promise}
   */
  service.updateContactPoint = function(item) {
    return updateOfferProperty(item, 'contactPoint', 'updateContactInfo');
  };

  /**
   * Update the booking info and add it to the job logger.
   *
   * @param {EventFormData} item
   *
   * @returns {Promise}
   */
  service.updateBookingInfo = function(item) {
    var allowedProperties = [
      'url',
      'urlLabel',
      'email',
      'phone',
      'availabilityStarts',
      'availabilityEnds'
    ];

    var bookingInfo =  _.pick(item.bookingInfo, function(property, propertyName) {
      return _.includes(allowedProperties, propertyName) && (_.isDate(property) || !_.isEmpty(property));
    });

    if (!_.has(bookingInfo, 'url')) {
      bookingInfo = _.omit(bookingInfo, 'urlLabel');
    }

    if (_.intersection(_.keysIn(bookingInfo), ['url', 'phone', 'email']).length === 0) {
      bookingInfo = {};
    }

    return udbApi
      .updateProperty(item.apiUrl, 'bookingInfo', bookingInfo)
      .then(responseHandlerFactory(item));
  };

  /**
   * @param {EventFormData} offer
   * @param {string} propertyName
   * @param {string} jobName
   *
   * @return {Promise}
   */
  function updateOfferProperty(offer, propertyName, jobName) {
    return udbApi
      .updateProperty(offer.apiUrl, propertyName, offer[propertyName])
      .then(responseHandlerFactory(offer));
  }

  /**
   * @param {udbEvent|udbPlace} item
   * @param {Object[]} facilities
   *
   * @return {Promise}
   */
  service.updateFacilities = function(item, facilities) {
    return udbApi
      .updateOfferFacilities(item.apiUrl, _.map(facilities, 'id'))
      .then(responseHandlerFactory(item));
  };

  /**
   * Add a new image to the item.
   *
   * @param {EventFormData} item
   * @param {MediaObject} image
   * @returns {Promise}
   */
  service.addImage = function(item, image) {
    var imageId = image.id || image['@id'].split('/').pop();

    return udbApi
      .addImage(item.apiUrl, imageId)
      .then(responseHandlerFactory(item));
  };

  /**
   * Update an image of the item.
   *
   * @param {EventFormData} item
   * @param {MediaObject} image
   * @param {string} description
   * @param {string} copyrightHolder
   * @returns {Promise}
   */
  service.updateImage = function(item, image, description, copyrightHolder) {
    var imageId = image['@id'].split('/').pop();

    return udbApi
      .updateImage(item.apiUrl, imageId, description, copyrightHolder)
      .then(responseHandlerFactory(item));
  };

  /**
   * Remove an image from an item.
   *
   * @param {EventFormData} item
   * @param {image} image
   * @returns {Promise}
   */
  service.removeImage = function(item, image) {
    var imageId = image['@id'].split('/').pop();

    return udbApi
      .removeImage(item.apiUrl, imageId)
      .then(responseHandlerFactory(item));
  };

  /**
   * Select the main image for an item.
   *
   * @param {EventFormData} item
   * @param {image} image
   * @returns {Promise}
   */
  service.selectMainImage = function (item, image) {
    var imageId = image['@id'].split('/').pop();

    return udbApi
      .selectMainImage(item.apiUrl, imageId)
      .then(responseHandlerFactory(item));
  };

  /**
   * Select the main image for an item.
   *
   * @param {EventFormData} item
   * @param {string} audienceType
   * @returns {Promise}
   */
  service.setAudienceType = function (item, audienceType) {
    return udbApi
      .setAudienceType(item.apiUrl, audienceType)
      .then(responseHandlerFactory(item));
  };

  /**
   * @param {EventFormData} offer
   * @param {Date} [publicationDate]
   *
   * @return {Promise}
   */
  service.publishOffer = function(offer, publicationDate) {
    return udbApi
      .publishOffer(offer.apiUrl, publicationDate)
      .then(responseHandlerFactory(offer));
  };

  /**
   * @param {Object} event Angular event object
   * @param {EventFormData} eventFormData
   */
  function updateMajorInfo(event, eventFormData) {
    service.updateMajorInfo(eventFormData);
  }

  function responseHandlerFactory(offer) {
    function responseHandler(response) {
      udbApi.removeItemFromCache(offer.apiUrl.toString());
    }

    return responseHandler;
  }

  $rootScope.$on('eventTypeChanged', updateMajorInfo);
  $rootScope.$on('eventThemeChanged', updateMajorInfo);
  $rootScope.$on('eventTimingChanged', updateMajorInfo);
  $rootScope.$on('eventTitleChanged', updateMajorInfo);
}
EventCrud.$inject = ["udbApi", "udbUitpasApi", "$rootScope", "$q", "offerLocator"];
})();

// Source: src/entry/labelling/offer-label-batch-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.OfferLabelBatchJob
 * @description
 * # BaseJob
 * This Is the factory that creates an event export job
 */
angular
  .module('udb.entry')
  .factory('OfferLabelBatchJob', OfferLabelBatchJobFactory);

/* @ngInject */
function OfferLabelBatchJobFactory(BaseJob, JobStates) {

  /**
   * @class OfferLabelBatchJob
   * @constructor
   * @param {string} commandId
   * @param {string[]} offers
   * @param {string} label
   */
  var OfferLabelBatchJob = function (commandId, offers, label) {
    BaseJob.call(this, commandId);
    this.type = 'label_batch';
    this.events = offers;
    this.addEventsAsTask(offers);
    this.label = label;

    this.messages = {};
    this.messages[JobStates.CREATED] = getOfferLabelBatchJobDescription(this, JobStates.CREATED, JobStates);
    this.messages[JobStates.STARTED] = getOfferLabelBatchJobDescription(this, JobStates.STARTED, JobStates);
    this.messages[JobStates.FINISHED] = getOfferLabelBatchJobDescription(this, JobStates.FINISHED, JobStates);
    this.messages[JobStates.FAILED] = getOfferLabelBatchJobDescription(this, JobStates.FAILED, JobStates);
  };

  OfferLabelBatchJob.prototype = Object.create(BaseJob.prototype);
  OfferLabelBatchJob.prototype.constructor = OfferLabelBatchJob;

  OfferLabelBatchJob.prototype.addEventsAsTask = function (offers) {
    var job = this;
    _.forEach(offers, function (offer) {
      job.addTask({id: offer});
    });
  };

  OfferLabelBatchJob.prototype.getDescription = function () {
    return getOfferLabelBatchJobDescription(this, this.state, JobStates);
  };

  return (OfferLabelBatchJob);
}
OfferLabelBatchJobFactory.$inject = ["BaseJob", "JobStates"];

function getOfferLabelBatchJobDescription (job, state, JobStates) {
  var description;

  if (state === JobStates.FAILED) {
    description = 'Labelen van items mislukt';
  } else {
    description = 'Label ' + job.events.length + ' items met "' + job.label + '"';
  }

  return description;
}
})();

// Source: src/entry/labelling/offer-label-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.entry.controller:OfferLabelModalCtrl
 * @description
 * # OfferLabelModalCtrl
 * Controller of the udb.entry
 */
angular
  .module('udb.entry')
  .controller('OfferLabelModalCtrl', OfferLabelModalCtrl);

/* @ngInject */
function OfferLabelModalCtrl($uibModalInstance) {
  var lmc = this;
  // ui-select can't get to this scope variable unless you reference it from the $parent scope.
  // seems to be 1.3 specific issue, see: https://github.com/angular-ui/ui-select/issues/243
  lmc.labels = [];
  lmc.close = close;
  lmc.ok = ok;
  lmc.labelNames = '';
  /**
   * This label-selection list used to contain labels that were last used by the user.
   * The endpoint to get these labels has been removed so we can no longer fetch them.
   * @see {@link https://jira.uitdatabank.be/browse/III-1708} for further information.
   */
  lmc.labelSelection = [];
  lmc.alert = false;
  lmc.minimumInputLength = 2;
  lmc.maxInputLength = 255;

  function ok() {
    // reset error msg
    lmc.alert = false;

    // Get the labels selected by checkbox
    var checkedLabels = lmc.labelSelection.filter(function (label) {
      return label.selected;
    }).map(function (label) {
      return label.name;
    });

    //add the labels
    var inputLabels = parseLabelInput(lmc.labelNames);

    if (lmc.alert) {
      return;
    }

    // join arrays and remove doubles
    var labels = _.union(checkedLabels, inputLabels);

    $uibModalInstance.close(labels);
  }

  function close() {
    $uibModalInstance.dismiss('cancel');
  }

  function areLengthCriteriaMet(length) {
    return (length >= lmc.minimumInputLength && length <= lmc.maxInputLength);
  }

  function parseLabelInput(stringWithLabels) {
    //split sting into array of labels
    var labels = stringWithLabels.split(';');

    // trim whitespaces
    labels = _.each(labels, function (label, index) {
      labels[index] = label.trim();
    });

    // remove empty strings
    labels = _.without(labels, '');

    var i;
    for (i = 0; i < labels.length; i++) {
      if (!areLengthCriteriaMet(labels[i].length)) {
        lmc.alert = 'Een label mag minimum 2 en maximum 255 karakters bevatten.';
        break;
      }
    }

    return labels;
  }
}
OfferLabelModalCtrl.$inject = ["$uibModalInstance"];
})();

// Source: src/entry/labelling/offer-labeller.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.evenLabeller
 * @description
 * # offerLabeller
 * Service in the udb.entry.
 */
angular
  .module('udb.entry')
  .service('offerLabeller', OfferLabeller);

/* @ngInject */
function OfferLabeller(jobLogger, udbApi, OfferLabelBatchJob, QueryLabelJob, $q) {
  var offerLabeller = this;

  /**
   * A helper function to create and log jobs
   *
   * This partial function takes a constructor for a specific job type and passes on the arguments.
   *
   * @param {BaseJob} jobType
   *  A job type that's based on BaseJob.
   */
  function jobCreatorFactory(jobType) {
    var args = Array.prototype.slice.call(arguments);
    var info = args.shift(); // contains a function with argument info etc.

    function jobCreator(response) {
      args.unshift(response.data.commandId);
      args.unshift(info); // needs to be the first element
      var job = new (Function.prototype.bind.apply(jobType, args))();

      jobLogger.addJob(job);

      return $q.resolve(job);
    }

    return jobCreator;
  }

  /**
   * Label an event with a label
   * @param {UdbEvent|UdbPlace} offer
   * @param {string} labelName
   */
  this.label = function (offer, labelName) {
    return udbApi
      .labelOffer(offer.apiUrl, labelName)
      .then(function () {
        offer.label(labelName);
      });
  };

  /**
   * Unlabel a label from an event
   * @param {UdbEvent|UdbPlace} offer
   * @param {string} labelName
   * @return {Promise}
   */
  this.unlabel = function (offer, labelName) {
    return udbApi
      .unlabelOffer(offer.apiUrl, labelName)
      .then(function () {
        offer.unlabel(labelName);
      });
  };

  /**
   * @param {OfferIdentifier[]} offers
   * @param {string} labelName
   */
  this.labelOffersById = function (offers, labelName) {
    return udbApi
      .labelOffers(offers, labelName)
      .then(jobCreatorFactory(OfferLabelBatchJob, offers, labelName));
  };

  /**
   *
   * @param {string} query
   * @param {string} labelName
   * @param {Number} eventCount
   */
  this.labelQuery = function (query, labelName, eventCount) {
    eventCount = eventCount || 0;

    return udbApi
      .labelQuery(query, labelName)
      .then(jobCreatorFactory(QueryLabelJob, eventCount, labelName));
  };

  /**
   * @param {string} labelName
   * @param {Number} [maxItems]
   * @return {Promise.<Label[]>}
   */
  offerLabeller.getSuggestions = function (labelName, maxItems) {
    var max = typeof maxItems !== 'undefined' ? maxItems : 5;

    /** @param {PagedCollection} pagedSearchResults */
    function returnSimilarLabels(pagedSearchResults) {
      return pagedSearchResults.member;
    }

    return udbApi
      .findLabels(labelName, max)
      .then(returnSimilarLabels);
  };
}
OfferLabeller.$inject = ["jobLogger", "udbApi", "OfferLabelBatchJob", "QueryLabelJob", "$q"];
})();

// Source: src/entry/labelling/offer-languages-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.entry.controller:OfferLanguagesModalCtrl
 * @description
 * # OfferLanguagesModalCtrl
 * Controller of the udb.entry
 */
angular
  .module('udb.entry')
  .controller('OfferLanguagesModalCtrl', OfferLanguagesModalCtrl);

/* @ngInject */
function OfferLanguagesModalCtrl($uibModalInstance) {
  var lmc = this;
  lmc.close = close;
  lmc.ok = ok;

  lmc.options = [
    {
      label: 'één taalicoon',
      value: 'één taalicoon',
      text: 'deelnemers begrijpen en spreken nog niet veel Nederlands.'
    },
    {
      label: 'twee taaliconen',
      value: 'twee taaliconen',
      text: 'deelnemers begrijpen al een beetje Nederlands maar spreken het nog niet zo goed.'
    },
    {
      label: 'drie taaliconen',
      value: 'drie taaliconen',
      text: 'deelnemers spreken vrij veel Nederlands en kunnen ook iets vertellen.'
    },
    {
      label: 'vier taaliconen',
      value: 'vier taaliconen',
      text: 'deelnemers begrijpen Nederlands en spreken het ook goed.'
    },
  ];

  function close() {
    $uibModalInstance.dismiss('cancel');
  }

  function ok() {
    var labels = lmc.options.filter(function (option) {
      return option.selected;
    }).map(function (option) {
      return option.value;
    });

    if (!labels.length) {
      return;
    }

    $uibModalInstance.close(labels);
  }
}
OfferLanguagesModalCtrl.$inject = ["$uibModalInstance"];
})();

// Source: src/entry/labelling/query-label-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.QueryLabelJob
 * @description
 * # BaseJob
 * This Is the factory that creates an event export job
 */
angular
  .module('udb.entry')
  .factory('QueryLabelJob', QueryLabelJobFactory);

/* @ngInject */
function QueryLabelJobFactory(BaseJob, JobStates) {

  /**
   * @class QueryLabelJob
   * @constructor
   * @param {string} commandId
   * @param {number} eventCount
   * @param {string} label
   */
  var QueryLabelJob = function (commandId, eventCount, label) {
    BaseJob.call(this, commandId);
    this.type = 'label_query';
    this.eventCount = eventCount;
    this.label = label;

    this.messages = {};
    this.messages[JobStates.CREATED] = getQueryLabelJobDescription(this);
    this.messages[JobStates.STARTED] = getQueryLabelJobDescription(this);
    this.messages[JobStates.FINISHED] = getQueryLabelJobDescription(this);
    this.messages[JobStates.FAILED] = getQueryLabelJobDescription(this);
  };

  QueryLabelJob.prototype = Object.create(BaseJob.prototype);
  QueryLabelJob.prototype.constructor = QueryLabelJob;

  QueryLabelJob.prototype.getTaskCount = function () {
    return this.eventCount;
  };

  QueryLabelJob.prototype.getDescription = function() {
    return getQueryLabelJobDescription(this);
  };

  return (QueryLabelJob);
}
QueryLabelJobFactory.$inject = ["BaseJob", "JobStates"];

function getQueryLabelJobDescription (job) {
  return 'Label ' + job.eventCount + ' items met label "' + job.label + '".';
}
})();

// Source: src/entry/logging/base-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.BaseJob
 * @description
 * # BaseJob
 * This Is the factory that creates base jobs
 */
angular
  .module('udb.entry')
  .factory('BaseJob', BaseJobFactory);

/* @ngInject */
function BaseJobFactory(JobStates) {

  /**
   * @class BaseJob
   * @constructor
   * @param {string}        commandId       - The commandId assigned to this job by the server
   *
   * @property {object[]}   tasks           - A list of tasks
   * @property {string}     id              - The command ID that uniquely identifies this job
   * @property {number}     progress        - Percentage based progress (0-100)
   * @property {Date}       created         - The date this job was returned by the server and created
   * @property {string}     state           - One of the job states defined in JobStates
   * @property {number} completedTaskCount  - Keeps count of the completed tasks to render the view
   */
  var BaseJob = function (commandId) {
    this.id = commandId;
    this.state = JobStates.CREATED;
    this.progress = 0;
    this.created = new Date();
    this.finished = null;
    this.tasks = [];
    this.completedTaskCount = 0;
  };

  /**
   * Always define the constructor, also when you use this class' prototype to prevent any weird stuff.
   * @type {Function}
   */
  BaseJob.prototype.constructor = BaseJob;

  // The following functions are used to update the job state based on feedback of the server.

  BaseJob.prototype.fail = function () {
    this.finished = new Date();
    this.state = JobStates.FAILED;
    this.progress = 100;
  };

  BaseJob.prototype.start = function () {
    this.state = JobStates.STARTED;
  };

  BaseJob.prototype.finish = function () {
    if (this.state !== JobStates.FAILED) {
      this.state = JobStates.FINISHED;
      this.finished = new Date();
    }
    this.progress = 100;
  };

  /**
   * Update the event with additional job data. This method does nothing by default but can be used by more specific
   * job types.
   *
   * @param {object}  jobData
   */
  BaseJob.prototype.info = function (jobData) {
  };

  /**
   * Renders the job description based on its details.
   * Overwrite this function if you want to show a more customized message.
   *
   * @return {string}
   */
  BaseJob.prototype.getDescription = function () {
    return 'Job with id: ' + this.id;
  };

  /**
   * Returns a date string to use for the job log based on job state.
   *
   * @return {string}
   */
  BaseJob.prototype.getLogDateByState = function () {
    if (_.contains([JobStates.FAILED, JobStates.FINISHED], this.state) && this.finished !== null) {
      return this.finished;
    }
    return this.created;
  };

  /**
   * This name is used by the job directive to find the right template.
   * The name will prepended with 'templates/' and a appended with '.template.html'.
   * A Grunt task is set up to automatically include the templates following this format when exporting the project.
   *
   * @return {string}
   */
  BaseJob.prototype.getTemplateName = function () {
    var templateName;

    if (this.state === JobStates.FAILED) {
      templateName = 'failed-job';
    } else {
      templateName = 'base-job';
    }

    return templateName;
  };

  /**
   * Adds a simple task with a unique id property to the job.
   *
   * @param {object} task
   */
  BaseJob.prototype.addTask = function (task) {

    var duplicateTask = _.find(this.tasks, {id: task.id});

    if (!duplicateTask) {
      this.tasks.push(task);
    }
  };

  BaseJob.prototype.getTaskCount = function () {
    return this.tasks.length;
  };

  /**
   * Find a task based on the task data received from the server.
   * Currently all tasks are identifiable by an event_id property.
   *
   * @param {object} taskData
   * @return {object}
   */
  BaseJob.prototype.findTask = function (taskData) {
    var taskId = taskData['event_id'], // jshint ignore:line
        task = _.find(this.tasks, {id: taskId});

    if (!task) {
      task = {id: taskId};
      this.addTask(task);
    }

    return task;
  };

  // These functions are used to update this job's task state based on feedback from the server.

  BaseJob.prototype.failTask = function (taskData) {
    var task = this.findTask(taskData);

    if (task) {
      task.state = 'failed';
      this.updateProgress();
    }
  };

  BaseJob.prototype.finishTask = function (taskData) {
    var task = this.findTask(taskData);

    if (task) {
      task.state = 'finished';
      this.updateProgress();
    }
  };

  /**
   * Update job progress and completed task count.
   * This information is used to render the view of batch jobs.
   */
  BaseJob.prototype.updateProgress = function () {
    var job = this;

    ++job.completedTaskCount;
    job.progress = (job.completedTaskCount / job.getTaskCount()) * 100;
  };

  return (BaseJob);
}
BaseJobFactory.$inject = ["JobStates"];
})();

// Source: src/entry/logging/job-log.component.js
(function () {
'use strict';

/**
 * @ngdoc component
 * @name udb.entry.component:udbJobLog
 * @description
 * # udbJobLog
 */
angular
  .module('udb.entry')
  .component('udbJobLog', {
    controller: JobLogController,
    controllerAs: 'logger',
    templateUrl: 'templates/job-log.component.html'
  });

/* @ngInject */
function JobLogController(jobLogger, $scope) {
  var controller = this;

  controller.getQueuedJobs = jobLogger.getQueuedJobs;
  controller.getFinishedExportJobs = jobLogger.getFinishedExportJobs;
  controller.getFailedJobs = jobLogger.getFailedJobs;
  controller.hideJobLog = jobLogger.toggleJobLog;
  controller.isVisible = jobLogger.isVisible;

  $scope.hideJob = jobLogger.hideJob;
}
JobLogController.$inject = ["jobLogger", "$scope"];
})();

// Source: src/entry/logging/job-logger.service.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc service
 * @name udb.entry.jobLogger
 * @description
 * # jobLogger
 * Service in the udb.entry.
 */
angular
  .module('udb.entry')
  .service('jobLogger', JobLogger);

/* @ngInject */
function JobLogger(udbSocket, JobStates, EventExportJob, $rootScope) {
  var logger = this,
      jobs = [],
      queuedJobs = [],
      failedJobs = [],
      finishedExportJobs = [],
      startedExportJobs = [],
      hiddenJobs = [];

  /**
   * Finds a job  by id
   * @param {string}  jobId
   * @returns {BaseJob|undefined}
   */
  function findJob(jobId) {
    return _.find(jobs, {id: jobId});
  }

  function jobStarted(data) {
    var job = findJob(data['job_id']);

    if (job) {
      job.start(data);
      console.log('job with id: ' + job.id + ' started');
      updateJobLists();
    }
  }

  function jobInfo(data) {
    var job = findJob(data['job_id']);

    if (job) {
      job.info(data);
      console.log('job with id: ' + job.id + ' received some info.');
    }
  }

  function jobFinished(data) {
    var job = findJob(data['job_id']);

    if (job) {
      job.finish(data);
      console.log('job with id: ' + job.id + ' finished');
      updateJobLists();
    }
  }

  function jobFailed(data) {
    var job = findJob(data['job_id']);

    if (job) {
      job.fail(data);
      console.log('job with id: ' + job.id + ' failed');
      updateJobLists();
    }
  }

  function taskFinished(data) {
    var job = findJob(data['job_id']);

    if (job) {
      job.finishTask(data);
      console.log('Task of job with id: ' + job.id + ' finished.');
    }
  }

  function taskFailed(data) {
    var job = findJob(data['job_id']);

    if (job) {
      job.failTask(data);
      console.log('Task of job with id: ' + job.id + ' failed. Error message: ' + data.error);
    }
  }

  function updateJobLists() {
    var visibleJobs = _.difference(jobs, hiddenJobs),
        newJobs = _.filter(visibleJobs, {state: JobStates.CREATED}),
        activeJobs = _.filter(visibleJobs, {state: JobStates.STARTED});

    failedJobs = _.filter(visibleJobs, {state: JobStates.FAILED});
    startedExportJobs = _.filter(visibleJobs, function (job) {
      return job instanceof EventExportJob && job.state === JobStates.STARTED;
    });
    finishedExportJobs = _.filter(visibleJobs, function (job) {
      return job instanceof EventExportJob && job.state === JobStates.FINISHED;
    });
    queuedJobs = activeJobs.concat(newJobs);
    $rootScope.$emit('jobListsUpdated');
  }

  /**
   * Mark a job as hidden
   * @param {BaseJob} job
   */
  function hideJob(job) {
    hiddenJobs = _.union(hiddenJobs, [job]);
    updateJobLists();
  }

  udbSocket.on('event_was_labelled', taskFinished);
  udbSocket.on('event_was_not_labelled', taskFailed);
  udbSocket.on('task_completed', taskFinished);
  udbSocket.on('job_started', jobStarted);
  udbSocket.on('job_info', jobInfo);
  udbSocket.on('job_finished', jobFinished);
  udbSocket.on('job_failed', jobFailed);

  this.hasActiveJobs = function () {
    return !!queuedJobs.length;
  };

  this.addJob = function (job) {
    window.parent.postMessage({
      source: 'UDB',
      type: 'JOB_ADDED',
      job: {
        type: job.type,
        id: job.id,
        messages: job.messages
      }
    }, '*');

    jobs.unshift(job);
    console.log('job with id: ' + job.id + ' created');
    updateJobLists();
  };

  this.getQueuedJobs = function () {
    return queuedJobs;
  };

  this.getFailedJobs = function () {
    return failedJobs;
  };

  this.getFinishedExportJobs = function () {
    return finishedExportJobs;
  };

  this.getStartedExportJobs = function () {
    return startedExportJobs;
  };

  this.hideJob = hideJob;

  this.toggleJobLog = function() {
    logger.visible = !logger.visible;
  };

  /**
   * @return {boolean}
   */
  this.isVisible = function () {
    return logger.visible;
  };
}
JobLogger.$inject = ["udbSocket", "JobStates", "EventExportJob", "$rootScope"];
})();

// Source: src/entry/logging/job-states.constant.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc service
 * @name udb.entry.JobStates
 * @description
 * # JobStates
 * All the possible job states defined as a constant
 */
angular
  .module('udb.entry')
  .constant('JobStates',
  /**
   * Enum for job states
   * @readonly
   * @enum {string}
   */
  {
    CREATED: 'created',
    STARTED: 'started',
    FAILED: 'failed',
    FINISHED: 'finished'
  });
})();

// Source: src/entry/logging/job.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.entry.directive:udbJob
 * @description
 * # udb search directive
 */
angular
  .module('udb.entry')
  .directive('udbJob', jobDirective);

/* @ngInject */
function jobDirective() {
  var job = {
    template: '<div ng-include="jobTemplateUrl"></div>',
    restrict: 'E',
    link: function(scope, element, attrs) {
      scope.jobTemplateUrl = 'templates/' + scope.job.getTemplateName() + '.template.html';

      // batch job info
      scope.taskCount = 0;
      scope.completedTaskCount = 0;

    }
  };

  return job;
}
})();

// Source: src/entry/logging/udb-socket.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.udbSocket
 * @description
 * # udbSocket
 * Factory in the udb.entry.
 */
angular
  .module('udb.entry')
  .factory('udbSocket', UdbSocketFactory);

/* @ngInject */
function UdbSocketFactory (socketFactory, appConfig) {
  var udbSocket = io.connect(appConfig.socketUrl);

  var socket = socketFactory({
    ioSocket: udbSocket
  });

  return socket;
}
UdbSocketFactory.$inject = ["socketFactory", "appConfig"];
})();

// Source: src/entry/logging/work-indicator.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.entry.directive:udbWorkIndicator
 * @description
 * # udbWorkIndicator
 */
angular
  .module('udb.entry')
  .directive('udbWorkIndicator', udbWorkIndicator);

/* @ngInject */
function udbWorkIndicator ($window, jobLogger) {
  return {
    restrict: 'C',
    link: function postLink(scope, element, attrs) {
      scope.working = false;

      $window.setInterval(function () {
        scope.working = jobLogger.hasActiveJobs();
        element.toggleClass('working', scope.working);
      }, 2000);
    }
  };
}
udbWorkIndicator.$inject = ["$window", "jobLogger"];
})();

// Source: src/entry/translation/offer-translator.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.offerTranslator
 * @description
 * # offerTranslator
 * Service in the udb.entry.
 */
angular
  .module('udb.entry')
  .service('offerTranslator', OfferTranslator);

/* @ngInject */
function OfferTranslator(udbApi) {
  /**
   * Translates an offer property to a given language and adds the job to the logger
   *
   * @param {UdbEvent|UdbPlace} offer The offer that needs translating
   * @param {string}  property  The name of the property to translate
   * @param {string}  language  The abbreviation of the translation language
   * @param {string}  translation Translation to save
   */
  this.translateProperty = function (offer, property, language, translation) {
    if (property === 'title') {
      property = 'name';
    }

    return udbApi
      .translateProperty(offer.apiUrl, property, language, translation)
      .then(function () {
        offer[property][language] = translation;
      });
  };

  this.translateAddress = function (offer, language, translation) {
    return udbApi
      .translateAddress(offer.id, language, translation)
      .then(function () {
        offer.address[language] = translation;
      });
  };
}
OfferTranslator.$inject = ["udbApi"];
})();

// Source: src/event-detail/event-detail.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.event-detail.directive:event-detail.html
 * @description
 * # udb event-detail directive
 */
angular
  .module('udb.event-detail')
  .directive('udbEventDetail', udbEventDetailDirective);

/* @ngInject */
function udbEventDetailDirective() {
  return {
    templateUrl: 'templates/event-detail.html',
    restrict: 'EA',
    controller: EventDetail // jshint ignore:line
  };
}
})();

// Source: src/event-detail/ui/booking-info-detail.directive.js
(function () {
'use strict';

/**
 * @ngdoc component
 * @name udb.event-detail.component:BookingInfoDetail
 * @description
 * # udbBookingInfoDetail
 */
angular
  .module('udb.event-detail')
  .directive('udbBookingInfoDetail', function () {
    return {
      templateUrl: 'templates/booking-info-detail.directive.html',
      controller: BookingInfoDetailController,
      restrict: 'A',
      scope: {
        bookingInfo: '<udbBookingInfoDetail'
      }
    };
  });

/* @ngInject */
function BookingInfoDetailController($scope) {
  $scope.isEmpty = _.isEmpty;
  $scope.hasAtLeastOneContactPoint = function() {
    return $scope.bookingInfo.phone || $scope.bookingInfo.url || $scope.bookingInfo.email;
  };
}
BookingInfoDetailController.$inject = ["$scope"];
})();

// Source: src/event-detail/ui/contact-point-detail.directive.js
(function () {
'use strict';

/**
 * @ngdoc component
 * @name udb.event-detail.component:ContactPointDetail
 * @description
 * # udbContactPointDetail
 */
angular
  .module('udb.event-detail')
  .directive('udbContactPointDetail', function () {
    return {
      templateUrl: 'templates/contact-point-detail.directive.html',
      controller: ContactPointDetailController,
      restrict: 'A',
      scope: {
        contactPoint: '<udbContactPointDetail'
      }
    };
  });

/* @ngInject */
function ContactPointDetailController($scope) {
  $scope.isEmpty = function (contactPoint) {
    return _(contactPoint).values().flatten().isEmpty();
  };
}
ContactPointDetailController.$inject = ["$scope"];
})();

// Source: src/event-detail/ui/event-detail.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.event-detail.controller:EventDetailController
 * @description
 * # EventDetailController
 * Event Detail controller
 */
angular
    .module('udb.event-detail')
    .controller('EventDetailController', EventDetail);

/* @ngInject */
function EventDetail(
  $scope,
  eventId,
  udbApi,
  jsonLDLangFilter,
  $state,
  $uibModal,
  $q,
  $window,
  $location,
  offerLabeller,
  $translate,
  appConfig,
  ModerationService,
  RolePermission,
  authorizationService
) {
  var activeTabId = 'data';
  var controller = this;
  var FILMINVOER_LABEL = 'udb-filminvoer';
  $scope.cultuurkuurEnabled = _.get(appConfig, 'cultuurkuur.enabled');
  $scope.isOmdApp = !!_.get(appConfig, 'omdSpecific', false);

  $q.when(eventId, function(offerLocation) {
    $scope.eventId = offerLocation;

    var offer = udbApi.getOffer(offerLocation);

    var permissions = udbApi.getUserPermissions(offerLocation);

    offer.then(showOffer, failedToLoad);

    $q.all([permissions, offer])
      .then(grantPermissions);
  }, function() {
    $location.path('404');
  });

  /**
   * Grant permissions based on permissions-data.
   * @param {Array} permissionsData
   *  The first array-item is assumed to be true, if the user is not owner the permission check rejects.
   *  The second value holds the offer itself.
   */
  function grantPermissions(permissionsData) {
    var permissions = permissionsData[0];
    var hasPermissions = permissions.length > 0;
    var event = permissionsData[1];

    var hasMovieLabel = !!_.find(event.labels, function (label) {
      return label === FILMINVOER_LABEL;
    });

    authorizationService
        .getPermissions()
        .then(function(userPermissions) {
          var hasEditMoviesPermission = !!_.find(userPermissions, function(permission) {
            return permission === RolePermission.FILMS_AANMAKEN;
          });

          var canSeeHistory = !!_.find($scope.userPermissions, function(permission) {
            return permission === RolePermission.AANBOD_HISTORIEK;
          });

          var canEditMovies = hasEditMoviesPermission && hasMovieLabel;

          $scope.isGodUser = _.filter(userPermissions, function(permission) {
            return permission === RolePermission.GEBRUIKERS_BEHEREN;
          }).length > 0;

          if (hasPermissions) {
            var offerPermissions = {
              editing: _.includes(permissions, 'Aanbod bewerken') && (!event.isExpired() || $scope.isGodUser),
              moderate: _.includes(permissions, 'Aanbod modereren'),
              delete: _.includes(permissions, 'Aanbod verwijderen')
            };
            $scope.permissions = angular.extend({}, offerPermissions, {
              editingMovies: canEditMovies,
              duplication: true,
              history: canSeeHistory,
            });
          } else {
            $scope.permissions = {editing: false, moderate: false, delete: false,
              editingMovies: canEditMovies, duplication: false, history: canSeeHistory};
          }

          setTabs();
        });
  }

  function getModerationItems(roles) {
    var query = '';

    _.forEach(roles, function(role) {
      if (_.contains(role.permissions, 'AANBOD_MODEREREN') && role.constraints && role.constraints.v3) {
        query += (query ? ' OR ' : '') + '(' + role.constraints.v3 + ')';
      }
    });
    query = (query ? '(' + query + ')' : '');
    var idField = 'cdbid';

    query = '(' + query + ' AND ' + idField + ':' + $scope.event.id + ')';

    return ModerationService
      .find(query, 10, 0)
      .then(function(searchResult) {
        return searchResult;
      });
  }

  $scope.eventIdIsInvalid = false;
  $scope.labelAdded = labelAdded;
  $scope.labelRemoved = labelRemoved;
  $scope.eventHistory = undefined;
  $scope.calendarSummary = undefined;

  function setTabs() {
    if ($scope.permissions.history || $scope.isGodUser) {
      $scope.tabs = [
        {
          id: 'data'
        },
        {
          id: 'history'
        },
        {
          id: 'publication'
        }
      ];
    } else {
      $scope.tabs = [
        {
          id: 'data'
        },
        {
          id: 'publication'
        }
      ];
    }
  }

  $scope.deleteEvent = function () {
    openEventDeleteConfirmModal($scope.event);
  };
  $scope.isEmpty = _.isEmpty;

  var language = $translate.use() || 'nl';
  $scope.language = language;
  var cachedEvent;

  function showHistory(eventHistory) {
    $scope.eventHistory = eventHistory;
  }

  function showCalendarSummary(calendarSummary) {
    $scope.calendarSummary = calendarSummary;
  }

  function notifyCalendarSummaryIsUnavailable() {
    $scope.calendarSummary = false;
  }

  function showOffer(event) {
    cachedEvent = event;

    if (cachedEvent.calendarType === 'permanent') {
      showCalendarSummary('Altijd open');
    } else {
      udbApi
        .getCalendarSummary(event.id, 'lg', $scope.language)
        .then(showCalendarSummary, notifyCalendarSummaryIsUnavailable);
    }

    $scope.event = jsonLDLangFilter(event, language, true);
    $scope.allAges =  !(/\d/.test(event.typicalAgeRange));
    $scope.noAgeInfo = event.typicalAgeRange === '';

    if (event.typicalAgeRange.indexOf('-') === event.typicalAgeRange.length - 1) {
      $scope.ageRange = event.typicalAgeRange.slice(0, -1) + '+';
    }
    else {
      $scope.ageRange = event.typicalAgeRange;
    }

    $scope.eventIdIsInvalid = false;

    var eventTypeId = $scope.event.type.id;
    $scope.isLessonSeries = eventTypeId === '0.3.1.0.0';
    $scope.isHolidayCamp = eventTypeId === '0.57.0.0.0';

    hasContactPoint();
    hasBookingInfo();

    ModerationService
      .getMyRoles()
      .then(function(roles) {
        var filteredRoles = _.filter(roles, function(role) {
          var canModerate = _.filter(role.permissions, function(permission) {
            return permission === RolePermission.AANBOD_MODEREREN;
          });
          return canModerate.length > 0;
        });

        if (filteredRoles.length) {
          getModerationItems(roles).then(function(result) {
            angular.forEach(result.member, function(member) {
              if (member['@id'] === $scope.eventId) {
                $scope.moderationPermission = true;
              }
            });
          });
        }
      });
  }

  function failedToLoad() {
    $scope.eventIdIsInvalid = true;
  }

  $scope.eventLocation = function (event) {
    var location = jsonLDLangFilter(event.location, language, true);

    var eventLocation = [
      location.name
    ];

    if (event.location.type) {
      eventLocation.push($scope.translateType(event.location.type.label));
    }

    if (event.location.address.streetAddress) {
      eventLocation.push(event.location.address.streetAddress);
    }

    if (event.location.address.addressLocality) {
      eventLocation.push(event.location.address.addressLocality);
    }

    return eventLocation.join(', ');
  };

  $scope.eventIds = function (event) {
    return _.union([event.id], event.sameAs);
  };

  $scope.isUrl = function (potentialUrl) {
    return /^(https?)/.test(potentialUrl);
  };

  $scope.isTabActive = function (tabId) {
    return tabId === activeTabId;
  };

  $scope.makeTabActive = function (tabId) {
    activeTabId = tabId;

    if (tabId === 'history' && !$scope.eventHistory) {
      var eventId =  $scope.eventId.toString().split('/').pop();
      udbApi.getHistory(eventId).then(showHistory);
    }
  };

  $scope.openEditPage = function() {
    var eventLocation = $scope.eventId.toString();
    var id = eventLocation.split('/').pop();

    $state.go('split.eventEdit', {id: id});
  };

  $scope.openEditPageMovies = function() {
    var eventLocation = $scope.eventId.toString();
    var id = eventLocation.split('/').pop();

    $state.go('split.eventEditMovie', {id: id});
  };

  $scope.duplicateMovie = function() {
    var eventLocation = $scope.eventId.toString();
    var calendar = _.pick($scope.event, ['calendarType', 'subEvent']);

    if (calendar.subEvent.length > 0) {
      calendar.subEvent.forEach(function(event) {
        event.status = {type: 'Available'};
        event.bookingAvailability  = {type: 'Available'};
      });
    }

    udbApi
      .duplicateEvent(eventLocation, calendar)
      .then(function (duplicatedEventInfo) {
        var id = duplicatedEventInfo.eventId;
        var eventUrl = duplicatedEventInfo.url;
        udbApi.labelOffer(eventUrl, FILMINVOER_LABEL)
          .then(function () {
            $state.go('split.eventEditMovie', {id: id});
          })
          .catch(function (err) {
            throw err;
          });
      })
      .catch(function (err) { console.log('error', err); });
  };

  $scope.openTranslatePage = function() {
    var eventLocation = $scope.eventId.toString();
    var id = eventLocation.split('/').pop();
    $state.go('split.eventTranslate', {id: id});
  };

  controller.goToDashboard = function() {
    $state.go('split.footer.dashboard');
  };

  function openEventDeleteConfirmModal(item) {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/event-delete-confirm-modal.html',
      controller: 'EventDeleteConfirmModalCtrl',
      resolve: {
        item: function () {
          return item;
        }
      }
    });

    modalInstance.result
      .then(controller.goToDashboard);
  }

  /**
   * @param {Label} newLabel
   */
  function labelAdded(newLabel) {
    var similarLabel = _.find(cachedEvent.labels, function (label) {
      return newLabel.name.toUpperCase() === label.toUpperCase();
    });

    if (similarLabel) {
      $window.alert('Het label "' + newLabel.name + '" is reeds toegevoegd als "' + similarLabel + '".');
    }
    else {
      offerLabeller.label(cachedEvent, newLabel.name)
        .then(function(response) {
          if (response.success) {
            $scope.labelResponse = 'success';
            $scope.addedLabel = response.name;
          }
          else {
            $scope.labelResponse = 'error';
            $scope.labelsError = response;
          }
          $scope.event.labels = angular.copy(cachedEvent.labels);
        });
    }
  }

  function clearLabelsError() {
    $scope.labelResponse = '';
    $scope.labelsError = '';
  }

  /**
   * @param {ApiProblem} problem
   */
  function showUnlabelProblem(problem) {
    $scope.event.labels = angular.copy(cachedEvent.labels);
    $scope.labelResponse = 'unlabelError';
    $scope.labelsError = problem.title;
  }

  /**
   * @param {Label} label
   */
  function labelRemoved(label) {
    clearLabelsError();

    return $q(function(resolve, reject) {
      offerLabeller
      .unlabel(cachedEvent, label.name)
      .then(resolve)
      .catch(function (err) {
        showUnlabelProblem(err);
        reject(err);
      });
    });
  }

  function hasContactPoint() {
    var nonEmptyContactTypes = _.filter(
      $scope.event.contactPoint,
      function(value) {
        return value.length > 0;
      }
    );

    $scope.hasContactPointResults = (nonEmptyContactTypes.length > 0);
  }

  function hasBookingInfo() {
    var bookingInfo = $scope.event.bookingInfo;
    $scope.hasBookingInfoResults = !(bookingInfo.phone === '' && bookingInfo.email === '' && bookingInfo.url === '');
  }

  $scope.isEditable = function() {
    return $scope.event.workflowStatus !== 'DELETED' && $scope.event.workflowStatus !== 'REJECTED';
  };

  $scope.isDeletable = function() {
    return $scope.event.workflowStatus !== 'DELETED';
  };

  $scope.translateAudience = function (type) {
    return $translate.instant('audience.' + type);
  };

  $scope.translateWorkflowStatus = function (status) {
    return $translate.instant('workflowStatus.' + status);
  };

  $scope.translateType = function (type) {
    // Work around for III-2695
    var translatedString = $translate.instant('offerTypes.' + type);
    if (_.includes(translatedString, 'offerTypes.')) {
      return type;
    }
    else {
      return translatedString;
    }
  };

  $scope.finishedLoading = function() {
    return ($scope.event && $scope.permissions);
  };
}
EventDetail.$inject = ["$scope", "eventId", "udbApi", "jsonLDLangFilter", "$state", "$uibModal", "$q", "$window", "$location", "offerLabeller", "$translate", "appConfig", "ModerationService", "RolePermission", "authorizationService"];
})();

// Source: src/event_form/calendar-labels.constant.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc constant
 * @name udb.event-form.calendarLabels
 * @description
 * # calendarLabels
 * Form calendar labels
 */
angular
  .module('udb.event-form')
  .constant('calendarLabels',
    /**
     * list of calendar labels
     * @readonly
     */
    [
      {'label': 'Eén of meerdere dagen', 'id' : 'single', 'eventOnly' : true},
      {'label': 'Van ... tot ... ', 'id' : 'periodic', 'eventOnly' : true},
      {'label' : 'Permanent', 'id' : 'permanent', 'eventOnly' : false}
    ]);
})();

// Source: src/event_form/components/age/age-input.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.event-form.directive:udbAgeInput
 * @description
 * # Age input parsing and formatting
 */
angular
  .module('udb.event-form')
  .directive('udbAgeInput', AgeInputDirective);

/* @ngInject */
function AgeInputDirective() {
  return {
    restrict: 'A',
    require: 'ngModel',
    link: function (scope, element, attrs, controller) {
      function ensureAge(value) {
        var number = parseInt(value);

        if (isNaN(number)) {
          controller.$setViewValue(undefined);
          controller.$render();
          return undefined;
        }

        var age = Math.abs(number);

        if (age.toString() !== value) {
          controller.$setViewValue(age.toString());
          controller.$render();
        }

        return age;
      }

      controller.$formatters.push(ensureAge);
      controller.$parsers.splice(0, 0, ensureAge);
    }
  };
}
})();

// Source: src/event_form/components/age/form-age.controller.js
(function () {
'use strict';

/**
 * @ngdoc controller
 * @name udb.event-form:FormAgeController
 * @var FormAgeController fagec
 * @description
 * # FormAgeController
 * Controller for the form age component
 */
angular
  .module('udb.event-form')
  .controller('FormAgeController', FormAgeController);

/* @ngInject */
function FormAgeController($scope, EventFormData, $translate, $rootScope) {
  var controller = this;
  /**
   * Enum for age ranges.
   * @readonly
   * @enum {Object}
   */
  var AgeRangeEnum = Object.freeze({
    'ALL': {label: 'All ages'},
    'TODDLERS': {label: 'Toddlers', min: 0, max: 2},
    'PRESCHOOLERS': {label: 'Preschoolers', min: 3, max: 5},
    'KIDS': {label: 'Kids', min: 6, max: 11},
    'TEENAGERS': {label: 'Teenagers', min: 12, max: 15},
    'YOUNGSTERS': {label: 'Youngsters', min: 16, max: 26},
    'ADULTS': {label: 'Adults', min: 18},
    'SENIORS': {label: 'Seniors', min: 65},
    'CUSTOM': {label: 'Custom'}
  });

  controller.ageRanges = angular.copy(AgeRangeEnum);
  controller.activeAgeRange = undefined;
  controller.minAge = undefined;
  controller.maxAge = undefined;
  controller.setAgeRangeByType = setAgeRangeByType;
  controller.delayedSaveAgeRange = _.debounce(digestSaveAgeRange, 1000);
  controller.instantSaveAgeRange = instantSaveAgeRange;
  controller.error = '';
  controller.formData = undefined;

  init(EventFormData);

  /**
   * Save the age range based on current controller min and max values.
   *
   * If the controller values do not change the old form data, no update will happen.
   */
  function saveAgeRange() {
    clearError();
    var min = controller.minAge;
    var max = controller.maxAge;
    var oldAgeRange = controller.formData.getTypicalAgeRange();

    if (oldAgeRange && oldAgeRange.min === min && oldAgeRange.max === max) {
      return;
    }

    if (_.isNumber(min) && _.isNumber(max) && min > max) {
      controller.hasError = true;
      showError($translate.instant('eventForm.step4.age.error_max_lower_than_min')); return;
    }

    controller.formData.setTypicalAgeRange(min, max);
    $scope.$emit('changeTypicalAgeRange', controller.formData.typicalAgeRange);
  }

  function digestSaveAgeRange() {
    $scope.$apply(saveAgeRange);
  }

  function instantSaveAgeRange() {
    controller.delayedSaveAgeRange.cancel();
    saveAgeRange();
  }

  function showError(errorMessage) {
    controller.error = errorMessage;
  }

  function clearError() {
    controller.error = '';
    controller.hasError = false;
  }

  /**
   * Create a matcher with a min and max age that takes an age range object.
   *
   * @param {number} min
   * @param {number} max
   * @returns {Function}
   */
  function rangeMatcher(min, max) {
    return function (ageRange) {
      var fixedRange = (ageRange.min === min && ageRange.max === max);
      var customRange = !(isNaN(min) && isNaN(max)) && ageRange === AgeRangeEnum.CUSTOM;

      return fixedRange ? fixedRange : customRange;
    };
  }

  /**
   * @param {EventFormData} formData
   */
  function init(formData) {
    controller.formData = formData;
    var ageRange = formData.getTypicalAgeRange();

    if (ageRange) {
      showRange(ageRange.min, ageRange.max);
    }
  }

  /**
   * @param {number} min
   * @param {number} max
   */
  function showRange(min, max) {
    var activeAgeRangeType = _.findKey(AgeRangeEnum, rangeMatcher(min, max));
    controller.minAge = min;
    controller.maxAge = max;
    controller.rangeInputEnabled = activeAgeRangeType && activeAgeRangeType !== 'ALL';
    controller.activeAgeRange = activeAgeRangeType;
  }

  /**
   * @param {string} type
   */
  function setAgeRangeByType(type) {
    var ageRange = AgeRangeEnum[type];

    if (ageRange) {
      if (type !== 'CUSTOM') {
        controller.minAge = ageRange.min;
        controller.maxAge = ageRange.max;
      }

      controller.rangeInputEnabled = type !== 'ALL';
      controller.activeAgeRange = type;

      saveAgeRange();
    }
  }

  $scope.translateAgeRange = function (ageRange) {
    return $translate.instant('eventForm.step4.age.' + ageRange);
  };

  $scope.getAgeRangeLabel = function (ageRange) {
    if (typeof ageRange.min === 'undefined' && typeof ageRange.max === 'undefined') {
      return '';
    }
    if (typeof ageRange.min === 'number' && typeof ageRange.max === 'number') {
      return ageRange.min.toString() + '-' + ageRange.max.toString();
    }
    return ageRange.min.toString() + '+';
  };
}
FormAgeController.$inject = ["$scope", "EventFormData", "$translate", "$rootScope"];
})();

// Source: src/event_form/components/age/form-age.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.event-form.directive:udbFormAge
 * @description
 * # Target age component for offer forms
 */
angular
  .module('udb.event-form')
  .directive('udbFormAge', FormAgeDirective);

/* @ngInject */
function FormAgeDirective() {
  return {
    templateUrl: 'templates/form-age.html',
    restrict: 'EA',
    controller: 'FormAgeController',
    controllerAs: 'fagec'
  };
}
})();

// Source: src/event_form/components/audience/form-audience.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.event-form:FormAudienceController
 * @description
 * # FormAudienceController
 * Controller for the form audience component
 */
angular
  .module('udb.event-form')
  .controller('FormAudienceController', FormAudienceController);

/* @ngInject */
function FormAudienceController(EventFormData, eventCrud, appConfig) {
  var controller = this;
  var componentDisabled = _.get(appConfig, 'offerEditor.disableAudience');

  controller.enabled = !componentDisabled && EventFormData.isEvent;
  controller.audienceType = isBookableEvent() ? 'education' : EventFormData.audienceType;
  controller.setAudienceType = setAudienceType;
  controller.isBookableEvent = isBookableEvent;

  function setAudienceType(audienceType) {
    eventCrud.setAudienceType(EventFormData, audienceType);
  }

  function isBookableEvent() {
    return EventFormData.getLocation().isDummyPlaceForEducationEvents;
  }

}
FormAudienceController.$inject = ["EventFormData", "eventCrud", "appConfig"];
})();

// Source: src/event_form/components/audience/form-audience.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.event-form.directive:udbFormAudience
 * @description
 * # Target audience component for event forms
 */
angular
  .module('udb.event-form')
  .directive('udbFormAudience', FormAudienceDirective);

/* @ngInject */
function FormAudienceDirective() {
  return {
    templateUrl: 'templates/form-audience.html',
    restrict: 'EA',
    controller: 'FormAudienceController',
    controllerAs: 'fac'
  };
}
})();

// Source: src/event_form/components/auto-scroll.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.event-form.directive:udbAutoScroll
 * @description
 * auto scrolls to the attached element when focused.
 */
angular
  .module('udb.event-form')
  .directive('udbAutoScroll', AutoScroll);

/* @ngInject */
function AutoScroll($document) {
  return {
    restrict: 'A',
    link: link
  };

  function link(scope, element) {
    var scrollDuration = 1000;
    var easeInOutQuad = function (t) {
      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
    };

    element.on('click focusin', scrollToTarget);

    function scrollToTarget(event) {
      $document.scrollTo(event.target, 100, scrollDuration, easeInOutQuad);
    }
  }
}
AutoScroll.$inject = ["$document"];
})();

// Source: src/event_form/components/calendar/base-calendar.controller.js
(function () {
'use strict';

/**
 * @typedef {Object} TimeSpan
 * @property {Date} start
 * @property {Date} end
 * @property {boolean} allDay
 */

/**
 * @ngdoc function
 * @name udbApp.controller:BaseCalendarController
 * @description
 * # Base Calendar Controller
 */
angular
  .module('udb.event-form')
  .controller('BaseCalendarController', BaseCalendarController);

/* @ngInject */
function BaseCalendarController(calendar, $scope, appConfig) {
  calendar.type = '';
  calendar.setType = setType;
  calendar.createTimeSpan = createTimeSpan;
  calendar.timeSpans = [];
  calendar.timeSpanRequirements = [];
  calendar.removeTimeSpan = removeTimeSpan;
  calendar.weeklyRecurring = false;
  calendar.delayedTimeSpanChanged = _.debounce(digestTimeSpanChanged, 1000);
  calendar.instantTimeSpanChanged = instantTimeSpanChanged;
  calendar.toggleAllDay = toggleAllDay;
  calendar.init = init;
  calendar.maxYearTimeSpan = _.get(appConfig, 'offerEditor.calendar.maxYearTimeSpan', 10);

  /**
   * @param {EventFormData} formData
   * @param {OpeningHoursCollection} openingHoursCollection
   */
  function init(formData, openingHoursCollection) {
    calendar.formData = formData;
    calendar.isEvent = formData.isEvent;
    calendar.isPlace = formData.isPlace;
    calendar.offerStatus = formData.status;
    calendar.subEvent = formData.subEvent;
    calendar.timeSpans = !_.isEmpty(formData.calendar.timeSpans) ? formData.calendar.timeSpans : [];
    calendar.setType(formData.calendar.calendarType ? formData.calendar.calendarType : 'single');
    calendar.openingHoursCollection = openingHoursCollection;
  }

  function isTypeWeeklyRecurring(type) {
    return type === 'permanent' || type === 'periodic';
  }

  /**
   * @param {string} calendarType
   */
  function setType(calendarType) {
    calendar.formData.setCalendarType(calendarType);
    calendar.type = calendarType;
    calendar.weeklyRecurring = isTypeWeeklyRecurring(calendarType);

    if (calendarType === 'single' && _.isEmpty(calendar.timeSpans)) {
      initTimeSpans();
    }
  }

  function initTimeSpans() {
    calendar.timeSpans = [
      {
        allDay: true,
        start: moment().startOf('day').toDate(),
        end: moment().endOf('day').toDate(),
        endTouched: false,
        status: {
          type: 'Available'
        }
      }
    ];
  }

  function createTimeSpan() {
    if (_.isEmpty(calendar.timeSpans)) {
      initTimeSpans();
      calendar.instantTimeSpanChanged();
    } else {
      var lastTimeSpan = _.cloneDeep(_.last(calendar.timeSpans));
      lastTimeSpan.status = {type: 'Available'};
      lastTimeSpan.bookingAvailability = {type: 'Available'};
      calendar.timeSpans.push(lastTimeSpan);
      // Do not trigger timeSpanChanged to prevent saving duplicates.
    }
  }

  /**
   * @param {Object} timeSpan
   */
  function removeTimeSpan(timeSpan) {
    if (calendar.timeSpans.length > 1) {
      calendar.timeSpans = _.without(calendar.timeSpans, timeSpan);
      calendar.instantTimeSpanChanged();
    }
  }

  function digestTimeSpanChanged(whichDate) {
    $scope.$apply(timeSpanChanged(whichDate));
  }

  function instantTimeSpanChanged() {
    calendar.delayedTimeSpanChanged.cancel();
    timeSpanChanged();
  }

  function toggleAllDay(timeSpan) {
    if (timeSpan.allDay) {
      timeSpan.start = moment(timeSpan.start).set({'hour': 0, 'minute': 0, 'millisecond': 0}).toDate();
      timeSpan.end = moment(timeSpan.end).endOf('day').toDate();
    }
    else {
      timeSpan.start = moment(timeSpan.start).set({'hour': moment().startOf('hour').format('H'), 'minute': 0}).toDate();
      timeSpan.end = moment(timeSpan.end).set(
          {'hour': moment().startOf('hour').add(4, 'h').format('H') , 'minute': 0, 'second': 0}
      ).toDate();
    }
    instantTimeSpanChanged();
  }

  function timeSpanChanged(whichDate) {

    var unmetRequirements = _.map(calendar.timeSpans, validateTimeSpan);

    if (!_.isEmpty(_.flatten(unmetRequirements))) {
      showTimeSpanRequirements(unmetRequirements);
    } else {
      if (calendar.timeSpans.length > 1) {
        if (calendar.type !== 'multiple') {
          setType('multiple');
        }
      } else if (calendar.type !== 'single') {
        setType('single');
      }
      clearTimeSpanRequirements();
      _.each(calendar.timeSpans, function(timeSpan) {
        if (whichDate === 'end' && !timeSpan.endTouched) {
          timeSpan.endTouched = true;
        }
        if (timeSpan.allDay) {
          timeSpan.start = moment(timeSpan.start).startOf('day').toDate();
          timeSpan.end = moment(timeSpan.end).endOf('day').toDate();
        }
        if (whichDate === 'start' && !timeSpan.endTouched) {
          if (timeSpan.start > timeSpan.end) {
            timeSpan.end = moment(timeSpan.start).endOf('day').toDate();
          }
        }
      });
      calendar.formData.saveTimeSpans(calendar.timeSpans);
    }
  }

  function clearTimeSpanRequirements() {
    calendar.timeSpanRequirements = [];
  }

  function showTimeSpanRequirements(unmetRequirements) {
    calendar.timeSpanRequirements = unmetRequirements;
  }

  /**
   * Validates a time-span and returns a list of unmet requirements.
   *
   * @param {TimeSpan} timeSpan
   * @return {string[]}
   */
  function validateTimeSpan(timeSpan) {
    var requirements = {
      'timedWhenNotAllDay': function (timeSpan) {
        return !timeSpan.allDay && (!timeSpan.start || !timeSpan.end);
      },
      'startBeforeEndDay': function (timeSpan) {
        return timeSpan.endTouched &&
            timeSpan.start &&
            timeSpan.end &&
            moment(timeSpan.start).isAfter(timeSpan.end, 'day');
      },
      'startBeforeEnd': function (timeSpan) {
        return !timeSpan.allDay &&
            (timeSpan.start && timeSpan.end) &&
            moment(timeSpan.start).isSame(timeSpan.end, 'day') &&
            moment(timeSpan.start).isAfter(timeSpan.end);
      },
      'tooFarInFuture': function (timespan) {
        var maxDate = moment().add(calendar.maxYearTimeSpan, 'y');
        return moment(timeSpan.end).isAfter(maxDate);
      }
    };

    var unmetRequirements = _.pick(requirements, function (check) {
      return check(timeSpan);
    });

    return _.keys(unmetRequirements);
  }
}
BaseCalendarController.$inject = ["calendar", "$scope", "appConfig"];
})();

// Source: src/event_form/components/calendar/form-calendar-datepicker.component.js
(function () {
'use strict';

angular
  .module('udb.event-form')
  .component('udbFormCalendarDatepicker', {
    templateUrl: 'templates/form-calendar-datepicker.component.html',
    controller: FormCalendarDatepickerController,
    require: {
      ngModel: '^ngModel'
    },
    bindings: {
      disabled: '=ngDisabled'
    },
    controllerAs: 'datepicker'
  });

/** @inject */
function FormCalendarDatepickerController(appConfig) {
  var datepicker = this;
  var options = {
    minDate: new Date(),
    showWeeks: false,
    customClass: getDayClass
  };

  datepicker.$onInit = function() {
    datepicker.isOpen = false;
    datepicker.options = options;
    datepicker.ngModel.$render = function () {
      datepicker.date = new Date(datepicker.ngModel.$viewValue);
    };
  };

  datepicker.open = function() {
    datepicker.isOpen = true;
  };

  datepicker.changed = function() {
    if (datepicker.date) {
      var time = moment(datepicker.ngModel.$viewValue);
      var day = moment(datepicker.date).hour(time.hour()).minute(time.minute());
      datepicker.ngModel.$setViewValue(day.toDate());
    }
  };

  function getDayClass(data) {
    if (appConfig.calendarHighlight.date !== '') {
      var dayToCheck = moment(data.date);
      var highlightDate = moment(appConfig.calendarHighlight.date);

      if (dayToCheck.isSame(highlightDate, data.mode)) {
        return appConfig.calendarHighlight.extraClass;
      }
    }
  }
}

FormCalendarDatepickerController.$inject = ['appConfig'];
})();

// Source: src/event_form/components/calendar/form-calendar-period.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:FormCalendarPeriod
 * @description
 * # Form Calendar Period
 */
angular
  .module('udb.event-form')
  .component('udbFormCalendarPeriod', {
    templateUrl: 'templates/form-calendar-period.component.html',
    controller: FormCalendarPeriodComponentController,
    bindings: {
      formData: '=',
      disabled: '=ngDisabled'
    }
  });

function FormCalendarPeriodComponentController() {
  var controller = this;
  controller.calendarType = controller.formData.calendar.calendarType;
}
})();

// Source: src/event_form/components/calendar/form-calendar-timepicker.component.js
(function () {
'use strict';

angular
  .module('udb.event-form')
  .component('udbFormCalendarTimepicker', {
    templateUrl: 'templates/form-calendar-timepicker.component.html',
    controller: FormCalendarTimepickerController,
    require: {
      ngModel: '^ngModel'
    },
    bindings: {
      disabled: '=ngDisabled'
    },
    controllerAs: 'timepicker'
  });

/** @inject */
function FormCalendarTimepickerController() {
  var timepicker = this;

  timepicker.$onInit = function() {
    timepicker.ngModel.$render = function () {
      timepicker.time = new Date(timepicker.ngModel.$viewValue);
    };
  };

  timepicker.changed = function() {
    if (timepicker.time) {
      timepicker.ngModel.$setViewValue(timepicker.time);
    }
  };
}
})();

// Source: src/event_form/components/calendar/form-calendar.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:FormCalendarController
 * @description
 * # Form Calendar Controller
 */
angular
  .module('udb.event-form')
  .controller('FormCalendarController', FormCalendarController);

/* @ngInject */
function FormCalendarController(EventFormData, OpeningHoursCollection, $scope, $controller) {
  var calendar = this;

  $controller('BaseCalendarController', {calendar: calendar, $scope: $scope});

  calendar.init(EventFormData, OpeningHoursCollection);
}
FormCalendarController.$inject = ["EventFormData", "OpeningHoursCollection", "$scope", "$controller"];
})();

// Source: src/event_form/components/calendar/form-event-calendar.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.event-form.component:udbFormEventCalendar
 * @description
 * # Form Calendar
 * The form calendar component for events.
 */
angular
  .module('udb.event-form')
  .component('udbFormEventCalendar', {
    templateUrl: 'templates/form-event-calendar.component.html',
    controller: 'FormCalendarController',
    controllerAs: 'calendar'
  });
})();

// Source: src/event_form/components/calendar/form-place-calendar.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.event-form.component:udbFormPlaceCalendar
 * @description
 * # Form Place Calendar
 * The form calendar component for places.
 */
angular
  .module('udb.event-form')
  .component('udbFormPlaceCalendar', {
    templateUrl: 'templates/form-place-calendar.component.html',
    controller: 'FormCalendarController',
    controllerAs: 'calendar'
  });
})();

// Source: src/event_form/components/image-edit/event-form-image-edit.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormImageEditController
 * @description
 * # EventFormImageEditController
 * Modal for uploading images.
 */
angular
  .module('udb.event-form')
  .controller('EventFormImageEditController', EventFormImageEditController);

/* @ngInject */
function EventFormImageEditController(
  $scope,
  $uibModalInstance,
  EventFormData,
  eventCrud,
  /** @type {MediaObject} **/
  mediaObject
) {

  // Scope vars.
  $scope.saving = false;
  $scope.error = false;
  $scope.description = mediaObject.description || '';
  $scope.copyrightHolder = mediaObject.copyrightHolder || '';

  // Scope functions.
  $scope.cancel = cancel;
  $scope.updateImageInfo = updateImageInfo;
  $scope.allFieldsValid = allFieldsValid;

  /**
   * Cancel the modal.
   */
  function cancel() {
    $uibModalInstance.dismiss('cancel');
  }

  /**
   * Update the
   */
  function updateImageInfo() {
    var description = $scope.description,
        copyrightHolder = $scope.copyrightHolder;

    function displayErrors() {
      $scope.saving = false;
      $scope.error = true;
    }

    function updateEventFormDataAndClose() {
      var updatedMediaObject = angular.copy(mediaObject);
      updatedMediaObject.description = description;
      updatedMediaObject.copyrightHolder = copyrightHolder;

      EventFormData.updateMediaObject(updatedMediaObject);
      $uibModalInstance.close(updatedMediaObject);
    }

    eventCrud
      .updateImage(EventFormData, mediaObject, description, copyrightHolder)
      .then(updateEventFormDataAndClose, displayErrors);
  }

  function allFieldsValid() {
    return $scope.description && $scope.copyrightHolder &&
        $scope.description.length <= 250 && $scope.copyrightHolder.length >= 2;
  }
}
EventFormImageEditController.$inject = ["$scope", "$uibModalInstance", "EventFormData", "eventCrud", "mediaObject"];
})();

// Source: src/event_form/components/image-remove/event-form-image-remove.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormImageRemoveController
 * @description
 * # EventFormImageRemoveController
 * Modal for removing images from an offer.
 */
angular
  .module('udb.event-form')
  .controller('EventFormImageRemoveController', EventFormImageRemoveController);

/* @ngInject */
function EventFormImageRemoveController($scope, $uibModalInstance, EventFormData, eventCrud, image) {

  // Scope vars.
  $scope.saving = false;
  $scope.error = false;

  // Scope functions.
  $scope.cancel = cancel;
  $scope.removeImage = removeImage;

  /**
   * Cancel the modal.
   */
  function cancel() {
    $uibModalInstance.dismiss('cancel');
  }

  function showError() {
    $scope.error = true;
    $scope.saving = false;
  }

  function triggerLoadingState() {
    $scope.saving = true;
    $scope.error = false;
  }

  function removeImage() {
    triggerLoadingState();

    function updateEventFormDataAndCloseModal() {
      EventFormData.removeMediaObject(image);
      $scope.saving = false;
      $uibModalInstance.close();
    }

    eventCrud
      .removeImage(EventFormData, image)
      .then(updateEventFormDataAndCloseModal, showError);
  }
}
EventFormImageRemoveController.$inject = ["$scope", "$uibModalInstance", "EventFormData", "eventCrud", "image"];
})();

// Source: src/event_form/components/image-upload/event-form-image-upload.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormImageUploadController
 * @description
 * # EventFormImageUploadController
 * Modal for uploading images.
 */
angular
  .module('udb.event-form')
  .controller('EventFormImageUploadController', EventFormImageUploadController);

/* @ngInject */
function EventFormImageUploadController(
  $scope,
  $uibModalInstance,
  EventFormData,
  eventCrud,
  appConfig,
  MediaManager,
  $q,
  copyrightNegotiator,
  $translate,
  $filter
) {

  // Scope vars.
  $scope.userAgreementUrl = $filter('translate')('images.conditions_url');
  $scope.copyrightUrl = '/' + $translate.use() + _.get(appConfig, 'media.copyrightUrl', '/copyright');
  $scope.saving = false;
  $scope.error = false;
  $scope.showAgreements = !copyrightNegotiator.confirmed();
  $scope.modalTitle = $translate.instant('eventForm.imageUpload.modalTitle');
  $scope.description = '';
  $scope.copyright = '';
  $scope.maxFileSize = _.get(appConfig, 'media.fileSizeLimit', '1MB');

  // Scope functions.
  $scope.acceptAgreements = acceptAgreements;
  $scope.cancel = cancel;
  $scope.addImage = uploadAndAddImage;
  $scope.clearError = clearError;
  $scope.selectFile = selectFile;
  $scope.allFieldsValid = allFieldsValid;

  var invalidFileErrors = {
    'default': $translate.instant('eventForm.imageUpload.defaultError'),
    'maxSize': $translate.instant('eventForm.imageUpload.maxSize') + $scope.maxFileSize + '.'
  };

  /**
   * Accept the agreements.
   */
  function acceptAgreements() {
    $scope.modalTitle = $translate.instant('eventForm.imageUpload.modalTitle');
    $scope.showAgreements = false;
    copyrightNegotiator.confirm();
  }

  /**
   * Cancel the modal.
   */
  function cancel() {
    $uibModalInstance.dismiss('cancel');
  }

  function clearError() {
    $scope.error = false;
  }

  function selectFile(file, invalidFiles) {
    $scope.selectedFile = file ? file : null;

    // Check if the selected file is invalid and show an error else clear any existing error messages.
    if (invalidFiles.length) {
      var knownError = invalidFileErrors[invalidFiles[0].$error];
      $scope.error = knownError ? knownError : invalidFileErrors.default;
    } else {
      clearError();
    }
  }

  function uploadAndAddImage() {
    // Abort if no valid file is selected.
    if (!$scope.selectedFile) {
      $scope.error = $translate.instant('eventForm.imageUpload.noFileSelectedError');
      return;
    }

    $scope.saving = true;

    var description = $scope.description,
        copyrightHolder = $scope.copyright,
        deferredAddition = $q.defer(),
        language = EventFormData.mainLanguage ? EventFormData.mainLanguage : 'nl';

    function displayError(errorResponse) {
      var errorMessage = errorResponse.data.title;
      var error = $translate.instant('eventForm.imageUpload.somethingWentWrongError');

      switch (errorMessage) {
        case 'The uploaded file is not an image.':
          error = $translate.instant('eventForm.imageUpload.formatNotValidError') +
            $translate.instant('eventForm.imageUpload.extensionsAllowed');
          break;
        case 'The file size of the uploaded image is too big.':
          error = $translate.instant('eventForm.imageUpload.sizeError');
          break;
      }

      $scope.saving = false;
      $scope.error = error;
    }

    /**
     * @param {MediaObject} mediaObject
     */
    function addImageToEvent(mediaObject) {
      function updateEventFormAndResolve() {
        $scope.saving = false;
        EventFormData.addImage(mediaObject);
        deferredAddition.resolve(mediaObject);
        $uibModalInstance.close(mediaObject);
      }

      eventCrud
        .addImage(EventFormData, mediaObject)
        .then(updateEventFormAndResolve, displayError);
    }

    MediaManager
      .createImage($scope.selectedFile, description, copyrightHolder, language)
      .then(addImageToEvent, displayError);

    return deferredAddition.promise;
  }

  function allFieldsValid() {
    return $scope.description && $scope.copyright && $scope.selectedFile &&
        $scope.description.length <= 250 && $scope.copyright.length >= 2;
  }
}
EventFormImageUploadController.$inject = ["$scope", "$uibModalInstance", "EventFormData", "eventCrud", "appConfig", "MediaManager", "$q", "copyrightNegotiator", "$translate", "$filter"];
})();

// Source: src/event_form/components/opening-hours-editor/opening-hours-editor.modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc controller
 * @name udb.event-form.controller:OpeningHoursEditorModalController
 * @description
 * # OpeningHoursEditorModalController
 * Controller for editing opening hours
 */
angular
  .module('udb.event-form')
  .controller('OpeningHoursEditorModalController', OpeningHoursEditorModalController);

/* @ngInject */
function OpeningHoursEditorModalController($uibModalInstance, openingHoursCollection) {
  var controller = this;
  var originalOpeningHoursList;

  init(openingHoursCollection);
  controller.saveOpeningHours = saveOpeningHours;
  controller.createNewOpeningHours = createNewOpeningHours;
  controller.removeOpeningHours = removeOpeningHours;
  controller.errors = {};

  function init(openingHoursCollection) {
    originalOpeningHoursList = _.cloneDeep(openingHoursCollection.getOpeningHours());

    if (originalOpeningHoursList.length === 0) {
      openingHoursCollection.createNewOpeningHours();
    }

    controller.openingHoursCollection = openingHoursCollection;
  }

  function saveOpeningHours() {
    clearErrors();
    var errors = controller.openingHoursCollection.validate();

    if (_.isEmpty(errors)) {
      $uibModalInstance.close(controller.openingHoursCollection.serialize());
    } else {
      showErrors(errors);
    }
  }

  /**
   * @param {string[]} errorList
   */
  function showErrors(errorList) {
    controller.errors = errorList;
  }

  function clearErrors() {
    controller.errors = {};
  }

  function createNewOpeningHours() {
    controller.openingHoursCollection.createNewOpeningHours();
  }

  function removeOpeningHours(openingHours) {
    controller.openingHoursCollection.removeOpeningHours(openingHours);
    clearErrors();
  }
}
OpeningHoursEditorModalController.$inject = ["$uibModalInstance", "openingHoursCollection"];
})();

// Source: src/event_form/components/openinghours/opening-hours-data-collection.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.event-form.service:OpeningHoursCollection
 * @description
 * Contains data needed for opening hours.
 */
angular
  .module('udb.event-form')
  .factory('OpeningHoursCollection', OpeningHoursCollectionFactory);

/* @ngInject */
function OpeningHoursCollectionFactory(moment, $translate) {

  var validationRequirements = {
    'openAndClose': opensAndCloses,
    'dayOfWeek': hasDayOfWeek,
    'openIsBeforeClose': openIsBeforeClose
  };

  var weekdays = {
    'monday': {label: translateWeekdayLabel('monday'), name: translateWeekdayName('monday'), open: false},
    'tuesday': {label: translateWeekdayLabel('tuesday'), name: translateWeekdayName('tuesday'), open: false},
    'wednesday': {label: translateWeekdayLabel('wednesday'), name: translateWeekdayName('wednesday'), open: false},
    'thursday': {label: translateWeekdayLabel('thursday'), name: translateWeekdayName('thursday'), open: false},
    'friday': {label: translateWeekdayLabel('friday'), name: translateWeekdayName('friday'), open: false},
    'saturday': {label: translateWeekdayLabel('saturday'), name: translateWeekdayName('saturday'), open: false},
    'sunday': {label: translateWeekdayLabel('sunday'), name: translateWeekdayName('sunday'), open: false}
  };

  function translateWeekdayLabel(day) {
    return $translate.instant('weekdays.' + day + '.label');
  }

  function translateWeekdayName(day) {
    return $translate.instant('weekdays.' + day + '.name');
  }

  /**
   * @param {OpeningHours[]} openingHoursList
   * @returns {boolean}
   */
  function opensAndCloses(openingHoursList) {
    return _.all(_.map(openingHoursList, function (openingHours) {
      return openingHours.opensAsDate instanceof Date && openingHours.closesAsDate instanceof Date;
    }));
  }

  /**
   * @param {OpeningHours[]} openingHoursList
   * @returns {boolean}
   */
  function openIsBeforeClose(openingHoursList) {
    return _.all(_.map(openingHoursList, function (openingHours) {
      return moment(openingHours.opensAsDate).isBefore(openingHours.closesAsDate);
    }));
  }

  /**
   * @param {OpeningHours[]} openingHoursList
   * @returns {boolean}
   */
  function hasDayOfWeek(openingHoursList) {
    return _.all(_.map(openingHoursList, function (openingHours) {
      return !_.isUndefined(_.find(openingHours.dayOfWeek, 'open'));
    }));
  }

  /**
   * @param {OpeningHours[]} openingHoursList
   *
   * @returns {OpeningHours[]}
   */
  function prepareOpeningHoursForDisplay(openingHoursList) {
    angular.forEach (openingHoursList, function(openingHour, key) {
      openingHour.opens = moment(openingHour.opensAsDate).format('HH:mm');
      openingHour.closes = moment(openingHour.closesAsDate).format('HH:mm');
      openingHour.label = _.pluck(_.filter(openingHour.dayOfWeek, 'open'), 'name').join(', ');
    });

    return openingHoursList;
  }

  /**
   * @class OpeningHoursCollection
   */
  var openingHoursCollection = {
    openingHours: [],

    /**
     * Get the opening hours.
     */
    getOpeningHours: function() {
      return this.openingHours;
    },

    /**
     * Set the opening hours.
     */
    setOpeningHours: function(openingHours) {
      this.openingHours = prepareOpeningHoursForDisplay(openingHours);
    },

    /**
     * @param {OpeningHours} openingHours
     */
    removeOpeningHours: function (openingHours) {
      var openingHoursList = this.openingHours;

      this.setOpeningHours(_.without(openingHoursList, openingHours));
    },

    /**
     * Create new opening hours and append them to the list of existing hours.
     */
    createNewOpeningHours: function () {
      var openingHoursList = this.openingHours || [];
      var openingHours = {
        'dayOfWeek': _.cloneDeep(weekdays),
        'opens': '00:00',
        'opensAsDate': new Date(1970, 0, 1),
        'closes': '00:00',
        'closesAsDate': new Date(1970, 0, 1)
      };

      openingHoursList.push(openingHours);

      this.setOpeningHours(openingHoursList);
    },

    /**
     * {object[]} jsonOpeningHoursList
     */
    deserialize: function (jsonOpeningHoursList) {
      this.setOpeningHours(_.map(jsonOpeningHoursList, function (jsonOpeningHours) {
        return {
          'dayOfWeek': _.mapValues(weekdays, function (weekday, day) {
            var dayOfWeek = _.cloneDeep(weekday);
            dayOfWeek.open = _.includes(jsonOpeningHours.dayOfWeek, day);

            return dayOfWeek;
          }),
          'opens': jsonOpeningHours.opens || '00:00',
          'opensAsDate':
            jsonOpeningHours.opens ?
              resetDay(moment(jsonOpeningHours.opens, 'HH:mm')).toDate() :
              new Date(1970, 0, 1),
          'closes': jsonOpeningHours.closes || '00:00',
          'closesAsDate':
            jsonOpeningHours.closes ?
              resetDay(moment(jsonOpeningHours.closes, 'HH:mm')).toDate() :
              new Date(1970, 0, 1)
        };
      }));

      return this;
    },

    serialize: function () {
      return _.map(this.openingHours, function (openingHours) {
        return {
          dayOfWeek: _.keys(omitClosedDays(openingHours.dayOfWeek)),
          opens: moment(openingHours.opensAsDate).format('HH:mm'),
          closes: moment(openingHours.closesAsDate).format('HH:mm')
        };
      });
    },

    /**
     * returns a list of errors
     *
     * @returns {string[]}
     */
    validate: function () {
      var openingHours = this.openingHours;

      return _(validationRequirements)
        .pick(function (requirementCheck) {
          return !requirementCheck(openingHours);
        })
        .keys()
        .value();
    }
  };

  /**
   * Takes a moment object and returns a new one with the day reset to the beginning of unix time.
   *
   * @param {object} moment
   *  a moment object
   * @returns {object}
   */
  function resetDay(moment) {
    return moment.clone().year(1970).dayOfYear(1);
  }

  function omitClosedDays(dayOfWeek) {
    return _.pick(dayOfWeek, function(weekday) {
      return weekday.open;
    });
  }

  return openingHoursCollection;
}
OpeningHoursCollectionFactory.$inject = ["moment", "$translate"];
})();

// Source: src/event_form/components/openinghours/openinghours.component.js
(function () {
'use strict';

/**
 * @typedef {Object} OpeningHours
 * @property {Date} opensAsDate
 * @property {Date} closesAsDate
 * @property {string} opens
 * @property {string} closes
 * @property {string[]} dayOfWeek
 */

angular
  .module('udb.event-form')
  .component('udbEventFormOpeningHours', {
    bindings: {
      openingHoursCollection: '=openingHours',
      formData: '=',
      disabled: '=ngDisabled'
    },
    templateUrl: 'templates/event-form-openinghours.html',
    controller: OpeningHourComponentController,
    controllerAs: 'cm'
  });

/**
 * @ngInject
 */
function OpeningHourComponentController($uibModal) {
  var cm = this;

  cm.edit = openEditorModal;

  function openEditorModal() {
    var editorModal = $uibModal.open({
      templateUrl: 'templates/opening-hours-editor.modal.html',
      controller: 'OpeningHoursEditorModalController',
      controllerAs: 'ohemc',
      size: 'lg',
      resolve: {
        openingHoursCollection: function () {
          return angular.copy(cm.openingHoursCollection);
        }
      }
    });

    editorModal.result.then(saveOpeningHours);
  }

  /**
   *
   * @param {OpeningHoursData[]} openingHoursList
   */
  function saveOpeningHours(openingHoursList) {
    cm.formData.openingHours = openingHoursList;
    cm.formData.saveOpeningHours(openingHoursList);
    cm.openingHoursCollection.deserialize(openingHoursList);
  }
}
OpeningHourComponentController.$inject = ["$uibModal"];
})();

// Source: src/event_form/components/organizer/event-form-organizer-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormOrganizerModalController
 * @description
 * # EventFormOrganizerModalController
 * Modal for adding an organizer.
 */
angular
  .module('udb.event-form')
  .controller('EventFormOrganizerModalController', EventFormOrganizerModalController);

/* @ngInject */
function EventFormOrganizerModalController(
  $scope,
  $uibModalInstance,
  udbOrganizers,
  UdbOrganizer,
  eventCrud,
  $q,
  organizerName,
  OrganizerManager,
  appConfig
) {

  // Scope vars.
  $scope.organizer = organizerName;
  $scope.organizersWebsiteFound = false;
  $scope.organizersFound = false;
  $scope.saving = false;
  $scope.error = false;
  $scope.addressError = false;
  $scope.contactError = false;
  $scope.showWebsiteValidation = false;
  $scope.showValidation = false;
  $scope.organizers = [];
  $scope.selectedCity = '';
  $scope.disableSubmit = true;
  $scope.contactUrlRegex = new UdbOrganizer().regex.url;
  $scope.newOrganizer = {
    mainLanguage: 'nl',
    website: 'http://',
    name : $scope.organizer,
    address : {
      streetAddress : '',
      addressLocality : '',
      postalCode: '',
      addressCountry : ''
    },
    contact: []
  };

  // Scope functions.
  $scope.cancel = cancel;
  $scope.validateWebsite = validateWebsite;
  $scope.updateName = updateName;
  $scope.validateAddress = validateAddress;
  $scope.validateContact = validateContact;
  $scope.validateNewOrganizer = validateNewOrganizer;
  $scope.selectOrganizer = selectOrganizer;
  $scope.saveOrganizer = saveOrganizer;

  /**
   * Cancel the modal.
   */
  function cancel() {
    $uibModalInstance.dismiss('cancel');
  }

  /**
   * Validate the website of new organizer.
   */
  function validateWebsite() {
    $scope.showWebsiteValidation = true;

    if (!$scope.organizerForm.website.$valid) {
      $scope.showWebsiteValidation = false;
      return;
    }
    udbOrganizers
        .findOrganizersWebsite($scope.newOrganizer.website)
        .then(function (data) {
          // Set the results for the duplicates modal,
          if (data.totalItems > 0) {
            $scope.organizersWebsiteFound = true;
            $scope.firstOrganizerFound = new UdbOrganizer(data.member[0]);
            $scope.showWebsiteValidation = false;
            $scope.disableSubmit = true;
          }
          else {
            $scope.showWebsiteValidation = false;
            $scope.organizersWebsiteFound = false;
            $scope.firstOrganizerFound = '';
            if ($scope.newOrganizer.name) {
              $scope.disableSubmit = false;
            }
          }
        }, function() {
          $scope.websiteError = true;
          $scope.showWebsiteValidation = false;
        });
  }

  /**
   * When the name is changed by a user, submit state needs to be updated also.
   */
  function updateName() {
    if ($scope.newOrganizer.name && !$scope.websiteError) {
      $scope.disableSubmit = false;
    } else {
      $scope.disableSubmit = true;
    }
  }

  function validateAddress(error) {
    $scope.addressError = error;
  }

  function validateContact(error) {
    $scope.contactError = error;
  }

  /**
   * Validate the new organizer.
   */
  function validateNewOrganizer() {

    $scope.showValidation = true;
    // Forms are automatically known in scope.
    if (!$scope.organizerForm.$valid) {
      return;
    }

    $scope.$broadcast('organizerAddressSubmit');
    $scope.$broadcast('organizerContactSubmit');

    // resolve for now, will re-introduce duplicate detection later on
    var promise = $q.resolve([]);

    $scope.error = false;
    $scope.saving = true;

    if ($scope.addressError || $scope.contactError) {
      $scope.error = true;
      $scope.saving = false;
      return;
    }

    promise.then(function (data) {

      // Set the results for the duplicates modal,
      if (data.length > 0) {
        $scope.organizersFound = true;
        $scope.organizers = data;
        $scope.saving = false;
      }
      // or save the event immediately if no duplicates were found.
      else {
        saveOrganizer();
      }

    }, function() {
      $scope.error = true;
      $scope.saving = false;
    });

  }

  /**
   * Select the organizer that should be used.
   */
  function selectOrganizer(organizer) {
    $uibModalInstance.close(organizer);
  }

  /**
   * Save the new organizer in db.
   */
  function saveOrganizer() {

    $scope.saving = true;
    $scope.saveError = false;

    var organizer = _.clone($scope.newOrganizer);
    // remove the address when it's empty
    if (
      !organizer.address.streetAddress &&
      !organizer.address.addressLocality &&
      !organizer.address.postalCode
    ) {
      delete organizer.address;
    }

    eventCrud
      .createOrganizer(organizer)
      .then(function(jsonResponse) {
        var defaultOrganizerLabel = _.get(appConfig, 'offerEditor.defaultOrganizerLabel');
        if (typeof(defaultOrganizerLabel) !== 'undefined' &&
            defaultOrganizerLabel !== '') {
          OrganizerManager
            .addLabelToOrganizer(jsonResponse.data.organizerId, defaultOrganizerLabel);
        }
        $scope.newOrganizer.id = jsonResponse.data.organizerId;
        selectOrganizer($scope.newOrganizer);
        $scope.saving = false;
      }, function() {
        $scope.saveError = true;
        $scope.saving = false;
      });
  }

}
EventFormOrganizerModalController.$inject = ["$scope", "$uibModalInstance", "udbOrganizers", "UdbOrganizer", "eventCrud", "$q", "organizerName", "OrganizerManager", "appConfig"];
})();

// Source: src/event_form/components/place/event-form-place-modal.controller.js
(function () {
(function () {
  'use strict';

  /**
   * @ngdoc function
   * @name udbApp.controller:EventFormPlaceModalController
   * @description
   * # EventFormPlaceModalController
   * Modal for adding an place.
   */
  angular
    .module('udb.event-form')
    .controller('EventFormPlaceModalController', EventFormPlaceModalController);

  /* @ngInject */
  function EventFormPlaceModalController(
      $scope,
      $uibModalInstance,
      eventCrud,
      UdbPlace,
      location,
      categories,
      title,
      $translate
  ) {

    $scope.categories = categories;
    $scope.location = location;
    $scope.title = title;

    // Scope vars.
    $scope.newPlace = getDefaultPlace();
    $scope.newPlace.eventType.id = getFirstCategoryId();
    $scope.showValidation = false;
    $scope.invalidStreet = false;
    $scope.invalidNlPostalCode = false;
    $scope.saving = false;
    $scope.error = false;

    // Scope functions.
    $scope.addLocation = addLocation;
    $scope.resetAddLocation = resetAddLocation;
    $scope.translateEventTypes = translateEventTypes;

    /**
     * Get the default Place data
     * @returns {undefined}
     */
    function getDefaultPlace() {
      return {
        name: $scope.title,
        eventType: {
          id: ''
        },
        address: {
          addressCountry: $scope.location.address.addressCountry,
          addressLocality: $scope.location.address.addressLocality,
          postalCode: $scope.location.address.postalCode,
          streetAddress: '',
          locationNumber : ''
        }
      };
    }

    /**
     * Reset the location field(s).
     * @returns {undefined}
     */
    function resetAddLocation() {

      // Clear the current place data.
      $scope.newPlace = getDefaultPlace();

      // Close the modal.
      $uibModalInstance.dismiss();

    }
    /**
     * Adds a location.
     * @returns {undefined}
     */
    function addLocation() {

      // Forms are automatically known in scope.
      $scope.showValidation = true;
      if (!$scope.placeForm.$valid) {
        return;
      }

      if (!validateAddress($scope.newPlace.address.streetAddress)) {
        $scope.error = true;
        $scope.invalidStreet = true;
        return;
      }

      if ($scope.newPlace.address.addressCountry === 'NL') {
        if (!validateNlPostalCode($scope.newPlace.address.postalCode)) {
          $scope.error = true;
          $scope.invalidNlPostalCode = true;
          return;
        }
      }

      savePlace();
    }

    /**
     * Save the new place in db.
     */
    function savePlace() {

      $scope.saving = true;
      $scope.error = false;

      // Convert this place data to a Udb-place.
      var eventTypeLabel = '';
      for (var i = 0; i < $scope.categories.length; i++) {
        if ($scope.categories[i].id === $scope.newPlace.eventType.id) {
          eventTypeLabel = $scope.categories[i].label;
          break;
        }
      }

      var udbPlace = new UdbPlace();
      udbPlace.name = $scope.newPlace.name;
      udbPlace.calendar.calendarType = 'permanent';
      udbPlace.type = {
        id : $scope.newPlace.eventType.id,
        label : eventTypeLabel,
        domain : 'eventtype'
      };
      udbPlace.address = {
        addressCountry : $scope.newPlace.address.addressCountry,
        addressLocality : $scope.newPlace.address.addressLocality,
        postalCode : $scope.newPlace.address.postalCode,
        streetAddress : $scope.newPlace.address.streetAddress
      };
      udbPlace.mainLanguage = $translate.use() || 'nl';

      function showError() {
        $scope.saving = false;
        $scope.error = true;
      }

      function passOnPlaceData(eventFormData) {
        udbPlace.id = eventFormData.id;
        selectPlace(udbPlace);
        $scope.saving = true;
        $scope.error = false;
      }

      eventCrud
        .createOffer(udbPlace)
        .then(passOnPlaceData, showError);
    }

    /**
     * Select the place that should be used.
     *
     * @param {string} place
     *   Name of the place
     */
    function selectPlace(place) {
      $uibModalInstance.close(place);
    }

    /**
     * @return {string}
     */
    function getFirstCategoryId() {
      var sortedCategories = $scope.categories.sort(
        function(a, b) {
          return a.label.localeCompare(b.label);
        });
      return sortedCategories[0].id;
    }

    function getNumberFromStreetAddress(streetAddress) {
      return streetAddress.split(' ').pop();
    }

    function validateAddress(streetAddress) {
      var maximumNumberLength = 15;
      return getNumberFromStreetAddress(streetAddress).length <= maximumNumberLength;
    }

    function validateNlPostalCode(postalCode) {
      var regex = new RegExp(/^[0-9]{4}[a-z]{2}$/i);
      return regex.test(postalCode);
    }

    function translateEventTypes(type) {
      return $translate.instant('offerTypes.' + type);
    }
  }
  EventFormPlaceModalController.$inject = ["$scope", "$uibModalInstance", "eventCrud", "UdbPlace", "location", "categories", "title", "$translate"];

})();
})();

// Source: src/event_form/components/price-form-modal/price-form-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:PriceFormModalController
 * @description
 * # PriceFormModalController
 * Modal for adding and editing prices.
 */
angular
  .module('udb.event-form')
  .controller('PriceFormModalController', PriceFormModalController);

/* @ngInject */
function PriceFormModalController(
  $uibModalInstance,
  EventFormData,
  price,
  $filter,
  $scope
) {
  var pfmc = this;
  var originalPrice = [];

  pfmc.unsetPriceItemFree = unsetPriceItemFree;
  pfmc.setPriceItemFree = setPriceItemFree;
  pfmc.deletePriceItem = deletePriceItem;
  pfmc.showPriceDelete = showPriceDelete;
  pfmc.addPriceItem = addPriceItem;
  pfmc.cancelEditPrice = cancelEditPrice;
  pfmc.validatePrice = validatePrice;

  function init() {
    pfmc.mainLanguage = EventFormData.mainLanguage;
    pfmc.price = angular.copy(price);
    originalPrice = angular.copy(price);

    if (pfmc.price.length === 0) {
      var name = {};
      name[pfmc.mainLanguage] = 'Basistarief';
      var priceItem = {
        category: 'base',
        name: name,
        priceCurrency: 'EUR',
        price: ''
      };
      pfmc.price.push(priceItem);
    } else {
      angular.forEach(pfmc.price, function(info) {
        info.price = $filter('currency')(info.price, ',', 0);
      });
    }

    pfmc.priceError = false;
    pfmc.invalidPrice = false;
    pfmc.savingPrice = false;
    pfmc.formPriceSubmitted = false;
  }

  init();

  function unsetPriceItemFree(key) {
    pfmc.price[key].price = '';
  }

  function setPriceItemFree(key) {
    pfmc.price[key].price = '0,00';
    pfmc.priceForm.$setDirty();
  }

  function deletePriceItem(key) {
    pfmc.price.splice(key, 1);
    pfmc.priceForm.$setDirty();
  }

  function showPriceDelete(key) {
    return key !== 0;
  }

  function addPriceItem() {
    var priceItem = {
      category: 'tariff',
      name: {},
      priceCurrency: 'EUR',
      price: ''
    };
    priceItem.name[pfmc.mainLanguage] = '';
    pfmc.price.push(priceItem);
  }

  function cancelEditPrice() {
    pfmc.price = angular.copy(originalPrice);
    originalPrice = [];

    pfmc.invalidPrice = false;
    pfmc.priceError = false;
    pfmc.formPriceSubmitted = false;

    $uibModalInstance.dismiss('cancel');
  }

  function validatePrice() {
    pfmc.formPriceSubmitted = true;
    if (pfmc.priceForm.$valid) {
      pfmc.priceError = false;
      pfmc.invalidPrice = false;
      save();
    }
    else {
      pfmc.invalidPrice = true;
    }
  }

  function save() {
    angular.forEach(pfmc.price, function(info) {
      info.price = parseFloat(info.price.replace(',', '.'));
    });
    EventFormData.priceInfo = pfmc.price;
    $uibModalInstance.close();
  }

}
PriceFormModalController.$inject = ["$uibModalInstance", "EventFormData", "price", "$filter", "$scope"];
})();

// Source: src/event_form/components/price-info/price-info.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormPriceInfoController
 * @description
 * # EventFormImageUploadController
 * Modal for setting the reservation period.
 */
angular
  .module('udb.event-form')
  .component('priceInfo', {
    templateUrl: 'templates/priceInfo.html',
    controller: PriceInfoComponent,
    bindings: {
      price: '<',
      eventId: '<',
      organizer: '<'
    }
  });

/* @ngInject */
function PriceInfoComponent($uibModal, EventFormData, eventCrud, $rootScope, udbUitpasApi, $translate) {

  var controller = this;
  controller.mainLanguage = EventFormData.mainLanguage;

  controller.setPriceFree = setPriceFree;
  controller.changePrice = changePrice;
  controller.openModal = openModal;
  controller.$onInit = init;

  function setPriceFree() {

    if (controller.price.length === 0) {
      var language = controller.mainLanguage;
      var priceObjectName = {};
      $translate('prices.base').then(function (translations) {
        priceObjectName[language] = translations;
        controller.price = [
          {
            category: 'base',
            name: priceObjectName,
            priceCurrency: 'EUR',
            price: 0
          }
        ];

        EventFormData.priceInfo = controller.price;

        var promise = eventCrud.updatePriceInfo(EventFormData);
        promise.then(function() {
          $rootScope.$emit('eventFormSaved', EventFormData);
          if (!_.isEmpty(controller.price)) {
            controller.priceCssClass = 'state-complete';
          }
        });
      });
    }
  }

  function changePrice() {
    openModal();
  }

  function openModal() {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/price-form-modal.html',
      controller: 'PriceFormModalController',
      controllerAs: 'pfmc',
      size: 'lg',
      resolve: {
        price: function () {
          return controller.price;
        }
      }
    });

    modalInstance.result.then(savePrice, cancelPrice);
  }

  function init() {
    controller.price = EventFormData.priceInfo;

    if (controller.price.length) {
      controller.priceCssClass = 'state-complete';
    }
    else {
      controller.priceCssClass = '';
    }
  }

  function savePrice() {
    controller.savingPrice = true;
    controller.price = EventFormData.priceInfo;

    controller.editPrice = false;

    var promise = eventCrud.updatePriceInfo(EventFormData);
    promise.then(function() {
      $rootScope.$emit('eventFormSaved', EventFormData);
      if (!_.isEmpty(controller.price)) {
        controller.priceCssClass = 'state-complete';
      }
      controller.savingPrice = false;
      controller.formPriceSubmitted = false;
    }, function () {
      controller.priceError = true;
      controller.savingPrice = false;
      controller.formPriceSubmitted = false;
    });
  }

  function cancelPrice() {
    controller.price = EventFormData.priceInfo;
  }
}
PriceInfoComponent.$inject = ["$uibModal", "EventFormData", "eventCrud", "$rootScope", "udbUitpasApi", "$translate"];
})();

// Source: src/event_form/components/publish-modal/event-form-publish-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormPublishModalController
 * @description
 * # EventFormPublishModalController
 * Modal for postponing a publish.
 */
angular
  .module('udb.event-form')
  .controller('EventFormPublishModalController', EventFormPublishModalController);

/* @ngInject */
function EventFormPublishModalController($uibModalInstance, eventFormData, publishEvent) {
  var efpmc = this;
  efpmc.error = '';
  efpmc.hasPublicationDate = false;
  efpmc.publicationDate = eventFormData.availableFrom;
  efpmc.opened = false;
  efpmc.dismiss = dismiss;
  efpmc.savePublicationDate = savePublicationDate;
  efpmc.onFocus = onFocus;
  efpmc.toggleDatePicker = toggleDatePicker;

  var tomorrow = moment()
    .add(1, 'days')
    .startOf('day')
    .toDate();

  efpmc.drp = {
    dateFormat: 'dd/MM/yyyy',
    startOpened: false,
    options: {
      minDate: tomorrow,
      showWeeks: false
    }
  };

  function toggleDatePicker() {
    efpmc.opened = !efpmc.opened;
  }

  function dismiss() {
    $uibModalInstance.dismiss();
  }

  function onFocus() {
    efpmc.drp.startOpened = !efpmc.drp.startOpened;
  }

  function savePublicationDate() {
    if (!efpmc.publicationDate) {
      efpmc.error = 'empty';
    } else if (tomorrow <= efpmc.publicationDate) {
      eventFormData.availableFrom = new Date(efpmc.publicationDate.getFullYear(), efpmc.publicationDate.getMonth(),
      efpmc.publicationDate.getDate(), 0, 0, 0);
      publishEvent();
      $uibModalInstance.close();
    } else {
      efpmc.error = 'past';
    }
  }

}
EventFormPublishModalController.$inject = ["$uibModalInstance", "eventFormData", "publishEvent"];
})();

// Source: src/event_form/components/reservation-period/reservation-period.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:ReservationPeriodController
 * @description
 * # ReservationPeriodController
 */
angular
  .module('udb.event-form')
  .controller('ReservationPeriodController', ReservationPeriodController);

/* @ngInject */
function ReservationPeriodController($scope, EventFormData, $rootScope) {

  var controller = this;

  $scope.haveBookingPeriod = false;
  $scope.availabilityStarts = '';
  $scope.availabilityEnds = '';
  $scope.errorMessage = '';
  $scope.popup1 = {
    opened: false
  };

  $scope.popup2 = {
    opened: false
  };

  $scope.validateBookingPeriod = validateBookingPeriod;
  $scope.saveBookingPeriod = saveBookingPeriod;
  $scope.deleteBookingPeriod = deleteBookingPeriod;
  $scope.changeHaveBookingPeriod = changeHaveBookingPeriod;
  $scope.initBookingPeriodForm = initBookingPeriodForm;

  // Options for the datepicker
  $scope.dateOptions = {
    formatYear: 'yyyy',
    minDate: new Date(),
    startingDay: 1
  };

  initBookingPeriodForm();

  function validateBookingPeriod() {
    if ($scope.availabilityStarts > $scope.availabilityEnds) {
      $scope.errorMessage = 'De gekozen einddatum moet na de startdatum vallen.';
      return;
    }
    $scope.errorMessage = '';
    saveBookingPeriod();
  }

  function saveBookingPeriod() {
    if (moment($scope.availabilityStarts).isValid() && moment($scope.availabilityEnds).isValid()) {
      EventFormData.bookingInfo.availabilityStarts =
      moment($scope.availabilityStarts).hours(0).minutes(0).seconds(0).format();
      EventFormData.bookingInfo.availabilityEnds =
      moment($scope.availabilityEnds).hours(23).minutes(59).seconds(59).format();
    } else {
      EventFormData.bookingInfo.availabilityStarts = '';
      EventFormData.bookingInfo.availabilityEnds = '';
    }

    $scope.onBookingPeriodSaved();
  }

  function deleteBookingPeriod() {
    $scope.availabilityStarts = '';
    $scope.availabilityEnds = '';
    $scope.haveBookingPeriod = false;
    saveBookingPeriod();
  }

  function changeHaveBookingPeriod() {
    if (!$scope.haveBookingPeriod) {
      $scope.haveBookingPeriod = true;
    }
  }

  $scope.open1 = function() {
    $scope.popup1.opened = true;
  };

  $scope.open2 = function() {
    $scope.popup2.opened = true;
  };

  function initBookingPeriodForm() {
    if (EventFormData.bookingInfo.availabilityStarts ||
      EventFormData.bookingInfo.availabilityEnds) {
      $scope.haveBookingPeriod = true;
    }

    if (EventFormData.bookingInfo.availabilityStarts) {
      $scope.availabilityStarts = new Date(EventFormData.bookingInfo.availabilityStarts);
    }
    else {
      $scope.availabilityStarts = new Date();
    }

    if (EventFormData.bookingInfo.availabilityEnds) {
      $scope.availabilityEnds = new Date(EventFormData.bookingInfo.availabilityEnds);
    }
    else {
      $scope.availabilityEnds = new Date();
    }
  }
}
ReservationPeriodController.$inject = ["$scope", "EventFormData", "$rootScope"];
})();

// Source: src/event_form/components/reservation-period/reservation-period.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.event_form.directive:udbReservationPeriod
 * @description
 * # reservation period selection for event form
 */
angular
  .module('udb.event-form')
  .directive('udbReservationPeriod', ReservationPeriodDirective);

/* @ngInject */
function ReservationPeriodDirective() {

  return {
    restrict: 'AE',
    scope: {
      onBookingPeriodSaved: '&'
    },
    controller: 'ReservationPeriodController',
    templateUrl: 'templates/reservation-period.html'
  };

}
})();

// Source: src/event_form/components/save-time-tracker/save-time-tracker.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEventFormSaveTimeTracker
 * @description
 * Tracks the time of when an event form was last saved.
 */
angular
  .module('udb.event-form')
  .directive('udbEventFormSaveTimeTracker', TimeTrackerDirective);

/* @ngInject */
function TimeTrackerDirective($rootScope) {

  var template =
    '<div class="save-time-tracker small" ng-if="::timeLastSaved">' +
    '<span translate-once="eventForm.timeTracker.automatic_saved"></span> ' +
    '<span class="time-last-saved" ng-bind="timeLastSaved | date:\'HH:mm\'"></span> ' +
    '<span translate-once="eventForm.timeTracker.hour"></span>' +
    '</div>';

  return {
    template: template,
    restrict: 'EA',
    link: link
  };

  function link(scope) {
    scope.timeLastSaved = undefined;

    function refreshTimeLastSaved() {
      scope.timeLastSaved = new Date();
    }

    var eventFormSavedListener = $rootScope.$on('eventFormSaved', refreshTimeLastSaved);
    scope.$on('$destroy', eventFormSavedListener);
  }
}
TimeTrackerDirective.$inject = ["$rootScope"];
})();

// Source: src/event_form/components/suggestions/event-preview.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEventPreview
 * @description
 *  Previews an event provided by a result viewer.
 */
angular
  .module('udb.event-form')
  .directive('udbEventPreview', udbEventPreview);

/* @ngInject */
function udbEventPreview() {
  var eventPreviewDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'eventCtrl',
    templateUrl: 'templates/event-preview.directive.html'
  };

  return eventPreviewDirective;
}
})();

// Source: src/event_form/components/suggestions/event-suggestion.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEventSuggestion
 * @description
 *  Displays the event suggestions provided by a result viewer.
 */
angular
  .module('udb.event-form')
  .directive('udbEventSuggestion', udbEventSuggestion);

/* @ngInject */
function udbEventSuggestion() {
  var eventSuggestionDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'eventCtrl',
    templateUrl: 'templates/event-suggestion.directive.html'
  };

  return eventSuggestionDirective;
}
})();

// Source: src/event_form/components/suggestions/place-preview.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbPlacePreview
 * @description
 *  Previews a place provided by a result viewer.
 */
angular
  .module('udb.event-form')
  .directive('udbPlacePreview', udbPlacePreview);

/* @ngInject */
function udbPlacePreview() {
  var placePreviewDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'placeCtrl',
    templateUrl: 'templates/place-preview.directive.html'
  };

  return placePreviewDirective;
}
})();

// Source: src/event_form/components/suggestions/place-suggestion.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbPlaceSuggestion
 * @description
 * # udbPlaceSuggestion
 */
angular
  .module('udb.event-form')
  .directive('udbPlaceSuggestion', udbPlaceSuggestion);

/* @ngInject */
function udbPlaceSuggestion() {
  var placeSuggestionDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'placeCtrl',
    templateUrl: 'templates/place-suggestion.directive.html'
  };

  return placeSuggestionDirective;
}
})();

// Source: src/event_form/components/suggestions/suggestion-preview-modal.controller.js
(function () {
(function () {
  'use strict';

  /**
   * @ngdoc function
   * @name udbApp.controller:SuggestionPreviewModalController
   * @description
   * Provides a controller to preview suggestions
   */
  angular
    .module('udb.event-form')
    .controller('SuggestionPreviewModalController', SuggestionPreviewModalController);

  /* @ngInject */
  function SuggestionPreviewModalController(
    $scope,
    $uibModalInstance,
    selectedSuggestionId,
    resultViewer,
    suggestionType
  ) {

    /**
     * A factory that helps look for the items in a result viewer by id.
     *
     * @param {string} itemId
     *  The UUID of an UDB item.
     *
     * @return {Function}
     *  A function that can be used as a callback that looks through result viewer items
     */
    function itemIdentifier(itemId) {
      return function(item) {
        return item['@id'].indexOf(itemId) !== -1;
      };
    }

    $scope.previousSuggestion = previousSuggestion;
    $scope.nextSuggestion = nextSuggestion;
    $scope.currentSuggestionId = selectedSuggestionId;
    $scope.currentSuggestionIndex = _.findIndex(resultViewer.events, itemIdentifier(selectedSuggestionId));
    $scope.closePreview = closePreview;
    $scope.suggestionCount = resultViewer.totalItems;
    $scope.currentSuggestion = _.find(resultViewer.events, itemIdentifier(selectedSuggestionId));
    $scope.suggestions = resultViewer.events;
    $scope.suggestionType = suggestionType;

    function previousSuggestion() {
      var previousIndex = $scope.currentSuggestionIndex - 1;
      var suggestion = resultViewer.events[previousIndex.toString()];

      if (suggestion) {
        $scope.currentSuggestion = suggestion;
        $scope.currentSuggestionIndex = previousIndex;
      } else {
        closePreview();
      }
    }

    function nextSuggestion() {
      var nextIndex = $scope.currentSuggestionIndex + 1;
      var suggestion = resultViewer.events[nextIndex.toString()];

      if (suggestion) {
        $scope.currentSuggestion = suggestion;
        $scope.currentSuggestionIndex = nextIndex;
      } else {
        closePreview();
      }
    }

    function closePreview() {
      $uibModalInstance.close();
    }

  }
  SuggestionPreviewModalController.$inject = ["$scope", "$uibModalInstance", "selectedSuggestionId", "resultViewer", "suggestionType"];

})();
})();

// Source: src/event_form/components/validators/contact-info-validation.directive.js
(function () {
'use strict';

/**
* @ngdoc directive
* @name udb.event-form.directive:udbContactInfoValidation
* @description
* # directive for contact info validation
*/
angular
  .module('udb.event-form')
  .directive('udbContactInfoValidation', UdbContactInfoValidationDirective);

function UdbContactInfoValidationDirective() {

  var URL_REGEXP = /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/;
  var EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;

  return {
    restrict: 'A',
    require: 'ngModel',
    link: link
  };

  function link (scope, elem, attrs, ngModel) {
    // Scope methods.
    scope.loadInfo = loadInfo;
    scope.validateInfo = validateInfo;
    scope.clearInfo = clearInfo;
    scope.infoErrorMessage = '';

    scope.$on('organizerContactRefresh', function() {
      validateInfo();
    });

    function loadInfo() {
      if (ngModel.$modelValue.value !== '') {
        ngModel.$setValidity('contactinfo', true);
        scope.infoErrorMessage = '';
        validateInfo();
      }
    }

    /**
     * Validate the entered info.
     */
    function validateInfo() {

      if (ngModel.$modelValue.value === '' || ngModel.$modelValue.value === undefined) {
        scope.infoErrorMessage = 'Gelieve dit veld niet leeg te laten.';
        ngModel.$setValidity('contactinfo', false);
      }
      else {
        if (ngModel.$modelValue.type === 'email' && !EMAIL_REGEXP.test(ngModel.$modelValue.value)) {
          scope.infoErrorMessage = 'Gelieve een geldig e-mailadres in te vullen.';
          ngModel.$setValidity('contactinfo', false);
        }
        else if (ngModel.$modelValue.type === 'url') {
          var viewValue = ngModel.$viewValue;

          if (!URL_REGEXP.test(viewValue.value)) {
            scope.infoErrorMessage = 'Gelieve een geldige url in te vullen.';
            ngModel.$setValidity('contactinfo', false);
          }
        }
      }
    }

    /**
     * Clear the entered info when switching type.
     */
    function clearInfo() {
      ngModel.$modelValue.value = '';
      ngModel.$modelValue.booking = false;
      scope.infoErrorMessage = '';
      ngModel.$setValidity('contactinfo', true);
    }

  }
}
})();

// Source: src/event_form/copyright-negotiator.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.event-form.copyrightNegotiator
 * @description
 * # copyrightNegotiator
 * Service in the udb.event-form.
 */
angular
  .module('udb.event-form')
  .service('copyrightNegotiator', CopyrightNegotiator);

/* @ngInject */
function CopyrightNegotiator($cookies) {
  var service = this;
  var CookieKey = 'copyright-agreement-confirmed';

  service.confirm = function () {
    var expirationDate = moment().add(1, 'year').toDate();
    var agreement = {
      confirmed: true
    };

    $cookies.putObject(
      CookieKey,
      agreement,
      {
        expires: expirationDate
      }
    );
  };

  service.confirmed = function () {
    var agreement = $cookies.getObject(CookieKey);
    return agreement ? agreement.confirmed : false;
  };
}
CopyrightNegotiator.$inject = ["$cookies"];
})();

// Source: src/event_form/event-form-data.factory.js
(function () {
'use strict';

/**
 * @typedef {Object} EventType
 * @property {string} id
 * @property {string} label
 */

/**
 * @typedef {Object} EventTheme
 * @property {string} id
 * @property {string} label
 */

/**
 * @typedef {Object} MediaObject
 * @property {string} @id
 * @property {string} @type
 * @property {string} id
 * @property {string} url
 * @property {string} thumbnailUrl
 * @property {string} description
 * @property {string} copyrightHolder
 */

/**
 * @typedef {Object} BookingInfo
 * @property {string} url
 * @property {Object} urlLabel
 * @property {string} email
 * @property {string} phone
 */

/**
 * @typedef {Object} OpeningHoursData
 * @property {string} opens
 * @property {string} closes
 * @property {string[]} dayOfWeek
 */

/**
 * @ngdoc service
 * @name udb.core.EventFormData
 * @description
 * Contains data needed for the steps in the event form.
 */
angular
  .module('udb.event-form')
  .factory('EventFormData', EventFormDataFactory);

/* @ngInject */
function EventFormDataFactory(rx, calendarLabels, moment, OpeningHoursCollection, appConfig, $translate) {

  /**
   * @class EventFormData
   */
  var eventFormData = {
    /**
     * Initialize the properties with default data
     */
    init: function() {
      this.apiUrl = '';
      this.isEvent = true; // Is current item an event.
      this.isPlace = false; // Is current item a place.
      this.showStep1 = true;
      this.showStep2 = false;
      this.showStep3 = false;
      this.showStep4 = false;
      this.showStep5 = false;
      this.majorInfoChanged = false;
      // Properties that will be copied to UdbEvent / UdbPlace.
      this.id = '';
      this.mainLanguage = $translate.use() || 'nl';
      this.name = '';
      this.description = {};
      // Events have a location
      this.location = {
        'id' : null,
        'name': '',
        'address': {
          'addressCountry': 'BE',
          'addressLocality': '',
          'postalCode': '',
          'streetAddress': ''
        }
      };
      // Places only have an address
      this.address = {
        'addressCountry': 'BE',
        'addressLocality': '',
        'postalCode': '',
        'streetAddress': ''
      };
      this.place = {};
      /** @type {EventType} */
      this.type = {};
      /** @type {EventTheme} */
      this.theme = {};
      //
      this.calendar = {};
      this.calendar.calendarType = '';
      this.calendar.timeSpans = [];
      this.calendar.openingHours = [];
      //
      this.typicalAgeRange = '';
      this.organizer = {};
      this.contactPoint = {
        url : [],
        phone : [],
        email : []
      };
      this.facilities = [];
      /** @type {BookingInfo} **/
      this.bookingInfo = {};
      /** @type {MediaObject[]} **/
      this.mediaObjects = [];
      this.image = [];
      this.additionalData = {};
      this.priceInfo = [];
      this.workflowStatus = 'DRAFT';
      this.availableFrom = '';
      /**
       * @type {string[]}
       */
      this.labels = [];

      this.audienceType = 'everyone';

      this.timingChanged$ = rx.createObservableFunction(this, 'timingChangedCallback');

    },

    clone: function () {
      var clone = _.cloneDeep(this);
      clone.timingChanged$ = rx.createObservableFunction(clone, 'timingChangedCallback');

      return clone;
    },

    /**
     * Show the given step.
     * @param {number} stepNumber
     */
    showStep: function(stepNumber) {
      this['showStep' + stepNumber] = true;
    },

    /**
     * Hide the given step.
     * @param {number} stepNumber
     */
    hideStep: function (stepNumber) {
      this['showStep' + stepNumber] = false;
    },

    /**
     * Set the name of the offer for a given langcode.
     */
    setName: function(name, langcode) {
      this.name[langcode] = name;
    },

    /**
     * Get the name of the offer for a given langcode.
     */
    getName: function(langcode) {
      return this.name[langcode];
    },

    /**
     * Gets the mainLanguage for a offer.
     */
    getMainLanguage: function() {
      return this.mainLanguage;
    },

    /**
     * Sets the mainLanguage for a offer.
     */
    setMainLanguage: function(langcode) {
      this.mainLanguage = langcode;
    },

    /**
     * Set the description for a given langcode.
     */
    setDescription: function(description, langcode) {
      this.description[langcode] = description;
    },

    /**
     * Get the description for a given langcode.
     */
    getDescription: function(langcode) {
      return this.description[langcode];
    },

    /**
     * Set the event type and clear the selected theme.
     * @param {EventType} eventType
     */
    setEventType: function(eventType) {
      this.type = eventType;
      this.removeTheme();
    },

    removeType: function () {
      this.type = {};
    },

    /**
     * Get the event type.
     * @return {EventType}
     */
    getEventType: function() {
      return this.type;
    },

    /**
     * Get the label for the event type.
     */
    getEventTypeLabel: function() {
      return this.type.label ? this.type.label : '';
    },

    /**
     * Set the theme.
     * @param {EventTheme} theme
     */
    setTheme: function(theme) {
      this.theme = theme;
    },

    removeTheme: function () {
      this.theme = {};
    },

    /**
     * Get the theme.
     * @return {EventTheme}
     */
    getTheme: function() {
      return this.theme;
    },

    /**
     * Get the label for the theme.
     */
    getThemeLabel: function() {
      return this.theme.label ? this.theme.label : '';
    },

    getPeriodicStartDate : function() {
      return this.calendar.startDate;
    },

    setPeriodicStartDate: function(startDate) {
      this.calendar.startDate = startDate;
    },

    getPeriodicEndDate : function() {
      return this.calendar.endDate;
    },

    setPeriodicEndDate: function(endDate) {
      var newEndDate =  moment(endDate).endOf('day').toDate();
      this.calendar.endDate = newEndDate;
    },

    /**
     * Reset the location.
     */
    resetLocation: function() {
      this.location = {
        'id' : null,
        'name': '',
        'address': {
          'addressCountry': 'BE',
          'addressLocality': '',
          'postalCode': '',
          'streetAddress': ''
        }
      };
    },

    /**
     * Set the location.
     */
    setLocation: function(location) {
      this.location = location;
    },

    /**
     * Get the location.
     */
    getLocation: function() {
      return this.location;
    },

    /**
     * @param {Date|string} start
     * @param {Date|string} end
     * @param {Object} status
     * @param {Object} bookingAvailability
     */
    addTimeSpan: function(start, end, status, bookingAvailability) {
      var allDay = moment(start).format('HH:mm') === '00:00' && moment(end).format('HH:mm') === '23:59';
      this.calendar.timeSpans.push({
        'start': moment(start).toISOString(),
        'end': moment(end).toISOString(),
        'allDay': allDay,
        'status': status ? status : {type: 'Available'},
        'bookingAvailability': bookingAvailability ? bookingAvailability : {type: 'Available'}
      });
    },

    /**
     * Reset the calendar.
     */
    resetCalendar: function() {
      this.calendar.timeSpans = [];
      this.calendar.calendarType = '';
      this.calendar.activeCalendarLabel = '';
      this.calendar.activeCalendarType = '';
    },

    /**
     * Get the earliest date of an offer, or null for permanent events
     */
    getFirstStartDate: function() {
      var firstStartDate = null;
      if (this.calendar.calendarType === 'single' || this.calendar.calendarType === 'multiple') {
        firstStartDate = _.first(this.calendar.timeSpans).start;
      }

      if (eventFormData.calendar.calendarType === 'periodic') {
        firstStartDate = this.calendar.startDate;
      }
      return firstStartDate;
    },

    /**
     * Get the earliest date of an offer, or null for permanent events
     */
    getLastEndDate: function() {
      var lastEndDate = null;
      if (this.calendar.calendarType === 'single' || this.calendar.calendarType === 'multiple') {
        lastEndDate = _.last(this.calendar.timeSpans).end;
      }

      if (eventFormData.calendar.calendarType === 'periodic') {
        lastEndDate = this.calendar.endDate;
      }
      return lastEndDate;
    },

    /**
     * Get the type that will be saved.
     */
    getType: function() {
      return this.isEvent ? 'event' : 'place';
    },

    /**
     * Reset the selected organizers.
     */
    resetOrganizer: function() {
      this.organizer = {};
    },

    /**
     * Reset the contact point.
     */
    resetContactPoint: function() {
      this.contactPoint = {
        url : [],
        phone : [],
        email : []
      };
    },

    /**
     * Sets the booking info array.
     *
     * @param {BookingInfo} bookingInfo
     */
    setBookingInfo : function(bookingInfo) {
      this.bookingInfo = bookingInfo;
    },

    /**
     * Add a new image.
     *
     * @param {MediaObject} mediaObject
     */
    addImage : function(mediaObject) {
      this.mediaObjects = _.union(this.mediaObjects, [mediaObject]);
    },

    /**
     * Edit a media object.
     */
    editMediaObject : function(indexToEdit, url, thumbnailUrl, description, copyrightHolder) {
      this.image[indexToEdit] = {
        url : url,
        thumbnailUrl : thumbnailUrl,
        description : description,
        copyrightHolder : copyrightHolder
      };
      this.image[indexToEdit]['@type'] = 'ImageObject';
    },

    /**
     * Update the info of the given media object.
     * @param {MediaObject} updatedMediaObject
     */
    updateMediaObject: function (updatedMediaObject)  {
      this.mediaObjects = _.map(this.mediaObjects, function (existingMediaObject) {
        var mediaObject;

        if (existingMediaObject['@id'] === updatedMediaObject['@id']) {
          mediaObject = updatedMediaObject;
        } else {
          mediaObject = existingMediaObject;
        }

        return mediaObject;
      });
    },

    /**
     * Remove a media object from this item.
     *
     *@param {MediaObject} mediaObject
     */
    removeMediaObject: function(mediaObject) {
      this.mediaObjects = _.reject(this.mediaObjects, {'@id': mediaObject['@id']});
    },

    /**
     * Select the main image for this item.
     *
     * @param {mediaObject} image
     */
    selectMainImage: function (image) {
      var reindexedMedia = _.without(this.mediaObjects, image);
      reindexedMedia.unshift(image);

      this.mediaObjects = reindexedMedia;
    },

    /**
     * @param {number|undefined} min
     * @param {number|undefined} max
     */
    setTypicalAgeRange: function(min, max) {
      this.typicalAgeRange = (isNaN(min) ? '' : min) + '-' + (isNaN(max) ? '' : max);
    },

    /**
     * Get the typical age range as an object or undefined when no range is set.
     * When the offer is intended for all ages, you do get a range but both min and max will be undefined.
     *
     * @return {{min: number|undefined, max: number|undefined}|undefined}
     */
    getTypicalAgeRange: function () {
      if (_.isEmpty(this.typicalAgeRange)) {
        return;
      }

      var ageRange = {min: undefined, max: undefined};
      var rangeArray = this.typicalAgeRange.split('-');

      if (rangeArray[0]) {ageRange.min =  parseInt(rangeArray[0]);}
      if (rangeArray[1]) {ageRange.max =  parseInt(rangeArray[1]);}

      return ageRange;
    },

    /**
     * Check if the timing of the event is periodic and has a valid range.
     * @return {boolean}
     */
    hasValidPeriodicRange: function () {
      var startDate = this.getPeriodicStartDate();
      var endDate = this.getPeriodicEndDate();

      return this.calendar.calendarType === 'periodic' && !!startDate && !!endDate && startDate < endDate;
    },

    /**
     * Init the calendar for the current selected calendar type.
     */
    initCalendar: function () {
      var formData = this;
      var calendarType = _.findWhere(calendarLabels, {id: formData.calendar.calendarType});
      if (calendarType) {
        this.calendar.activeCalendarLabel = calendarType.label;
        this.calendar.activeCalendarType = formData.calendar.calendarType;
      }
    },

    timingChanged: function () {
      if (this.showStep2) {
        this.showStep(3);
      }
      this.timingChangedCallback(this);
    },

    timingChangedCallback: function () {
    },

    initOpeningHours: function(openingHours) {
      OpeningHoursCollection.deserialize(openingHours);
    },

    /**
     * Click listener on the calendar type buttons.
     * Activate the selected calendar type.
     */
    setCalendarType: function (type) {
      var formData = this;

      // Set start & endDate to undefined if calendarType is permanent
      if (type === 'permanent') {
        formData.calendar.startDate = undefined;
        formData.calendar.endDate = undefined;
        formData.timingChanged();
      }

      // Check if previous calendar type was the same.
      // If so, we don't need to create new opening hours. Just show the previous entered data.
      if (formData.calendar.calendarType === type) {
        return;
      }

      // A type is chosen, start a complete new calendar, removing old data
      formData.resetCalendar();
      formData.calendar.calendarType = type;

      if (formData.calendar.calendarType === 'single') {
        formData.openingHours = []; // Major info is created from this property and not the one in calendar
        if (appConfig.calendarHighlight.date) {
          var startTime = appConfig.calendarHighlight.startTime ?
          moment(appConfig.calendarHighlight.date + ' ' + appConfig.calendarHighlight.startTime, 'YYYY-MM-DD HH:mm')
          .toDate() : '';

          var endTime = appConfig.calendarHighlight.endTime ?
          moment(appConfig.calendarHighlight.date + ' ' + appConfig.calendarHighlight.endTime, 'YYYY-MM-DD HH:mm')
          .toDate() : '';

          formData.addTimeSpan(startTime, endTime);
        } else {
          formData.addTimeSpan(moment().startOf('day'), moment().endOf('day'));
        }
        formData.saveTimeSpans(formData.calendar.timeSpans);
      }

      if (formData.calendar.calendarType === 'periodic') {
        formData.calendar.startDate = moment().startOf('day').toDate();
        if (appConfig.addOffer && appConfig.addOffer.defaultEndPeriod) {
          var defaultEndPeriod = appConfig.addOffer.defaultEndPeriod;
          formData.calendar.endDate =
              moment(formData.calendar.startDate).add(defaultEndPeriod, 'd').startOf('day').toDate();
        } else {
          formData.calendar.endDate = moment().add(1, 'y').startOf('day').toDate();
        }
        formData.timingChanged();
      }

      formData.initCalendar();

      if (formData.id) {
        formData.majorInfoChanged = true;
      }

    },

    /**
     * Check if the given timeSpan is a valid date object.
     * @param {Object} timeSpan
     * @returns {boolean}
     */
    isValidDate: function(timeSpan) {
      return timeSpan instanceof Date;
    },

    /**
     * Toggle the starthour field for given timeSpan.
     * @param {Object} timeSpan
     *   Timespan to change
     */
    toggleStartHour: function(timeSpan) {
      // If we hide the textfield, empty all other time fields.
      if (!timeSpan.showStartHour) {
        timeSpan.start.setHours(0);
        timeSpan.start.setMinutes(0);
        timeSpan.end.setHours(0);
        timeSpan.end.setMinutes(0);
        this.timingChanged();
      }
      else {
        var startHour = moment(timeSpan.date);
        var endHour = moment(timeSpan.date).endOf('day');

        timeSpan.startHour = startHour.format('HH:mm');
        timeSpan.startHourAsDate = startHour.toDate();
        timeSpan.endHour = endHour.format('HH:mm');
        timeSpan.endHourAsDate = endHour.toDate();
        timeSpan.showEndHour = false;
      }
    },

    /**
     * Toggle the endhour field for given timeSpan
     * @param {Object} timeSpan
     *   Timestamp to change
     */
    toggleEndHour: function(timeSpan) {
      var endHourAsDate = timeSpan.date;
      // If we hide the textfield, empty also the input.
      if (!timeSpan.showEndHour) {
        endHourAsDate.setHours(23);
        endHourAsDate.setMinutes(59);

        timeSpan.endHour = '23:59';
        timeSpan.endHourAsDate = endHourAsDate;
        this.timingChanged();
      }
      else {
        var nextThreeHours = moment(timeSpan.startHourAsDate).add(3, 'hours').minutes(0);
        endHourAsDate.setHours(nextThreeHours.hours());
        endHourAsDate.setMinutes(nextThreeHours.minutes());

        timeSpan.endHour = moment(endHourAsDate).format('HH:mm');
        timeSpan.endHourAsDate = endHourAsDate;
      }
    },

    hoursChanged: function (timeSpan) {
      var startHourAsDate;
      var endHourAsDate;
      if (timeSpan.showStartHour || timeSpan.showEndHour) {
        if (timeSpan.showStartHour) {
          if (timeSpan.startHourAsDate !== undefined) {
            startHourAsDate = moment(timeSpan.startHourAsDate);
          }
          else {
            startHourAsDate = moment(timeSpan.startHourAsDate);
            startHourAsDate.hours(0);
            startHourAsDate.minutes(0);
          }
          timeSpan.startHour = startHourAsDate.format('HH:mm');
        }

        if (timeSpan.showEndHour) {
          // if the endhour is invalid, send starthour to backend.
          if (timeSpan.endHourAsDate !== undefined) {
            endHourAsDate = moment(timeSpan.endHourAsDate);
          }
          else {
            endHourAsDate = startHourAsDate;
          }
          timeSpan.endHour = endHourAsDate.format('HH:mm');
        }
        this.timingChanged();
      }
    },

    saveOpeningHours: function (openingHours) {
      this.calendar.openingHours = openingHours;
      this.timingChanged();
    },

    saveTimeSpans: function (timeSpans) {
      this.calendar.timeSpans = timeSpans;
      this.calendar.startDate = this.getFirstStartDate();
      this.calendar.endDate = this.getLastEndDate();
      this.timingChanged();
    },

    periodicTimingChanged: function () {
      var formData = this;

      if (formData.id) {
        //TODO: this was wrapping the code below, not sure why...
      }

      var endDate = this.getPeriodicEndDate();
      this.setPeriodicEndDate(endDate);

      if (formData.hasValidPeriodicRange()) {
        formData.periodicRangeError = false;
        formData.timingChanged();
      } else {
        formData.periodicRangeError = true;
      }
    }
  };

  // initialize the data
  eventFormData.init();

  return eventFormData;
}
EventFormDataFactory.$inject = ["rx", "calendarLabels", "moment", "OpeningHoursCollection", "appConfig", "$translate"];
})();

// Source: src/event_form/event-form.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormController
 * @description
 * # EventFormController
 * Init the event form
 */
angular
  .module('udb.event-form')
  .controller('EventFormController', EventFormController);

/* @ngInject */
function EventFormController(
    $scope,
    offerId,
    EventFormData,
    udbApi,
    moment,
    jsonLDLangFilter,
    $q,
    appConfig,
    $translate
) {

  // Other controllers won't load until this boolean is set to true.
  $scope.loaded = false;
  $scope.showLangWarning = false;

  // Make sure we start off with clean data every time this controller gets called
  EventFormData.init();

  $q.when(offerId)
    .then(fetchOffer, startCreating);

  function startCreating() {

    EventFormData.initOpeningHours([]);

    var calendarConfig = _.get(appConfig, 'calendarHighlight');

    if (EventFormData.isEvent && calendarConfig && calendarConfig.date) {
      preselectDate(calendarConfig);
    }

    $scope.language = EventFormData.mainLanguage;
    $scope.loaded = true;
  }

  function preselectDate(calendarConfig) {
    EventFormData.calendar.calendarType = 'single';
    EventFormData.addTimeSpan(
      calendarConfig.startTime ? moment(calendarConfig.date + ' ' + calendarConfig.startTime, 'YYYY-MM-DD HH:mm') : '',
      calendarConfig.endTime ? moment(calendarConfig.date + ' ' + calendarConfig.endTime, 'YYYY-MM-DD HH:mm') : ''
    );
    EventFormData.initCalendar();
    //EventFormData.showStep(3);
  }

  /**
   * @param {string|null} offerId
   */
  function fetchOffer(offerId) {
    if (!offerId) {
      startCreating();
    } else {
      udbApi
        .getOffer(offerId)
        .then(startEditing);
    }
  }

  /**
   *
   * @param {UdbPlace|UdbEvent} offer
   */
  function startEditing(offer) {
    var offerType = offer.url.split('/').shift();

    EventFormData.status = offer.status;

    if (offerType === 'event') {
      EventFormData.isEvent = true;
      EventFormData.isPlace = false;

      EventFormData.subEvent = offer.subEvent;

      copyItemDataToFormData(offer);

      // Copy location.
      if (offer.location && offer.location.id) {
        var location = jsonLDLangFilter(offer.location, offer.mainLanguage, true);
        EventFormData.location = {
          id : location.id.split('/').pop(),
          name : location.name,
          address : location.address,
          isDummyPlaceForEducationEvents: location.isDummyPlaceForEducationEvents
        };
      }

      EventFormData.audienceType = offer.audience.audienceType;
    }

    if (offerType === 'place') {
      EventFormData.isEvent = false;
      EventFormData.isPlace = true;
      copyItemDataToFormData(offer);

      // Places only have an address
      if (offer.address) {
        var translatedOffer = jsonLDLangFilter(offer, offer.mainLanguage, true);
        EventFormData.address = translatedOffer.address;
      }
    }

    if ($translate.use() !== $scope.language) {
      $scope.showLangWarning = true;
    }
  }

  /**
   * Copy all item data to form data so it can be used for edting.
   * var {UdbEvent|UdbPlace} item
   */
  function copyItemDataToFormData(item) {

    // Properties that exactly match.
    var sameProperties = [
      'id',
      'type',
      'theme',
      'openingHours',
      'description',
      'typicalAgeRange',
      'organizer',
      'bookingInfo',
      'contactPoint',
      'priceInfo',
      'facilities',
      'image',
      'additionalData',
      'apiUrl',
      'workflowStatus',
      'availableFrom',
      'labels',
      'mainLanguage'
    ];

    if (item.isDummyPlaceForEducationEvents) {
      EventFormData.isDummyPlaceForEducationEvents = item.isDummyPlaceForEducationEvents;
    }

    for (var i = 0; i < sameProperties.length; i++) {
      if (item[sameProperties[i]]) {
        EventFormData[sameProperties[i]] = item[sameProperties[i]];
      }
    }

    if (item.mediaObject) {
      EventFormData.mediaObjects = item.mediaObject || [];

      if (item.image) {
        var mainImage = _.find(EventFormData.mediaObjects, {'contentUrl': item.image});
        EventFormData.selectMainImage(mainImage);
      }
    }

    // 1. Main language is now a required property.
    // Events can be created in a given main language.
    // 2. Previous projections had a default main language of nl.
    // 3. Even older projections had a non-translated name.
    // @todo @mainLanguage after a full replay only case 1 needs to be supported.
    EventFormData.name = _.get(item.name, item.mainLanguage, null) ||
        _.get(item.name, 'nl', null) ||
        _.get(item, 'name', '');

    // Prices tariffs can be translated since III-2545
    // @todo @mainLanguage after a full replay only case 1 needs to be supported.

    if (!_.isEmpty(EventFormData.priceInfo)) {
      if (!EventFormData.priceInfo[0].name.nl && !EventFormData.priceInfo[0].name.en &&
        !EventFormData.priceInfo[0].name.fr && !EventFormData.priceInfo[0].name.de) {
        EventFormData.priceInfo = _.map(EventFormData.priceInfo, function(item) {
          var priceInfoInDutch = _.cloneDeep(item);
          priceInfoInDutch.name = {'nl': item.name};
          item = priceInfoInDutch;
          return item;
        });
      }
    }

    EventFormData.calendar.calendarType = item.calendarType; // === 'multiple' ? 'single' : item.calendarType;

    // Set correct date object for start and end.
    if (item.startDate) {
      EventFormData.calendar.startDate = moment(item.startDate).toDate();
    }

    if (item.endDate) {
      EventFormData.calendar.endDate = moment(item.endDate).toDate();
    }

    // SubEvents are timeSpans.
    if (item.calendarType === 'multiple' && item.subEvent) {
      for (var j = 0; j < item.subEvent.length; j++) {
        var subEvent = item.subEvent[j];
        EventFormData.addTimeSpan(
          subEvent.startDate,
          subEvent.endDate,
          subEvent.status || item.status,
          subEvent.bookingAvailability || item.bookingAvailability
        );
      }
    }
    else if (item.calendarType === 'single') {
      EventFormData.addTimeSpan(item.startDate, item.endDate, item.status, item.bookingAvailability);
    }

    if (EventFormData.calendar.calendarType) {
      EventFormData.initCalendar();
    }

    EventFormData.initOpeningHours(_.get(EventFormData, 'openingHours', []));

    $scope.language = EventFormData.mainLanguage;
    $scope.loaded = true;
    EventFormData.showStep(1);
    EventFormData.showStep(2);
    EventFormData.showStep(3);
    EventFormData.showStep(4);
    EventFormData.showStep(5);

  }
}
EventFormController.$inject = ["$scope", "offerId", "EventFormData", "udbApi", "moment", "jsonLDLangFilter", "$q", "appConfig", "$translate"];
})();

// Source: src/event_form/event-form.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:event-form.html
 * @description
 * # udb event form directive
 */
angular
  .module('udb.event-form')
  .directive('udbEventForm', EventFormDirective);

/* @ngInject */
function EventFormDirective() {
  return {
    templateUrl: 'templates/event-form.html',
    restrict: 'EA',
  };
}

/**
 * @ngdoc directive
 * @name udb.search.directive:event-form-extras.html
 * @description
 * # event form extras. Default empty, decorate it to add custom extras.
 */
angular
  .module('udb.event-form')
  .directive('udbEventFormExtras', EventFormExtras);

/* @ngInject */
function EventFormExtras() {
  return {
    template: '',
    restrict: 'EA',
  };
}

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEvent
 * @description
 * # udb search directive
 */
angular
  .module('udb.event-form')
  .directive('udbEventFormStep1', EventFormStep1Directive);

/* @ngInject */
function EventFormStep1Directive() {
  return {
    templateUrl: 'templates/event-form-step1.html',
    restrict: 'EA',
  };
}

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEvent
 * @description
 * # udb search directive
 */
angular
  .module('udb.event-form')
  .directive('udbEventFormStep2', EventFormStep2Directive);

/* @ngInject */
function EventFormStep2Directive() {
  return {
    templateUrl: 'templates/event-form-step2.html',
    restrict: 'EA',
  };
}

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEvent
 * @description
 * # udb search directive
 */
angular
  .module('udb.event-form')
  .directive('udbEventFormStep3', EventFormStep3Directive);

/* @ngInject */
function EventFormStep3Directive() {
  return {
    templateUrl: 'templates/event-form-step3.html',
    restrict: 'EA',
  };
}

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEvent
 * @description
 * # udb search directive
 */
angular
  .module('udb.event-form')
  .directive('udbEventFormStep4', EventFormStep4Directive);

/* @ngInject */
function EventFormStep4Directive() {
  return {
    templateUrl: 'templates/event-form-step4.html',
    restrict: 'EA',
  };
}

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEvent
 * @description
 * # udb search directive
 */
angular
  .module('udb.event-form')
  .directive('udbEventFormStep5', EventFormStep5Directive);

/* @ngInject */
function EventFormStep5Directive() {
  return {
    templateUrl: 'templates/event-form-step5.html',
    restrict: 'EA',
  };
}

/**
 * @ngdoc directive
 * @name udb.event-form.directive:udbEventFormPublish
 * @description
 * # udb event form publish directive
 */
angular
  .module('udb.event-form')
  .directive('udbEventFormPublish', EventFormPublishDirective);

/* @ngInject */
function EventFormPublishDirective() {
  return {
    templateUrl: 'templates/event-form-publish.html',
    restrict: 'EA',
    controller: 'EventFormPublishController',
    controllerAs: 'efpc'
  };
}
})();

// Source: src/event_form/http-prefix.directive.js
(function () {
'use strict';

angular
  .module('udb.event-form')
  .directive('udbHttpPrefix', HttpPrefixDirective);

function HttpPrefixDirective() {
  return {
    restrict: 'A',
    require: 'ngModel',
    link: function (scope, element, attrs, controller) {
      function ensureHttpPrefix(value) {
        // Need to add prefix if we don't have http:// prefix already AND we don't have part of it
        if (value && !/^(https?):\/\//i.test(value) && !isPrefixed(value)) {
          controller.$setViewValue('http://' + value);
          controller.$render();
          return 'http://' + value;
        }
        else {
          return value;
        }
      }

      function isPrefixed(value) {
        return 'http://'.indexOf(value) === 0 || 'https://'.indexOf(value) === 0;
      }

      controller.$formatters.push(ensureHttpPrefix);
      controller.$parsers.splice(0, 0, ensureHttpPrefix);
    }
  };
}
})();

// Source: src/event_form/steps/event-form-publish.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormStep3Controller
 * @description
 * # EventFormStep3Controller
 * Step 3 of the event form
 */
angular
  .module('udb.event-form')
  .controller('EventFormPublishController', EventFormPublishController);

/* @ngInject */
function EventFormPublishController(
    appConfig,
    EventFormData,
    eventCrud,
    OfferWorkflowStatus,
    $q,
    $location,
    $uibModal
) {

  var controller = this;

  controller.publish = publish;
  controller.canPublishLater = canPublishLater;
  controller.publishLater = publishLater;
  controller.preview = preview;
  controller.isDraft = isDraft;
  controller.saving = false;

  // main storage for event form.
  controller.eventFormData = EventFormData;

  var defaultPublicationDate = _.get(appConfig, 'offerEditor.defaultPublicationDate');
  controller.hasNoDefault = isNaN(Date.parse(defaultPublicationDate));
  if (!controller.hasNoDefault && isDraft) {
    controller.eventFormData.availableFrom = defaultPublicationDate;
  }

  function canPublishLater() {
    var tomorrow = moment()
      .add(1, 'days')
      .startOf('day')
      .toDate();

    var startDate = controller.eventFormData.getFirstStartDate();

    if (startDate && startDate < tomorrow) {
      return false;
    }

    return controller.hasNoDefault && isDraft(controller.eventFormData.workflowStatus);
  }

  function publish() {
    controller.saving = true;
    controller.error = '';
    eventCrud
      .publishOffer(EventFormData, controller.eventFormData.availableFrom)
      .then(function() {
        setEventAsReadyForValidation();
        redirectToDetailPage();
      })
      .catch(function () {
        controller.error = 'Dit event kon niet gepubliceerd worden, gelieve later opnieuw te proberen.';
      });
  }

  function publishLater() {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/event-form-publish-modal.html',
      controller: 'EventFormPublishModalController',
      controllerAs: 'efpmc',
      resolve: {
        eventFormData: function () {
          return controller.eventFormData;
        },
        publishEvent : function() {
          return controller.publish;
        }
      }
    });
  }

  function setEventAsReadyForValidation() {
    EventFormData.workflowStatus = OfferWorkflowStatus.READY_FOR_VALIDATION;
    return $q.resolve();
  }

  function redirectToDetailPage() {
    $location.path('/' + EventFormData.getType() + '/' + EventFormData.id + '/published');
  }

  function preview() {
    $location.path('/' + EventFormData.getType() + '/' + EventFormData.id + '/saved');
  }

  function isDraft(status) {
    return (status === OfferWorkflowStatus.DRAFT);
  }
}
EventFormPublishController.$inject = ["appConfig", "EventFormData", "eventCrud", "OfferWorkflowStatus", "$q", "$location", "$uibModal"];
})();

// Source: src/event_form/steps/event-form-step1.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormStep1Controller
 * @description
 * # EventFormStep1Controller
 * Step 1 of the event form
 */
angular
  .module('udb.event-form')
  .controller('EventFormStep1Controller', EventFormStep1Controller);
// .filter('groupBy', GroupByFilter);

/* @ngInject */
function EventFormStep1Controller($scope, $rootScope, EventFormData, eventCategories, placeCategories, $translate) {

  var controller = this;

  // main storage for event form.
  $scope.eventFormData = EventFormData;

  // Categories, event types, places.
  $scope.eventTypeLabels = eventCategories;
  $scope.placeLabels = placeCategories;

  $scope.canRefine = false;
  $scope.canRefineByGroups = false;
  $scope.showAllEventTypes = false;
  $scope.showAllPlaces = false;
  $scope.eventThemeLabels = [];
  $scope.eventGroupLabels = [];

  $scope.activeEventType = '';
  $scope.activeEventTypeLabel = '';
  $scope.activeTheme = '';
  $scope.activeThemeLabel = '';

  $scope.splitTypes = true;

  /**
   * Update the event type and theme picker.
   * @param {EventFormData} eventFormData
   */
  controller.updateEventTypeAndThemePicker = function (eventFormData) {
    var eventTypeId = eventFormData.getEventType().id;
    var eventThemeId = eventFormData.getTheme().id;

    var eventTypes = _.union(eventCategories, placeCategories);
    var type = _.findWhere(eventTypes, {id: eventTypeId});
    var theme;

    if (type) {
      $scope.activeEventType = type.id;
      $scope.activeEventTypeLabel = $translate.instant('offerTypes.' + type.label);
      $scope.eventThemeLabels = type.themes;
      $scope.eventGroupLabels = type.groups;
      $scope.isLessonSeries = $scope.activeEventType === '0.3.1.0.0';

      if (type.themes) {
        theme = _.findWhere(type.themes, {id: eventThemeId});
      }

      if (type.groups) {
        var selectedGroup = _.find(type.groups, function(group) {
          return _.where(group.themes, {id: eventThemeId}).length > 0;
        });
        if (selectedGroup) {
          theme = _.findWhere(selectedGroup.themes, {id: eventThemeId});
        }
      }
    } else {
      $scope.activeEventType = '';
      $scope.activeEventTypeLabel = '';
    }

    if (theme) {
      $scope.activeTheme = theme.id;
      $scope.activeThemeLabel = $translate.instant('offerThemes.' + theme.label);
    } else {
      $scope.activeTheme = '';
      $scope.activeThemeLabel = '';
    }

    $scope.canRefine = type && !_.isEmpty(type.themes) && !theme;

    $scope.canRefineByGroups = type && !_.isEmpty(type.groups) && !theme;

  };

  /**
   * Click listener on the event type buttons.
   * Activate the selected event type.
   */
  function setEventType(eventType, isEvent) {
    // Check if previous event type was the same.
    // If so, just show the previous entered data.
    if (EventFormData.id === eventType.id) {
      return;
    }

    $scope.activeEventType = eventType.id;

    // User selected an event.
    if (isEvent) {
      EventFormData.isEvent = true;
      EventFormData.isPlace = false;
    }
    // User selected a place.
    else {

      // Reset calendar if user switched to permanent.
      if (EventFormData.calendar.calendarType !== 'permanent') {
        EventFormData.resetCalendar();
      }

      EventFormData.isEvent = false;
      EventFormData.isPlace = true;

      // Places are default permanent. Users should not see a selection.
      EventFormData.calendar.calendarType = 'permanent';
    }

    EventFormData.setEventType(eventType);

    // Keep track of changes.
    if (EventFormData.id) {
      $rootScope.$emit('eventTypeChanged', EventFormData);
    }

    controller.updateEventTypeAndThemePicker(EventFormData);

    EventFormData.showStep(2);
    EventFormData.showStep(3);
  }

  /**
   * Click listener to reset the event type. User can select a new event type.
   */
  controller.resetEventType = function () {
    EventFormData.removeType();
    controller.updateEventTypeAndThemePicker(EventFormData);
  };

  /**
   * Click listener to set the active theme.
   * @param {EventTheme} theme
   */
  function setTheme(theme) {
    // Check if previous event theme was the same.
    // If so, just show the previous entered data.
    if (EventFormData.getTheme().id === theme.id) {
      return;
    }

    EventFormData.setTheme(theme);
    EventFormData.showStep(2);
    controller.updateEventTypeAndThemePicker(EventFormData);
    controller.eventThemeChanged(EventFormData);
  }

  /**
   * Reset the active theme which in turns updates the data to render the picker and notifies other components.
   */
  controller.resetTheme = function() {
    EventFormData.removeTheme();
    controller.updateEventTypeAndThemePicker(EventFormData);
    controller.eventThemeChanged(EventFormData);
  };

  controller.eventThemeChanged = function(EventFormData) {
    if (EventFormData.id) {
      $rootScope.$emit('eventThemeChanged', EventFormData);
    }
  };

  /**
   * Click listener to toggle the event types list.
   */
  function toggleEventTypes() {
    $scope.showAllEventTypes = !$scope.showAllEventTypes;
  }

  /**
   * Click listener to toggle th places list.
   */
  function togglePlaces() {
    $scope.showAllPlaces = !$scope.showAllPlaces;
  }

  $scope.setEventType = setEventType;
  $scope.resetEventType = controller.resetEventType;
  $scope.toggleEventTypes = toggleEventTypes;
  $scope.togglePlaces = togglePlaces;
  $scope.setTheme = setTheme;
  $scope.resetTheme = controller.resetTheme;

  controller.init = function (EventFormData) {
    if (EventFormData.id) {
      controller.updateEventTypeAndThemePicker(EventFormData);
      $scope.splitTypes = false;
    }

    if (_.where($scope.eventTypeLabels, {primary: true}).length === $scope.eventTypeLabels.length) {
      $scope.showAllEventTypes = true;
    }

    if (_.where($scope.placeLabels, {primary: true}).length === $scope.placeLabels.length) {
      $scope.showAllPlaces = true;
    }
  };

  $scope.translateOfferTypes = function (type) {
    return $translate.instant('offerTypes.' + type);
  };

  $scope.translateOfferThemes = function (theme) {
    return $translate.instant('offerThemes.' + theme);
  };

  $scope.translateOfferThemesGroups = function (group) {
    return $translate.instant('offerThemesGroups.' + group);
  };

  controller.init(EventFormData);
}
EventFormStep1Controller.$inject = ["$scope", "$rootScope", "EventFormData", "eventCategories", "placeCategories", "$translate"];
})();

// Source: src/event_form/steps/event-form-step2.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormStep2Controller
 * @description
 * # EventFormStep2Controller
 * Step 2 of the event form
 */
angular
  .module('udb.event-form')
  .controller('EventFormStep2Controller', EventFormStep2Controller);

/* @ngInject */
function EventFormStep2Controller($scope, $rootScope, EventFormData) {
  var controller = this;

  // Scope vars.
  // main storage for event form.
  $scope.eventFormData = EventFormData;

  /**
   * Mark the major info as changed.
   */
  controller.eventTimingChanged = function() {
    if (EventFormData.id) {
      $rootScope.$emit('eventTimingChanged', EventFormData);
    }
  };

  EventFormData
    .timingChanged$
    .subscribe(controller.eventTimingChanged);
}
EventFormStep2Controller.$inject = ["$scope", "$rootScope", "EventFormData"];
})();

// Source: src/event_form/steps/event-form-step3.controller.js
(function () {
'use strict';

/**
 * @typedef {Object} City
 * @property {string} zip
 * @property {string} name
 */

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormStep3Controller
 * @description
 * # EventFormStep3Controller
 * Step 3 of the event form
 */
angular
  .module('udb.event-form')
  .controller('EventFormStep3Controller', EventFormStep3Controller);

/* @ngInject */
function EventFormStep3Controller(
    $scope,
    EventFormData,
    cityAutocomplete,
    placeCategories,
    $uibModal,
    citiesBE,
    citiesNL,
    Levenshtein,
    eventCrud,
    $rootScope,
    $translate,
    jsonLDLangFilter,
    appConfig
) {

  var controller = this;

  function getEmptyLocation() {
    var emptyLocation = {
      'id' : null,
      'name': '',
      'address': {
        'addressCountry': '',
        'addressLocality': '',
        'postalCode': '',
        'streetAddress': ''
      }
    };

    return _.cloneDeep(emptyLocation);
  }

  var language = $translate.use() || 'nl';

  // Scope vars.
  // main storage for event form.
  $scope.eventFormData = EventFormData;

  $scope.categories = placeCategories;

  // Autocomplete model field for the City/Postal code.
  $scope.cityAutocompleteTextField = '';

  // Id ofdummy location for Bookable Event
  $scope.bookableEventLocationId = appConfig.offerEditor.bookableEvent.dummyLocationId;

  // Autocomplete model field for the Location.
  $scope.locationAutocompleteTextField = '';

  $scope.availableCountries = appConfig.offerEditor.countries;
  $scope.defaultCountry = _.find($scope.availableCountries, function(country) { return country.default; });
  $scope.selectedCountry = $scope.defaultCountry;

  // Autocomplete helper vars.
  $scope.searchingCities = false;
  $scope.cityAutoCompleteError = false;
  $scope.loadingPlaces = false;
  $scope.locationAutoCompleteError = false;
  $scope.locationsSearched = false;

  $scope.selectedCity = '';
  $scope.selectedLocation = undefined;
  $scope.placeStreetAddress = '';
  $scope.newPlaceStreetAddress = '';
  $scope.openPlaceModal = openPlaceModal;

  // Validation.
  $scope.showValidation = false;
  $scope.showStreetValidation = false;
  $scope.showZipValidation = false;

  // Convenient scope variables for current controller (in multistep).
  $scope.locationsForCity = [];

  // Scope functions.

  $scope.cities = $scope.selectedCountry.code === 'BE' ? citiesBE : citiesNL;

  $scope.changeCountrySelection = changeCountrySelection;
  $scope.changeCitySelection = changeCitySelection;
  $scope.changeLocationSelection = changeLocationSelection;
  $scope.setPlaceStreetAddress = setPlaceStreetAddress;
  $scope.setNLPlaceStreetAddress = setNLPlaceStreetAddress;
  $scope.changePlaceStreetAddress = changePlaceStreetAddress;
  $scope.resetStreetValidation = resetStreetValidation;
  $scope.resetZipValidation = resetZipValidation;
  $scope.setMajorInfoChanged = setMajorInfoChanged;
  $scope.filterAvailableCountries = filterAvailableCountries;
  $scope.filterCities = function(value) {
    return function (city) {
      var words = value.match(/.+/g);
      var labelMatches = words.filter(function (word) {
        return city.label.toLowerCase().indexOf(word.toLowerCase()) !== -1;
      });

      return labelMatches.length >= words.length;
    };
  };
  $scope.orderByLevenshteinDistance = function(value) {
    return function (city) {
      return new Levenshtein(value, city.label);
    };
  };

  /**
   * @param {City} city
   * @param {string} $label
   */
  controller.selectCity = function (city, $label) {

    var zipcode = city.zip,
        name = city.name;

    var newAddressInfo = {
      postalCode: zipcode,
      addressLocality: name,
      addressCountry: $scope.selectedCountry.code
    };

    if (EventFormData.isPlace) {
      var currentAddress = $scope.eventFormData.address;
      $scope.eventFormData.address = _.merge(getEmptyLocation().address, currentAddress, newAddressInfo);
    } else { //assume an event
      var newLocationInfo = {address: newAddressInfo};
      var currentLocation = $scope.eventFormData.getLocation();
      var newLocation = _.merge(getEmptyLocation(), currentLocation, newLocationInfo);
      EventFormData.setLocation(newLocation);
    }

    $scope.cityAutocompleteTextField = '';
    $scope.asyncPlaceSuggestion = '';
    $scope.selectedCity = $label;
    $scope.selectedCityObj = city;
    $scope.selectedLocation = undefined;

    setMajorInfoChanged();
  };
  $scope.selectCity = controller.selectCity;

  /**
   * filter the available countries
   * @param {boolean} isPlace
   * @returns {Array}
   */
  function filterAvailableCountries(isPlace) {
    return $scope.availableCountries.filter(function(country) {
      // country code ZZ (bookable event) should not be visible when eventType is a place
      return !isPlace || country.code !== 'ZZ';
    });
  }

  /**
   * Change a city selection.
   */
  function changeCitySelection() {
    EventFormData.resetLocation();
    $scope.selectedCity = '';
    $scope.placeStreetAddress = '';
    $scope.cityAutocompleteTextField = '';
    $scope.asyncPlaceSuggestion = '';
    $scope.locationsSearched = false;
    $scope.locationAutocompleteTextField = '';
    $scope.bookableEventShowStep4 = false;
    isBookableEvent();
    controller.stepUncompleted();
  }

  /**
   * Change a country selection.
   */
  function changeCountrySelection() {
    if ($scope.selectedCountry.code === 'NL') {
      $scope.cities = citiesNL;
    }
    else {
      $scope.cities = citiesBE;
    }
    changeCitySelection();
  }

  /**
   * Select location.
   * @param {string} $id
   * @param {string} $label
   * @returns {undefined}
   */
  controller.selectLocation = function ($id, $label) {

    var selectedLocation = null;
    if ($scope.isBookableEvent) {
      // fetch the location based on the id when bookable event
      return cityAutocomplete
        .getPlaceById($id)
        .then(function(location) {
          selectedLocation = location;
          $label = selectedLocation.name;
          setLocationToFormData(selectedLocation);
          $scope.bookableEventShowStep4 = true;
        });
    }else {
      selectedLocation = _.find($scope.locationsForCity, function (location) {
        return location.id === $id;
      });
      setLocationToFormData(selectedLocation);
    }

    function setLocationToFormData(selectedLocation) {
      // Assign selection, hide the location field and show the selection.
      $scope.selectedLocation = selectedLocation;
      $scope.locationAutocompleteTextField = '';
      var location = EventFormData.getLocation();
      location.id = $id;
      location.name = $label;
      location.address = selectedLocation.address;
      location.isDummyPlaceForEducationEvents = selectedLocation.isDummyPlaceForEducationEvents;
      EventFormData.setLocation(location);
      controller.stepCompleted();
      setMajorInfoChanged();
      $rootScope.$emit('locationSelected', location);
    }

  };

  $scope.selectLocation = controller.selectLocation;

  /**
   * Change selected location.
   * @returns {undefined}
   */
  function changeLocationSelection() {

    // Reset only the location data of the location.
    var location = EventFormData.getLocation();
    location.id = '';
    location.name = '';
    var city = {};
    city.zip = location.address.postalCode;
    city.name = location.address.addressLocality;
    EventFormData.setLocation(location);

    $scope.selectedLocation = false;
    $scope.locationAutocompleteTextField = '';
    $scope.asyncPlaceSuggestion = '';
    $scope.locationsSearched = false;
    $scope.selectedCityObj = city;

    controller.stepUncompleted();
  }

  controller.getPlaces = function(filterValue) {

    // Do not look for place suggestions until the user has entered at least 3 characters
    if (filterValue.length < 3) {
      $scope.locationsSearched = false;
      return;
    }

    $scope.locationsSearched = true;

    function updateLocationsAndReturnList (locations) {
      // Loop over all locations to check if location is translated.
      _.each(locations, function(location, key) {
        locations[key] = jsonLDLangFilter(locations[key], language, true);
      });
      // never show dummy locations in suggestion box
      var locationsWithoutDummy = locations.filter(function(location) {
        return !location.isDummyPlaceForEducationEvents;
      });
      var sortedLocations = null;
      sortedLocations = locationsWithoutDummy.sort(orderLocationsByLevenshtein(filterValue));

      $scope.locationsForCity = sortedLocations;
      return sortedLocations;
    }

    function showErrorAndReturnEmptyList () {
      $scope.locationAutoCompleteError = true;
      return [];
    }

    if ($scope.selectedCountry.code === 'BE') {
      return cityAutocomplete
        .getPlacesByZipcode($scope.selectedCityObj.zip, 'BE', filterValue)
        .then(updateLocationsAndReturnList, showErrorAndReturnEmptyList);
    }

    if ($scope.selectedCountry.code === 'NL') {
      return cityAutocomplete
        .getPlacesByCity($scope.selectedCityObj.name, 'NL')
        .then(updateLocationsAndReturnList, showErrorAndReturnEmptyList);
    }

  };

  $scope.getPlaces = controller.getPlaces;

  controller.cityHasLocations = function () {
    return $scope.locationsForCity instanceof Array && $scope.locationsForCity.length > 0;
  };

  /**
   * Order locations by Levenshtein distance
   *
   * @param {string} filterValue
   */

  function orderLocationsByLevenshtein(filterValue) {
    return function (location) {
      return new Levenshtein(filterValue, location.name + '' + location.address.streetAddress);
    };
  }

  /**
   * Open the place modal.
   */
  function openPlaceModal() {

    var modalInstance = $uibModal.open({
      templateUrl: 'templates/event-form-place-modal.html',
      controller: 'EventFormPlaceModalController',
      resolve: {
        location: function () {
          return $scope.eventFormData.location;
        },
        categories: function () {
          return $scope.categories;
        },
        title: function () {
          return $scope.locationAutocompleteTextField;
        }
      }
    });

    /**
     * @param {UdbPlace} place
     */
    function setEventFormDataPlace(place) {

      // Assign the just saved place to the event form data.
      EventFormData.place = place;

      // Assign selection, hide the location field and show the selection.
      $scope.selectedCity = place.address.postalCode + ' ' + place.address.addressLocality;

      var location = {
        'id' : place.id,
        'name': place.name,
        'address': {
          'addressCountry': $scope.selectedCountry.code,
          'addressLocality': place.address.addressLocality,
          'postalCode': place.address.postalCode,
          'streetAddress': place.address.streetAddress
        }
      };
      EventFormData.setLocation(location);
      $scope.selectedLocation = angular.copy(location);

      controller.stepCompleted();
    }

    modalInstance.result
      .then(setEventFormDataPlace);
  }

  function getNumberFromStreetAddress(streetAddress) {
    return streetAddress.split(' ').pop() || '';
  }

  function validateAddress(streetAddress) {
    if (streetAddress) {
      var maximumNumberLength = 15;
      return getNumberFromStreetAddress(streetAddress).length <= maximumNumberLength;
    }
  }

  function validateNlPostalCode(postalCode) {
    var regex = new RegExp(/^[0-9]{4}[a-z]{2}$/i);
    return regex.test(postalCode);
  }

  /**
   * Set the street address for a Place.
   *
   * @param {string} streetAddress
   */
  function setPlaceStreetAddress(streetAddress) {
    // Forms are automatically known in scope.
    $scope.showValidation = true;

    $scope.step3Form.street.$setValidity('invalid', true);
    if (!$scope.step3Form.$valid) {
      return;
    }

    if (!validateAddress(streetAddress)) {
      $scope.showStreetValidation = true;
      $scope.step3Form.street.$setValidity('invalid', false);
      return;
    }

    var currentAddress = EventFormData.address;
    var newAddressInfo = {
      streetAddress: streetAddress
    };

    EventFormData.address = _.merge(getEmptyLocation().address, currentAddress, newAddressInfo);
    $scope.placeStreetAddress = streetAddress;

    controller.stepCompleted();
  }

  function setNLPlaceStreetAddress(streetAddress, postalCode) {
    // Forms are automatically known in scope.
    $scope.showValidation = true;

    $scope.step3Form.street.$setValidity('invalid', true);

    if ($scope.selectedCountry.code === 'NL') {
      $scope.step3Form.postalCode.$setValidity('invalid', true);
    }

    if (!$scope.step3Form.$valid) {
      return;
    }

    if (!validateAddress(streetAddress)) {
      $scope.showStreetValidation = true;
      $scope.step3Form.street.$setValidity('invalid', false);
    }

    if ($scope.selectedCountry.code === 'NL') {
      if (!validateNlPostalCode(postalCode)) {
        $scope.showZipValidation = true;
        $scope.step3Form.postalCode.$setValidity('invalid', false);
      }
    }

    if ($scope.showStreetValidation || $scope.showZipValidation) {
      return;
    }

    var currentAddress = EventFormData.address;
    var newAddressInfo = {
      streetAddress: streetAddress,
      postalCode: postalCode
    };

    EventFormData.address = _.merge(getEmptyLocation().address, currentAddress, newAddressInfo);
    $scope.placeStreetAddress = streetAddress;

    controller.stepCompleted();
  }

  function resetStreetValidation() {
    $scope.showValidation = false;
    $scope.showStreetValidation = false;
  }

  function resetZipValidation() {
    $scope.showValidation = false;
    $scope.showZipValidation = false;
  }

  /**
   * Change StreetAddress
   */
  function changePlaceStreetAddress() {
    $scope.newPlaceStreetAddress = $scope.placeStreetAddress ? $scope.placeStreetAddress : '';
    $scope.placeStreetAddress = '';
    $scope.showValidation = false;
    $scope.showStreetValidation = false;
    $scope.showZipValidation = false;
    controller.stepUncompleted();
  }

  /**
   * Checks if event is a bookable event
   */
  function isBookableEvent() {
    $scope.isBookableEvent = ($scope.selectedCountry.code === 'ZZ') ? true : false;
  }

  /**
   * Mark the major info as changed.
   */
  function setMajorInfoChanged() {
    if (EventFormData.id) {
      EventFormData.majorInfoChanged = true;
    }
  }

  controller.stepCompleted = function () {
    EventFormData.showStep(4);

    if (EventFormData.id) {
      eventCrud.updateMajorInfo(EventFormData);
    }
  };

  controller.stepUncompleted = function () {
    if (!EventFormData.id) {
      EventFormData.hideStep(4);
    }
  };

  controller.init = function (EventFormData) {
    var address;

    // Set location data when the form data contains an Event with a location
    if (EventFormData.isEvent && EventFormData.location.name) {
      address = _.get(EventFormData, 'location.address');
      if (EventFormData.location.name) {
        $scope.selectedLocation = angular.copy(EventFormData.location);
      }
      if (EventFormData.location.isDummyPlaceForEducationEvents) {
        $scope.isBookableEvent = EventFormData.location.isDummyPlaceForEducationEvents;
        $scope.bookableEventShowStep4 = true;
      }
    }

    // Set the address when the form contains Place address info
    if (EventFormData.isPlace && EventFormData.address.postalCode) {
      address = EventFormData.address;

      $scope.placeStreetAddress = address.streetAddress;
    }

    if (address) {
      $scope.selectedCity = address.addressLocality;
      $scope.selectedCountry = _.find($scope.availableCountries, function(country) {
        return country.code === address.addressCountry;
      });
    }

    if ($scope.isBookableEvent) {
      $scope.selectedCountry = _.find($scope.availableCountries, function(country) {
        return country.code === 'ZZ';
      });
    }

  };

  controller.init(EventFormData);
}
EventFormStep3Controller.$inject = ["$scope", "EventFormData", "cityAutocomplete", "placeCategories", "$uibModal", "citiesBE", "citiesNL", "Levenshtein", "eventCrud", "$rootScope", "$translate", "jsonLDLangFilter", "appConfig"];
})();

// Source: src/event_form/steps/event-form-step4.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormStep4Controller
 * @description
 * # EventFormStep4Controller
 * Step 4 of the event form
 */
angular
  .module('udb.event-form')
  .controller('EventFormStep4Controller', EventFormStep4Controller);

/* @ngInject */
function EventFormStep4Controller(
  $scope,
  EventFormData,
  udbApi,
  appConfig,
  SearchResultViewer,
  eventCrud,
  $rootScope,
  $uibModal
) {

  var controller = this;
  var ignoreDuplicates = _.get(appConfig, 'offerEditor.ignoreDuplicates', false);

  // Scope vars.
  // main storage for event form.
  $scope.eventFormData = EventFormData;

  $scope.titleInputOptions = {updateOn: 'change blur'};

  $scope.infoMissing = false;
  $scope.duplicatesSearched = false;
  $scope.saving = false;
  $scope.error = false;
  $scope.isValidateButtonDisabled = false;

  $scope.validateEvent = validateEventAfterStep4;
  $scope.saveEvent = createOffer;
  $scope.resultViewer = new SearchResultViewer();
  $scope.eventTitleChanged = eventTitleChanged;
  $scope.previewSuggestedItem = previewSuggestedItem;

  /**
   * Validate when an existing event is opened
   */
  if (EventFormData.showStep4 === true) {
    validateEvent();
  }

  // Check if we need to show the leave warning
  window.onbeforeunload = function (event) {
    if (EventFormData.majorInfoChanged) {
      return 'Bent u zeker dat je de pagina wil verlaten? Gegevens die u hebt ingevoerd worden niet opgeslagen.';
    }
  };

  function validateEvent() {

    // First check if all data is correct.
    $scope.infoMissing = false;
    $scope.missingInfo = [];

    if (!EventFormData.type.id) {
      $scope.missingInfo.push('event type missing');
    }

    if (EventFormData.calendarType === 'single' && EventFormData.timestamps[0].date === '') {
      $scope.missingInfo.push('timestamp missing');
    }
    else if (EventFormData.calendarType === 'periodic' &&
      (EventFormData.startDate === '' || EventFormData.endDate === '')
    ) {
      $scope.missingInfo.push('start or end date missing');
    }
    else if (EventFormData.calendarType === '') {
      $scope.missingInfo.push('when missing');
    }

    if (EventFormData.isEvent && !EventFormData.location.id) {
      $scope.missingInfo.push('place missing for event');
    }
    else if (EventFormData.isPlace && !EventFormData.address.streetAddress) {
      $scope.missingInfo.push('address missing for place');
    }

    if (EventFormData.name === '') {
      $scope.missingInfo.push('title is missing');
    }

    if (!EventFormData.typicalAgeRange) {
      $scope.missingInfo.push('age range is missing');
    }

    if ($scope.missingInfo.length > 0) {
      $scope.infoMissing = true;
      return;
    }
  }

  /**
   * Validate date after step 4 to enter step 5.
   */
  function validateEventAfterStep4() {
    if ($scope.isValidateButtonDisabled) {
      return;
    }

    $scope.isValidateButtonDisabled = true;

    validateEvent();

    if ($scope.missingInfo.length > 0) {
      $scope.infoMissing = true;
      $scope.isValidateButtonDisabled = false;
      return;
    }

    if (ignoreDuplicates) {
      createOffer();
    }
    else {
      suggestExistingOffers(EventFormData);
    }
  }

  /**
   * @param {EventFormData} formData
   */
  function suggestExistingOffers(formData) {
    $scope.saving = true;
    $scope.error = false;

    $scope.resultViewer.loading = true;
    $scope.duplicatesSearched = true;

    findDuplicates(formData).then(showDuplicates, showMajorInfoError);
  }

  /**
   * @param {PagedCollection} pagedDuplicates
   */
  function showDuplicates(pagedDuplicates) {

    // Set the results for the duplicates modal,
    if (pagedDuplicates.totalItems > 0) {
      $scope.saving = false;
      $scope.resultViewer.setResults(pagedDuplicates);
    }
    // or save the event immediately if no duplicates were found.
    else {
      createOffer();
    }
  }

  function findDuplicates(data) {
    var conditions = duplicateSearchConditions(data);

    var expressions = [];
    angular.forEach(conditions, function (value, key) {
      expressions.push(key + ':"' + value + '"');
    });

    var queryString = expressions.join(' AND ');

    return udbApi.findOffers(queryString);
  }

  /**
   * Duplicates are searched for by identical properties:
   * - title is the same
   * - on the same location
   */
  function duplicateSearchConditions(data) {
    var location = data.getLocation();
    if (data.isEvent) {
      return {
        'name.\\*': data.name.nl,
        'location.name.\\*' : location.name
      };
    } else {
      return {
        'name.\\*': data.name.nl,
        'postalCode': data.address.postalCode,
        'labels': 'UDB3 place'
      };
    }
  }

  /**
   * Update typicalAgeRange in formdata on changeTypicalAgeRange
   */
  $scope.$on('changeTypicalAgeRange', function (event, ageRange) {
    $scope.eventFormData.typicalAgeRange = ageRange;
    if (EventFormData.showStep5 === true) {
      eventCrud.updateTypicalAgeRange(EventFormData);
      validateEvent();
    }
  });

  /**
   * Save Event for the first time.
   */
  function createOffer() {

    resetMajorInfoError();

    var eventCrudPromise;
    eventCrudPromise = eventCrud.createOffer(EventFormData);

    eventCrudPromise.then(function(newEventFormData) {
      EventFormData = newEventFormData;
      eventCrud.updateTypicalAgeRange(EventFormData);
      EventFormData.majorInfoChanged = false;

      $scope.saving = false;
      $scope.resultViewer = new SearchResultViewer();
      $scope.titleInputOptions = {updateOn: 'change blur'};
      EventFormData.showStep(5);

    }, showMajorInfoError);

  }

  function resetMajorInfoError() {
    $scope.error = false;
    $scope.saving = true;
  }

  function showMajorInfoError() {
    // Error while saving.
    $scope.error = true;
    $scope.saving = false;
  }

  controller.eventFormSaved = function () {
    $rootScope.$emit('eventFormSaved', EventFormData);
  };

  /**
   * Notify that the title of an event has changed.
   */
  function eventTitleChanged() {
    if (EventFormData.id && EventFormData.name !== '') {
      $rootScope.$emit('eventTitleChanged', EventFormData);
    }
  }

  /**
   * Open the organizer modal.
   *
   * @param {object} item
   *  An item to preview from the suggestions in the current result viewer.
   */
  function previewSuggestedItem(item) {
    $uibModal.open({
      templateUrl: 'templates/suggestion-preview-modal.html',
      controller: 'SuggestionPreviewModalController',
      resolve: {
        selectedSuggestionId: function () {
          return item.id;
        },
        resultViewer: function () {
          return $scope.resultViewer;
        },
        suggestionType: function () {
          return EventFormData.getType();
        }
      }
    });
  }

}
EventFormStep4Controller.$inject = ["$scope", "EventFormData", "udbApi", "appConfig", "SearchResultViewer", "eventCrud", "$rootScope", "$uibModal"];
})();

// Source: src/event_form/steps/event-form-step5.controller.js
(function () {
'use strict';

/**
 * @typedef {Object} ContactInfoItem
 * @property {ContactInfoTypeEnum} type
 * @property {boolean} booking
 * @property {string} value
 */

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormStep5Controller
 * @description
 * # EventFormStep5Controller
 * Step 5 of the event form
 */
angular
  .module('udb.event-form')
  .controller('EventFormStep5Controller', EventFormStep5Controller);

/* @ngInject */
function EventFormStep5Controller(
    $scope,
    EventFormData,
    eventCrud,
    udbOrganizers,
    $uibModal,
    $rootScope,
    appConfig,
    udbUitpasApi
  ) {

  var controller = this;
  var URL_REGEXP = /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/;
  /**
   * Enum for contact info types.
   * @readonly
   * @enum {string}
   */
  var ContactInfoTypeEnum = Object.freeze({
    EMAIL: 'email',
    PHONE: 'phone',
    URL: 'url'
  });

  // Scope vars.
  $scope.eventFormData = EventFormData; // main storage for event form.
  $scope.mainLanguage = EventFormData.getMainLanguage();

  // Description vars.
  $scope.description = EventFormData.getDescription($scope.mainLanguage);
  $scope.descriptionCssClass = $scope.description ? 'state-complete' : 'state-incomplete';
  $scope.savingDescription = false;
  $scope.descriptionError = false;
  $scope.originalDescription = '';

  // Organizer vars.
  $scope.organizerCssClass = EventFormData.organizer.name ? 'state-complete' : 'state-incomplete';
  $scope.organizer = '';
  $scope.emptyOrganizerAutocomplete = false;
  $scope.loadingOrganizers = false;
  $scope.organizerError = false;
  $scope.savingOrganizer = false;

  // Price info
  $scope.disablePriceInfo = _.get(appConfig.offerEditor, 'disablePriceInfo');

  // Translatable languages
  $scope.translatableLanguages = appConfig.translatableLanguages;

  // Booking & tickets vars.
  $scope.editBookingPhone = !EventFormData.bookingInfo.phone;
  $scope.editBookingEmail = !EventFormData.bookingInfo.email;
  $scope.editBookingUrl = !EventFormData.bookingInfo.url;
  $scope.bookingModel = {
    urlRequired : false,
    emailRequired : false,
    phoneRequired : false,
    url : EventFormData.bookingInfo.urlLabel ? EventFormData.bookingInfo.url : '',
    urlLabel : {},
    urlLabelCustom : '',
    phone : EventFormData.bookingInfo.phone ? EventFormData.bookingInfo.phone : '',
    email : EventFormData.bookingInfo.email ? EventFormData.bookingInfo.email : ''
  };
  $scope.newBookingModel = {};

  $scope.bookingOptions = [];
  _.each($scope.translatableLanguages, function (language) {
    $scope.bookingOptions[language] = [
      {value: 'buy_tickets', label: translateBookingInfoUrlLabels('buy_tickets', language)},
      {value: 'reserve_places', label: translateBookingInfoUrlLabels('reserve_places', language)},
      {value: 'check_availability', label: translateBookingInfoUrlLabels('check_availability', language)},
      {value: 'subscribe', label: translateBookingInfoUrlLabels('subscribe', language)}
    ];
  });

  if (EventFormData.bookingInfo.urlLabel) {
    $scope.bookingModel.urlLabel = [];
    $scope.usedBookingOption = _.findWhere($scope.bookingOptions[$scope.mainLanguage],
        {label: EventFormData.bookingInfo.urlLabel}
    );

    // Quick fix for III-2791
    if ($scope.usedBookingOption === undefined) {
      $scope.usedBookingOption = _.findWhere($scope.bookingOptions[$scope.mainLanguage],
          {value: 'reserve_places'}
      );
    }

    if (typeof EventFormData.bookingInfo.urlLabel === 'string') {
      _.each($scope.translatableLanguages, function (language) {
        $scope.bookingModel.urlLabel[language] = _.findWhere($scope.bookingOptions[language],
            {value: $scope.usedBookingOption.value}
        );
      });
    }
    else {
      _.each($scope.translatableLanguages, function (language) {
        $scope.bookingModel.urlLabel[language] = _.findWhere($scope.bookingOptions[language],
            {value: $scope.usedBookingOption.value}
        );
      });
    }
  }
  else {
    _.each($scope.translatableLanguages, function (language) {
      $scope.bookingModel.urlLabel[language] = $scope.bookingOptions[language][1];
    });
  }

  // Add urlLabel to the option list when it is not in the options list.
  // This is mostly the case when the user is editing in another language as the offer's mainLanguage.
  if ($scope.usedBookingOption && !_.find($scope.bookingOptions[$scope.mainLanguage], $scope.usedBookingOption)) {
    $scope.bookingOptions[$scope.mainLanguage].unshift($scope.usedBookingOption);
  }

  $scope.viaWebsite =  !EventFormData.bookingInfo.url;
  $scope.viaEmail = !EventFormData.bookingInfo.email;
  $scope.viaPhone = !EventFormData.bookingInfo.phone;
  $scope.websitePreviewEnabled = false;
  $scope.bookingPeriodPreviewEnabled = false;
  $scope.bookingPeriodShowValidation = false;
  $scope.bookingInfoCssClass = 'state-incomplete';

  // Booking info vars.
  $scope.toggleBookingType = toggleBookingType;
  $scope.saveBookingInfo = saveBookingInfo;
  $scope.removeDuplicateContactBooking = removeDuplicateContactBooking;
  $scope.saveWebsitePreview = saveWebsitePreview;
  $scope.enableWebsitePreview = enableWebsitePreview;
  $scope.showBookingOption = showBookingOption;
  $scope.deleteBookingInfo = deleteBookingInfo;
  $scope.removeBookingInfo = removeBookingInfo;
  $scope.hasBookingInfo = hasBookingInfo;
  $scope.translateBookingInfoUrlLabels = translateBookingInfoUrlLabels;

  // Contactinfo vars.
  $scope.contactInfoCssClass = 'state-incomplete';
  $scope.savingContactInfo = false;
  $scope.contactInfoError = false;
  $scope.contactInfo = [];

  // Description functions.
  $scope.alterDescription = alterDescription;
  $scope.focusDescription = focusDescription;
  $scope.saveDescription = saveDescription;
  $scope.countCharacters = countCharacters;

  // Organizer functions.
  $scope.getOrganizers = getOrganizers;
  $scope.selectOrganizer = selectOrganizer;
  $scope.deleteOrganizerHandler = deleteOrganizerHandler;
  $scope.openOrganizerModal = openOrganizerModal;

  // Contact info functions.
  $scope.deleteContactInfo = deleteContactInfo;
  $scope.saveContactInfo = saveContactInfo;
  $scope.addContactInfo = addContactInfo;

  // Uitpas info
  $scope.hasTicketSales = false;
  $scope.hasUitpasError = false;

  // Image upload functions.
  $scope.openUploadImageModal = openUploadImageModal;
  $scope.removeImage = removeImage;
  $scope.editImage = editImage;
  $scope.selectMainImage = selectMainImage;
  // Init the controller for editing.
  initEditForm();

  /**
   * Alter description: used for adding and editing the description.
   */
  function alterDescription() {
    $scope.descriptionCssClass = 'state-filling';
  }

  function focusDescription () {
    $scope.descriptionInfoVisible = true;
    $scope.originalDescription = $scope.description;
  }

  /**
   * Save the description.
   */
  function saveDescription(allowEmpty) {

    if (allowEmpty) {
      $scope.description = '';
    }

    // only update description when there is one, it's not empty and it's not already saved; or when we allow empty
    var emptyAllowed = ($scope.description && $scope.description !== '') || allowEmpty;
    var notTheSame = ($scope.description !== $scope.originalDescription) || allowEmpty;
    if (emptyAllowed && notTheSame) {

      $scope.descriptionInfoVisible = false;
      $scope.savingDescription = true;
      $scope.descriptionError = false;

      EventFormData.setDescription(
        $scope.description.replace(new RegExp(String.fromCharCode(31), 'g'), ''),
        $scope.mainLanguage
      );

      var promise = eventCrud.updateDescription(EventFormData, $scope.description);
      promise.then(function() {

        $scope.savingDescription = false;
        controller.eventFormSaved();

        // Toggle correct class.
        if ($scope.description) {
          $scope.descriptionCssClass = 'state-complete';
        }
        else {
          $scope.descriptionCssClass = 'state-incomplete';
        }

      },
       // Error occured, show message.
      function() {
        $scope.savingDescription = false;
        $scope.descriptionError = true;
      });
    }
  }
  /**
   * Count characters in the description.
   */
  function countCharacters() {
    if ($scope.description) {
      return $scope.description.length;
    }
  }

  controller.eventFormSaved = function () {
    $rootScope.$emit('eventFormSaved', EventFormData);
  };

  /**
   * Auto-complete callback for organizers.
   * @param {String} value
   *  Suggest organizers based off of this value.
   *
   * @return {UdbOrganizer[]}
   */
  function getOrganizers(value) {
    function suggestExistingOrNewOrganiser (organizers) {
      var suitableOrganizers = organizers;
      if (appConfig.offerEditor.excludeOrganizerLabel && appConfig.offerEditor.excludeOrganizerLabel !== '') {
        suitableOrganizers = _.filter(suitableOrganizers, function(organizer) {
          if (organizer.labels && organizer.labels.length > 0) {
            return organizer.labels.indexOf(appConfig.offerEditor.excludeOrganizerLabel) < 0;
          } else {
            return true;
          }
        });
      }
      if (appConfig.offerEditor.includeOrganizerLabel && appConfig.offerEditor.includeOrganizerLabel !== '') {
        suitableOrganizers = _.filter(suitableOrganizers, function(organizer) {
          if (organizer.labels && organizer.labels.length > 0) {
            return organizer.labels.indexOf(appConfig.offerEditor.includeOrganizerLabel) >= 0;
          } else {
            return false;
          }
        });
      }
      $scope.emptyOrganizerAutocomplete = suitableOrganizers.length <= 0;
      $scope.loadingOrganizers = false;

      return suitableOrganizers;
    }

    $scope.loadingOrganizers = true;
    return udbOrganizers
      .suggestOrganizers(value)
      .then(suggestExistingOrNewOrganiser);
  }

  /**
   * Select listener on the typeahead.
   * @param {Organizer} organizer
   */
  function selectOrganizer(organizer) {
    controller.saveOrganizer(organizer);
  }

  controller.showAsyncOrganizerError = function() {
    $scope.organizerError = true;
    $scope.savingOrganizer = false;
  };

  function deleteOrganizerHandler() {
    if (EventFormData.priceInfo.length > 0) {
      udbUitpasApi.getTicketSales($scope.eventFormData.id, $scope.eventFormData.organizer)
        .then(
          function(hasTicketSales) {
            if (hasTicketSales) {
              $scope.hasTicketSales = hasTicketSales;
            }
            else {
              deleteOrganizer();
            }
          }, function() {
            $scope.hasUitpasError = true;
          });
    }
    else {
      deleteOrganizer();
    }
  }

  /**
   * Delete the selected organiser.
   */
  function deleteOrganizer() {
    function resetOrganizer() {
      controller.eventFormSaved();
      EventFormData.resetOrganizer();
      $rootScope.$emit('eventOrganizerDeleted', {});
      $scope.organizerCssClass = 'state-incomplete';
      $scope.savingOrganizer = false;
    }

    $scope.organizerError = false;
    eventCrud
      .deleteOfferOrganizer(EventFormData)
      .then(resetOrganizer, controller.showAsyncOrganizerError);
  }

  /**
   * Open the organizer modal.
   */
  function openOrganizerModal() {
    var modalInstance = $uibModal.open({
      backdrop: 'static',
      templateUrl: 'templates/event-form-organizer-modal.html',
      controller: 'EventFormOrganizerModalController',
      resolve: {
        organizerName: function () {
          return $scope.organizer;
        }
      }
    });

    function updateOrganizerInfo () {
      $scope.organizer = '';
      $scope.emptyOrganizerAutocomplete = false;
      if (EventFormData.organizer.id) {
        $scope.organizerCssClass = 'state-complete';
      }
      else {
        $scope.organizerCssClass = 'state-incomplete';
      }
    }

    modalInstance.result.then(controller.saveOrganizer, updateOrganizerInfo);
  }

  /**
   * Persist the organizer for the active event.
   * @param {Organizer} organizer
   */
  controller.saveOrganizer = function (organizer) {
    function resetOrganizerFeedback() {
      $scope.emptyOrganizerAutocomplete = false;
      $scope.organizerError = false;
      $scope.savingOrganizer = true;
      $scope.organizer = '';
    }

    function markOrganizerAsCompleted() {
      controller.eventFormSaved();
      $rootScope.$emit('eventOrganizerSelected', organizer);
      $scope.organizerCssClass = 'state-complete';
      $scope.savingOrganizer = false;
    }

    EventFormData.organizer = organizer;
    resetOrganizerFeedback();
    eventCrud
      .updateOrganizer(EventFormData)
      .then(markOrganizerAsCompleted, controller.showAsyncOrganizerError);
  };

  /**
   * Add an additional field to fill out contact info. Show the fields when none were shown before.
   */
  function addContactInfo() {
    if (_.isEmpty($scope.contactInfo)) {
      $scope.contactInfoCssClass = 'state-filling';
    }

    $scope.contactInfo.push({type: ContactInfoTypeEnum.PHONE, value: '', booking: false});
  }

  /**
   * Delete a given contact info item.
   */
  function deleteContactInfo(index) {
    $scope.contactInfo.splice(index, 1);

    if (_.isEmpty($scope.contactInfo)) {
      $scope.contactInfoCssClass = 'state-incomplete';
    }

    saveContactInfo();
  }

  /**
   * Save the contact info.
   */
  function saveContactInfo() {

    $scope.savingContactInfo = true;
    $scope.contactInfoError = false;

    // Only save with valid input.
    if ($scope.contactInfoForm.$valid) {

      EventFormData.resetContactPoint();

      _.forEach($scope.contactInfo, function (contactInfoItem) {
        if (contactInfoItem.booking) {
          toggleBookingType(contactInfoItem);
        } else {
          if (!_.isEmpty(contactInfoItem.value) && _.includes(ContactInfoTypeEnum, contactInfoItem.type)) {
            EventFormData
              .contactPoint[contactInfoItem.type]
              .push(contactInfoItem.value);
          }
        }
      });

      var promise = eventCrud.updateContactPoint(EventFormData);
      promise.then(function() {
        controller.eventFormSaved();
        if (!_.isEmpty($scope.contactInfo)) {
          $scope.contactInfoCssClass = 'state-complete';
        }
        $scope.savingContactInfo = false;
      }, function() {
        $scope.contactInfoError = true;
        $scope.savingContactInfo = false;
      });

    }
  }

  /**
   * @param {ContactInfoItem} contactInfoItem
   * @return {boolean}
   */
  function showBookingOption(contactInfoItem) {
    var bookingInfoOfSameType = _.find($scope.contactInfo, {type: contactInfoItem.type, booking: true});

    return contactInfoItem.booking || !bookingInfoOfSameType;
  }

  /**
   * @return {boolean}
   */
  function hasBookingInfo()
  {
    var bookingInfo = _.find($scope.contactInfo, {booking: true});
    return !!bookingInfo;
  }

  /**
   * Toggle the booking type and check if info should be deleted.
   *
   * @param {ContactInfoItem} contactInfoItem
   */
  function toggleBookingType(contactInfoItem) {
    var type = contactInfoItem.type,
        newValue = contactInfoItem.booking ? contactInfoItem.value : '';

    if ($scope.bookingModel[type] !== newValue) {
      $scope.bookingModel[type] = newValue;
      saveBookingInfo();
    }
  }

  /**
   * @param {string} type
   */
  function removeBookingInfo(type) {
    if (!_.includes(ContactInfoTypeEnum, type)) {
      return;
    }

    $scope.bookingModel[type] = '';
    saveBookingInfo();
  }

  /**
   * Save the website preview settings.
   */
  function saveWebsitePreview() {
    $scope.websitePreviewEnabled = false;
    EventFormData.bookingInfo.urlLabel = $scope.bookingModel.urlLabel;
    if ($scope.bookingModel.urlLabelCustom !== '') {
      EventFormData.bookingInfo.urlLabel = $scope.bookingModel.urlLabelCustom;
    }
    saveBookingInfo();
  }

  /**
   * Enable the website preview modal.
   */
  function enableWebsitePreview() {
    $scope.websitePreviewEnabled = true;
  }

  /**
   * Delete a given contact info item.
   */
  function deleteBookingInfo(element, index) {
    $scope.contactInfo[index].booking = false;
    toggleBookingType(element);

    $scope.contactInfo.splice(index, 1);

    if (_.isEmpty($scope.contactInfo)) {
      $scope.contactInfoCssClass = 'state-incomplete';
    }
  }

  function formatBookingInfoUrlLabel(urlLabel) {
    var returnValue = {};
    var newLabelValue = urlLabel[$scope.mainLanguage].value;
    _.each($scope.translatableLanguages, function(language) {
      returnValue[language] = _.findWhere($scope.bookingOptions[language], {value: newLabelValue}).label;
    });
    return returnValue;
  }

  /**
   * Saves the booking info
   */
  function saveBookingInfo() {
    var urlLabel = {};
    _.each($scope.translatableLanguages, function(language) {
      urlLabel[language] = translateBookingInfoUrlLabels('reserve_places', language);
    });

    // Make sure all default values are set.
    EventFormData.bookingInfo = angular.extend({}, {
      url : '',
      urlLabel : urlLabel,
      email : '',
      phone : '',
      availabilityStarts :
        EventFormData.bookingInfo.availabilityStarts ?
          moment(EventFormData.bookingInfo.availabilityStarts).format() :
          '',
      availabilityEnds :
        EventFormData.bookingInfo.availabilityEnds ?
          moment(EventFormData.bookingInfo.availabilityEnds).format() :
          ''
    }, $scope.bookingModel);

    if (typeof EventFormData.bookingInfo.urlLabel !== 'string') {
      EventFormData.bookingInfo.urlLabel = formatBookingInfoUrlLabel(EventFormData.bookingInfo.urlLabel);
    } else {
      EventFormData.bookingInfo.urlLabel = formatBookingInfoUrlLabel(EventFormData.bookingInfo.urlLabel);
    }

    $scope.savingBookingInfo = true;
    $scope.bookingInfoError = false;

    var promise = eventCrud.updateBookingInfo(EventFormData);
    promise.then(function() {
      controller.eventFormSaved();
      $scope.bookingInfoCssClass = 'state-complete';
      $scope.savingBookingInfo = false;
      $scope.bookingInfoError = false;
      removeDuplicateContactBooking();
    }, function() {
      $scope.savingBookingInfo = false;
      $scope.bookingInfoError = true;
    });
  }

  function removeDuplicateContactBooking() {
    var url = $scope.bookingModel.url;
    var phone = $scope.bookingModel.phone;
    var email = $scope.bookingModel.email;

    $scope.contactInfo.some(function (element) {
      return element.value === url;
    });

    $scope.contactInfo.some(function (element) {
      return element.value === phone;
    });

    $scope.contactInfo.some(function (element) {
      return element.value === email;
    });

    saveContactInfo();
  }

  /**
   * Open the upload modal.
   */
  function openUploadImageModal() {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/event-form-image-upload.html',
      controller: 'EventFormImageUploadController'
    });
  }

  /**
   * Open the modal to edit an image of the item.
   *
   * @param {MediaObject} image
   *    The media object of the image to edit.
   */
  function editImage(image) {
    $uibModal.open({
      templateUrl: 'templates/event-form-image-edit.html',
      controller: 'EventFormImageEditController',
      resolve: {
        mediaObject: function () {
          return image;
        }
      }
    });
  }

  /**
   * Open the modal to remove an image.
   *
   * @param {MediaObject} image
   *    The media object of the image to remove from the item.
   */
  function removeImage(image) {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/event-form-image-remove.html',
      controller: 'EventFormImageRemoveController',
      resolve: {
        image: function () {
          return image;
        }
      }
    });
  }

  /**
   * Select the main image for an item.
   *
   * @param {MediaObject} image
   *    The media object of the image to select as the main image.
   */
  function selectMainImage(image) {
    function updateImageOrder() {
      EventFormData.selectMainImage(image);
    }

    eventCrud
      .selectMainImage(EventFormData, image)
      .then(updateImageOrder);
  }

  /**
   * Init this step for editing.
   */
  function initEditForm() {
    $scope.contactInfo = _.flatten(
      _.map(EventFormData.contactPoint, function (contactInfo, type) {
        return _.contains(ContactInfoTypeEnum, type) ? _.map(contactInfo, function (contactInfoItem) {
          return {type: type, value: contactInfoItem, booking: false};
        }) : [];
      })
    );

    // III-963 put booking items into the contactInfo array
    if (EventFormData.bookingInfo.url) {
      $scope.contactInfo.push({type: 'url', value: EventFormData.bookingInfo.url, booking: true});
    }

    if (EventFormData.bookingInfo.phone) {
      $scope.contactInfo.push({type: 'phone', value: EventFormData.bookingInfo.phone, booking: true});
    }

    if (EventFormData.bookingInfo.email) {
      $scope.contactInfo.push({type: 'email', value: EventFormData.bookingInfo.email, booking: true});
    }

    // Set correct css class for contact info.
    if ($scope.contactInfo.length > 0) {
      $scope.contactInfoCssClass = 'state-complete';
    }

    if (EventFormData.priceInfo) {
      $scope.price = EventFormData.priceInfo;
      $scope.priceCssClass = 'state-complete';
    }

  }

  function translateBookingInfoUrlLabels(label, language) {
    var labels = [];
    switch (language) {
      case 'nl':
        labels = [
          {value: 'buy_tickets', label:'Koop tickets'},
          {value: 'reserve_places', label:'Reserveer plaatsen'},
          {value: 'check_availability', label:'Controleer beschikbaarheid'},
          {value: 'subscribe', label:'Schrijf je in'}
        ];
        break;

      case 'fr':
        labels = [
          {value: 'buy_tickets', label:'Achetez des tickets'},
          {value: 'reserve_places', label:'Réservez des places'},
          {value: 'check_availability', label:'Controlez la disponibilité'},
          {value: 'subscribe', label:'Inscrivez-vous'}
        ];
        break;

      case 'en':
        labels = [
          {value: 'buy_tickets', label:'Buy tickets'},
          {value: 'reserve_places', label:'Reserve places'},
          {value: 'check_availability', label:'Check availability'},
          {value: 'subscribe', label:'Subscribe'}
        ];
        break;

      case 'de':
        labels = [
          {value: 'buy_tickets', label:'Tickets kaufen'},
          {value: 'reserve_places', label:'Platzieren Sie eine Reservierung'},
          {value: 'check_availability', label:'Verfügbarkeit prüfen'},
          {value: 'subscribe', label:'Melde dich an'}
        ];
        break;
    }

    return _.findWhere(labels, {value: label}).label;
  }

}
EventFormStep5Controller.$inject = ["$scope", "EventFormData", "eventCrud", "udbOrganizers", "$uibModal", "$rootScope", "appConfig", "udbUitpasApi"];
})();

// Source: src/export/event-export-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.EventExportJob
 * @description
 * # BaseJob
 * This Is the factory that creates an event export job
 */
angular
  .module('udb.entry')
  .factory('EventExportJob', EventExportJobFactory);

/* @ngInject */
function EventExportJobFactory(BaseJob, JobStates, ExportFormats) {

  /**
   * @class EventExportJob
   * @constructor
   * @param   {string}    commandId
   * @param   {number}    eventCount
   * @param   {string}    format
   * @param   {Object}    details
   */
  var EventExportJob = function (commandId, eventCount, format, details) {
    BaseJob.call(this, commandId);
    this.type = 'export';
    this.exportUrl = '';
    this.eventCount = eventCount;
    this.format = format;
    this.extension = _.find(ExportFormats, {type: format}).extension;
    this.details = details;

    this.messages = {};
    this.messages[JobStates.CREATED] = getEventExportDescription(this, JobStates.CREATED, JobStates);
    this.messages[JobStates.STARTED] = getEventExportDescription(this, JobStates.STARTED, JobStates);
    this.messages[JobStates.FINISHED] = getEventExportDescription(this, JobStates.FINISHED, JobStates);
    this.messages[JobStates.FAILED] = getEventExportDescription(this, JobStates.FAILED, JobStates);
  };

  EventExportJob.prototype = Object.create(BaseJob.prototype);
  EventExportJob.prototype.constructor = EventExportJob;

  EventExportJob.prototype.getTemplateName = function () {
    var templateName;

    switch (this.state) {
      case JobStates.FINISHED:
        templateName = 'export-job';
        break;
      case JobStates.FAILED:
        templateName = 'failed-job';
        break;
      default:
        templateName = 'base-job';
    }

    return templateName;
  };

  EventExportJob.prototype.getDescription = function () {
    return getEventExportDescription(this, this.state, JobStates);
  };

  EventExportJob.prototype.info = function (jobData) {
    if (jobData.location) {
      this.exportUrl = jobData.location;
    }
  };

  EventExportJob.prototype.getTaskCount = function () {
    return this.eventCount;
  };

  return (EventExportJob);
}
EventExportJobFactory.$inject = ["BaseJob", "JobStates", "ExportFormats"];

function getEventExportDescription (job, state, JobStates) {
  var description = '';

  if (state === JobStates.FAILED) {
    description = 'Exporteren van items mislukt';
  } else {
    description = 'Document .' + job.extension + ' met ' + job.eventCount + ' items';
  }

  return description;
}
})();

// Source: src/export/event-export.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.export.controller:EventExportController
 * @description
 * # EventExportController
 * Controller of the udb.export
 */
angular
  .module('udb.export')
  .controller('EventExportController', EventExportController);

/* @ngInject */
function EventExportController($uibModalInstance, eventExporter, ExportFormats, udbApi, appConfig) {

  var exporter = this;

  exporter.exportLogoUrl = appConfig.exportLogoUrl;

  exporter.dayByDay = false;

  exporter.eventProperties = [
    {name: 'name', include: true, sortable: false, excludable: false},
    {name: 'description', include: false, sortable: false, excludable: true},
    {name: 'labels', include: false, sortable: false, excludable: true},
    {name: 'calendarSummary', include: true, sortable: false, excludable: false},
    {name: 'image', include: false, sortable: false, excludable: true},
    {name: 'videos', inclue: false, sortable: false, excludable: true},
    {name: 'location', include: true, sortable: false, excludable: false},
    {name: 'address', include: true, sortable: false, excludable: true},
    {name: 'organizer', include: false, sortable: false, excludable: true},
    {name: 'priceInfo', include: false, sortable: false, excludable: true},
    {name: 'kansentarief', include: false, sortable: false, excludable: true, format: ExportFormats.OOXML},
    {name: 'contactPoint', include: false, sortable: false, excludable: true},
    {name: 'bookingInfo', include: false, sortable: false, excludable: true},
    {name: 'status', include: false, sortable: false, excludable: true},
    {name: 'bookingAvailability', include: false, sortable: false, excludable: true},
    {name: 'attendance', include: false, sortable: false, excludable: true},
    {name: 'creator', include: false, sortable: false, excludable: true},
    {name: 'terms.theme', include: true, sortable: false, excludable: true},
    {name: 'terms.eventtype', include: true, sortable: false, excludable: true},
    {name: 'created', include: false, sortable: false, excludable: true},
    {name: 'modified', include: false, sortable: false, excludable: true},
    {name: 'available', include: false, sortable: false, excludable: true},
    {name: 'endDate', include: false, sortable: false, excludable: true},
    {name: 'startDate', include: false, sortable: false, excludable: true},
    {name: 'calendarType', include: false, sortable: false, excludable: true},
    {name: 'sameAs', include: false, sortable: false, excludable: true},
    {name: 'typicalAgeRange', include: false, sortable: false, excludable: true},
    {name: 'language', include: false, sortable: false, excludable: true},
    {name: 'audience', include: false, sortable: false, excludable: true, format: ExportFormats.OOXML},
    {name: 'completeness', include: false, sortable: false, excludable: true}
  ];

  exporter.exportFormats = _.map(ExportFormats);

  exporter.brands = appConfig.exportBrands;
  exporter.restrictedBrands = appConfig.restrictedExportBrands;
  exporter.templateUrl = appConfig.exportTemplateUrl;
  exporter.templates = appConfig.exportTemplateTypes;

  udbApi.getMyRoles().then(function(roles) {
    angular.forEach(roles, function(value, key) {
      exporter.brands = exporter.brands.concat(_.where(exporter.restrictedBrands, {role : roles[key].uuid}));
    });
  });

  exporter.customizations = {
    brand: '',
    logo: exporter.exportLogoUrl + exporter.brands[0].logo,
    title: '',
    subtitle: '',
    footer: '',
    publisher: '',
    template: ''
  };

  /**
   * A map of all the possible export steps.
   * You can add a callback to its incomplete property which will be used to check if a step is completed.
   */
  exporter.exportSteps = {
    format: {
      name: 'format',
      incomplete: function () {
        var format = exporter.format,
            isCustomizable = !!_.find(exporter.exportFormats, {type: format, customizable: true});

        if (isCustomizable) {
          exporter.steps = [
            exporter.exportSteps.format,
            exporter.exportSteps.customize,
            exporter.exportSteps.confirm
          ];
        } else {
          exporter.steps = [
            exporter.exportSteps.format,
            exporter.exportSteps.filter,
            exporter.exportSteps.confirm
          ];
        }

        return !format;
      }
    },
    customize: {
      name: 'customize',
      incomplete: function () {
        return !exporter.customizations.brand || !exporter.customizations.title || !exporter.customizations.template ;
      }
    },
    filter: {
      name: 'filter',
      incomplete: function () {
        return !_.find(exporter.eventProperties, function (property) {
          return property.include === true;
        });
      }
    },
    confirm: {
      name: 'confirm'
    }
  };

  /**
   * This is a list of steps that the user has to navigate through.
   */
  exporter.steps = [
    exporter.exportSteps.format,
    exporter.exportSteps.confirm
  ];

  var activeStep = 0;
  exporter.nextStep = function () {
    if (exporter.isStepCompleted()) {
      setActiveStep(activeStep + 1);
    }
    else {
      exporter.hasErrors = true;
    }
  };

  exporter.previousStep = function () {
    setActiveStep(activeStep - 1);
  };

  exporter.isStepCompleted = function () {

    if (activeStep === -1) {
      return true;
    }

    var incompleteCheck = exporter.steps[activeStep].incomplete;
    return ((typeof incompleteCheck === 'undefined') || (typeof incompleteCheck === 'function' && !incompleteCheck()));
  };

  function setActiveStep(stepIndex) {
    if (stepIndex < 0) {
      activeStep = 0;
    } else if (stepIndex > exporter.steps.length) {
      activeStep = exporter.steps.length;
    } else {
      activeStep = stepIndex;
    }
  }

  exporter.isOnFirstStep = function () {
    return activeStep === 0;
  };

  exporter.getActiveStepName = function () {

    if (activeStep === -1) {
      return 'finished';
    }

    return exporter.steps[activeStep].name;
  };

  exporter.onLastStep = function () {
    return activeStep >= (exporter.steps.length - 1);
  };

  exporter.export = function () {

    var exportFormat = _.find(exporter.exportFormats, {type: exporter.format}),
        isCustomized = exportFormat && exportFormat.customizable === true,
        includedProperties,
        customizations;

    if (isCustomized) {
      customizations = exporter.customizations;
      customizations.logo = exporter.exportLogoUrl + customizations.brand.logo;
      customizations.brand = customizations.brand.name;
      customizations.template = customizations.template.name;
      includedProperties = [];
    } else {
      customizations = {};
      includedProperties = _.pluck(_.filter(exporter.eventProperties, 'include'), 'name');
    }

    eventExporter.export(exporter.format, exporter.email, includedProperties, exporter.dayByDay, customizations);
    activeStep = -1;
  };

  exporter.format = exporter.exportFormats[0].type;
  exporter.email = '';

  exporter.close = function () {
    $uibModalInstance.dismiss('cancel');
  };

  exporter.eventCount = eventExporter.activeExport.eventCount;
}
EventExportController.$inject = ["$uibModalInstance", "eventExporter", "ExportFormats", "udbApi", "appConfig"];
})();

// Source: src/export/event-exporter.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.eventExporter
 * @description
 * # eventExporter
 * Event Exporter Service
 */
angular
  .module('udb.export')
  .service('eventExporter', eventExporter);

/* @ngInject */
function eventExporter(jobLogger, appConfig, udbApi, EventExportJob, $cookies) {

  var ex = this; // jshint ignore:line

  ex.activeExport = {
    query: {},
    eventCount: 0,
    selection: []
  };

  /**
   * Send the active export job to the server
   *
   * @param {'json'|'csv'}  format
   * @param {string}        email
   * @param {string[]}      properties
   * @param {boolean}       perDay
   * @param {Object}        customizations
   *
   * @return {object}
   */
  ex.export = function (format, email, properties, perDay, customizations) {
    var workflowQuery = ' AND workflowStatus:("APPROVED" OR "READY_FOR_VALIDATION")',
        queryString = '(' + ex.activeExport.query.queryString + ')' + workflowQuery,
        selection = ex.activeExport.selection || [],
        eventCount = ex.activeExport.eventCount,
        brand = customizations.brand || '',
        details = null,
        user = $cookies.getObject('user');

    var jobPromise = udbApi.exportEvents(
        queryString,
        email,
        format,
        properties,
        perDay,
        selection,
        customizations
    );
    details = {
        format : format,
        user : user.id,
        brand : brand,
        queryString : queryString
      };

    jobPromise.success(function (jobData) {
      var job = new EventExportJob(jobData.commandId, eventCount, format, details);
      jobLogger.addJob(job);
      job.start();
    });

    return jobPromise;
  };
}
eventExporter.$inject = ["jobLogger", "appConfig", "udbApi", "EventExportJob", "$cookies"];
})();

// Source: src/export/export-formats.constant.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc constant
 * @name udb.export.ExportFormats
 * @description
 * # ExportFormats
 * Event export formats
 */
angular
  .module('udb.export')
  .constant('ExportFormats',
  /**
   * Enum for export formats
   * @readonly
   * @enum {string}
   */
  {
    OOXML: {
      type: 'ooxml',
      extension: 'xlsx',
      label: 'Office Open XML (Excel)',
      description: 'Het standaard formaat van Excel vanaf Microsoft Office 2007.'
    },
    PDF: {
      type: 'pdf',
      label: 'Als PDF',
      extension: 'pdf',
      description: 'Druk snel en eenvoudig items uit de UiTdatabank af. Kies een Vlieg, UiT-, of UiTPAS-sjabloon.',
      customizable: true
    },
    JSON: {
      type: 'json',
      label: 'Als json',
      extension: 'json',
      description: 'Exporteren naar event-ld om de informatie voor ontwikkelaars beschikbaar te maken.'
    }
  });
})();

// Source: src/export/export-modal-buttons.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.export.directive:udbExportModalButtons
 * @description
 * # udbExportModalButtons
 */
angular
  .module('udb.export')
  .directive('udbExportModalButtons', udbExportModalButtons);

/* @ngInject */
function udbExportModalButtons() {
  return {
    templateUrl: 'templates/export-modal-buttons.directive.html',
    restrict: 'E'
  };
}
})();

// Source: src/management/components/query-search-bar.component.js
(function () {
'use strict';

/**
 * @ngdoc component
 * @name udb.search.directive:udbSearchBar
 * @description
 * # udbQuerySearchBar
 */
angular
  .module('udb.management')
  .component('udbQuerySearchBar', {
    templateUrl: 'templates/query-search-bar.html',
    controller: QuerySearchBarComponent,
    controllerAs: 'qsb',
    bindings: {
      onChange: '&',
      searchLabel: '@',
      helpLink: '@',
      helpLabel: '@'
    }
  });

/* @ngInject */
function QuerySearchBarComponent($translate) {
  var qsb = this;

  qsb.queryString = '';
  qsb.find = find;

  qsb.$onInit = function() {
    $translate(qsb.searchLabel).then(function(translatedLabel) {
      qsb.searchLabel = translatedLabel;
    });
  };

  /**
   * Search with a given query string and update the search bar or use the one currently displayed in the search bar
   *
   * @param {String} [queryString]
   */
  function find(queryString) {
    var query = typeof queryString !== 'undefined' ? queryString : qsb.queryString;

    qsb.queryString = query;
    qsb.onChange({query: query});
  }
}
QuerySearchBarComponent.$inject = ["$translate"];
})();

// Source: src/management/directives/form-group.directive.js
(function () {
'use strict';

angular
  .module('udb.management')
  .directive('udbFormGroup', FormGroupDirective);

function FormGroupDirective() {
  return {
    restrict: 'A',
    require: '^form',
    link: function (scope, element, attributes, formController) {
      var inputElement = element[0].querySelector('[name]');
      var field = angular.element(inputElement);
      var fieldName = field.attr('name');

      field.bind('blur', function () {
        var isInvalid = formController[fieldName].$invalid;
        element
          .toggleClass('has-error', isInvalid)
          .toggleClass('has-success', !isInvalid);
      });
    }
  };
}
})();

// Source: src/management/labels/label-creator.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:LabelCreatorController
 * @description
 * # LabelCreatorController
 */
angular
  .module('udb.management.labels')
  .controller('LabelCreatorController', LabelCreatorController);

/** @ngInject */
function LabelCreatorController(LabelManager, $uibModal, $state) {
  var creator = this;
  creator.creating = false;
  creator.create = create;
  creator.label = {
    name: '',
    isPrivate: false,
    isVisible: true
  };

  function create() {
    function goToOverview() {
      $state.go('split.manageLabels.list');
    }

    creator.creating = true;
    LabelManager
      .create(creator.label.name, creator.label.isVisible, creator.label.isPrivate)
      .then(goToOverview, showProblem)
      .finally(function () {
        creator.creating = false;
      });
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    var modalInstance = $uibModal.open(
      {
        templateUrl: 'templates/unexpected-error-modal.html',
        controller: 'UnexpectedErrorModalController',
        size: 'sm',
        resolve: {
          errorMessage: function() {
            return problem.title + ' ' + problem.detail;
          }
        }
      }
    );
  }
}
LabelCreatorController.$inject = ["LabelManager", "$uibModal", "$state"];
})();

// Source: src/management/labels/label-editor.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:LabelEditorController
 * @description
 * # LabelEditorController
 */
angular
  .module('udb.management.labels')
  .controller('LabelEditorController', LabelEditorController);

/** @ngInject */
function LabelEditorController(LabelManager, $uibModal, $stateParams, $q) {
  var editor = this;
  editor.updateVisibility = updateVisibility;
  editor.updatePrivacy = updatePrivacy;
  editor.saving = false;
  editor.renaming = false;
  editor.save = save;

  function rename() {
    function showRenamedLabel(response) {
      loadLabel(response.uuid);
    }

    editor.renaming = true;
    LabelManager
      .copy(editor.label)
      .then(showRenamedLabel, showProblem)
      .finally(function () {
        editor.renaming = false;
        editor.saving = false;
      });
  }

  function save() {
    editor.saving = true;

    var promisses = [];
    var checkRenaming = editor.originalLabel.name !== editor.label.name;

    if (checkRenaming) {
      rename();
    }

    else {
      if (editor.originalLabel.isVisible !== editor.label.isVisible) {
        promisses.push(updateVisibility());
      }

      if (editor.originalLabel.isPrivate !== editor.label.isPrivate) {
        promisses.push(updatePrivacy());
      }

      $q.all(promisses).finally(function() {
          editor.saving = false;
        }).catch(showProblem);
    }
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    loadLabel(editor.label.uuid);
    var modalInstance = $uibModal.open(
      {
        templateUrl: 'templates/unexpected-error-modal.html',
        controller: 'UnexpectedErrorModalController',
        size: 'sm',
        resolve: {
          errorMessage: function() {
            return problem.title + ' ' + problem.detail;
          }
        }
      }
    );
  }

  function loadLabelFromParams() {
    var id = $stateParams.id;
    loadLabel(id);
  }

  /**
   *
   * @param {Label} label
   */
  function showLabel(label) {
    editor.label = label;
    getVisibility(label);
    getPrivacy(label);
    editor.originalLabel = _.cloneDeep(editor.label);
  }

  function loadLabel(id) {
    editor.loadingError = false;
    editor.label = false;
    LabelManager
      .get(id)
      .then(showLabel, showLoadingError);
  }

  function getVisibility(label) {
    if (label.visibility === 'visible') {
      label.isVisible = true;
    }
    else {
      label.isVisible = false;
    }

    return label;
  }

  function getPrivacy(label) {
    if (label.privacy === 'public') {
      label.isPrivate = false;
    }
    else {
      label.isPrivate = true;
    }

    return label;
  }

  function showLoadingError () {
    editor.loadingError = 'Label niet gevonden!';
  }

  function updateVisibility () {
    var isVisible = editor.label.isVisible;

    return isVisible ? LabelManager.makeVisible(editor.label) : LabelManager.makeInvisible(editor.label);
  }

  function updatePrivacy () {
    var isPrivate = editor.label.isPrivate;

    return isPrivate ? LabelManager.makePrivate(editor.label) : LabelManager.makePublic(editor.label);
  }

  loadLabelFromParams();
}
LabelEditorController.$inject = ["LabelManager", "$uibModal", "$stateParams", "$q"];
})();

// Source: src/management/labels/label-manager.service.js
(function () {
'use strict';

/**
 * @typedef {Object} Label
 * @property {string}   id
 * @property {string}   name
 * @property {boolean}  isVisible
 * @property {boolean}  isPrivate
 */

/**
 * @ngdoc service
 * @name udb.management.labels
 * @description
 * # Label Manager
 * This service allows you to lookup labels and perform actions on them.
 */
angular
  .module('udb.management.labels')
  .service('LabelManager', LabelManager);

/* @ngInject */
function LabelManager(udbApi) {
  var service = this;

  /**
   * @param {string} query
   * @param {int} limit
   * @param {int} start
   *
   * @return {Promise.<PagedCollection>}
   */
  service.find = function(query, limit, start) {
    return udbApi.findLabels(query, limit, start, false);
  };

  /**
   * @param {string|uuid} labelIdentifier
   *  The name or uuid of a label.
   * @return {Promise.<Label>}
   */
  service.get = function(labelIdentifier) {
    return udbApi.getLabelById(labelIdentifier);
  };

  /**
   * @param {string} name
   * @param {boolean} isVisible
   * @param {boolean} isPrivate
   *
   * @return {Promise}
   */
  service.create = function (name, isVisible, isPrivate) {
    return udbApi
      .createLabel(name, isVisible, isPrivate);
  };

  /**
   * @param {Label} label
   * @return {Promise}
   */
  service.copy = function (label) {
    return udbApi
      .createLabel(label.name, label.isVisible, label.isPrivate, label.uuid);
  };

  /**
   * @param {Label} label
   * @return {Promise}
   */
  service.delete = function (label) {
    return udbApi
      .deleteLabel(label.uuid);
  };

  /**
   * @param {Label} label
   * @return {Promise}
   */
  service.makeInvisible = function (label) {
    return udbApi
      .updateLabel(label.uuid, 'MakeInvisible');
  };

  /**
   * @param {Label} label
   * @return {Promise}
   */
  service.makeVisible = function (label) {
    return udbApi
      .updateLabel(label.uuid, 'MakeVisible');
  };

  /**
   *
   * @param {Label} label
   * @return {Promise}
   */
  service.makePrivate = function (label) {
    return udbApi
      .updateLabel(label.uuid, 'MakePrivate');
  };

  /**
   * @param {Label} label
   * @return {Promise}
   */
  service.makePublic = function (label) {
    return udbApi
      .updateLabel(label.uuid, 'MakePublic');
  };
}
LabelManager.$inject = ["udbApi"];
})();

// Source: src/management/labels/labels-list.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:LabelsListController
 * @description
 * # LabelsListController
 */
angular
  .module('udb.management.labels')
  .controller('LabelsListController', LabelsListController);

/* @ngInject */
function LabelsListController(SearchResultGenerator, rx, $scope, LabelManager) {
  var llc = this;

  var itemsPerPage = 10;
  var minQueryLength = 3;
  var query$ = rx.createObservableFunction(llc, 'queryChanged');
  var filteredQuery$ = query$.filter(ignoreShortQueries);
  var page$ = rx.createObservableFunction(llc, 'pageChanged');
  var searchResultGenerator = new SearchResultGenerator(LabelManager, filteredQuery$, page$, itemsPerPage);
  var searchResult$ = searchResultGenerator.getSearchResult$();

  /**
   * @param {string} query
   * @return {boolean}
   */
  function ignoreShortQueries(query) {
    if (llc.query === '') {
      return true;
    }
    else {
      return query.length >= minQueryLength;
    }
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    llc.problem = problem;
  }

  function clearProblem()
  {
    llc.problem = false;
  }

  /**
   * @param {(PagedCollection|ApiProblem)} searchResult
   */
  function showSearchResult(searchResult) {
    var problem = searchResult.error;

    if (problem) {
      showProblem(problem);
      llc.searchResult = {};
    } else {
      clearProblem();
      llc.searchResult = searchResult;
    }

    llc.loading = false;
  }

  llc.loading = false;
  llc.query = '';
  llc.page = 0;
  llc.minQueryLength = minQueryLength;

  query$
    .safeApply($scope, function (query) {
      llc.query = query;
    })
    .subscribe();

  searchResult$
    .safeApply($scope, showSearchResult)
    .subscribe();

  filteredQuery$
    .merge(page$)
    .safeApply($scope, function () {
      llc.loading = true;
    })
    .subscribe();
}
LabelsListController.$inject = ["SearchResultGenerator", "rx", "$scope", "LabelManager"];
})();

// Source: src/management/labels/semicolon-label-check.directive.js
(function () {
'use strict';

angular
  .module('udb.management.labels')
  .directive('udbSemicolonLabelCheck', SemicolonLabelCheckDirective);

/** @ngInject */
function SemicolonLabelCheckDirective($q) {
  return {
    restrict: 'A',
    require: 'ngModel',
    link: function (scope, element, attrs, controller) {

      function hasNoSemicolons(name) {
        return name === undefined || (name.indexOf(';') === -1);
      }

      controller.$validators.semicolonLabel = hasNoSemicolons;
    }
  };
}
SemicolonLabelCheckDirective.$inject = ["$q"];
})();

// Source: src/management/labels/unique-label.directive.js
(function () {
'use strict';

angular
  .module('udb.management.labels')
  .directive('udbUniqueLabel', UniqueLabelDirective);

/** @ngInject */
function UniqueLabelDirective(LabelManager, $q) {
  return {
    restrict: 'A',
    require: 'ngModel',
    link: function (scope, element, attrs, controller) {
      function isUnique(labelName) {
        if (controller.$isEmpty(labelName)) {
          return $q.when();
        }

        var deferredUniqueCheck = $q.defer();

        LabelManager
          .get(labelName)
          .then(deferredUniqueCheck.reject, deferredUniqueCheck.resolve);

        return deferredUniqueCheck.promise;
      }

      controller.$asyncValidators.uniqueLabel = isUnique;
    }
  };
}
UniqueLabelDirective.$inject = ["LabelManager", "$q"];
})();

// Source: src/management/list-item-defaults.factory.js
(function () {
'use strict';

/**
 * @typedef {Object} ManagementListItem
 * @property {string} name
 * @property {RolePermission} permission
 * @property {number} notificationCount
 * @property {number} index
 * @property {string} sref
 * @property {string} icon
 */

/**
 * @ngdoc service
 * @name udb.management.listItemDefaults
 * @description
 * # Management list item defaults
 * These are the defaut values for the list items you can show in the app side bar.
 */
angular
  .module('udb.management')
  .factory('managementListItemDefaults', listItemDefaults);

/**
 * @ngInject
 * @return {ManagementListItem[]}
 */
function listItemDefaults(RolePermission) {
  return [
    {
      name: 'Valideren',
      permission: RolePermission.AANBOD_MODEREREN,
      notificationCount: 0,
      index: 1,
      sref: 'management.moderation.list',
      icon: 'fa fa-flag'
    },
    {
      name: 'Gebruikers',
      permission: RolePermission.GEBRUIKERS_BEHEREN,
      notificationCount: 0,
      index: 2,
      sref: 'management.users.list',
      icon: 'fa fa-user'
    },
    {
      name: 'Rollen',
      permission: RolePermission.GEBRUIKERS_BEHEREN,
      notificationCount: 0,
      index: 3,
      sref: 'split.manageRoles.list',
      icon: 'fa fa-users'
    },
    {
      name: 'Labels',
      permission: RolePermission.LABELS_BEHEREN,
      notificationCount: 0,
      index: 4,
      sref: 'split.manageLabels.list',
      icon: 'fa fa-tag'
    },
    {
      name: 'Organisaties',
      permission: RolePermission.ORGANISATIES_BEHEREN,
      notificationCount: 0,
      index: 5,
      sref: 'management.organizers.search',
      icon: 'fab fa-slideshare'
    }
  ];
}
listItemDefaults.$inject = ["RolePermission"];
})();

// Source: src/management/list-items.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.management.listItems
 * @description
 * # Management list items
 * Return the management list items to show in the sidebar as  a promise.
 */
angular
  .module('udb.management')
  .factory('managementListItems', listItems);

/**
 * @ngInject
 * @return {Promise.<ManagementListItem[]>}
 */
function listItems(
  RolePermission,
  authorizationService,
  ModerationService,
  $q,
  managementListItemDefaults,
  appConfig
) {
  var globalPermissionListItems = authorizationService
    .getPermissions()
    .then(generateListItems);

  var moderationListItems = ModerationService
    .getMyRoles()
    .then(generateModerationListItems);

  return $q
    .all([globalPermissionListItems, moderationListItems])
    .then(_.flatten);

  /**
   * @param {Role[]} roles
   * @return {number}
   */
  function countOffersWaitingForValidation(roles) {
    var query = '';

    _.forEach(roles, function(role) {
      if (role.constraints !== undefined && role.constraints.v3) {
        query += (query ? ' OR ' : '') + role.constraints.v3;
      }
    });
    query = (query ? '(' + query + ')' : '');
    return ModerationService
      .find(query, 10, 0)
      .then(function(searchResult) {
        return searchResult.totalItems;
      });
  }

  /**
   *
   * @param {number} waitingOfferCount
   * @return {ManagementListItem}
   */
  function generateModerationListItem(waitingOfferCount) {
    var defaultModerationListItem = _.find(
      managementListItemDefaults,
      {permission: RolePermission.AANBOD_MODEREREN}
    );

    var moderationListItem = angular.copy(defaultModerationListItem);
    //
    moderationListItem.notificationCount = waitingOfferCount;

    return moderationListItem;
  }

  /**
   * @param {Role[]} userRoles
   * @return {Promise.<ManagementListItem[]>}
   */
  function generateModerationListItems(userRoles) {
    var deferredListItems = $q.defer();

    var moderationRoles = _.filter(userRoles, function(role) {
      return _.includes(role.permissions, RolePermission.AANBOD_MODEREREN);
    });

    if (moderationRoles.length > 0) {
      countOffersWaitingForValidation(moderationRoles)
        .then(generateModerationListItem)
        .then(function(moderationListItem) {
          deferredListItems.resolve([moderationListItem]);
        });
    } else {
      deferredListItems.resolve([]);
    }

    return deferredListItems.promise;
  }

  /**
   * @param {RolePermission[]} userPermissions
   * @return {Promise.<ManagementListItem[]>}
   */
  function generateListItems(userPermissions) {
    var globalUserPermissions = _.without(userPermissions, RolePermission.AANBOD_MODEREREN);

    var listItems = _.filter(managementListItemDefaults, function (listItem) {
      return _.includes(globalUserPermissions, listItem.permission);
    });

    return $q.resolve(listItems);
  }
}
listItems.$inject = ["RolePermission", "authorizationService", "ModerationService", "$q", "managementListItemDefaults", "appConfig"];
})();

// Source: src/management/moderation/components/moderation-offer/moderation-offer.component.js
(function () {
'use strict';

/**
 * @ngdoc component
 * @name udb.management.moderation.directive:udbModerationOffer
 * @description
 * # udbModerationOffer
 */
angular
  .module('udb.management.moderation')
  .component('udbModerationOffer', {
    templateUrl: 'templates/moderation-offer.html',
    controller: ModerationOfferComponent,
    controllerAs: 'moc',
    bindings: {
      continue: '@',
      offerId: '@',
      offerType: '@'
    }
  });

/* @ngInject */
function ModerationOfferComponent(ModerationService, jsonLDLangFilter, OfferWorkflowStatus, $uibModal) {
  var moc = this;
  var defaultLanguage = 'nl';

  moc.loading = true;
  moc.offer = {};
  moc.error = false;

  moc.isReadyForValidation = isReadyForValidation;
  moc.isApproved = isApproved;
  moc.isRejected = isRejected;
  moc.approve = approve;
  moc.askForRejectionReasons = askForRejectionReasons;
  moc.continueValidation = continueValidation;

  // fetch offer
  ModerationService
    .getModerationOffer(moc.offerId)
    .then(function (offer) {
      offer.updateTranslationState();
      moc.offer = jsonLDLangFilter(offer, defaultLanguage);
    })
    .catch(showLoadingError)
    .finally(function () {
      moc.loading = false;
    });

  function showLoadingError(problem) {
    showProblem(problem || {title: 'Dit aanbod kon niet geladen worden.'});
  }

  function continueValidation() {
    return moc.continue === 'true';
  }

  function isReadyForValidation() {
    return moc.offer.workflowStatus === OfferWorkflowStatus.READY_FOR_VALIDATION;
  }

  function isApproved() {
    return moc.offer.workflowStatus === OfferWorkflowStatus.APPROVED;
  }

  function isRejected() {
    return moc.offer.workflowStatus === OfferWorkflowStatus.REJECTED;
  }

  function approve() {
    moc.error = false;
    ModerationService
      .approve(moc.offer)
      .then(function () {
        setWorkflowStatus(OfferWorkflowStatus.APPROVED);
      })
      .catch(showProblem);
  }

  function askForRejectionReasons() {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/reject-offer-confirm-modal.html',
      controller: 'RejectOfferConfirmModalCtrl'
    });

    modalInstance.result.then(reject);
  }

  /**
   * @param {string} reason
   *  DUPLICATE
   *  INAPPROPRIATE
   *  or a custom reason
   */
  function reject(reason) {
    if (reason === 'DUPLICATE') {
      flagAsDuplicate();
    } else if (reason === 'INAPPROPRIATE') {
      flagAsInappropriate();
    } else {
      rejectWithReason(reason);
    }
  }

  /**
   * an offer can be rejected without a reason added.
   */
  function rejectWithReason(reason) {
    moc.error = false;
    ModerationService
      .reject(moc.offer, reason)
      .then(function () {
        setWorkflowStatus(OfferWorkflowStatus.REJECTED);
      })
      .catch(showProblem);
  }

  function flagAsDuplicate() {
    moc.error = false;
    ModerationService
      .flagAsDuplicate(moc.offer)
      .then(function () {
        setWorkflowStatus(OfferWorkflowStatus.REJECTED);
      })
      .catch(showProblem);
  }

  function flagAsInappropriate() {
    moc.error = false;
    ModerationService
      .flagAsInappropriate(moc.offer)
      .then(function () {
        setWorkflowStatus(OfferWorkflowStatus.REJECTED);
      })
      .catch(showProblem);
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    moc.error = problem.title + (problem.detail ? ' ' + problem.detail : '');
  }

  function setWorkflowStatus(workflowStatus) {
    moc.offer.workflowStatus = workflowStatus;
    window.parent.postMessage({source: 'UDB', type: 'OFFER_MODERATED', status: workflowStatus}, '*');
  }
}
ModerationOfferComponent.$inject = ["ModerationService", "jsonLDLangFilter", "OfferWorkflowStatus", "$uibModal"];
})();

// Source: src/management/moderation/components/moderation-summary/moderation-summary.component.js
(function () {
'use strict';

/**
 * @ngdoc component
 * @name udb.management.moderation:udbModerationSummaryComponent
 * @description
 * # udbModerationSummary
 */
angular
  .module('udb.management.moderation')
  .component('udbModerationSummary', {
    templateUrl: 'templates/moderation-summary.html',
    controller: ModerationSummaryComponent,
    controllerAs: 'moc',
    bindings: {
      offerId: '@',
      offerType: '@'
    }
  });

/* @ngInject */
function ModerationSummaryComponent(ModerationService, jsonLDLangFilter, authorizationService, appConfig) {
  var moc = this;
  var defaultLanguage = 'nl';

  moc.loading = true;
  moc.offer = {};
  moc.error = false;
  moc.uitId = _.get(appConfig, 'uitidUrl');
  authorizationService.isGodUser()
    .then(function (permission) {
      moc.isGodUser = permission;
    });

  // fetch offer
  ModerationService
    .getModerationOffer(moc.offerId)
    .then(function(offer) {
      offer.updateTranslationState();
      moc.offer = jsonLDLangFilter(offer, defaultLanguage);
      if (_.isEmpty(moc.offer.description)) {
        moc.offer.description = '';
      }
    })
    .catch(showLoadingError)
    .finally(function() {
      moc.loading = false;
    });

  function showLoadingError(problem) {
    showProblem(problem || {title:'Dit aanbod kon niet geladen worden.'});
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    moc.error = problem.title + (problem.detail ? ' ' + problem.detail : '');
  }

}
ModerationSummaryComponent.$inject = ["ModerationService", "jsonLDLangFilter", "authorizationService", "appConfig"];
})();

// Source: src/management/moderation/components/reject-offer-confirm-modal.controller.js
(function () {

'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:RoleDeleteConfirmModalCtrl
 * @description
 * # RoleDeleteConfirmModalCtrl
 * Modal to delete a role.
 */
angular
  .module('udb.management.moderation')
  .controller('RejectOfferConfirmModalCtrl', RejectOfferConfirmModalCtrl);

/* @ngInject */
function RejectOfferConfirmModalCtrl($scope, $uibModalInstance, $q) {

  $scope.cancel = cancel;
  $scope.reject = reject;
  $scope.response = {};

  /**
   * Delete the role.
   */
  function reject() {
    var answer;
    $scope.error = false;

    // if no type chosen or the reason hasn't been filled in for OTHER
    if (!$scope.response.type ||
          ($scope.response.type === 'OTHER' &&
            (!$scope.response.reason || !$scope.response.reason.length))) {
      $scope.error = 'Gelieve een reden op te geven.';
      return;
    }

    if ($scope.response.type === 'OTHER') {
      answer = $scope.response.reason;
    } else {
      answer = $scope.response.type;
    }

    $uibModalInstance.close($q.resolve(answer));
  }

  /**
   * Cancel, modal dismiss.
   */
  function cancel() {
    $uibModalInstance.dismiss();
  }

}
RejectOfferConfirmModalCtrl.$inject = ["$scope", "$uibModalInstance", "$q"];
})();

// Source: src/management/moderation/moderation-list.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:ModerationListController
 * @description
 * # ModerationListController
 */
angular
  .module('udb.management.moderation')
  .controller('ModerationListController', ModerationListController);

/**
 * @ngInject
 * @constructor
 *
 * @param {ModerationService} ModerationService
 * @param {Object} $uibModal
 * @param {RolePermission} RolePermission
 */
function ModerationListController(
  ModerationService,
  $uibModal,
  RolePermission,
  SearchResultGenerator,
  rx,
  $scope,
  $q,
  $document,
  appConfig
) {
  var moderator = this;

  var query$, page$, searchResultGenerator, searchResult$;
  var itemsPerPage = 10;

  moderator.roles = [];

  moderator.loading = true;
  moderator.errorMessage = false;
  moderator.selectedRole = {};
  moderator.searchResult = {};

  moderator.findModerationContent = findModerationContent;

  // load the current user's moderation roles
  ModerationService
    .getMyRoles()
    .then(filterModeratorRoles)
    .then(configureObservables)
    .catch(showProblem) // stop loading when there's an error
    .finally(function() {
      moderator.loading = false;
    });

  function configureObservables(currentRole) {
    // configure observables for searching items
    query$ = rx.createObservableFunction(moderator, 'queryChanged');
    page$ = rx.createObservableFunction(moderator, 'pageChanged');
    searchResultGenerator = new SearchResultGenerator(
      ModerationService, query$, page$, itemsPerPage, currentRole.constraints.v3
    );
    searchResult$ = searchResultGenerator.getSearchResult$();

    // show search results
    searchResult$
      .safeApply($scope, showSearchResult)
      .subscribe();

    // show loading screen on query change
    query$
      .safeApply($scope, function () {
        moderator.loading = true;
      })
      .subscribe();

    page$.subscribe(function () {
      $document.scrollTop(0);
    });

    return $q.resolve();
  }

  function filterModeratorRoles(roles) {
    // only show roles with moderator permission
    var filteredRoles = _.filter(roles, function(role) {
      var canModerate = _.filter(role.permissions, function(permission) {
        return permission === RolePermission.AANBOD_MODEREREN;
      });
      return canModerate.length > 0;
    });

    if (filteredRoles.length) {
      moderator.roles = filteredRoles;
      moderator.selectedRole = moderator.roles[0];

      return $q.resolve(moderator.selectedRole);
    }

    // when no roles were found aka no current role is set
    // don't bother continueing
    return $q.reject({title:'Er is huidig geen moderator rol gekoppeld aan jouw gebruiker.'});
  }

  function findModerationContent(currentRole) {
    moderator.queryChanged(currentRole.constraints.v3);
  }

  /**
   * @param {(PagedCollection|ApiProblem)} searchResult
   */
  function showSearchResult(searchResult) {
    var problem = searchResult.error;

    if (problem) {
      showProblem(problem);
      moderator.searchResult = {};
    } else {
      moderator.searchResult = searchResult;
    }

    moderator.loading = false;
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    moderator.errorMessage = problem.title + (problem.detail ? ' ' + problem.detail : '');

    var modalInstance = $uibModal.open(
      {
        templateUrl: 'templates/unexpected-error-modal.html',
        controller: 'UnexpectedErrorModalController',
        size: 'sm',
        resolve: {
          errorMessage: function() {
            return moderator.errorMessage;
          }
        }
      }
    );
  }
}
ModerationListController.$inject = ["ModerationService", "$uibModal", "RolePermission", "SearchResultGenerator", "rx", "$scope", "$q", "$document", "appConfig"];
})();

// Source: src/management/moderation/moderation.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.management.moderation
 * @description
 * # Moderation Manager
 * This service allows you to lookup moderation lists and approve/reject/... Offers.
 */
angular
  .module('udb.management.moderation')
  .service('ModerationService', ModerationService);

/* @ngInject */
function ModerationService(udbApi, OfferWorkflowStatus, jobLogger, BaseJob, $q) {
  var service = this;

  /**
   * @return {Promise.<Role[]>}
   */
  service.getMyRoles = function() {
    return udbApi.getMyRoles();
  };

  /**
   * Find moderation items
   *
   * @param {string} queryString
   * @param {int} itemsPerPage
   * @param {int} offset
   *
   * @return {Promise.<PagedCollection>}
   */
  service.find = function(queryString, itemsPerPage, offset) {
    return udbApi
      .findToModerate(queryString, offset, itemsPerPage);
  };

  /**
   * @param {string} offerId
   *
   * @return {Promise.<Offer>}
   */
  service.getModerationOffer = function(offerId) {
    return udbApi.getOffer(new URL(offerId));
  };

  /**
   * @param {UdbPlace|UdbEvent} offer
   *
   * @return {Promise.<BaseJob>}
   */
  service.approve = function(offer) {
    return udbApi
      .patchOffer(offer['@id'], 'Approve');
  };

  /**
   * @param {UdbPlace|UdbEvent} offer
   *
   * @return {Promise.<BaseJob>}
   */
  service.reject = function(offer, reason) {
    return udbApi
      .patchOffer(offer['@id'], 'Reject', reason);
  };

  /**
   * @param {UdbPlace|UdbEvent} offer
   *
   * @return {Promise.<BaseJob>}
   */
  service.flagAsDuplicate = function(offer) {
    return udbApi
      .patchOffer(offer['@id'], 'FlagAsDuplicate');
  };

  /**
   * @param {UdbPlace|UdbEvent} offer
   *
   * @return {Promise.<BaseJob>}
   */
  service.flagAsInappropriate = function(offer) {
    return udbApi
      .patchOffer(offer['@id'], 'FlagAsInappropriate');
  };
}
ModerationService.$inject = ["udbApi", "OfferWorkflowStatus", "jobLogger", "BaseJob", "$q"];
})();

// Source: src/management/moderation/workflow.constant.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc service
 * @name udb.management.moderation.OfferWorkflowStatus
 * @description
 * # OfferWorkflowStatus
 * All the possible workflow states defined as a constant
 */
angular
  .module('udb.management.moderation')
  .constant('OfferWorkflowStatus',
    /**
     * Enum for workflowStatus
     * @readonly
     * @name OfferWorkflowStatus
     * @enum {string}
     */
    {
      'DRAFT': 'DRAFT',
      'READY_FOR_VALIDATION': 'READY_FOR_VALIDATION',
      'APPROVED': 'APPROVED',
      'REJECTED': 'REJECTED',
      'DELETED': 'DELETED'
    }
  );
})();

// Source: src/management/organizers/delete/organization-delete.modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc controller
 * @name udbApp.management.organizers.controller:OrganizationDeleteModalController
 * @var OrganizationDeleteModalController odc
 * @description
 * # OrganizationDeleteModalController
 * Modal to delete an organization
 */
angular
  .module('udb.management.organizers')
  .controller('OrganizationDeleteModalController', OrganizationDeleteModalController);

/* @ngInject */
function OrganizationDeleteModalController($uibModalInstance, OrganizerManager, organization, $rootScope) {
  var controller = this;

  controller.organization = organization;
  controller.saving = false;
  controller.error = false;

  controller.cancelRemoval = cancelRemoval;
  controller.deleteOrganization = deleteOrganization;

  /**
   * Delete the role.
   */
  function deleteOrganization() {
    controller.error = false;
    controller.saving = true;

    function showError() {
      controller.saving = false;
      controller.error = true;
    }

    OrganizerManager
      .delete(organization)
      .then(function () {
        $uibModalInstance.close();
        $rootScope.$emit('organizationDeleted', organization);
      })
      .catch(showError);
  }

  /**
   * Cancel, modal dismiss.
   */
  function cancelRemoval() {
    $uibModalInstance.dismiss();
  }
}
OrganizationDeleteModalController.$inject = ["$uibModalInstance", "OrganizerManager", "organization", "$rootScope"];
})();

// Source: src/management/organizers/new/organization-search-controller-new.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.management.organizers.controller:OrganizationSearchControllerNew
 * @description
 * # Organization Search Controller
 */
angular
  .module('udb.management.organizers')
  .controller('OrganizationSearchControllerNew', OrganizationSearchControllerNew);

/* @ngInject */
function OrganizationSearchControllerNew(SearchResultGenerator, rx, $scope, OrganizerManager, $rootScope, $timeout) {
  var controller = this;

  var itemsPerPage = 10;
  var minQueryLength = 3;
  var query$ = rx.createObservableFunction(controller, 'queryChanged');
  var filteredQuery$ = query$.filter(ignoreShortQueries(minQueryLength));
  var page$ = rx.createObservableFunction(controller, 'pageChanged');
  var searchResultGenerator = new SearchResultGenerator(OrganizerManager, filteredQuery$, page$, itemsPerPage);
  var searchResult$ = searchResultGenerator.getSearchResult$();

  /**
   * @param {number} minQueryLength
   * @return {Function}
   */
  function ignoreShortQueries(minQueryLength) {
    /**
     * @param {string} query
     */
    return function (query) {
      return query === '' || query.length >= minQueryLength;
    };
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    controller.problem = problem;
  }

  function clearProblem()
  {
    controller.problem = false;
  }

  /**
   * @param {(PagedCollection|ApiProblem)} searchResult
   */
  function showSearchResult(searchResult) {
    var problem = searchResult.error;

    if (problem) {
      showProblem(problem);
      controller.searchResult = {};
    } else {
      clearProblem();
      controller.searchResult = searchResult;
      $timeout(function() {
        $rootScope.$emit('searchComponentReady');
      });
    }

    controller.loading = false;
  }

  controller.loading = false;
  controller.query = '';
  controller.page = 0;
  controller.minQueryLength = minQueryLength;

  query$
    .safeApply($scope, function (query) {
      controller.query = query;
    })
    .subscribe();

  searchResult$
    .safeApply($scope, showSearchResult)
    .subscribe();

  filteredQuery$
    .merge(page$)
    .safeApply($scope, function () {
      controller.loading = true;
    })
    .subscribe();
}
OrganizationSearchControllerNew.$inject = ["SearchResultGenerator", "rx", "$scope", "OrganizerManager", "$rootScope", "$timeout"];
})();

// Source: src/management/organizers/new/organization-search-item-new.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.management.organizers.directive:udbOrganizationSearchItemNew
 * @var udbOrganizationSearchItemNew osic
 * @description
 * # Organizer search item Directive
 */
angular
  .module('udb.management.organizers')
  .directive('udbOrganizationSearchItemNew', OrganizationSearchItemNew);

function OrganizationSearchItemNew() {
  return {
    restrict: 'A',
    templateUrl: 'templates/organization-search-item-new.html',
    bindToController: {
      organizationSearchItem: '<udbOrganizationSearchItemNew'
    },
    controller: OrganizationSearchItemControllerNew,
    controllerAs: 'osic'
  };
}

/* @ngInject */
function OrganizationSearchItemControllerNew($rootScope, jsonLDLangFilter, $translate, $q, udbApi) {
  var controller = this;
  var organizationDeletedListener = $rootScope.$on('organizationDeleted', matchAndMarkAsDeleted);
  var defaultLanguage = $translate.use() || 'nl';

  showOrganization(controller.organizationSearchItem);

  /**
   *
   * @param {UdbOrganizer} organization
   */
  function showOrganization(organization) {
    controller.organization = organization;
    controller.organization.id = controller.organization['@id'].split('/').pop();
    controller.organization = jsonLDLangFilter(controller.organization, defaultLanguage, true);
  }

  function markAsDeleted() {
    organizationDeletedListener();
    controller.organizationDeleted = true;
  }

  function hasPermission (permission) {
    var deferredHasPermission = $q.defer();

    function findPermission(permissionList) {
      var foundPermission = _.find(permissionList, function(p) { return p === permission; });
      deferredHasPermission.resolve(foundPermission ? true : false);
    }

    udbApi
      .getMyPermissions()
      .then(findPermission, deferredHasPermission.reject);

    return deferredHasPermission.promise;
  }

  hasPermission('GEBRUIKERS_BEHEREN').then(function (isAllowed) {
    controller.isGodUser = isAllowed;
  });

  /**
   * @param {Object} angularEvent
   * @param {UdbOrganizer} deletedOrganization
   */
  function matchAndMarkAsDeleted(angularEvent, deletedOrganization) {
    if (!controller.organization) {
      return;
    }

    if (controller.organization.id === deletedOrganization.id) {
      markAsDeleted();
    }
  }
}
OrganizationSearchItemControllerNew.$inject = ["$rootScope", "jsonLDLangFilter", "$translate", "$q", "udbApi"];
})();

// Source: src/management/organizers/search/organization-search-item.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.management.organizers.directive:udbOrganizationSearchItem
 * @var udbOrganizationSearchItem osic
 * @description
 * # Organizer search item Directive
 */
angular
  .module('udb.management.organizers')
  .directive('udbOrganizationSearchItem', OrganizationSearchItem);

function OrganizationSearchItem() {
  return {
    restrict: 'A',
    templateUrl: 'templates/organization-search-item.html',
    bindToController: {
      organizationSearchItem: '<udbOrganizationSearchItem'
    },
    controller: OrganizationSearchItemController,
    controllerAs: 'osic'
  };
}

/* @ngInject */
function OrganizationSearchItemController($rootScope, jsonLDLangFilter, $translate) {
  var controller = this;
  var organizationDeletedListener = $rootScope.$on('organizationDeleted', matchAndMarkAsDeleted);
  var defaultLanguage = $translate.use() || 'nl';

  showOrganization(controller.organizationSearchItem);

  /**
   *
   * @param {UdbOrganizer} organization
   */
  function showOrganization(organization) {
    controller.organization = organization;
    controller.organization.id = controller.organization['@id'].split('/').pop();
    controller.organization = jsonLDLangFilter(controller.organization, defaultLanguage, true);
  }

  function markAsDeleted() {
    organizationDeletedListener();
    controller.organizationDeleted = true;
  }

  /**
   * @param {Object} angularEvent
   * @param {UdbOrganizer} deletedOrganization
   */
  function matchAndMarkAsDeleted(angularEvent, deletedOrganization) {
    if (!controller.organization) {
      return;
    }

    if (controller.organization.id === deletedOrganization.id) {
      markAsDeleted();
    }
  }
}
OrganizationSearchItemController.$inject = ["$rootScope", "jsonLDLangFilter", "$translate"];
})();

// Source: src/management/organizers/search/organization-search.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.management.organizers.controller:OrganizationSearchController
 * @description
 * # Organization Search Controller
 */
angular
  .module('udb.management.organizers')
  .controller('OrganizationSearchController', OrganizationSearchController);

/* @ngInject */
function OrganizationSearchController(SearchResultGenerator, rx, $scope, OrganizerManager) {
  var controller = this;

  var itemsPerPage = 10;
  var minQueryLength = 3;
  var query$ = rx.createObservableFunction(controller, 'queryChanged');
  var filteredQuery$ = query$.filter(ignoreShortQueries(minQueryLength));
  var page$ = rx.createObservableFunction(controller, 'pageChanged');
  var searchResultGenerator = new SearchResultGenerator(OrganizerManager, filteredQuery$, page$, itemsPerPage);
  var searchResult$ = searchResultGenerator.getSearchResult$();

  /**
   * @param {number} minQueryLength
   * @return {Function}
   */
  function ignoreShortQueries(minQueryLength) {
    /**
     * @param {string} query
     */
    return function (query) {
      return query === '' || query.length >= minQueryLength;
    };
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    controller.problem = problem;
  }

  function clearProblem()
  {
    controller.problem = false;
  }

  /**
   * @param {(PagedCollection|ApiProblem)} searchResult
   */
  function showSearchResult(searchResult) {
    var problem = searchResult.error;

    if (problem) {
      showProblem(problem);
      controller.searchResult = {};
    } else {
      clearProblem();
      controller.searchResult = searchResult;
    }

    controller.loading = false;
  }

  controller.loading = false;
  controller.query = '';
  controller.page = 0;
  controller.minQueryLength = minQueryLength;

  query$
    .safeApply($scope, function (query) {
      controller.query = query;
    })
    .subscribe();

  searchResult$
    .safeApply($scope, showSearchResult)
    .subscribe();

  filteredQuery$
    .merge(page$)
    .safeApply($scope, function () {
      controller.loading = true;
    })
    .subscribe();
}
OrganizationSearchController.$inject = ["SearchResultGenerator", "rx", "$scope", "OrganizerManager"];
})();

// Source: src/management/roles/components/role-delete-confirm-modal.controller.js
(function () {

'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:RoleDeleteConfirmModalCtrl
 * @description
 * # RoleDeleteConfirmModalCtrl
 * Modal to delete a role.
 */
angular
  .module('udb.management.roles')
  .controller('RoleDeleteConfirmModalCtrl', RoleDeleteConfirmModalController);

/* @ngInject */
function RoleDeleteConfirmModalController($scope, $uibModalInstance, RoleManager, item) {

  $scope.item = item;
  $scope.saving = false;
  $scope.error = false;

  $scope.cancelRemoval = cancelRemoval;
  $scope.deleteRole = deleteRole;

  /**
   * Delete the role.
   */
  function deleteRole() {
    $scope.error = false;
    $scope.saving = true;

    function showError() {
      $scope.saving = false;
      $scope.error = true;
    }

    RoleManager
      .deleteRole(item)
      .then($uibModalInstance.close)
      .catch(showError);
  }

  /**
   * Cancel, modal dismiss.
   */
  function cancelRemoval() {
    $uibModalInstance.dismiss();
  }

}
RoleDeleteConfirmModalController.$inject = ["$scope", "$uibModalInstance", "RoleManager", "item"];
})();

// Source: src/management/roles/permission.constant.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc service
 * @name udb.management.roles.Permission
 * @description
 * # Permission
 * All the possible job states defined as a constant
 */
angular
  .module('udb.management.roles')
  .constant('RolePermission',
    /**
     * Enum for permissions
     * @readonly
     * @name RolePermission
     * @enum {string}
     */
    {
      'AANBOD_BEWERKEN': 'AANBOD_BEWERKEN',
      'AANBOD_MODEREREN': 'AANBOD_MODEREREN',
      'AANBOD_VERWIJDEREN': 'AANBOD_VERWIJDEREN',
      'AANBOD_HISTORIEK': 'AANBOD_HISTORIEK',
      'ORGANISATIES_BEWERKEN': 'ORGANISATIES_BEWERKEN',
      'ORGANISATIES_BEHEREN': 'ORGANISATIES_BEHEREN',
      'GEBRUIKERS_BEHEREN': 'GEBRUIKERS_BEHEREN',
      'LABELS_BEHEREN': 'LABELS_BEHEREN',
      'VOORZIENINGEN_BEWERKEN': 'VOORZIENINGEN_BEWERKEN',
      'PRODUCTIES_AANMAKEN': 'PRODUCTIES_AANMAKEN',
      'FILMS_AANMAKEN': 'FILMS_AANMAKEN',
    }
  );
})();

// Source: src/management/roles/role-form.controller.js
(function () {
'use strict';

/**
 * @typedef {Object} TranslatedPermission
 * @property {RolePermission} key
 * @property {string} name
 */

/**
 * @ngdoc function
 * @name udbApp.controller:RoleFormController
 * @description
 * # RoleFormController
 */
angular
  .module('udb.management.roles')
  .controller('RoleFormController', RoleFormController);

/**
 * @ngInject
 * @constructor
 *
 * @param {RoleManager} RoleManager
 * @param {UserManager} UserManager
 * @param {Object} $uibModal
 * @param {Object} $stateParams
 * @param {Object} $q
 * @param {Function} $translate
 * @param {RolePermission} RolePermission
 */
function RoleFormController(
  RoleManager,
  UserManager,
  $uibModal,
  $stateParams,
  $q,
  $translate,
  RolePermission
) {
  var editor = this;
  var roleId = $stateParams.id;

  editor.saving = false;
  editor.loadedRole = false;
  editor.loadedRolePermissions = false;
  editor.loadedRoleUsers = false;
  editor.loadedRoleLabels = false;
  editor.addingUser = false;
  editor.role = {
    permissions: [],
    users: [],
    labels: []
  };
  /**
   * @type {TranslatedPermission[]}
   */
  editor.availablePermissions = [];
  editor.errorMessage = false;
  editor.editName = false;
  editor.editConstraint = false;

  editor.addUser = addUser;
  editor.addLabel = addLabel;
  editor.createRole = createRole;
  editor.removeLabel = removeLabel;
  editor.removeUser = removeUser;
  editor.updatePermission = updatePermission;
  editor.updateName = updateName;
  editor.createConstraint = createConstraint;
  editor.updateConstraint = updateConstraint;
  editor.removeConstraint = removeConstraint;
  editor.constraintExists = constraintExists;

  function init() {
    getAllRolePermissions()
      .then(function(permissions) {
        editor.availablePermissions = permissions;
        return roleId ? loadRole(roleId) : $q.resolve();
      })
      .catch(showProblem) // stop loading when there's an error
      .finally(function() {
        // no matter what resest loading indicators
        editor.loadedRole = true;
        editor.loadedRolePermissions = true;
        editor.loadedRoleUsers = true;
        editor.loadedRoleLabels = true;
      });
  }

  function loadRole(roleId) {
    return RoleManager
      .get(roleId)
      .then(function(role) {
        editor.role = role;
        editor.role.users = [];
        editor.role.labels = [];
        editor.role.permissions = _.filter(editor.availablePermissions, function (permission) {
          return _.contains(role.permissions, permission.key);
        });
      }, function(problem) {
        problem.detail = problem.title;
        problem.title = 'De rol kon niet gevonden worden.';
        return $q.reject(problem);
      })
      .then(function () {
        return loadRoleUsers(roleId);
      })
      .then(function () {
        return loadRoleLabels(roleId);
      });
  }

  /**
   * @return {TranslatedPermission[]}
   */
  function getAllRolePermissions() {
    var permissionIds = _.values(RolePermission);

    function formatTranslatedPermissions(translations) {
      return _.map(translations, function (translation, translationId) {
        return {
          key: translationId,
          name: translation
        };
      });
    }

    return $translate(permissionIds)
      .then(formatTranslatedPermissions);
  }

  function loadRoleUsers(roleId) {
    return RoleManager
      .getRoleUsers(roleId)
      .then(function (users) {
        editor.role.users = users;
      }, function(problem) {
        problem.detail = problem.title;
        problem.title = 'De leden van deze rol konden niet geladen worden.';
        return $q.reject(problem);
      });
  }

  function loadRoleLabels(roleId) {
    return RoleManager
      .getRoleLabels(roleId)
      .then(function (labels) {
        editor.role.labels = labels;
      }, function(problem) {
        problem.detail = problem.title;
        problem.title = 'De labels van deze rol konden niet geladen worden.';
        return $q.reject(problem);
      });
  }

  function roleCreated (response) {
    roleId = response.roleId;
    // set uuid because a GET role would have a uuid as well
    editor.role.uuid = roleId;
  }

  function createRole() {
    if (!editor.role.uuid && editor.role.name) {
      RoleManager
        .create(editor.role.name)
        .then(roleCreated, showProblem)
        .finally(function () {
          editor.saving = false;
        });
    }
  }

  function constraintExists() {
    return _.has(editor.role.constraints, 'v3') && editor.role.constraints.v3 !== null;
  }

  function createConstraint() {
    editor.saving = true;
    RoleManager
        .createRoleConstraint(roleId, editor.role.constraints.v3)
        .then(function() {
          editor.editConstraint = false;
        }, showProblem)
        .finally(function() {
          editor.saving = false;
        });
  }

  function updateConstraint() {
    editor.saving = true;
    RoleManager
      .updateRoleConstraint(roleId, editor.role.constraints.v3)
      .then(function() {
        editor.editConstraint = false;
      }, showProblem)
      .finally(function() {
        editor.saving = false;
      });
  }

  function removeConstraint() {
    editor.saving = true;
    RoleManager
        .removeRoleConstraint(roleId)
        .then(function() {
          editor.editConstraint = false;
          if (_.has(editor.role.constraints, 'v3')) {
            delete(editor.role.constraints.v3);
          }
        }, showProblem)
        .finally(function() {
          editor.saving = false;
        });
  }

  function updateName() {
    editor.saving = true;
    RoleManager
      .updateRoleName(roleId, editor.role.name)
      .then(function() {
        editor.editName = false;
      }, showProblem)
      .finally(function() {
        editor.saving = false;
      });
  }

  /**
   *
   * @param {RolePermission} permission
   */
  function updatePermission(permission) {
    editor.loadedRolePermissions = false;
    var permissionUpdate = $q.reject();

    if (_.find(editor.role.permissions, {key: permission.key})) {
      editor.role.permissions = _.reject(editor.role.permissions, {key: permission.key});
      permissionUpdate = RoleManager.removePermissionFromRole(permission.key, roleId);
    } else {
      editor.role.permissions.push(permission);
      permissionUpdate = RoleManager.addPermissionToRole(permission.key, roleId);
    }

    permissionUpdate
      .catch(showProblem)
      .finally(function() {
        editor.loadedRolePermissions = true;
      })
    ;
  }

  function addLabel(label) {
    editor.saving = true;

    RoleManager
      .addLabelToRole(roleId, label.uuid)
      .then(function () {
        editor.role.labels.push(label);
      }, showProblem)
      .finally(function() {
        editor.saving = false;
      });
  }

  function removeLabel(label) {
    editor.saving = true;

    RoleManager
      .removeLabelFromRole(roleId, label.uuid)
      .then(function () {
        var pos = editor.role.labels.indexOf(label);
        editor.role.labels.splice(pos, 1);
      }, showProblem)
      .finally(function() {
        editor.saving = false;
      });
  }

  function removeUser(user) {
    var role = _.pick(editor.role, ['uuid', 'name', 'constraint']);

    editor.saving = true;

    RoleManager
      .removeUserFromRole(role, user)
      .then(function () {
        var pos = editor.role.users.indexOf(user);
        editor.role.users.splice(pos, 1);
      }, showProblem)
      .finally(function() {
        editor.saving = false;
      });
  }

  function addUser() {
    editor.addingUser = true;
    var userAdded = false;

    UserManager
      .findUserWithEmail(editor.email)
      .then(function(user) {
        var userExists = false;
        userAdded = user;

        angular.forEach(editor.role.users, function(roleUser) {
          if (roleUser.uuid === user.uuid) {
            userExists = true;
          }
        });

        if (userExists) {
          return $q.reject({
            title: 'De gebruiker hangt al aan deze rol.'
          });
        } else {
          return user;
        }
      })
      .then(function(user) {
        var role = _.pick(editor.role, ['uuid', 'name', 'constraint']);
        return RoleManager.addUserToRole(user, role);
      })
      .then(function() {
        editor.role.users.push(userAdded);
        editor.form.email.$setViewValue('');
        editor.form.email.$setPristine(true);
        editor.form.email.$render();
      })
      .catch(showProblem)
      .finally(function() {
        editor.addingUser = false;
      });
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    editor.errorMessage = problem.title + (problem.detail ? ' ' + problem.detail : '');

    var modalInstance = $uibModal.open(
      {
        templateUrl: 'templates/unexpected-error-modal.html',
        controller: 'UnexpectedErrorModalController',
        size: 'sm',
        resolve: {
          errorMessage: function() {
            return editor.errorMessage;
          }
        }
      }
    );
  }

  init();
}
RoleFormController.$inject = ["RoleManager", "UserManager", "$uibModal", "$stateParams", "$q", "$translate", "RolePermission"];
})();

// Source: src/management/roles/role-manager.service.js
(function () {
'use strict';

/**
 * @typedef {Object} Role
 * @property {string}   uuid
 * @property {string}   name
 * @property {string}   constraint
 * @property {RolePermission[]} permissions
 */

/**
 * @typedef {Object} roleUpdate
 * @property {string} @name
 * @property {string} @constraint
 */

/**
 * @ngdoc service
 * @name udb.management.roles
 * @description
 * # Role Manager
 * This service allows you to lookup roles and perform actions on them.
 */
angular
  .module('udb.management.roles')
  .service('RoleManager', RoleManager);

/* @ngInject */
function RoleManager(udbApi) {
  var service = this;

  /**
   * @param {string} query
   * @param {int} limit
   * @param {int} start
   *
   * @return {Promise.<PagedCollection>}
   */
  service.find = function(query, limit, start) {
    return udbApi.findRoles(query, limit, start);
  };

  /**
   * @param {string|uuid} roleIdentifier
   *  The name or uuid of a role.
   * @return {Promise.<Role>}
   */
  service.get = function(roleIdentifier) {
    return udbApi.getRoleById(roleIdentifier);
  };

  /**
   * @param {string|uuid} roleId
   *  The name or uuid of a role.
   * @return {Promise.<Role>}
   */
  service.getRolePermissions = function(roleId) {
    return udbApi.getRolePermissions(roleId);
  };

  /**
   * @param {string|uuid} roleId
   *  The name or uuid of a role.
   * @return {Promise.<Role>}
   */
  service.getRoleUsers = function(roleId) {
    return udbApi.getRoleUsers(roleId);
  };

  /**
   * @param {string} name
   *  The name of the new role.
   * @return {Promise.<Role>}
   */
  service.create = function(name) {
    return udbApi.createRole(name);
  };

  /**
   * @param {RolePermission} permission
   *  The permission to add to the role
   * @param {string} roleId
   *  roleId for the role
   * @return {Promise}
   */
  service.addPermissionToRole = function(permission, roleId) {
    return udbApi
      .addPermissionToRole(permission, roleId);
  };

  /**
   * @param {RolePermission} permission
   *  The key for the permission
   * @param {string} roleId
   *  roleId for the role
   * @return {Promise}
   */
  service.removePermissionFromRole = function(permission, roleId) {
    return udbApi
      .removePermissionFromRole(permission, roleId);
  };

  /**
   * @param {User} user
   *  The user you want to add a role to
   * @param {Role} role
   *  The role you want added to the user
   * @return {Promise}
   */
  service.addUserToRole = function(user, role) {
    return udbApi
      .addUserToRole(user.uuid, role.uuid);
  };

  /**
   * @param {uuid} roleId
   * @param {string} name
   * @return {Promise}
   */
  service.updateRoleName = function(roleId, name) {
    return udbApi
      .updateRoleName(roleId, name);
  };

  /**
   *
   * @param {uuid} roleId
   * @param {string} constraint
   * @returns {Promise}
   */
  service.createRoleConstraint = function(roleId, constraint) {
    return udbApi
        .createRoleConstraint(roleId, constraint);
  };

  /**
   * @param {uuid} roleId
   * @param {string} constraint
   * @return {Promise}
   */
  service.updateRoleConstraint = function(roleId, constraint) {
    return udbApi
        .updateRoleConstraint(roleId, constraint);
  };

  /**
   * @param {uuid} roleId
   * @return {Promise}
   */
  service.removeRoleConstraint = function(roleId) {
    return udbApi
        .removeRoleConstraint(roleId);
  };

  /**
   * @param {uuid} roleId
   * @param {uuid} labelId
   * @return {Promise.<BaseJob>}
   */
  service.addLabelToRole = function(roleId, labelId) {
    return udbApi
      .addLabelToRole(roleId, labelId);
  };

  /**
   * @param {uuid} roleId
   * @return {Promise}
   */
  service.getRoleLabels = function(roleId) {
    return udbApi
      .getRoleLabels(roleId);
  };

  /**
   * @param {uuid} roleId
   * @param {uuid} labelId
   * @return {Promise.<BaseJob>}
   */
  service.removeLabelFromRole = function(roleId, labelId) {
    return udbApi
      .removeLabelFromRole(roleId, labelId);
  };

  /**
   * @param {Role} role
   * @param {User} user
   * @return {Promise}
   */
  service.removeUserFromRole = function(role, user) {
    return udbApi
      .removeUserFromRole(role.uuid, user.uuid);
  };

  /**
   * @param {Role} role
   * @return {Promise}
   */
  service.deleteRole = function (role) {
    return udbApi
      .removeRole(role.uuid);
  };
}
RoleManager.$inject = ["udbApi"];
})();

// Source: src/management/roles/roles-list.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:RolesListController
 * @description
 * # RolesListController
 */
angular
  .module('udb.management.roles')
  .controller('RolesListController', RolesListController);

/* @ngInject */
function RolesListController(SearchResultGenerator, rx, $scope, RoleManager, $uibModal, $state, $document) {
  var rlc = this;

  var itemsPerPage = 10;
  var minQueryLength = 3;

  var query$ = rx.createObservableFunction(rlc, 'queryChanged');
  var filteredQuery$ = query$.filter(ignoreShortQueries);
  var page$ = rx.createObservableFunction(rlc, 'pageChanged');
  var searchResultGenerator = new SearchResultGenerator(RoleManager, filteredQuery$, page$, itemsPerPage);
  var searchResult$ = searchResultGenerator.getSearchResult$();

  /**
   * Filter applied on query-stream to ignore too short queries
   * @param {string} query
   * @return {boolean}
   */
  function ignoreShortQueries(query) {
    if (rlc.query === '') {
      return true;
    }
    else {
      return query.length >= minQueryLength;
    }
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    rlc.problem = problem;
  }

  function clearProblem()
  {
    rlc.problem = false;
  }

  /**
   * @param {(PagedCollection|ApiProblem)} searchResult
   */
  function showSearchResult(searchResult) {
    var problem = searchResult.error;

    if (problem) {
      showProblem(problem);
      rlc.searchResult = {};
    } else {
      clearProblem();
      rlc.searchResult = searchResult;
    }

    rlc.loading = false;
  }

  function openDeleteConfirmModal(role) {
    var modalInstance = $uibModal.open({
        templateUrl: 'templates/role-delete-confirm-modal.html',
        controller: 'RoleDeleteConfirmModalCtrl',
        resolve: {
          item: function () {
            return role;
          }
        }
      });
    modalInstance.result.then(function() {
      $state.reload();
    });
    // TODO: $state.reload isn't the best way to do it, better have another stream
  }
  rlc.openDeleteConfirmModal = openDeleteConfirmModal;

  rlc.loading = false;
  rlc.query = '';
  rlc.page = 0;
  rlc.minQueryLength = minQueryLength;

  query$
    .safeApply($scope, function (query) {
      rlc.query = query;
    })
    .subscribe();

  searchResult$
    .safeApply($scope, showSearchResult)
    .subscribe();

  filteredQuery$
    .merge(page$)
    .safeApply($scope, function () {
      rlc.loading = true;
    })
    .subscribe();

  page$
    .subscribe(function () {
      $document.scrollTop(0);
    });
}
RolesListController.$inject = ["SearchResultGenerator", "rx", "$scope", "RoleManager", "$uibModal", "$state", "$document"];
})();

// Source: src/management/roles/search-label.component.js
(function () {
'use strict';

angular
  .module('udb.management.roles')
  .component('udbSearchLabel', {
    templateUrl: 'templates/search-label.html',
    controller: LabelSearchComponent,
    controllerAs: 'select',
    bindings: {
      labelAdded: '&',
      labelRemoved: '&'
    }
  });

/** @ngInject */
function LabelSearchComponent(LabelManager) {
  var select = this;
  /** @type {Label[]} */
  select.availableLabels = [];
  select.suggestLabels = suggestLabels;
  select.minimumInputLength = 2;
  select.findDelay = 300;
  select.label = null;

  function findSuggestions(name) {
    LabelManager
      .find(name, 6, 0)
      .then(function(results) {
        setAvailableLabels(results.member);
      })
      .finally(function () {
        select.refreshing = false;
      });
  }

  function suggestLabels(name) {
    select.refreshing = true;
    setAvailableLabels([]);
    findSuggestions(name);
  }

  /** @param {Label[]} labels */
  function setAvailableLabels(labels) {
    select.availableLabels = labels;
  }
}
LabelSearchComponent.$inject = ["LabelManager"];
})();

// Source: src/management/roles/unique-role.directive.js
(function () {
'use strict';

angular
  .module('udb.management.roles')
  .directive('udbUniqueRole', UniqueRoleDirective);

/** @ngInject */
function UniqueRoleDirective(RoleManager, $q) {
  return {
    restrict: 'A',
    require: 'ngModel',
    link: function (scope, element, attrs, controller) {
      function isUnique(roleName) {
        if (controller.$isEmpty(roleName)) {
          return $q.when();
        }

        var deferredUniqueCheck = $q.defer();

        RoleManager
          .get(roleName)
          .then(deferredUniqueCheck.reject, deferredUniqueCheck.resolve);

        return deferredUniqueCheck.promise;
      }

      controller.$asyncValidators.uniqueRole = isUnique;
    }
  };
}
UniqueRoleDirective.$inject = ["RoleManager", "$q"];
})();

// Source: src/management/search-result-generator.factory.js
(function () {
'use strict';

/**
 * @ngdoc factory
 * @name udb.management.SearchResultGenerator
 * @description
 * # Search Result Generator
 * Provides a stream of paged search results.
 */
angular
  .module('udb.management')
  .factory('SearchResultGenerator', SearchResultGenerator);

/* @ngInject */
function SearchResultGenerator(rx) {
  /**
   * @class SearchResultGenerator
   * @constructor
   * @param {Object} searchService
   * @param {Observable} query$
   * @param {Observable} page$
   * @param {Number} itemsPerPage
   */
  var SearchResultGenerator = function (searchService, query$, page$, itemsPerPage, start) {
    start = start || '';
    this.searchService = searchService;
    this.itemsPerPage = itemsPerPage;
    this.query$ = query$.debounce(300).startWith(start);
    this.offset$ = page$.map(pageToOffset(itemsPerPage)).startWith(0);

    this.searchParameters$ = rx.Observable.combineLatest(
      this.query$,
      this.offset$,
      combineQueryParameters
    );
  };

  SearchResultGenerator.prototype.constructor = SearchResultGenerator;

  /**
   * @param {string} query
   * @param {Number} offset
   * @return {{query: *, offset: *}}
   */
  function combineQueryParameters(query, offset) {
    return {query: query, offset: offset};
  }

  /**
   * @param {Number} itemsPerPage
   * @return {Function}
   */
  function pageToOffset(itemsPerPage) {
    return function(page) {
      return (page - 1) * itemsPerPage;
    };
  }

  /**
   * @param {{query: *, offset: *}} searchParameters
   * @return {Observable.<PagedCollection|Object>}
   */
  SearchResultGenerator.prototype.find = function (searchParameters) {
    var generator = this;

    return rx.Observable
      .fromPromise(
        generator.searchService.find(
          searchParameters.query,
          generator.itemsPerPage,
          searchParameters.offset
        )
      )
      .catch(function(searchError) {
        return rx.Observable.just({error : searchError});
      });
  };

  SearchResultGenerator.prototype.getSearchResult$ = function () {
    var generator = this;

    return generator.searchParameters$
      .flatMap(generator.find.bind(generator));
  };

  return (SearchResultGenerator);
}
SearchResultGenerator.$inject = ["rx"];
})();

// Source: src/management/search.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.management.SearchService
 * @description
 * # Search Service
 * This is a placeholder service to feed the search result generator.
 */
angular
  .module('udb.management')
  .service('SearchService', SearchService);

/* @ngInject */
function SearchService($q) {
  var service = this;

  /**
   * @param {string} query
   * @param {int} limit
   * @param {int} start
   *
   * @return {Promise.<PagedCollection>}
   */
  service.find = function(query, limit, start) {
    return $q.resolve({
      '@context': 'http://www.w3.org/ns/hydra/context.jsonld',
      '@type': 'PagedCollection',
      'itemsPerPage': 10,
      'totalItems': 0,
      'member': [],
      'firstPage': 'http://du.de/items?page=1',
      'lastPage': 'http://du.de/items?page=1',
      'nextPage': 'http://du.de/items?page=1'
    });
  };
}
SearchService.$inject = ["$q"];
})();

// Source: src/management/users/user-editor.controller.js
(function () {
'use strict';

/**
 * @typedef {Object} RoleAction
 * @property {Role} item
 * @property {ActionCallback} perform
 *  The API action that has to be performed for this action.
 */

/**
 * @callback ActionCallback
 */

/**
 * @ngdoc function
 * @name udbApp.controller:UserEditorController
 * @description
 * # UserEditorController
 */
angular
  .module('udb.management.users')
  .controller('UserEditorController', UserEditorController);

/* @ngInject */
function UserEditorController(UserManager, RoleManager, $stateParams, $q) {
  var editor = this;
  var userEmail = $stateParams.email;

  loadUser(userEmail);

  function loadUser(userEmail) {
    UserManager
      .findUserWithEmail(userEmail)
      .then(function (user) {
        showUser(user);
        UserManager
          .getRoles(user.uuid)
          .then(showUserRoles);
      });
  }

  /**
   * @param {User} user
   */
  function showUser(user) {
    editor.user = user;
  }

  /**
   * @param {Role[]} roles
   */
  function showUserRoles(roles) {
    editor.roles = roles;
  }

  /**
   * @param {Role} role
   */
  editor.deleteRole = function (role) {
    var deleteRoleAction = {
      role: role,
      style: 'list-group-item-danger',
      perform: _.once(function () {
        return RoleManager
          .removeUserFromRole(role, editor.user)
          .then(returnTaskPromise);
      }),
      undo: function () {
        console.log('¯\\_(ツ)_/¯');
      }
    };

    editor.queueAction(deleteRoleAction);
  };

  function returnTaskPromise(job) {
    return $q.when(job.task.promise);
  }

  /**
   * @param {RoleAction} action
   */
  editor.queueAction = function (action) {
    var currentActions = editor.actions ? editor.actions : [];

    if (!editor.getRoleAction(action.role)) {
      currentActions.push(action);
      editor.actions = currentActions;
    }
  };

  /**
   * @param {Role} role
   */
  editor.getRoleStyle = function(role) {
    var action = editor.getRoleAction(role);

    return action ? action.style : null;
  };

  /**
   * @param {Role} role
   */
  editor.getRoleAction =  function (role) {
    return _.find(editor.actions, {
      role: {
        uuid: role.uuid
      }
    });
  };

  /**
   * @param {string} roleName
   * @return {Promise.<Role[]>}
   */
  editor.lookupRoles = function (roleName) {
    return RoleManager
      .find(roleName, 20)
      .then(function (pagedRoleCollection) {
        return _.reject(pagedRoleCollection.member, function (role) {
          return _.find(editor.roles, {uuid: role.uuid});
        });
      });
  };

  /**
   * @param {Role} role
   */
  editor.addRole = function (role) {
    if (_.find(editor.roles, {uuid: role.uuid})) {
      return; // do nothing when the user already has the role
    }

    editor.roles.push(role);
    editor.roleLookupName = '';

    var addRoleAction = {
      role: role,
      style: 'list-group-item-success',
      perform: _.once(function () {
        return RoleManager
          .addUserToRole(editor.user, role)
          .then(returnTaskPromise);
      }),
      undo: function () {
        editor.roles = _.reject(editor.roles, {uuid: role.uuid});
      }
    };

    editor.queueAction(addRoleAction);
  };

  editor.save = function() {
    editor.saving = true;
    var actionPromises = _.map(editor.actions, performAction);

    $q.all(actionPromises)
      .then(function () {
        loadUser(userEmail);
        editor.saving = false;
        editor.actions = [];
      });
  };

  /**
   * @param {RoleAction} action
   */
  function performAction(action) {
    return action
      .perform()
      .catch(action.undo);
  }

  /**
   * @param {Role} role
   */
  editor.undoAction = function(role) {
    var action = editor.getRoleAction(role);
    action.undo();

    editor.actions = _.reject(
      editor.actions,
      {
        role: {
          uuid: role.uuid
        }
      }
    );
  };
}
UserEditorController.$inject = ["UserManager", "RoleManager", "$stateParams", "$q"];
})();

// Source: src/management/users/user-manager.service.js
(function () {
'use strict';

/**
 * @typedef {Object} User
 * @property {string}   uuid
 * @property {string}   email
 * @property {string}   username
 */

/**
 * @ngdoc service
 * @name udb.management.users
 * @description
 * # User Manager
 * This service allows you to lookup users and perform actions on them.
 */
angular
  .module('udb.management.users')
  .service('UserManager', UserManager);

/* @ngInject */
function UserManager(udbApi) {
  var service = this;

  /**
   * @param {string} email
   *
   * @returns {Promise}
   *
   */
  service.findUserWithEmail = function(email) {
    return udbApi.findUserWithEmail(email);
  };

  /**
   * @param {string} userId
   *
   * @return {Promise.<Role[]>}
   */
  service.getRoles = function (userId) {
    return udbApi.getUserRoles(userId);
  };
}
UserManager.$inject = ["udbApi"];
})();

// Source: src/management/users/users-list.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:UsersListController
 * @description
 * # UsersListController
 */
angular
  .module('udb.management.users')
  .controller('UsersListController', UsersListController);

/* @ngInject */
function UsersListController(UserManager, $location) {
  var ulc = this;
  ulc.status = 'idle';
  ulc.query = '';
  ulc.problem = '';

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    ulc.status = 'problem';
    ulc.problem = problem;
  }

  function resetStatus()
  {
    ulc.status = 'idle';
    ulc.problem = false;
  }

  ulc.handleChange = function () {
    if (ulc.status === 'problem') {
      resetStatus();
    }
  };

  ulc.handleSubmit = function () {
    ulc.status = 'loading';
    UserManager.findUserWithEmail(ulc.query)
      .then(
        function (user) {
          ulc.status = 'idle';
          $location.path('/manage/users/' + user.email);
        },
        function (error) {
          if (error.status === 404) {
            ulc.status = 'notFound';
          } else {
            showProblem(error.title);
          }
        }
      );
  };
}
UsersListController.$inject = ["UserManager", "$location"];
})();

// Source: src/media/media-manager.service.js
(function () {
'use strict';

/**
 * @typedef {Object} MediaObject
 * @property {string}   @id
 * @property {string}   @type
 * @property {string}   contentUrl
 * @property {string}   thumbnailUrl
 * @property {string}   description
 * @property {string}   copyrightHolder
 */

/**
 * @ngdoc function
 * @name udb.media.service:MediaManager
 * @description
 * # MediaManager
 * Service to manage media.
 */
angular
  .module('udb.media')
  .service('MediaManager', MediaManager);

/**
 * @ngInject
 */
function MediaManager(jobLogger, appConfig, $q, udbApi) {
  var service = this;

  /**
   * @param {File} imageFile
   * @param {string} description
   * @param {string} copyrightHolder
   *
   * @return {Promise.<MediaObject>}
   */
  service.createImage = function(imageFile, description, copyrightHolder, language) {
    var deferredMediaObject = $q.defer();
    var allowedFileExtensions = ['png', 'jpeg', 'jpg', 'gif'];

    function getFileExtension(filename) {
      return filename.split('/').pop();
    }

    function isAllowedFileExtension(fileExtension) {
      return allowedFileExtensions.indexOf(fileExtension) >= 0;
    }

    function fetchAndReturnMedia(response) {
      service
        .getImage(response.data.imageId)
        .then(deferredMediaObject.resolve, deferredMediaObject.reject);
    }

    if (!isAllowedFileExtension(getFileExtension(imageFile.type))) {
      deferredMediaObject.reject({
        data: {
          title: 'The uploaded file is not an image.'
        }
      });
    } else {
      udbApi
        .uploadMedia(imageFile, description, copyrightHolder, language)
        .then(fetchAndReturnMedia, deferredMediaObject.reject);
    }

    return deferredMediaObject.promise;
  };

  /**
   * @param {string} imageId
   *
   * @return {Promise.<MediaObject>}
   */
  service.getImage = function (imageId) {
    function returnMediaObject(data) {
      var mediaObject = data;
      mediaObject.id = imageId;

      return $q.resolve(mediaObject);
    }

    return udbApi
      .getMedia(imageId)
      .then(returnMediaObject);
  };
}
MediaManager.$inject = ["jobLogger", "appConfig", "$q", "udbApi"];
})();

// Source: src/migration/event-migration-footer.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.migration.component:udbEventMigrationFooter
 * @description
 * # Event Migration Footer
 * Footer component for migrating events
 */
angular
  .module('udb.migration')
  .component('udbEventMigrationFooter', {
    templateUrl: 'templates/event-migration-footer.component.html',
    controller: EventMigrationFooterController,
    controllerAs: 'migration'
  });

/* @ngInject */
function EventMigrationFooterController(EventFormData, $stateParams, $state, $translate) {
  var controller = this;

  controller.completeMigration = completeMigration;
  var fallbackDestination = {description: $translate.instant('eventForm.step4.continue'), state: 'split.eventEdit'};
  controller.destination = $stateParams.destination || fallbackDestination;
  controller.migrationReady = migrationReady;

  function completeMigration () {
    if (migrationReady()) {
      $state.go(controller.destination.state, {id: EventFormData.id});
    }
  }

  function migrationReady () {
    return !!_.get(EventFormData, 'location.id');
  }
}
EventMigrationFooterController.$inject = ["EventFormData", "$stateParams", "$state", "$translate"];
})();

// Source: src/migration/event-migration.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.migration.eventMigration
 * @description
 * Event Migration Service
 */
angular
  .module('udb.migration')
  .service('eventMigration', EventMigrationService);

/* @ngInject */
function EventMigrationService() {
  var service = this;

  var migrationRequirements = {
    location: hasKnownLocation
  };

  /**
   * @param {udbEvent} event
   */
  function hasKnownLocation(event) {
    return !!_.get(event, 'location.id');
  }

  /**
   * @param {udbEvent} event
   *
   * @return string[]
   *  A list of migrations steps needed to meet all requirements.
   */
  service.checkRequirements = function (event) {
    var migrationSteps = _(migrationRequirements)
      .pick(function (requirementCheck) {
        return !requirementCheck(event);
      })
      .keys();

    return migrationSteps.value();
  };

}
})();

// Source: src/offer_translate/components/address/translate.address.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.offer-translate:TranslateAddressController
 * @description
 * # TranslateAddressController
 * Controller for the address translation component
 */
angular
    .module('udb.offer-translate')
    .component('offerTranslateAddress', {
      templateUrl: 'templates/translate-address.html',
      controller: TranslateAddressController,
      controllerAs: 'tac',
      bindings: {
        offer: '<',
        activeLanguages: '<'
      }
    });

/* @ngInject */
function TranslateAddressController(offerTranslator) {
  var controller = this;

  controller.translatedAddresses = {};

  controller.originalAddress = _.get(controller.offer.address, controller.offer.mainLanguage, '') ||
      _.get(controller.offer.address, 'nl', '') ||
      _.get(controller.offer, 'address', '');

  controller.translatedAddresses = _.get(controller.offer, 'address');
  _.forEach(controller.activeLanguages, function(language, key) {
    if (controller.translatedAddresses[key] === undefined) {
      controller.translatedAddresses[key] = {
        postalCode: controller.originalAddress.postalCode,
        addressLocality: controller.originalAddress.addressLocality,
        addressCountry: controller.originalAddress.addressCountry
      };
    }
  });

  controller.saveTranslatedAddress = saveTranslatedAddress;

  function saveTranslatedAddress(language) {

    offerTranslator
        .translateAddress(controller.offer, language, controller.translatedAddresses[language]);
  }
}
TranslateAddressController.$inject = ["offerTranslator"];
})();

// Source: src/offer_translate/components/description/translate-description.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.offer-translate:TranslateDescriptionController
 * @description
 * # TranslateDescriptionController
 * Controller for the description translation component
 */
angular
    .module('udb.offer-translate')
    .component('offerTranslateDescription', {
      templateUrl: 'templates/translate-description.html',
      controller: TranslateDescriptionController,
      controllerAs: 'ttd',
      bindings: {
        offer: '<',
        activeLanguages: '<'
      }
    });

/* @ngInject */
function TranslateDescriptionController(offerTranslator) {
  var controller = this;

  controller.translatedDescriptions = {};
  controller.originalDescription = _.get(controller.offer.description, controller.offer.mainLanguage, '') ||
      _.get(controller.offer.description, 'nl', '') ||
      _.get(controller.offer, 'description', '');
  controller.originalDescription = _.isEmpty(controller.originalDescription) ? '' : controller.originalDescription;

  controller.translatedDescriptions = _.get(controller.offer, 'description');

  controller.saveTranslatedDescription = saveTranslatedDescription;

  function saveTranslatedDescription(language) {
    offerTranslator
        .translateProperty(controller.offer, 'description', language, controller.translatedDescriptions[language])
        .then(function() {
          //
        });
  }
}
TranslateDescriptionController.$inject = ["offerTranslator"];
})();

// Source: src/offer_translate/components/images/translate-images.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.offer-translate:TranslateImagesController
 * @description
 * # TranslateImagesController
 * Controller for the images translation component
 */
angular
    .module('udb.offer-translate')
    .component('offerTranslateImages', {
      templateUrl: 'templates/translate-images.html',
      controller: TranslateImagesController,
      controllerAs: 'tic',
      bindings: {
        offer: '<',
        activeLanguages: '<'
      }
    });

/* @ngInject */
function TranslateImagesController($uibModal, eventCrud, MediaManager, EventFormData) {
  var controller = this;

  EventFormData.init();

  controller.eventFormData = EventFormData;
  if (controller.offer.mediaObject) {
    EventFormData.mediaObjects = controller.offer.mediaObject || [];
  }
  EventFormData.name = controller.offer.name;
  EventFormData.apiUrl = controller.offer.apiUrl;
  EventFormData.mainLanguage = controller.offer.mainLanguage;

  controller.openUploadImageModal = openUploadImageModal;
  controller.removeImage = removeImage;
  controller.editImage = editImage;
  controller.copyImage = copyImage;

  /**
   * Open the upload modal.
   */
  function openUploadImageModal(language) {
    EventFormData.mainLanguage = language;
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/event-form-image-upload.html',
      controller: 'EventFormImageUploadController',
      resolve: {
        EventFormData: function () {
          return EventFormData;
        }
      }
    });
  }

  function copyImage(image, language) {
    var blob = null;
    var xhr = new XMLHttpRequest();
    xhr.open('GET', image.contentUrl);
    xhr.responseType = 'blob';
    xhr.onload = function() {
      blob = xhr.response;
      MediaManager
          .createImage(blob, image.description, image.copyrightHolder, language)
          .then(
              addImageToEvent, displayError
          );
    };
    xhr.send();
  }

  /**
   * Open the modal to edit an image of the item.
   *
   * @param {MediaObject} image
   *    The media object of the image to edit.
   */
  function editImage(image) {
    $uibModal.open({
      templateUrl: 'templates/event-form-image-edit.html',
      controller: 'EventFormImageEditController',
      resolve: {
        EventFormData: function () {
          return EventFormData;
        },
        mediaObject: function () {
          return image;
        }
      }
    });
  }

  /**
   * Open the modal to remove an image.
   *
   * @param {MediaObject} image
   * The media object of the image to remove from the item.
   */
  function removeImage(image) {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/event-form-image-remove.html',
      controller: 'EventFormImageRemoveController',
      resolve: {
        EventFormData: function () {
          return EventFormData;
        },
        image: function () {
          return image;
        }
      }
    });
  }

  /**
   * @param {MediaObject} mediaObject
   */
  function addImageToEvent(mediaObject) {
    function updateImageForm() {
      EventFormData.addImage(mediaObject);
    }

    eventCrud
        .addImage(EventFormData, mediaObject)
        .then(updateImageForm, displayError);
  }

  function displayError(errorResponse) {
    var errorMessage = errorResponse.data.title;
    var error = 'Er ging iets mis bij het opslaan van de afbeelding.';

    switch (errorMessage) {
      case 'The uploaded file is not an image.':
        error = 'Het geüpload bestand is geen geldige afbeelding. ' +
            'Enkel bestanden met de extenties .jpeg, .gif of .png zijn toegelaten.';
        break;
      case 'The file size of the uploaded image is too big.':
        error = 'Het geüpload bestand is te groot.';
        break;
    }

    controller.saving = false;
    controller.error = error;
  }
}
TranslateImagesController.$inject = ["$uibModal", "eventCrud", "MediaManager", "EventFormData"];
})();

// Source: src/offer_translate/components/tariffs/translate-tariffs.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.offer-translate:TranslateTariffsController
 * @description
 * # TranslateTariffsController
 * Controller for the tariffs translation component
 */
angular
    .module('udb.offer-translate')
    .component('offerTranslateTariffs', {
      templateUrl: 'templates/translate-tariffs.html',
      controller: TranslateTariffsController,
      controllerAs: 'ttsc',
      bindings: {
        offer: '<',
        activeLanguages: '<'
      }
    });

/* @ngInject */
function TranslateTariffsController(eventCrud) {
  var controller = this;

  controller.translatedTariffs = [];

  controller.originalTariffs = getOriginalTariffs();
  controller.translatedTariffs = getTranslatedTariffs();

  controller.saveTranslatedTariffs = saveTranslatedTariffs;

  function saveTranslatedTariffs() {
    for (var key in controller.offer.priceInfo) {
      if (key > 0) {
        var originalTariff = {};
        originalTariff[controller.offer.mainLanguage] = controller.originalTariffs[key - 1];
        controller.offer.priceInfo[key].name =
            _.merge(originalTariff, controller.translatedTariffs[key - 1]);
      }
    }

    eventCrud.updatePriceInfo(controller.offer);
  }

  function getOriginalTariffs() {
    var originalTariffs = [];
    for (var key in controller.offer.priceInfo) {
      if (key > 0) {
        originalTariffs.push(
            controller.offer.priceInfo[key].name[controller.offer.mainLanguage] ?
                controller.offer.priceInfo[key].name[controller.offer.mainLanguage] :
                controller.offer.priceInfo[key].name);
      }
    }

    return originalTariffs;
  }

  function getTranslatedTariffs() {
    var translatedTariffs = [];
    for (var key in controller.offer.priceInfo) {
      if (key > 0) {
        translatedTariffs.push(controller.offer.priceInfo[key].name);
      }
    }

    return translatedTariffs;
  }
}
TranslateTariffsController.$inject = ["eventCrud"];
})();

// Source: src/offer_translate/components/title/translate-title.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.offer-translate:TranslateTitleController
 * @description
 * # TranslateTitleController
 * Controller for the title translation component
 */
angular
    .module('udb.offer-translate')
    .component('offerTranslateTitle', {
      templateUrl: 'templates/translate-title.html',
      controller: TranslateTitleController,
      controllerAs: 'ttc',
      bindings: {
        offer: '<',
        activeLanguages: '<'
      }
    });

/* @ngInject */
function TranslateTitleController(offerTranslator) {
  var controller = this;

  controller.translatedNames = {};
  controller.originalName = _.get(controller.offer.name, controller.offer.mainLanguage, null) ||
      _.get(controller.offer.name, 'nl', null) ||
      _.get(controller.offer, 'name', '');

  controller.translatedNames = _.get(controller.offer, 'name');

  controller.saveTranslatedName = saveTranslatedName;

  function saveTranslatedName(language) {
    offerTranslator
        .translateProperty(controller.offer, 'name', language, controller.translatedNames[language])
        .then(function() {
          //
        });
  }
}
TranslateTitleController.$inject = ["offerTranslator"];
})();

// Source: src/offer_translate/offer-translate.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:OfferTranslateController
 * @description
 * # OffertranslateController
 * Init the event form
 */
angular
  .module('udb.offer-translate')
  .controller('OfferTranslateController', OfferTranslateController);

/* @ngInject */
function OfferTranslateController(
    $scope,
    offerId,
    udbApi,
    jsonLDLangFilter,
    $q,
    $translate,
    $state
) {

  $scope.apiUrl = '';
  $scope.loaded = false;
  $scope.mainLanguage = '';
  $scope.languages = ['nl', 'fr', 'en', 'de'];
  $scope.activeLanguages = {
    'nl': {'active': false, 'main': false},
    'fr': {'active': false, 'main': false},
    'en': {'active': false, 'main': false},
    'de': {'active': false, 'main': false}
  };

  // Functions
  $scope.openEditPage = openEditPage;
  $scope.goToDashboard = goToDashboard;

  $q.when(offerId)
    .then(fetchOffer, offerNotFound);

  function startTranslating(offer) {
    $scope.language = $translate.use() || 'nl';
    $scope.cachedOffer = offer;
    $scope.apiUrl = offer.apiUrl;
    $scope.mainLanguage = offer.mainLanguage ? offer.mainLanguage : 'nl';
    $scope.translatedOffer = jsonLDLangFilter(offer, $scope.language, true);
    $scope.originalName = $scope.translatedOffer.name;

    $scope.offerType = offer.url.split('/').shift();
    if ($scope.offerType === 'event') {
      $scope.isEvent = true;
      $scope.isPlace = false;
    } else {
      $scope.isEvent = false;
      $scope.isPlace = true;
    }

    _.forEach($scope.cachedOffer.name, function(name, language) {
      if ($scope.activeLanguages[language]) {
        $scope.activeLanguages[language].active = true;
      }
    });

    $scope.activeLanguages[$scope.mainLanguage].main = true;

    $scope.loaded = true;
  }

  function offerNotFound() {
    console.log('offer not found');
  }

  /**
   * @param {string|null} offerId
   */
  function fetchOffer(offerId) {
    if (!offerId) {
      offerNotFound();
    } else {
      udbApi
        .getOffer(offerId)
        .then(startTranslating);
    }
  }

  function openEditPage() {
    var offerLocation = $scope.cachedOffer.id.toString();
    var id = offerLocation.split('/').pop();
    $state.go('split.eventEdit', {id: id});
  }

  function goToDashboard() {
    $state.go('split.footer.dashboard');
  }
}
OfferTranslateController.$inject = ["$scope", "offerId", "udbApi", "jsonLDLangFilter", "$q", "$translate", "$state"];
})();

// Source: src/offer_translate/offer-translate.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:offer-translate.html
 * @description
 * # udb offer translate directive
 */
angular
  .module('udb.offer-translate')
  .directive('udbOfferTranslate', OfferTranslateDirective);

/* @ngInject */
function OfferTranslateDirective() {
  return {
    templateUrl: 'templates/offer-translate.html',
    restrict: 'EA',
  };
}
})();

// Source: src/organizers/components/organizer-address/organizer-address.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:OrganizerAddressController
 * @description
 * # OrganizerAddressController
 * Modal for setting the reservation period.
 */
angular
    .module('udb.organizers')
    .component('udbOrganizerAddress', {
      templateUrl: 'templates/organizer-address.html',
      controller: OrganizerAddressComponent,
      controllerAs: 'oac',
      bindings: {
        address: '=',
        onUpdate: '&'
      }
    });

/* @ngInject */
function OrganizerAddressComponent($scope, Levenshtein, citiesBE, citiesNL, appConfig, $stateParams, OrganizerManager) {
  var controller = this;
  var organizerId = $stateParams.id;

  function init () {
    controller.availableCountries = appConfig.offerEditor.countries;
    controller.defaultCountry = _.find(controller.availableCountries, function(country) { return country.default; });
    controller.selectedCountry = controller.defaultCountry;
    if (controller.address.addressCountry !== '') {
      controller.selectedCountry = {
        code: controller.address.addressCountry,
        default: true
      };
    }
    else {
      controller.selectedCountry = controller.defaultCountry;
    }
    controller.address.addressCountry = controller.selectedCountry.code;

    controller.cities = controller.selectedCountry.code === 'BE' ? citiesBE : citiesNL;
    controller.selectedCity = '';
    controller.requiredAddress = false;

    if (controller.address.addressLocality) {
      controller.hasAddress = true;
      controller.selectedCity = controller.address.postalCode + ' ' + controller.address.addressLocality;
      controller.requiredAddress = true;
    }
  }

  controller.streetHasErrors = false;
  controller.cityHasErrors = false;
  controller.addressHasErrors = false;
  controller.zipHasErrors = false;
  controller.zipValidateError = false;

  controller.validateAddress = validateAddress;
  controller.filterCities = filterCities;
  controller.orderByLevenshteinDistance = orderByLevenshteinDistance;
  controller.selectCity = selectCity;
  controller.changeCitySelection = changeCitySelection;
  controller.changeCountrySelection = changeCountrySelection;
  controller.clearAddressInfo = clearAddressInfo;
  controller.$onInit = init;

  $scope.$on('organizerAddressSubmit', function () {
    controller.organizerAddressForm.$setSubmitted();
    reset();
    validateAddress();
  });

  function reset() {
    controller.streetHasErrors = false;
    controller.cityHasErrors = false;
    controller.zipValidateError = false;
    controller.zipHasErrors = false;
    controller.addressHasErrors = false;
    controller.addressRemovedError = false;
    controller.addressRemovedSuccess = false;
  }

  function validateAddress() {
    reset();
    if (controller.requiredAddress) {
      if (controller.address.streetAddress === '' ||
          controller.address.streetAddress === undefined) {
        controller.streetHasErrors = true;
      }
      if (controller.selectedCity === '') {
        controller.cityHasErrors = true;
      }
      if (controller.selectedCountry.code === 'NL') {
        if (controller.address.postalCode === '' ||
            controller.address.postalCode === undefined) {
          controller.zipHasErrors = true;
          controller.zipValidateError = !validateNlPostalCode(controller.address.postalCode);
        }
      }
    }
    else {
      if (controller.selectedCity !== '') {
        if (controller.address.streetAddress === '' ||
            controller.address.streetAddress === undefined) {
          controller.streetHasErrors = true;
        }

        if (controller.selectedCountry.code === 'NL') {
          if (controller.address.postalCode === '' ||
              controller.address.postalCode === undefined) {
            controller.zipHasErrors = true;
            controller.zipValidateError = !validateNlPostalCode(controller.address.postalCode);
          }
        }
      }

      if (controller.address.streetAddress !== '') {
        if (controller.selectedCity === '') {
          controller.cityHasErrors = true;
        }

        if (controller.address.postalCode === '' ||
            controller.address.postalCode === undefined) {
          controller.zipHasErrors = true;
          controller.zipValidateError = !validateNlPostalCode(controller.address.postalCode);
        }
      }

      if (controller.selectedCountry.code === 'NL') {
        if (controller.address.postalCode !== '') {
          if (controller.address.streetAddress === '' ||
              controller.address.streetAddress === undefined) {
            controller.streetHasErrors = true;
          }

          if (controller.selectedCity === '') {
            controller.cityHasErrors = true;
          }
          controller.zipValidateError = !validateNlPostalCode(controller.address.postalCode);
        }
      }
    }
    sendUpdate();
  }

  function validateNlPostalCode(postalCode) {
    var regex = new RegExp(/^[0-9]{4}[a-z]{2}$/i);
    return regex.test(postalCode);
  }

  function filterCities(value) {
    return function (city) {
      var length = value.length;
      var words = value.match(/\w+/g);
      var labelMatches = words.filter(function (word) {
        return city.label.toLowerCase().indexOf(word.toLowerCase()) !== -1;
      });

      return labelMatches.length >= words.length;
    };
  }

  function orderByLevenshteinDistance(value) {
    return function (city) {
      return new Levenshtein(value, city.label);
    };
  }

  /**
   * Select City.
   */
  function selectCity($item, $label) {
    if (controller.selectedCountry.code === 'BE') {
      controller.address.postalCode = $item.zip;
    }

    controller.address.addressLocality = $item.name;

    controller.cityAutocompleteTextField = '';
    controller.selectedCity = $label;
    validateAddress();
  }

  /**
   * Change a city selection.
   */
  function changeCitySelection() {
    controller.address.postalCode = '';
    controller.address.addressLocality = '';
    controller.selectedCity = '';
    controller.cityAutocompleteTextField = '';
    validateAddress();
  }

  /**
   * Change a city selection.
   */
  function changeCountrySelection() {
    if (controller.selectedCountry.code === 'NL') {
      controller.cities = citiesNL;
    }
    else {
      controller.cities = citiesBE;
    }
    controller.address.addressCountry = controller.selectedCountry.code;
    changeCitySelection();
  }

  /**
   * Clear address info
   */
  function clearAddressInfo() {
    controller.address.streetAddress = '';
    changeCitySelection();
    OrganizerManager.removeOrganizerAddress(organizerId)
      .then(function(res) {
        controller.hasAddress = false;
        controller.addressRemovedSuccess = true;
      })
      .catch(function(err) {
        controller.addressRemovedError = true;
      });
  }

  function sendUpdate() {
    controller.addressHasErrors = controller.streetHasErrors || controller.cityHasErrors ||
        controller.zipHasErrors || controller.zipValidateError;
    controller.onUpdate({error: controller.addressHasErrors});
  }
}
OrganizerAddressComponent.$inject = ["$scope", "Levenshtein", "citiesBE", "citiesNL", "appConfig", "$stateParams", "OrganizerManager"];
})();

// Source: src/organizers/components/organizer-contact/organizer-contact.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormOrganizerAddressController
 * @description
 * # EventFormOrganizerAddressController
 * Modal for setting the reservation period.
 */
angular
    .module('udb.organizers')
    .component('udbOrganizerContact', {
      templateUrl: 'templates/organizer-contact.html',
      controller: OrganizerContactComponent,
      controllerAs: 'occ',
      bindings: {
        contact: '=',
        onUpdate: '&'
      }
    });

/* @ngInject */
function OrganizerContactComponent($scope, UdbOrganizer) {
  var controller = this;

  controller.newContact = {};
  controller.addingContactEntry = false;
  controller.isPristine = true;
  controller.validateContact = validateContact;
  controller.addOrganizerContactEntry = addOrganizerContactEntry;
  controller.cancelOrganizerContactEntry = cancelOrganizerContactEntry;
  controller.addOrganizerContactInfo = addOrganizerContactInfo;
  controller.deleteOrganizerContactInfo = deleteOrganizerContactInfo;
  controller.sendUpdate = sendUpdate;
  controller.contactUrlRegex = new UdbOrganizer().regex.url;

  $scope.$on('organizerContactSubmit', function() {
    controller.organizerContactWrapper.$setSubmitted();
  });

  function validateContact() {
    if (_.find(controller.contact, {'value': ''}) ||
        _.find(controller.contact, {'value': undefined}) ||
        (controller.organizerContactWrapper.$invalid &&  controller.organizerContactWrapper.$dirty)) {
      controller.contactHasErrors = true;
    }
    else {
      controller.contactHasErrors = false;
    }
    sendUpdate();
  }

  function resetOrganizerContactEntry() {
    controller.newContact = {
      type : '',
      value : ''
    };
  }

  /**
   * Add a contact info entry for an organizer.
   */
  function addOrganizerContactEntry(type) {
    controller.newContact = {
      type : type,
      value : ''
    };
    controller.isPristine = true;
    controller.addingContactEntry = true;
  }

  /**
   * Add a contact info entry for an organizer.
   */
  function cancelOrganizerContactEntry() {
    resetOrganizerContactEntry();
    controller.addingContactEntry = false;
    controller.isPristine = true;
  }

  /* */
  function addOrganizerContactInfo() {
    validateContact();
    if (!controller.contactHasErrors) {
      controller.contact.push(controller.newContact);
      resetOrganizerContactEntry();
      controller.addingContactEntry = false;
      controller.isPristine = true;
      sendUpdate();
    }
  }

  /**
   * Remove a given key of the contact info.
   */
  function deleteOrganizerContactInfo(index) {
    controller.contact.splice(index, 1);
    validateContact();
  }

  function sendUpdate() {
    controller.onUpdate({error: controller.contactHasErrors});
  }

  $scope.$watch(function() {
    return controller.newContact;
  }, function(value) {
    if (value && value.value && value.value !== '') {
      controller.isPristine = false;
    }
  }, true);
}
OrganizerContactComponent.$inject = ["$scope", "UdbOrganizer"];
})();

// Source: src/organizers/detail/organizer-detail.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:OrganizerDetailController
 * @description
 * # OrganizerDetailController
 */
angular
  .module('udb.organizers')
  .controller('OrganizerDetailController', OrganizerDetailController);

/* @ngInject */
function OrganizerDetailController(OrganizerManager, $uibModal, $stateParams, $location, $state, udbApi) {
  var controller = this;
  var organizerId = $stateParams.id;
  var stateName = $state.current.name;

  // labels scope variables and functions
  controller.labelSaving = false;
  controller.addLabel = addLabel;
  controller.deleteLabel = deleteLabel;
  controller.labelResponse = '';
  controller.labelsError = '';
  controller.deleteOrganization = deleteOrganization;
  controller.isManageState = isManageState;
  controller.finishedLoading = finishedLoading;
  controller.canEdit = canEdit;
  controller.isOwnershipEnabled = isOwnershipEnabled;
  controller.permissions = [];

  function loadOrganizer(organizerId) {
    OrganizerManager
      .get(organizerId)
      .then(showOrganizer);

    udbApi.getOrganizerPermissions(organizerId)
      .then(function (response) {
        controller.permissions = response.permissions;
      });
  }

  loadOrganizer(organizerId);

  /**
   * @param {udbOrganizer} organizer
   */
  function showOrganizer(organizer) {
    controller.organizer = organizer;
  }

  function addLabel(label) {
    controller.labelSaving = true;
    clearLabelsError();

    OrganizerManager
      .addLabelToOrganizer(organizerId, label.name)
      .catch(showProblem)
      .finally(function() {
        controller.labelSaving = false;
        removeFromCache();
      });
  }

  function deleteLabel(label) {
    controller.labelSaving = true;
    clearLabelsError();
    removeFromCache();

    OrganizerManager
        .deleteLabelFromOrganizer(organizerId, label.name)
        .catch(showUnlabelProblem)
        .finally(function() {
          controller.labelSaving = false;
        });
  }

  function removeFromCache() {
    OrganizerManager.removeOrganizerFromCache(organizerId);
  }

  function clearLabelsError() {
    controller.labelResponse = '';
    controller.labelsError = '';
  }

  function isManageState() {
    return (stateName.indexOf('manage') !== -1);
  }

  function goToOrganizerOverview() {
    $location.path('/manage/organizations');
  }

  function deleteOrganization() {
    openOrganizationDeleteConfirmModal(controller.organizer);
  }

  function isOwnershipEnabled () {
    var searchParams = $location.search();
    return searchParams.ownership === 'true';
  }

  function openOrganizationDeleteConfirmModal(organizer) {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/organization-delete.modal.html',
      controller: 'OrganizationDeleteModalController',
      controllerAs: 'odc',
      resolve: {
        organization: function () {
          return organizer;
        }
      }
    });

    modalInstance.result
      .then(goToOrganizerOverview);
  }

  /**
   * @param {ApiProblem} problem
   */
  function showUnlabelProblem(problem) {
    loadOrganizer(organizerId);
    controller.labelResponse = 'unlabelError';
    controller.labelsError = problem.title;
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    controller.errorMessage = problem.title + (problem.detail ? ' ' + problem.detail : '');

    var modalInstance = $uibModal.open(
      {
        templateUrl: 'templates/unexpected-error-modal.html',
        controller: 'UnexpectedErrorModalController',
        size: 'sm',
        resolve: {
          errorMessage: function() {
            return controller.errorMessage;
          }
        }
      }
    );
  }

  function finishedLoading () {
    return (controller.organizer && !controller.loadingError);
  }

  function canEdit() {
    return controller.permissions.indexOf('Organisaties bewerken') !== -1;
  }
}
OrganizerDetailController.$inject = ["OrganizerManager", "$uibModal", "$stateParams", "$location", "$state", "udbApi"];
})();

// Source: src/organizers/organizer-form.controller.js
(function () {
'use strict';

/* @ngInject */
function OrganizerFormController(
    OrganizerManager,
    udbOrganizers,
    $state,
    $stateParams,
    $q,
    $scope,
    $translate,
    eventCrud,
    appConfig
) {
  var controller = this;
  var organizerId = $stateParams.id;
  var stateName = $state.current.name;
  var language = $translate.use() || 'nl';

  controller.language = language;
  controller.showAddressComponent = false;
  controller.isNew = true;
  controller.loadingError = false;
  controller.contact = [];
  controller.showWebsiteValidation = false;
  controller.urlError = false;
  controller.websiteError = false;
  controller.nameError = false;
  controller.addressError = false;
  controller.contactError = false;
  controller.hasErrors = false;
  controller.disableSubmit = true;
  controller.saveError = false;

  controller.validateWebsite = validateWebsite;
  controller.validateName = validateName;
  controller.validateAddress = validateAddress;
  controller.validateContact = validateContact;
  controller.checkChanges = checkChanges;
  controller.validateOrganizer = validateOrganizer;
  controller.cancel = cancel;
  controller.isManageState = isManageState;

  var oldOrganizer = {};
  var oldContact = [];
  var isWebsiteChanged = false;
  var isNameChanged = false;
  var isAddressChanged = false;
  var isContactChanged = false;

  if (organizerId) {
    controller.isNew = false;
    loadOrganizer(organizerId);
  }
  else {
    startCreatingOrganizer();
  }

  function startCreatingOrganizer() {
    controller.organizer = {
      mainLanguage: language,
      website: 'http://',
      name : '',
      address : {
        streetAddress : '',
        addressLocality : '',
        postalCode: '',
        addressCountry : ''
      },
      contact: []
    };
    controller.showAddressComponent = true;
  }

  function loadOrganizer(organizerId) {
    OrganizerManager.removeOrganizerFromCache(organizerId);

    OrganizerManager
        .get(organizerId)
        .then(showOrganizer, function () {
          controller.loadingError = true;
        })
        .finally(function () {
          controller.showAddressComponent = true;
        });
  }

  /**
   * @param {udbOrganizer} organizer
   */
  function showOrganizer(organizer) {
    if (_.isEmpty(organizer.address)) {
      organizer.address = {
        streetAddress : '',
        addressLocality : '',
        postalCode: '',
        addressCountry : ''
      };
    }
    controller.organizer = organizer;
    oldOrganizer = _.cloneDeep(organizer);
    controller.originalName = oldOrganizer.name;

    if (controller.organizer.contactPoint !== null) {
      _.forEach(controller.organizer.contactPoint, function(contactArray, key) {
        _.forEach(contactArray, function(value) {
          controller.contact.push({type: key, value: value});
        });
      });
      oldContact = _.cloneDeep(controller.contact);
    }
  }

  /**
   * Validate the website of new organizer.
   */
  function validateWebsite() {
    controller.showWebsiteValidation = true;

    if (!controller.organizerForm.website.$valid) {
      controller.showWebsiteValidation = false;
      controller.urlError = true;
      return;
    }

    udbOrganizers
        .findOrganizersWebsite(controller.organizer.website)
        .then(function (data) {
          controller.urlError = false;
          if (data.totalItems > 0) {
            if (data.member[0].name === controller.originalName) {
              controller.showWebsiteValidation = false;
              controller.organizersWebsiteFound = false;
            }
            else {
              controller.organizersWebsiteFound = true;
              controller.showWebsiteValidation = false;
            }
          }
          else {
            controller.showWebsiteValidation = false;
            controller.organizersWebsiteFound = false;
          }
        }, function () {
          controller.websiteError = true;
          controller.showWebsiteValidation = false;
        })
        .finally(function() {
          checkChanges();
        });
  }

  function validateName() {
    if (!controller.organizerForm.name.$valid) {
      controller.nameError = true;
    }
    else {
      controller.nameError = false;
    }

    checkChanges();
  }

  function validateAddress(error) {
    controller.addressError = error;
    checkChanges();
  }

  function validateContact(error) {
    controller.contactError = error;
    checkChanges();
  }

  /**
   * Validate the new organizer.
   */
  function validateOrganizer() {
    controller.showValidation = true;
    if (!controller.organizerForm.$valid || controller.organizersWebsiteFound ||
        controller.websiteError || controller.urlError || controller.nameError ||
        controller.addressError || controller.contactError) {
      controller.hasErrors = true;
      controller.disableSubmit = true;
      $scope.$broadcast('organizerAddressSubmit');
      $scope.$broadcast('organizerContactSubmit');
      return;
    }
    if (controller.isNew) {
      createNewOrganizer();
    }
    else {
      saveOrganizer();
    }
  }

  function checkChanges() {
    isWebsiteChanged = !_.isEqual(controller.organizer.website, oldOrganizer.website);
    isNameChanged = !_.isEqual(controller.organizer.name, oldOrganizer.name);
    // Also check if the address isn't empty
    isAddressChanged = (!_.isEqual(controller.organizer.address, oldOrganizer.address) &&
        !_.isEmpty(controller.organizer.address.streetAddress));
    isContactChanged = !_.isEqual(controller.contact, oldContact);

    if (isWebsiteChanged || isNameChanged || isAddressChanged || isContactChanged) {
      controller.disableSubmit = false;
    }
    else {
      controller.disableSubmit = true;
    }

    if (controller.organizerForm.$valid && !controller.organizersWebsiteFound &&
        !controller.websiteError && !controller.urlError && !controller.nameError &&
        !controller.addressError && !controller.contactError) {
      controller.hasErrors = false;
    }
  }

  function saveOrganizer() {
    var promises = [];

    if (isWebsiteChanged) {
      promises.push(OrganizerManager.updateOrganizerWebsite(organizerId, controller.organizer.website));
    }

    if (isNameChanged) {
      promises.push(OrganizerManager.updateOrganizerName(organizerId, controller.organizer.name, language));
    }

    if (isAddressChanged) {
      promises.push(OrganizerManager.updateOrganizerAddress(organizerId, controller.organizer.address, language));
    }

    if (isContactChanged) {
      promises.push(OrganizerManager.updateOrganizerContact(organizerId, controller.contact));
    }

    promises.push(OrganizerManager.removeOrganizerFromCache(organizerId));

    $q.all(promises)
        .then(function() {
          redirectToDetailPage();
        })
        .catch(function () {
          controller.hasErrors = true;
          controller.saveError = true;
        });
  }

  function createNewOrganizer() {

    var organizer = _.clone(controller.organizer);
    // remove the address when it's empty
    if (
        !organizer.address.streetAddress &&
        !organizer.address.addressLocality &&
        !organizer.address.postalCode
    ) {
      delete organizer.address;
    }

    eventCrud
        .createOrganizer(organizer)
        .then(function(jsonResponse) {
          var defaultOrganizerLabel = _.get(appConfig, 'offerEditor.defaultOrganizerLabel');
          if (typeof(defaultOrganizerLabel) !== 'undefined' &&
              defaultOrganizerLabel !== '') {
            OrganizerManager
                .addLabelToOrganizer(jsonResponse.data.organizerId, defaultOrganizerLabel);
          }
          controller.organizer.id = jsonResponse.data.organizerId;
          redirectToDetailPage();
        }, function() {
          controller.hasErrors = true;
          controller.saveError = true;
        });
  }

  function cancel() {
    if (isManageState()) {
      $state.go('management.organizers.search', {}, {reload: true});
    } else {
      $state.go('split.footer.dashboard', {}, {reload: true});
    }
  }

  function redirectToDetailPage() {
    OrganizerManager.removeOrganizerFromCache(controller.organizer.id);
    $state.go('split.organizerDetail', {id: controller.organizer.id}, {reload: true});
  }

  function isManageState() {
    return (stateName.indexOf('manage') !== -1);
  }
}
OrganizerFormController.$inject = ["OrganizerManager", "udbOrganizers", "$state", "$stateParams", "$q", "$scope", "$translate", "eventCrud", "appConfig"];

/**
 * @ngdoc function
 * @name udbApp.controller:OrganizerFormController
 * @description
 * # OrganizerFormController
 */
angular
  .module('udb.organizers')
  .controller('OrganizerFormController', OrganizerFormController);
})();

// Source: src/organizers/organizer-manager.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.organizers
 * @description
 * # Organizer Manager
 * This service allows you to lookup organizers and perform actions on them.
 */
angular
  .module('udb.organizers')
  .service('OrganizerManager', OrganizerManager);

/* @ngInject */
function OrganizerManager(udbApi) {
  var service = this;

  /**
   * @param {UdbOrganizer} organization
   * @returns {Promise}
   */
  service.delete = function (organization) {
    return udbApi
      .deleteOrganization(organization);
  };

  /**
   * @param {string} query
   * @param {int} limit
   * @param {int} start
   *
   * @return {Promise.<PagedCollection>}
   */
  service.find = function(query, limit, start) {
    return udbApi.findOrganisations(start, limit, null, query);
  };

  /**
   * @param {string} organizerId
   *
   * @returns {Promise.<UdbOrganizer>}
   */
  service.get = function(organizerId) {
    return udbApi.getOrganizerById(organizerId);
  };

  /**
   * @param {string} organizerId
   * @param {string} labelUuid
   *
   * @returns {Promise}
   */
  service.addLabelToOrganizer = function(organizerId, labelUuid) {
    return udbApi
      .addLabelToOrganizer(organizerId, labelUuid);
  };

  /**
   * @param {string} organizerId
   * @param {string} labelUuid
   *
   * @returns {Promise}
   */
  service.deleteLabelFromOrganizer = function(organizerId, labelUuid) {
    return udbApi
      .deleteLabelFromOrganizer(organizerId, labelUuid);
  };

  /**
   * Removes an organizer from the cache.
   * @param {string} organizerId
   */
  service.removeOrganizerFromCache = function(organizerId) {
    return udbApi.removeItemFromCache(organizerId);
  };

  /**
   * Update the unique url of a specific organizer.
   * @param {string} organizerId
   * @param {string} website
   *
   * @returns {Promise}
   */
  service.updateOrganizerWebsite = function(organizerId, website) {
    return udbApi
        .updateOrganizerWebsite(organizerId, website);
  };

  /**
   * Update the name of a specific organizer.
   * @param {string} organizerId
   * @param {string} name
   * @param {string} language
   *
   * @returns {Promise}
   */
  service.updateOrganizerName = function(organizerId, name, language) {
    return udbApi
        .updateOrganizerName(organizerId, name, language);
  };

  /**
   * Update the address of a specific organizer.
   * @param {string} organizerId
   * @param {Object} address
   * @param {string} language
   *
   * @returns {Promise}
   */
  service.updateOrganizerAddress = function(organizerId, address, language) {
    return udbApi
        .updateOrganizerAddress(organizerId, address, language);
  };

  /**
   * Remove the address of a specific organizer.
   * @param {string} organizerId
   *
   * @returns {Promise}
   */
  service.removeOrganizerAddress = function(organizerId) {
    return udbApi
        .removeOrganizerAddress(organizerId);
  };

  /**
   * Update contact info of a specific organizer.
   * @param {string} organizerId
   * @param {Array} contact
   * @param {string} language
   *
   * @returns {Promise}
   */
  service.updateOrganizerContact = function(organizerId, contact, language) {
    return udbApi
        .updateOrganizerContact(organizerId, contact, language);
  };
}
OrganizerManager.$inject = ["udbApi"];
})();

// Source: src/place-detail/place-detail.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.place-detail.directive:place-detail.html
 * @description
 * # udb place-detail directive
 */
angular
  .module('udb.place-detail')
  .directive('udbPlaceDetail', udbPlaceDetailDirective);

/* @ngInject */
function udbPlaceDetailDirective() {
  return {
    templateUrl: 'templates/place-detail.html',
    restrict: 'EA',
    controller: PlaceDetail // jshint ignore:line
  };
}
})();

// Source: src/place-detail/ui/place-detail.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.place-detail.controller:PlaceDetailController
 * @description
 * # PlaceDetailController
 * Place Detail controller
 */
angular
    .module('udb.place-detail')
    .controller('PlaceDetailController', PlaceDetail);

/* @ngInject */
function PlaceDetail(
  $scope,
  placeId,
  udbApi,
  $state,
  jsonLDLangFilter,
  eventCrud,
  $uibModal,
  $q,
  $window,
  offerLabeller,
  appConfig,
  $translate,
  RolePermission,
  authorizationService
) {
  var activeTabId = 'data';
  var controller = this;
  var language = $translate.use() || 'nl';
  $scope.isOmdApp = !!_.get(appConfig, 'omdSpecific', false);

  $q.when(placeId, function (offerLocation) {
    $scope.placeId = offerLocation;

    var offer = udbApi.getOffer(offerLocation);
    var permissions = udbApi.getUserPermissions(offerLocation);

    offer.then(showOffer, failedToLoad);

    $q.all([permissions, offer])
      .then(grantPermissions);
  });
  /**
   * Grant permissions based on permission-data.
   * @param {Array} permissionsData
   *  The first array-item is assumed to be true, if the user is not owner the permission check rejects.
   *  The second value holds the offer itself.
   */
  function grantPermissions(permissionsData) {
    var permissions = permissionsData[0];
    var hasPermissions = permissions.length > 0;
    var place = permissionsData[1];

    authorizationService
        .getPermissions()
        .then(function(userPermissions) {

          $scope.isGodUser = _.filter(userPermissions, function(permission) {
            return permission === RolePermission.GEBRUIKERS_BEHEREN;
          }).length > 0;

          if (hasPermissions) {
            var offerPermissions = {
              editing: _.includes(permissions, 'Aanbod bewerken') && (!place.isExpired() || $scope.isGodUser),
              moderate:_.includes(permissions, 'Aanbod modereren'),
              delete: _.includes(permissions, 'Aanbod verwijderen')
            };

            $scope.permissions = angular.extend({}, offerPermissions, {
              duplication: true,
            });
          } else {
            $scope.permissions = {editing: false, moderate: false, delete: false, duplication: false};
          }

          setTabs();
        });
  }

  $scope.placeIdIsInvalid = false;

  // labels scope variables and functions
  $scope.labelAdded = labelAdded;
  $scope.labelRemoved = labelRemoved;
  $scope.labelResponse = '';
  $scope.labelsError = '';
  $scope.finishedLoading = false;
  $scope.placeHistory = undefined;
  function setTabs() {
    if ($scope.isGodUser) {
      $scope.tabs = [
        {
          id: 'data'
        },
        {
          id: 'history'
        },
        {
          id: 'publication'
        }
      ];
    } else {
      $scope.tabs = [
        {
          id: 'data'
        },
        {
          id: 'publication'
        }
      ];
    }
  }

  $scope.deletePlace = function () {
    openPlaceDeleteConfirmModal($scope.place);
  };

  $scope.language = language;
  var cachedPlace;

  function showOffer(place) {
    cachedPlace = place;

    $scope.place = jsonLDLangFilter(place, language, true);
    $scope.placeIdIsInvalid = false;

    if (typeof $scope.place.description === 'object') {
      $scope.place.description = $scope.place.description[language];
      if ($scope.place.description === undefined) {
        $scope.place.description = '';
      }
    }

    $scope.finishedLoading = true;
    if (place.typicalAgeRange.indexOf('-') === place.typicalAgeRange.length - 1) {
      $scope.ageRange = place.typicalAgeRange.slice(0, -1) + '+';
    }
    else {
      $scope.ageRange = place.typicalAgeRange;
    }
  }

  function failedToLoad(reason) {
    $scope.placeIdIsInvalid = true;
  }

  $scope.placeLocation = function (place) {

    if (place.address.addressLocality) {
      return place.address.addressLocality;
    }

    return '';
  };

  $scope.isTabActive = function (tabId) {
    return tabId === activeTabId;
  };

  $scope.makeTabActive = function (tabId) {
    activeTabId = tabId;

    if (tabId === 'history' && !$scope.placeHistory) {
      var placeId =  $scope.placeId.split('/').pop();
      udbApi.getHistory(placeId, 'place').then(showHistory);
    }
  };

  $scope.openEditPage = function() {
    var placeLocation = $scope.placeId.toString();
    var id = placeLocation.split('/').pop();

    $state.go('split.placeEdit', {id: id});
  };

  $scope.openTranslatePage = function() {
    var placeLocation = $scope.placeId.toString();
    var id = placeLocation.split('/').pop();

    $state.go('split.placeTranslate', {id: id});
  };

  controller.goToDashboard = function() {
    $state.go('split.footer.dashboard');
  };

  function openPlaceDeleteConfirmModal(item) {

    function displayModal(place, events) {
      var modalInstance = $uibModal.open({
        templateUrl: 'templates/place-delete-confirm-modal.html',
        controller: 'PlaceDeleteConfirmModalCtrl',
        resolve: {
          place: function () {
            return place;
          },
          events: function () {
            return events;
          }
        }
      });

      modalInstance.result
        .then(controller.goToDashboard);
    }

    // Check if this place has planned events.
    eventCrud
      .findEventsAtPlace(item.apiUrl)
      .then(function(events) {
        displayModal(item, events);
      });
  }

  function showHistory(placeHistory) {
    $scope.placeHistory = placeHistory;
  }

  /**
   * @param {Label} newLabel
   */
  function labelAdded(newLabel) {
    var similarLabel = _.find(cachedPlace.labels, function (label) {
      return newLabel.name.toUpperCase() === label.toUpperCase();
    });

    if (similarLabel) {
      $window.alert('Het label "' + newLabel.name + '" is reeds toegevoegd als "' + similarLabel + '".');
    } else {
      offerLabeller.label(cachedPlace, newLabel.name)
        .then(function(response) {
          if (response.success) {
            $scope.labelResponse = 'success';
            $scope.addedLabel = response.name;
          }
          else {
            $scope.labelResponse = 'error';
            $scope.labelsError = response;
          }
          $scope.place.labels = angular.copy(cachedPlace.labels);
        });
    }
  }

  function clearLabelsError() {
    $scope.labelResponse = '';
    $scope.labelsError = '';
  }

  /**
   * @param {ApiProblem} problem
   */
  function showUnlabelProblem(problem) {
    $scope.place.labels = angular.copy(cachedPlace.labels);
    $scope.labelResponse = 'unlabelError';
    $scope.labelsError = problem.title;
  }

  /**
   * @param {Label} label
   */
  function labelRemoved(label) {
    clearLabelsError();

    return $q(function(resolve, reject) {
      offerLabeller
      .unlabel(cachedPlace, label.name)
      .then(resolve)
      .catch(function (err) {
        showUnlabelProblem(err);
        reject(err);
      });
    });
  }

  $scope.translateType = function (type) {
    // Work around for III-2695
    var translatedString = $translate.instant('offerTypes.' + type);
    if (_.includes(translatedString, 'offerTypes.')) {
      return type;
    }
    else {
      return translatedString;
    }
  };
}
PlaceDetail.$inject = ["$scope", "placeId", "udbApi", "$state", "jsonLDLangFilter", "eventCrud", "$uibModal", "$q", "$window", "offerLabeller", "appConfig", "$translate", "RolePermission", "authorizationService"];
})();

// Source: src/router/offer-locator.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udbApp.OfferLocator
 * @description
 * Index and locate offers by UUID.
 */
angular.module('udb.router')
  .service('offerLocator', OfferLocator);

/* @ngInject */
function OfferLocator($q, udbApi) {
  // An associative array with UUIDs pointing to locations.
  // eg: 0586DF1-89D7-42F6-9804-DAE8878C2617 -> http://du.de/event/0586DF1-89D7-42F6-9804-DAE8878C2617
  var locations = {};

  // public methods
  this.get = get;
  this.add = add;
  this.addPagedCollection = addPagedCollection;

  /**
   * @param {string} uuid
   * @param {URL} location
   */
  function add(uuid, location) {
    locations[uuid] = location;
  }

  /**
   * @param {PagedCollection} offerCollection
   */
  function addPagedCollection(offerCollection) {
    _.each(offerCollection.member, function (item) {
      var offerLocation = item['@id'];
      var offerUuid = offerLocation.split('/').pop();
      add(offerUuid, offerLocation);
    });
  }

  /**
   * @param {string} uuid
   * @return {Promise.<URL>}
   */
  function get(uuid) {
    var knownLocation = locations[uuid];

    if (knownLocation) {
      return $q.resolve(knownLocation);
    } else {
      return findLocation(uuid);
    }
  }

  /**
   * @param {string} uuid
   * @return {Promise.<URL>}
   */
  function findLocation(uuid) {
    var deferredLocation = $q.defer();

    function cacheAndResolveLocation(pagedSearchResults) {
      if (pagedSearchResults.totalItems === 1) {
        var location = pagedSearchResults.member[0]['@id'];
        add(uuid, location);
        deferredLocation.resolve(location);
      } else {
        deferredLocation.reject('Unable to determine the exact offer for this uuid.');
      }
    }

    var queryString = 'id:"' + uuid + '"';
    var startOffset = 0;
    var showUnavailable = true;

    udbApi
      .findOffers(queryString, startOffset, showUnavailable)
      .then(cacheAndResolveLocation)
      .catch(deferredLocation.reject);

    return deferredLocation.promise;
  }
}
OfferLocator.$inject = ["$q", "udbApi"];
})();

// Source: src/saved-searches/components/delete-search-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.entry.controller:DeleteSearchModalController
 * @description
 * # DeleteSearchModalController
 * Controller of the udb.entry
 */
angular
  .module('udb.saved-searches')
  .controller('DeleteSearchModalController', DeleteSearchModalController);

/* @ngInject */
function DeleteSearchModalController($scope, $uibModalInstance) {

  var confirm = function () {
    $uibModalInstance.close();
  };

  var cancel = function () {
    $uibModalInstance.dismiss('cancel');
  };

  $scope.cancel = cancel;
  $scope.confirm = confirm;
}
DeleteSearchModalController.$inject = ["$scope", "$uibModalInstance"];
})();

// Source: src/saved-searches/components/save-search-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.entry.controller:SaveSearchModalController
 * @description
 * # SaveSearchModalController
 * Controller of the udb.entry
 */
angular
  .module('udb.saved-searches')
  .controller('SaveSearchModalController', SaveSearchModalController);

/* @ngInject */
function SaveSearchModalController($scope, udbApi, $q, $uibModalInstance, $translate) {

  var ok = function (type) {
    var name = $scope.queryName;
    var id = $scope.queryId;
    $scope.wasSubmitted = true;

    if (type === 'existing') {
      $uibModalInstance.close({id: id, name: name, type: type});
    }

    if (type === 'new' && name) {
      $uibModalInstance.close({name: name, type: type});
    }

  };

  var cancel = function () {
    $uibModalInstance.dismiss('cancel');
  };

  var isTabActive = function (tabId) {
    return tabId === $scope.activeTabId;
  };

  var getSavedSearches = function () {
    return udbApi.getSavedSearches().then(function (data) {
      var withTranslation = data.map(function (savedSearch) {
        var key = 'search.savedSearches.items.' + savedSearch.name.toString();
        var translated = $translate.instant(key);
        if (translated !== key) {
          savedSearch.name = translated;
        }
        return savedSearch;
      });
      return $q.resolve(withTranslation);
    });
  };

  var makeTabActive = function (tabId) {
    $scope.activeTabId = tabId;
    if (tabId === 'existing') {
      getSavedSearches().then(function (savedSearches) {
        $scope.savedSearches = savedSearches;
      });
    }
  };

  var setQueryName = function() {
    var selectedSavedSearch = $scope.savedSearches.find(function(savedSearch) {
      return savedSearch.id === $scope.queryId;
    });

    if (selectedSavedSearch) {
      $scope.queryName = selectedSavedSearch.name;
    }
  };

  $scope.savedSearches = [];
  $scope.cancel = cancel;
  $scope.ok = ok;
  $scope.isTabActive = isTabActive;
  $scope.makeTabActive = makeTabActive;
  $scope.setQueryName = setQueryName;
  $scope.queryName = '';
  $scope.queryId = '';
  $scope.activeTabId = 'new';
  $scope.wasSubmitted = false;
}
SaveSearchModalController.$inject = ["$scope", "udbApi", "$q", "$uibModalInstance", "$translate"];
})();

// Source: src/saved-searches/components/save-search.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.savedSearches.directive:udbSaveSearch
 * @description
 * # udbSaveSearch
 */
angular
  .module('udb.saved-searches')
  .directive('udbSaveSearch', udbSaveSearch);

/* @ngInject */
function udbSaveSearch(savedSearchesService, $uibModal) {
  var directive = {
    link: link,
    templateUrl: 'templates/save-search.directive.html',
    restrict: 'AE',
    scope: {
      queryString: '=udbQueryString'
    }
  };
  return directive;

  function link(scope, element, attrs, controllers) {
    scope.saveSearch = function () {
      var modal = $uibModal.open({
        templateUrl: 'templates/save-search-modal.html',
        controller: 'SaveSearchModalController'
      });

      modal.result.then(function (params) {

        if (params.type === 'new') {
          savedSearchesService
            .createSavedSearch(params.name, scope.queryString)
            .catch(displayErrorModal);
        }

        if (params.type === 'existing') {
          savedSearchesService
            .editSavedSearch(params.id, params.name, scope.queryString)
            .catch(displayErrorModal);
        }

      });
    };

    scope.openAnnouncementModal = function () {
      window.parent.postMessage({
        source: 'UDB',
        type: 'OPEN_ANNOUNCEMENT_MODAL',
        id: '2833ab49-cf44-4504-89d1-f6ba3f81aa63'
      }, '*');
    };
  }

  function displayErrorModal() {
    $uibModal.open(
      {
        templateUrl: 'templates/unexpected-error-modal.html',
        controller: 'UnexpectedErrorModalController',
        size: 'lg',
        resolve: {
          errorMessage: function() {
            return 'Het opslaan van de zoekopdracht is mislukt. Controleer de verbinding en probeer opnieuw.';
          }
        }
      }
    );
  }
}
udbSaveSearch.$inject = ["savedSearchesService", "$uibModal"];
})();

// Source: src/saved-searches/udb.saved-searches.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.saved-searches.savedSearchesService
 * @description
 * # savedSearchesService
 * Service in udb.saved-searches.
 */
angular
  .module('udb.saved-searches')
  .service('savedSearchesService', SavedSearchesService);

/* @ngInject */
function SavedSearchesService($q, $http, $cookies, appConfig, $rootScope, udbApi, $translate) {
  var savedSearches = [];
  var ss = this;

  ss.createSavedSearch = function(name, query) {
    return udbApi.createSavedSearch(name, query).then(function () {
      savedSearches.push({'name': name, 'query': query});
      savedSearchesChanged();

      return $q.resolve();
    });
  };

  ss.getSavedSearches = function () {
    return udbApi.getSavedSearches().then(function (data) {
      var withTranslation = data.map(function (savedSearch) {
        var key = 'search.savedSearches.items.' + savedSearch.name.toString();
        var translated = $translate.instant(key);
        if (translated !== key) {
          savedSearch.name = translated;
        }
        return savedSearch;
      });
      savedSearches = withTranslation;
      return $q.resolve(withTranslation);
    });
  };

  ss.deleteSavedSearch = function (searchId) {
    return udbApi.deleteSavedSearch(searchId).then(function () {
      _.remove(savedSearches, {id: searchId});
      savedSearchesChanged();

      return $q.resolve();
    });
  };

  ss.editSavedSearch = function (searchId, name, query) {
    return udbApi.editSavedSearch(searchId, name, query).then(function () {
      var savedSearch = _.find(savedSearches, {id: searchId});
      savedSearch.query = query;
      savedSearchesChanged();

      return $q.resolve();
    });
  };

  function savedSearchesChanged () {
    $rootScope.$emit('savedSearchesChanged', savedSearches);
  }
}
SavedSearchesService.$inject = ["$q", "$http", "$cookies", "appConfig", "$rootScope", "udbApi", "$translate"];

})();

// Source: src/saved-searches/ui/saved-searches-list.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.saved-searches-list.controller:SavedSearchesListController
 * @description
 * # SavedSearchesListController
 * Saved searches list controller
 */
angular
  .module('udb.saved-searches')
  .controller('SavedSearchesListController', SavedSearchesList);

/* @ngInject */
function SavedSearchesList($scope, savedSearchesService, $uibModal, $rootScope) {

  $scope.savedSearches = [];

  $scope.editorOptions = {
    mode: 'solr',
    lineWrapping: true,
    readOnly: true
  };

  $scope.codemirrorLoaded = function(editorInstance) {
    editorInstance.on('focus', function () {
      editorInstance.execCommand('selectAll');
    });

    editorInstance.on('blur', function() {
      editorInstance.setCursor(0, 0, true);
    });
  };

  // get the current saved searches and watch for changes
  var savedSearchesPromise = savedSearchesService.getSavedSearches();
  savedSearchesPromise.then(function (savedSearches) {
    $scope.savedSearches = savedSearches;
  });
  $rootScope.$on('savedSearchesChanged', function (event, savedSearches) {
    $scope.savedSearches = savedSearches;
  });

  this.encodeURI = function (uri) {
    return encodeURIComponent(uri);
  };
  $scope.encodeURI = this.encodeURI;

  this.deleteSavedSearch = function(searchId) {
    var modal = $uibModal.open({
      templateUrl: 'templates/delete-search-modal.html',
      controller: 'DeleteSearchModalController'
    });

    modal.result.then(function () {
      var savedSearchPromise = savedSearchesService.deleteSavedSearch(searchId);

      savedSearchPromise
        .catch(function() {
          var modalInstance = $uibModal.open({
            templateUrl: 'templates/unexpected-error-modal.html',
            controller: 'UnexpectedErrorModalController',
            size: 'lg',
            resolve: {
              errorMessage: function() {
                return 'Het verwijderen van de zoekopdracht is mislukt. Controleer de verbinding en probeer opnieuw.';
              }
            }
          });
        });
    });
  };

  $scope.deleteSavedSearch = this.deleteSavedSearch;
}
SavedSearchesList.$inject = ["$scope", "savedSearchesService", "$uibModal", "$rootScope"];
})();

// Source: src/search/components/event-link.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEventLink
 * @description
 *  Renders a link for an event.
 */
angular
  .module('udb.event-form')
  .directive('udbEventLink', udbEventLink);

/* @ngInject */
function udbEventLink() {
  var eventLinkDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'eventCtrl',
    templateUrl: 'templates/event-link.directive.html'
  };

  return eventLinkDirective;
}
})();

// Source: src/search/components/label-select.component.js
(function () {
'use strict';

angular
  .module('udb.search')
  .component('udbLabelSelect', {
    templateUrl: 'templates/label-select.html',
    controller: LabelSelectComponent,
    controllerAs: 'select',
    bindings: {
      labels: '<',
      labelAdded: '&',
      labelRemoved: '&'
    }
  });

/** @ngInject */
function LabelSelectComponent(offerLabeller, $q) {
  var select = this;
  /** @type {Label[]} */
  select.availableLabels = [];
  select.suggestLabels = suggestLabels;
  select.createLabel = createLabel;
  select.areLengthCriteriaMet = areLengthCriteriaMet;
  select.areContentCriteriaMet = areContentCriteriaMet;
  /** @type {Label[]} */
  select.labels = objectifyLabels(select.labels);
  select.hiddenLabels = ['new-entry-form', 'ook voor jongeren', 'ook voor kinderen'];
  select.minimumInputLength = 2;
  select.maxInputLength = 50;
  select.currentLabel = '';
  select.onSelect = onSelect;
  select.onRemove = onRemove;

  select.$onChanges = updateLabels;

  /**
   * @param {Object} bindingChanges
   * @see https://code.angularjs.org/1.5.9/docs/guide/component
   */
  function updateLabels(bindingChanges) {
    select.labels = objectifyLabels(_.get(bindingChanges, 'labels.currentValue', select.labels));
  }

  select.regex = /^([a-zA-Z0-9ŠŽšœžŸÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýþÿ]{1}[a-zA-Z0-9ŠŽšœžŸÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýþÿ_-\s]+)$/;

  function onSelect(item) {
    select.currentLabel = '';
    select.labelAdded({label: item});
    select.labels.push(item);
  }

  function onRemove(label) {
    select.currentLabel = '';
    select.labelRemoved({label: label}).then(function() {
        select.labels = _.without(select.labels, label);
      });
  }

  /**
   * @param {string[]|Label[]} labels
   * @return {Label[]}
   */
  function objectifyLabels(labels) {
    return _.map(select.labels, function (label) {
      return _.isString(label) ? {name:label} : label;
    });
  }

  function areLengthCriteriaMet(length) {
    return (length >= select.minimumInputLength && length <= select.maxInputLength);
  }

  function areContentCriteriaMet(labelName) {
    return select.regex.test(labelName);
  }

  function createLabel(labelName) {
    if (areContentCriteriaMet(labelName)) {

      var similarLabel = _.find(select.labels, function (existingLabel) {
        return existingLabel.name.toUpperCase() === labelName.toUpperCase();
      });
      if (!similarLabel && select.areLengthCriteriaMet(labelName.length) && select.areContentCriteriaMet(labelName)) {
        return {name:labelName};
      }
    }

  }

  function findSuggestions(name) {
    return offerLabeller
      .getSuggestions(name, 6)
      .then(function(labels) {
        labels.push({name: name});
        return setAvailableLabels(labels);
      });
  }

  function suggestLabels(name) {
    if (areContentCriteriaMet(name)) {
      setAvailableLabels([]);
      return findSuggestions(name);
    } else {
      setAvailableLabels([]);
    }
  }

  /** @param {Label[]} labels */
  function setAvailableLabels(labels) {
    select.availableLabels = _.chain(labels)
      .filter(function(label) {
        return areContentCriteriaMet(label.name);
      })
      .reject(function(label) {
        return _.find(select.labels, {'name': label.name});
      })
      .uniq(function (label) {
        return label.name.toUpperCase();
      })
      .value();
    return select.availableLabels;
  }
}
LabelSelectComponent.$inject = ["offerLabeller", "$q"];
})();

// Source: src/search/components/offer-accessibility-info.component.js
(function () {
'use strict';

angular
  .module('udb.search')
  .component('udbOfferAccessibilityInfo', {
    templateUrl: 'templates/offer-accessibility-info.component.html',
    controller: AccessibilityInfoController,
    bindings: {
      'offerType': '<',
      'offer': '='
    }
  });

/* @ngInject */
function AccessibilityInfoController(facilities, $uibModal) {
  var controller = this;

  controller.changeFacilities = function () {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/search-facilities-modal.html',
      controller: 'SearchFacilitiesModalController',
      resolve: {
        offer: function () {
          return controller.offer;
        },
        facilities: function () {
          return 'place' === controller.offerType ? _.pick(facilities, 'place') : _.omit(facilities, 'place');
        }
      }
    });
  };
}
AccessibilityInfoController.$inject = ["facilities", "$uibModal"];
})();

// Source: src/search/components/query-editor-daterangepicker.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbQueryEditorDaterangepicker
 * @description
 * # udbQueryEditorDaterangepicker
 */
angular
  .module('udb.search')
  .directive('udbQueryEditorDaterangepicker', udbQueryEditorDaterangepicker);

/* @ngInject */
function udbQueryEditorDaterangepicker($translate, uibDatepickerPopupConfig) {
  return {
    templateUrl: 'templates/query-editor-daterangepicker.directive.html',
    restrict: 'E',
    link: function postLink(scope, element, attrs) {

      var dateRangePicker = {
        startOpened: false,
        endOpened: false,
        dateFormat: 'dd/MM/yyyy'
      };

      $translate(['datepicker.CURRENT', 'datepicker.CLEAR', 'datepicker.CLOSE']).then(function (translations) {
        uibDatepickerPopupConfig.currentText = translations['datepicker.CURRENT'];
        uibDatepickerPopupConfig.clearText = translations['datepicker.CLEAR'];
        uibDatepickerPopupConfig.closeText = translations['datepicker.CLOSE'];
      });

      dateRangePicker.openStart = function ($event) {
        $event.preventDefault();
        $event.stopPropagation();

        dateRangePicker.startOpened = true;
        dateRangePicker.endOpened = false;
      };

      dateRangePicker.openEnd = function ($event) {
        $event.preventDefault();
        $event.stopPropagation();

        dateRangePicker.startOpened = false;
        dateRangePicker.endOpened = true;
      };

      scope.drp = dateRangePicker;
    }
  };
}
udbQueryEditorDaterangepicker.$inject = ["$translate", "uibDatepickerPopupConfig"];

angular
  .module('udb.search')
  .directive('datepickerPopup', datepickerPopup);

/* @ngInject */
function datepickerPopup() {
  return {
    restrict: 'EAC',
    require: 'ngModel',
    link: function (scope, element, attr, controller) {
      //remove the default formatter from the input directive to prevent conflict
      controller.$formatters.shift();
    }
  };
}
})();

// Source: src/search/components/query-editor-field.controller.js
(function () {
'use strict';

/**
 * @ngdoc controller
 * @name udb.search.controller:QueryEditorField
 * @description
 * # QueryEditorFieldController
 */
angular
  .module('udb.search')
  .controller('QueryEditorFieldController', QueryEditorFieldController);

/* @ngInject */
function QueryEditorFieldController($scope) {

  function getParentGroup() {
    var parentGroup;

    if (isSubGroup()) {
      parentGroup = $scope.$parent.field;
    } else {
      parentGroup = $scope.rootGroup;
    }

    return parentGroup;
  }

  function getOperatorClass() {
    var operatorClass;
    var parentGroup = getParentGroup();
    if (isSubGroup() && $scope.$index === 0) {
      operatorClass = 'AND';
    } else {
      operatorClass = $scope.$index ? parentGroup.operator : 'FIRST';
    }

    return operatorClass;
  }

  function isSubGroup() {
    var parentGroup = $scope.$parent;
    return parentGroup.field.type === 'group';
  }

  function canRemoveField() {
    var group = $scope.rootGroup;
    return (group.nodes.length > 1);
  }

  $scope.addField = function (index) {
    $scope.qe.addField(getParentGroup(), index);
  };

  $scope.removeField = function (index) {
    $scope.qe.removeField(getParentGroup(), index, $scope.rootGroup);
  };

  $scope.addSubGroup = function (index) {
    var rootGroup = $scope.rootGroup,
      treeGroupId = _.uniqueId(),
      group = getParentGroup();

    group.treeGroupId = treeGroupId;

    if (isSubGroup()) {
      index = _.findIndex(rootGroup.nodes, function (group) {
        return group.treeGroupId === treeGroupId;
      });
    }

    $scope.qe.addSubGroup(rootGroup, index);
  };

  $scope.isSubGroup = isSubGroup;
  $scope.getOperatorClass = getOperatorClass;
  $scope.canRemoveField = canRemoveField;
}
QueryEditorFieldController.$inject = ["$scope"];
})();

// Source: src/search/components/query-editor-field.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbQueryEditorField
 * @description
 * # udbQueryEditorField
 */
angular
  .module('udb.search')
  .directive('udbQueryEditorField', udbQueryEditorField);

/* @ngInject */
function udbQueryEditorField() {
  return {
    templateUrl: 'templates/query-editor-field.directive.html',
    restrict: 'E',
    controller: 'QueryEditorFieldController'
  };
}
})();

// Source: src/search/components/query-editor.controller.js
(function () {
'use strict';

/**
 * @typedef {Object} OfferType
 * @property {string} id
 * @property {string} label
 */

/**
 * @ngdoc directive
 * @name udb.search.controller:QueryEditorController
 * @description
 * # QueryEditorController
 */
angular
  .module('udb.search')
  .controller('QueryEditorController', QueryEditorController);

/* @ngInject */
function QueryEditorController(
  LuceneQueryParser,
  queryFields,
  LuceneQueryBuilder,
  taxonomyTerms,
  sapi3CitiesBE,
  fieldTypeTransformers,
  searchHelper,
  $translate,
  $rootScope,
  eventTypes,
  placeTypes
) {
  var qe = this,
      queryBuilder = LuceneQueryBuilder;

  qe.fieldOptions = _.filter(queryFields, 'editable');

  // use the first occurrence of a group name to order it against the other groups
  var orderedGroups = _.chain(qe.fieldOptions)
    .map(function (field) {
           return field.group;
         })
    .uniq()
    .value();

  _.forEach(qe.fieldOptions, function (field) {
    var fieldName = 'queryFieldLabel.' + field.name,
        fieldGroup = 'queryFieldGroup.' + field.group;

    $translate([fieldName, fieldGroup]).then(function (translations) {
      field.label = translations[fieldName];
      field.groupIndex = _.indexOf(orderedGroups, field.group);
      field.groupLabel = translations[fieldGroup];
    });
  });

  qe.getDefaultQueryTree = function () {
    return {
      type: 'root',
      nodes: [
        {
          type: 'group',
          operator: 'OR',
          nodes: [
            {
              name: 'title',
              field: 'name.\\*',
              term: '',
              fieldType: 'tokenized-string',
              transformer: '+'
            }
          ]
        }
      ]
    };
  };

  qe.groupedQueryTree = searchHelper.getQueryTree() || qe.getDefaultQueryTree();

  // Create a mapping from the 'field' value in the definitions to the corresponding object
  var fieldMapping = queryFields.filter(function(queryField) {
    return queryField.hasOwnProperty('name') && queryField.name !== 'startdate' && queryField.name !== 'enddate';
  }).reduce(function(map, def) {
    map[def.field] = def;
    return map;
  }, {});

  var fieldMappingByName = queryFields.filter(function(queryField) {
    return queryField.name !== 'startdate' && queryField.name !== 'enddate';
  }).reduce(function(map, def) {
    map[def.name] = def;
    return map;
  }, {});

  function isSameDay(date1, date2) {
    return date1.getDate() === date2.getDate() &&
        date1.getMonth() === date2.getMonth() &&
        date1.getFullYear() === date2.getFullYear();
  }

  function getFieldTransformer(fieldNode) {

    if (fieldNode.fieldType === 'tokenized-string') {
      return fieldNode.transformer === '=' ? '+' : '-';
    }

    if (fieldNode.fieldType === 'date-range') {
      if (fieldNode.upperBound === '*') {
        return '>';
      }
      if (fieldNode.lowerBound === '*') {
        return '<';
      }

      if (!isSameDay(fieldNode.lowerBound, fieldNode.upperBound)) {
        return '><';
      }

      return '=';
    }

    if (fieldNode.fieldType === 'check') {
      return '=';
    }

    return fieldNode.transformer;

  }

  function getFieldNameForTermsId(id) {
    var foundTerms = taxonomyTerms.filter(function(term) {
      return term.id === id;
    });

    var term = foundTerms[0];

    if (term.domain === 'theme') {
      return 'category_theme_name';
    }

    if (term.domain === 'facility') {
      return 'category_facility_name';
    }

    if (term.domain === 'eventtype') {
      return term.scope && term.scope.indexOf('events') !== -1 ?  'category_eventtype_name' : 'locationtype';
    }
  }

  qe.parseModalValuesFromQuery = function (query) {
    var parsedLuceneQuery = LuceneQueryParser.parse(query);
    var groupedTree = queryBuilder.groupQueryTree(parsedLuceneQuery);

    groupedTree.nodes = groupedTree.nodes.map(function(node) {
      if (node.type === 'field') {
        node.type = 'group';
      }
      node.nodes = node.nodes.map(function(subNode) {
        subNode.name = fieldMapping[subNode.field].name;
        subNode.fieldType = fieldMapping[subNode.field].type || 'unknown';

        if (subNode.fieldType === 'date-range') {
          subNode.lowerBound = subNode.lowerBound === '*' ?  '*' :  new Date(subNode.lowerBound.replace(/\\/g, ''));
          subNode.upperBound = subNode.upperBound === '*' ? '*' :  new Date(subNode.upperBound.replace(/\\/g, ''));
          delete subNode.term;
        }

        if (subNode.field === 'terms.id') {
          var fieldName =  getFieldNameForTermsId(subNode.term);
          var fieldDef = fieldMappingByName[fieldName] || {};
          subNode.name = fieldDef.name;
        }

        if (subNode.name === 'permanent' && subNode.transformer === '!') {
          subNode.term = '(!permanent)';
        }

        subNode.transformer = getFieldTransformer(subNode);
        return subNode;
      });
      return node;
    });

    groupedTree.nodes = groupedTree.nodes.filter(function(node) {
      return node.nodes.length > 0;
    });

    if (groupedTree.nodes[0].operator === 'AND' &&
      groupedTree.nodes.length > 1 &&
      groupedTree.nodes[0].nodes.length === 1
    ) {
      var firstGroup = groupedTree.nodes[0];
      groupedTree.nodes.splice(0, 1);
      groupedTree.nodes[0].nodes.push(firstGroup);
    }

    return groupedTree;
  };

  var currentUrl = new URL(window.location.href);
  var advancedSearchQuery =  currentUrl.searchParams ? currentUrl.searchParams.get('query') : undefined;

  if (advancedSearchQuery) {
    var modalValues = qe.parseModalValuesFromQuery(advancedSearchQuery);
    qe.groupedQueryTree = modalValues;
  }

  // Holds options for both term and choice query-field types
  qe.transformers = {};
  qe.termOptions = _.groupBy(taxonomyTerms, function (term) {
    return 'category_' + term.domain + '_name';
  });
  qe.termOptions.locationtype = placeTypes;
  qe.termOptions.nisRegions = sapi3CitiesBE;
  qe.termOptions['category_eventtype_name'] = eventTypes; // jshint ignore:line
  _.forEach(queryFields, function (field) {
    if (field.type === 'choice') {
      qe.termOptions[field.name] = field.options;
    }
    qe.transformers[field.name] = fieldTypeTransformers[field.type];
  });

  /**
   * Update the search input field with the data from the query editor
   */
  qe.updateQueryString = function () {
    searchHelper.setQueryTree(qe.groupedQueryTree);
    $rootScope.$emit('searchSubmitted');
    qe.stopEditing();
  };

  qe.stopEditing = function () {
    $rootScope.$emit('stopEditingQuery');
  };

  /**
   * Add a field to a group
   *
   * @param  {object}  group       The group to add the field to
   * @param {number}  fieldIndex  The index of the field after which to add
   */
  qe.addField = function (group, fieldIndex) {

    var insertIndex = fieldIndex + 1,
        field = {
          field: 'name.\\*',
          name: 'title',
          term: '',
          fieldType: 'tokenized-string',
          transformer: '+'
        };

    group.nodes.splice(insertIndex, 0, field);

    if (group.nodes.length) {
      group.type = 'group';
      group.operator = 'OR';
    }
  };

  /**
   * Remove a field from a group
   *
   * @param {object}    group       The group to delete a field from
   * @param {number}    fieldIndex  The index of the field to delete
   * @param {object=}   rootGroup   The root group of the field to delete
   */
  qe.removeField = function (group, fieldIndex, rootGroup) {
    if (rootGroup.nodes.length > 1) {
      group.nodes.splice(fieldIndex, 1);
    }

    qe.cleanUpGroups();
  };

  qe.cleanUpGroups = function () {
    qe.removeEmptyGroups();
    qe.unwrapSubGroups();
  };

  qe.unwrapSubGroups = function () {
    var root = qe.groupedQueryTree;

    _.forEach(root.nodes, function (group) {
      var firstNode = group.nodes[0];

      if (firstNode.nodes) {
        var firstNodeChildren = firstNode.nodes;
        group.nodes.splice(0, 1);
        _.forEach(firstNodeChildren, function (node, index) {
          group.nodes.splice(index, 0, node);
        });
      }
    });
  };

  qe.removeEmptyGroups = function () {
    var root = qe.groupedQueryTree;

    _.forEach(root.nodes, function (group) {
      _.remove(group.nodes, function (node) {
        return node.nodes && node.nodes.length === 0;
      });
    });
  };

  qe.toggleExcludeGroup = function (group) {
    group.excluded = !group.excluded;
  };

  qe.canRemoveGroup = function () {
    return !qe.hasSingleGroup();
  };

  qe.removeGroup = function (groupIndex) {
    if (qe.canRemoveGroup()) {
      var root = qe.groupedQueryTree,
          group = root.nodes[groupIndex];

      if (qe.canRemoveGroup() && group) {
        root.nodes.splice(groupIndex, 1);
      }
    }
  };

  qe.resetGroups = function () {
    qe.groupedQueryTree = qe.getDefaultQueryTree();
  };

  /**
   * Add a field group
   */
  qe.addGroup = function () {
    var root = qe.groupedQueryTree;
    var group = {
      type: 'group',
      operator: 'OR',
      nodes: [
        {
          field: 'name.\\*',
          name: 'title',
          term: '',
          fieldType: 'tokenized-string',
          transformer: '+'
        }
      ]
    };

    root.nodes.push(group);
  };

  qe.addSubGroup = function (parentGroup, fieldIndex) {
    var group = {
      type: 'group',
      operator: 'AND',
      nodes: [
        {
          field: 'name.\\*',
          name: 'title',
          term: '',
          fieldType: 'tokenized-string',
          transformer: '+'
        }
      ]
    };

    parentGroup.nodes.splice(fieldIndex + 1, 0, group);
  };

  qe.fieldTypeSelected = function (field) {
    var fieldName = field.name,
        queryField = _.find(queryFields, function (field) {
          return field.name === fieldName;
        });

    if (queryField) {
      field.field = queryField.field;
    }

    if (field.fieldType !== queryField.type) {
      // TODO: Maybe try to do a type conversion?
      if (queryField.type === 'date-range') {
        field.lowerBound = moment().startOf('day').toDate();
        field.upperBound = moment().endOf('day').toDate();
        field.inclusive = true;
      } else {
        field.term = '';
        field.lowerBound = undefined;
        field.upperBound = undefined;
        field.inclusive = undefined;
      }

      if (queryField.type === 'check') {
        field.term = queryField.name;
      }

      if (queryField.type === 'number') {
        field.inclusive = true;
      }

      if (!field.transformer || !_.contains(fieldTypeTransformers[queryField.type], field.transformer)) {
        field.transformer = _.first(fieldTypeTransformers[queryField.type]);
      }

      field.fieldType = queryField.type;
    }
  };

  qe.hasSingleGroup = function () {
    return (qe.groupedQueryTree.nodes.length === 1);
  };
}
QueryEditorController.$inject = ["LuceneQueryParser", "queryFields", "LuceneQueryBuilder", "taxonomyTerms", "sapi3CitiesBE", "fieldTypeTransformers", "searchHelper", "$translate", "$rootScope", "eventTypes", "placeTypes"];
})();

// Source: src/search/components/query-editor.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbQueryEditor
 * @description
 * # udbQueryEditor
 */
angular
  .module('udb.search')
  .directive('udbQueryEditor', udbQueryEditor);

/* @ngInject */
function udbQueryEditor() {
  return {
    templateUrl: 'templates/query-editor.directive.html',
    restrict: 'EA',
    controllerAs: 'qe',
    controller: 'QueryEditorController'
  };
}
})();

// Source: src/search/components/search-bar.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbSearchBar
 * @description
 * # udbSearchBar
 */
angular
  .module('udb.search')
  .directive('udbSearchBar', udbSearchBar);

/* @ngInject */
function udbSearchBar(searchHelper, $rootScope, $uibModal, $translate, savedSearchesService) {
  return {
    templateUrl: 'templates/search-bar.directive.html',
    restrict: 'E',
    link: function postLink(scope, element, attrs) {

      var searchBar = {
        queryString: '',
        hasErrors: false,
        errors: [],
        isEditing: false,
        savedSearches: []
      };

      var editorModal;

      searchBar.editQuery = function () {
        $rootScope.$emit('startEditingQuery');
        searchBar.isEditing = true;

        editorModal = $uibModal.open({
          templateUrl: 'templates/query-editor-modal.html',
          controller: 'QueryEditorController',
          controllerAs: 'qe',
          size: 'lg'
        });
      };

      /**
       * Search with a given query string and update the search bar or use the one currently displayed in the search bar
       *
       * @param {String} [queryString]
       */
      searchBar.find = function (queryString) {
        var query = typeof queryString !== 'undefined' ? queryString : searchBar.queryString;

        searchBar.queryString = query;
        searchHelper.setQueryString(query);
        $rootScope.$emit('searchSubmitted');
      };

      /**
       * When the user manually changes the query field the current query tree should be cleared
       */
      searchBar.queryChanged = function() {
        searchHelper.clearQueryTree();
      };

      scope.sb = searchBar;

      /**
       * Update the search bar with the info from a query object.
       *
       * @param {Object} event
       * @param {Object} query
       */
      searchBar.updateQuery = function(event, query) {
        searchBar.queryString = query.queryString;

        if (query.errors && query.errors.length) {
          scope.sb.hasErrors = true;
          scope.sb.errors = formatErrors(query.errors);
        } else {
          scope.sb.hasErrors = false;
          scope.sb.errors = [];
        }
      };

      function formatErrors(errors) {
        return errors.map(function (error) {
          if (error.indexOf('Expected ') === 0) {
            return $translate.instant('search.advancedQueryBuilder.syntaxError');
          } else {
            var invalidFieldMessage = ' is not a valid search field';
            if (error.indexOf(invalidFieldMessage) !== -1) {
              var field = error.split(invalidFieldMessage)[0];
              return $translate.instant('search.advancedQueryBuilder.invalidField', {field: field});
            }
          }

          return error;
        });
      }

      /**
       * Show the first 5 items from a list of saved searches.
       *
       * @param {Object[]} savedSearches
       */
      function showSavedSearches(savedSearches) {
        searchBar.savedSearches = _.take(savedSearches, 5);
      }

      savedSearchesService
        .getSavedSearches()
        .then(showSavedSearches);

      var savedSearchesChangedListener = $rootScope.$on('savedSearchesChanged', function (event, savedSearches) {
        showSavedSearches(savedSearches);
      });

      var stopEditingQueryListener = $rootScope.$on('stopEditingQuery', function () {
        scope.sb.isEditing = false;
        if (editorModal) {
          editorModal.dismiss();
        }
      });

      var searchQueryChangedListener = $rootScope.$on('searchQueryChanged', searchBar.updateQuery);

      scope.$on('$destroy', savedSearchesChangedListener);
      scope.$on('$destroy', stopEditingQueryListener);
      scope.$on('$destroy', searchQueryChangedListener);
    }
  };
}
udbSearchBar.$inject = ["searchHelper", "$rootScope", "$uibModal", "$translate", "savedSearchesService"];
})();

// Source: src/search/event-types.value.js
(function () {
'use strict';

/**
 * @ngdoc value
 * @name udb.search.eventTypes
 * @description
 * # Event Types
 * A list of types you can use to find events.
 */
angular
  .module('udb.search')
  .value('eventTypes', [
    {label: 'Begeleide uitstap of rondleiding', id: '0.7.0.0.0'},
    {label: 'Beurs', id: '0.6.0.0.0'},
    {label: 'Concert', id: '0.50.4.0.0'},
    {label: 'Lessenreeks', id: '0.3.1.0.0'},
    {label: 'Cursus met open sessies', id: '0.3.1.0.1'},
    {label: 'Dansvoorstelling', id: '0.54.0.0.0'},
    {label: 'Eet- of drankfestijn', id: '1.50.0.0.0'},
    {label: 'Festival', id: '0.5.0.0.0'},
    {label: 'Film', id: '0.50.6.0.0'},
    {label: 'Kamp of vakantie', id: '0.57.0.0.0'},
    {label: 'Festiviteit', id: '0.28.0.0.0'},
    {label: 'Lezing of congres', id: '0.3.2.0.0'},
    {label: 'Markt, braderie of kermis', id: '0.37.0.0.0'},
    {label: 'Opendeurdag', id: '0.12.0.0.0'},
    {label: 'Party of fuif', id: '0.49.0.0.0'},
    {label: 'Fiets- of wandelroute', id: '0.17.0.0.0'},
    {label: 'Spel of quiz', id: '0.50.21.0.0'},
    {label: 'Sportactiviteit', id: '0.59.0.0.0'},
    {label: 'Sportwedstrijd bekijken', id: '0.19.0.0.0'},
    {label: 'Tentoonstelling', id: '0.0.0.0.0'},
    {label: 'Theatervoorstelling', id: '0.55.0.0.0'}
  ]);
})();

// Source: src/search/filters/currency.filter.js
(function () {
'use strict';

/**
 * @ngdoc filter
 * @name udb.search.filter:currency
 * @function
 * @description
 * # currency
 * Custom currency filter to display event prices
 */
angular
  .module('udb.search')
  .filter('currency', CurrencyFilter);

/* @ngInject */
function CurrencyFilter() {
  return function (number, currencyCode) {
    var currencies = {
      // Source: Interinstitutional Style Guide of the EU
      // Chapter 7.3.3. Rules for expressing monetary units
      // http://publications.europa.eu/code/en/en-370303.htm
      EUR: {
        symbol: '',
        thousand: '.',
        decimal: ',',
        format: '%s%v',
        precision: 2
      }
    };

    var currency = currencies[currencyCode];
    // Default to Euro if the currency is not defined
    if (!currency) {
      currency = currencies.EUR;
    }

    return accounting.formatMoney(number, currency);
  };
}
})();

// Source: src/search/filters/imagesbyLanguage.filter.js
(function () {
'use strict';

/**
 * @ngdoc filter
 * @name udb.search.filter:imagesByLanguage
 * @function
 * @description
 * # jsonLDLang
 * Filter JsonLD objects by language.
 */
angular.module('udb.search')
  .filter('imagesByLanguage', imagesByLanguageFilter);

/* @ngInject */
function imagesByLanguageFilter() {
  return function (mediaObjects, preferredLanguage) {

    var filtered = _.filter(mediaObjects, function(mediaObject) {
      if (typeof mediaObject !== 'undefined') {
        return mediaObject['@type'] === 'schema:ImageObject' &&
          (mediaObject.inLanguage === preferredLanguage || angular.isUndefined(mediaObject.inLanguage));
      }
    });
    return filtered;
  };
}
})();

// Source: src/search/filters/json-ld-lang.filter.js
(function () {
'use strict';

/**
 * @ngdoc filter
 * @name udb.search.filter:jsonLDLang
 * @function
 * @description
 * # jsonLDLang
 * Filter JsonLD objects by language.
 */
angular.module('udb.search')
  .filter('jsonLDLang', JsonLDLangFilter);

/* @ngInject */
function JsonLDLangFilter() {
  return function (jsonLDObject, preferredLanguage, shouldFallback) {
    var translatedJsonLDObject = _.cloneDeep(jsonLDObject);
    translatedJsonLDObject = translateProperties(translatedJsonLDObject, preferredLanguage, shouldFallback);
    return translatedJsonLDObject;
  };
}

function isALanguageKey(key) {
  return key.length === 2;
}

function translateProperties(jsonLDProperty, preferredLanguage, shouldFallback) {
  jsonLDProperty = _.each(jsonLDProperty, function(val, key) {
    if (_.isObject(val)) {
      var allKeys = Object.keys(val);
      if (allKeys.length > 0 && allKeys.every(isALanguageKey)) {
        if (val[preferredLanguage]) {
          jsonLDProperty[key] = val[preferredLanguage];
        } else {
          if (shouldFallback) {
            var fallbackLanguage = allKeys[0];
            var translatedProperty = val[fallbackLanguage];
            jsonLDProperty[key] = translatedProperty;
          }
        }
      } else {
        val = translateProperties(val, preferredLanguage, shouldFallback);
      }
    }
  });
  return jsonLDProperty;
}
})();

// Source: src/search/place-types.value.js
(function () {
'use strict';

/**
 * @ngdoc value
 * @name udb.search.placeTypes
 * @description
 * # Place Types
 * A list of types you can use to find places.
 */
angular
  .module('udb.search')
  .value('placeTypes', [
    {label: 'Archeologische site', id:'3CuHvenJ+EGkcvhXLg9Ykg'},
    {label: 'Bibliotheek of documentatiecentrum', id: 'kI7uAyn2uUu9VV6Z3uWZTA'},
    {label: 'Bioscoop', id: 'BtVNd33sR0WntjALVbyp3w'},
    {label: 'Cultuur- of ontmoetingscentrum', id: 'Yf4aZBfsUEu2NsQqsprngw'},
    {label: 'Discotheek', id: 'YVBc8KVdrU6XfTNvhMYUpg'},
    {label: 'Horeca', id: 'ekdc4ATGoUitCa0e6me6xA'},
    {label: 'Jeugdhuis of jeugdcentrum', id: 'JCjA0i5COUmdjMwcyjNAFA'},
    {label: 'Monument', id: '0.14.0.0.0'},
    {label: 'Museum of galerij', id: 'GnPFp9uvOUyqhOckIFMKmg'},
    {label: 'Natuur, park of tuin', id: '0.15.0.0.0'},
    {label: 'Openbare ruimte', id: '0.8.0.0.0'},
    {label: 'Recreatiedomein of centrum', id: '0.53.0.0.0'},
    {label: 'School of onderwijscentrum', id: 'rJRFUqmd6EiqTD4c7HS90w'},
    {label: 'Sportcentrum', id: 'eBwaUAAhw0ur0Z02i5ttnw'},
    {label: 'Thema of pretpark', id: '0.41.0.0.0'},
    {label: 'Winkel', id: 'VRC6HX0Wa063sq98G5ciqw'},
    {label: 'Speeltuin', id: 'wwjRVmExI0w6xfQwT1KWpx'},
    {label: 'Zaal of expohal', id: 'OyaPaf64AEmEAYXHeLMAtA'},
  ]);
})();

// Source: src/search/services/field-type-transformers.value.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.fieldTypeTransformers
 * @description
 * # fieldTypeTransformers
 * Value in udb.search module.
 */
angular
  .module('udb.search')
  .value('fieldTypeTransformers', {
    'string': ['=', '!'],
    'tokenized-string': ['+', '-'],
    'choice': ['=', '!'],
    'term': ['=', '!'],
    'termNis': ['=', '!'],
    'number': ['=', '><', '<', '>'],
    'check': ['='],
    'date-range': ['=', '><', '<', '>']
});
})();

// Source: src/search/services/query-builder.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udbApp.LuceneQueryBuilder
 * @description
 * # LuceneQueryBuilder
 * Service in the udb.search.
 */
angular.module('udb.search')
  .service('LuceneQueryBuilder', LuceneQueryBuilder);

/* @ngInject */
function LuceneQueryBuilder(LuceneQueryParser, QueryTreeValidator, QueryTreeTranslator, queryFields, taxonomyTerms) {
  var implicitToken = '<implicit>';

  this.translate = function (query) {
    QueryTreeTranslator.translateQueryTree(query.queryTree);
  };

  this.validate = function (query) {
    QueryTreeValidator.validate(query.queryTree, query.errors);
  };

  this.isValid = function (query) {
    this.translate(query);
    this.validate(query);

    return query.errors.length === 0;
  };

  this.parseQueryString = function (query) {
    try {
      query.queryTree = LuceneQueryParser.parse(query.queryString);
    } catch (e) {
      query.errors.push(e.message);
    }

    return query.queryTree;
  };

  /**
   *
   * @param {string} queryString
   */
  this.createQuery = function (queryString) {
    var query = {
      originalQueryString: queryString,
      queryString: queryString,
      queryTree: {},
      errors: []
    };

    this.parseQueryString(query);

    return query;
  };

  var printTerm = function (node) {
    var term = node.term,
        isRangeExpression = (node.lowerBound || node.upperBound);

    if (isRangeExpression) {
      var min = node.lowerBound || '*',
          max = node.upperBound || '*',
          inclusive = node.inclusive;

      if (min instanceof Date) {
        min = moment(min).format();
      }
      if (max instanceof Date) {
        max = moment(max).format();
      }

      term = min + ' TO ' + max;

      if (inclusive) {
        term = '[' + term + ']';
      } else {
        term = '{' + term + '}';
      }
    } else {
      // if the term is a phrase surround it with double quotes
      if (node.quoted || term.indexOf(' ') !== -1) {
        term = '"' + term + '"';
      }

      // check for fuzzy search modifier
      if (node.similarity) {
        term += ('~' + node.similarity);
      }

      // check for proximity modifier
      if (node.proximity) {
        term += ('~' + node.proximity);
      }

      // check for prefix modifier
      if (node.prefix) {
        term = node.prefix + term;
      }

      // check for boost modifier
      if (node.boost) {
        term += ('^' + node.boost);
      }
    }

    return term;
  };

  var unparseNode = function (branch, depth, sentence) {

    if (branch.left) {
      var result,
          operator = (branch.operator === implicitToken) ? ' ' : (' ' + branch.operator + ' ');

      if (branch.right) {
        result = unparseNode(branch.left, depth + 1, sentence);
        result += operator;
        result += unparseNode(branch.right, depth + 1, sentence);

        if (depth > 0) {
          result = '(' + result + ')';
        }

        if (branch.field && branch.field !== implicitToken) {
          result = (branch.field + ':') + result;
        }

      } else {
        var singleTransformedGroupedTerm = branch.field && (branch.left.field === implicitToken) && branch.left.prefix;

        result = singleTransformedGroupedTerm ?
          branch.field + ':(' + printTerm(branch.left) + ')' :
          unparseNode(branch.left, depth + 1, sentence);
      }

      return result;

    } else {
      var fieldQuery = '',
          term = printTerm(branch);

      if (branch.field !== implicitToken && branch.field !== null) {
        var fieldPrefix = '';

        if (_.contains(['!', '+', '-'], branch.transformer)) {
          fieldPrefix = branch.transformer;
        }

        fieldQuery += (fieldPrefix + branch.field + ':');
      }

      fieldQuery += term;

      return sentence += fieldQuery;
    }
  };

  this.unparse = function (query) {
    query.queryString = this.unparseQueryTree(query.queryTree);
    return query.queryString;
  };

  this.unparseQueryTree = function (queryTree) {
    var queryString = '';

    if (queryTree.left) {
      queryString = unparseNode(queryTree, 0, '');
    }

    return queryString;
  };

  function printTreeField(field) {
    if (field.fieldType === 'date-range') {
      cleanUpDateRangeField(field);
    }
    var transformedField = transformField(field);
    return transformedField.field + printTerm(transformedField);
  }

  /**
   * @description
   * Unparse a grouped field information tree to a query string
   *
   * @param   {object}  groupedTree     A tree structure with field groups
   * @return  {string}  A query string
   */
  this.unparseGroupedTree = function (groupedTree) {
    var root = groupedTree;
    var queryString = '';

    _.forEach(root.nodes, function (node, nodeIndex) {
      var nodeString = '';
      if (node.type === 'group') {
        var group = node;

        _.forEach(group.nodes, function (field, fieldIndex) {

          // check if the field is actually a sub group
          if (field.type === 'group') {

            var subGroup = field,
                subGroupString = ' ';

            if (subGroup.nodes.length === 1) {
              var singleField = subGroup.nodes[0];
              subGroupString += subGroup.operator + ' ' + printTreeField(singleField);
            } else {
              subGroupString += subGroup.operator + ' (';
              _.forEach(subGroup.nodes, function (field, fieldIndex) {
                if (fieldIndex) {
                  subGroupString += ' OR ';
                }
                subGroupString += printTreeField(field);
              });
              subGroupString += ')';
            }

            nodeString += subGroupString;
          } else {
            if (fieldIndex) {
              nodeString += ' ' + node.operator + ' ';
            }

            nodeString += printTreeField(field);

            var nextIndex = fieldIndex + 1;
            if (fieldIndex && nextIndex < group.nodes.length && group.nodes[nextIndex].type === 'group') {
              nodeString = '(' + nodeString + ')';
            }
          }
        });

        if (root.nodes.length > 1 && group.nodes.length > 1) {
          nodeString = '(' + nodeString + ')';
        }
      } else {
        console.log('Expecting a group but found: ' + node.type);
      }

      // do not prepend the first node with an operator
      if (nodeIndex || node.excluded) {
        var operator = node.excluded ? 'NOT' : 'OR';
        queryString += ' ' + operator + ' ';
      }
      queryString += nodeString;
    });

    return queryString;
  };

  function cleanUpDateRangeField(field) {
    if (field.transformer === '=' && moment(field.lowerBound).isValid()) {
      field.lowerBound = moment(field.lowerBound).startOf('day').toDate();
      field.upperBound = moment(field.lowerBound).endOf('day').toDate();
    }

    if (field.transformer === '><') {
      if (moment(field.lowerBound).isValid()) {
        field.lowerBound = moment(field.lowerBound).startOf('day').toDate();
      } else {
        field.lowerBound = '*';
      }

      if (moment(field.upperBound).isValid()) {
        field.upperBound = moment(field.upperBound).endOf('day').toDate();
      } else {
        field.upperBound = '*';
      }
    }

    if (field.transformer === '<') {
      if (moment(field.upperBound).isValid()) {
        field.upperBound = moment(field.upperBound).endOf('day').toDate();
      } else {
        field.upperBound = moment().endOf('day').toDate();
      }
    }

    if (field.transformer === '>') {
      if (moment(field.lowerBound).isValid()) {
        field.lowerBound = moment(field.lowerBound).startOf('day').toDate();
      } else {
        field.lowerBound = moment().startOf('day').toDate();
      }
    }
  }

  function transformField(originalField) {
    var field = _.clone(originalField);
    var isFieldImplicit = field.field === implicitToken;
    var fieldOperator = '';

    switch (field.transformer) {
      case '!':
        fieldOperator = '!';
        break;
      case '-':
        fieldOperator = '-';
        break;
      case '<':
        field.lowerBound = '*';
        break;
      case '>':
        field.upperBound = '*';
        break;
      case '=':
        if (field.fieldType !== 'date-range') {
          field.upperBound = undefined;
          field.lowerBound = undefined;
        }
        break;
    }

    field.field = fieldOperator + (isFieldImplicit ? '' : field.field + ':');

    return field;
  }

  /**
   * @description
   * Generate a grouped field information tree from a query tree
   * The query tree should not nest different operators deeper than 2 levels.
   * Modifiers will be ignored.
   *
   * @param   {object}  queryTree   - The queryTree to get information from
   *
   * @return  {object}              - A grouped field information tree
   */

  this.groupQueryTree = function (queryTree) {
    var groupedFieldTree = {
      type: 'root',
      nodes: [],
      operator: queryTree.operator || 'OR'
    };

    // If the query tree of an empty search is used, add a default field and group
    if (!queryTree.left) {
      var group = {
        type: 'field',
        operator: 'OR',
        nodes: [
          {
            field: 'name.\\*',
            name: 'title',
            term: '',
            fieldType: 'tokenized-string',
            transformer: '+'
          }
        ]
      };
      groupedFieldTree.nodes.push(group);
    } else {
      this.groupNode(queryTree, groupedFieldTree);
      this.cleanUpGroupedFieldTree(groupedFieldTree);
    }

    return groupedFieldTree;
  };

  /**
   * @description
   * Clean up a field tree after grouping.
   * Used by groupQueryTree to cleanse a freshly grouped tree.
   *
   * @param {object} groupedFieldTree
   */
  this.cleanUpGroupedFieldTree = function (groupedFieldTree) {
    _.forEach(groupedFieldTree.nodes, function (fieldGroup) {
      // This property is just used to track implicit fields and can be removed when switching groups.
      delete fieldGroup.implicitField;

      // Switch the type of the node to field instead of group if it only contains one field.
      if (fieldGroup.nodes && fieldGroup.nodes.length === 1) {
        fieldGroup.type = 'field';
      }

      // Replace any remaining implicitly declared operators with OR.
      // Assuming the following term grouping syntax was used "field:(term1 term2)".
      if (fieldGroup.operator === implicitToken) {
        fieldGroup.operator = 'OR';
      }

      // add field-query type and map options for term and choice fields
      _.forEach(fieldGroup.nodes, function (field) {

        // Find the field-query field type
        var fieldType = _.find(queryFields, function (fieldType) {
          return fieldType.name === field.field;
        });

        // Set the type and map options depending on field type
        if (fieldType) {
          field.fieldType = fieldType.type;

          // terms should be matched to their domain and used as the field-query field
          // if no matching taxonomy term is found the query-field should be removed
          if (fieldType.type === 'term') {
            var taxonomyTerm = _.find(taxonomyTerms, function (term) {
              return term.label.toUpperCase() === field.term.toUpperCase();
            });

            if (taxonomyTerm) {
              var domainFieldName = 'category_' + taxonomyTerm.domain + '_name';
              field.field = domainFieldName;
              field.term = taxonomyTerm.label;
            } else {
              field.invalid = true;
            }
          }

          // Look up options for choice field-query
          if (fieldType.type === 'choice') {
            var option = _.find(fieldType.options, function (option) {
              return option === field.term.toUpperCase();
            });

            if (option) {
              field.term = option;
            } else {
              field.invalid = true;
            }
          }

          // Make sure boolean field-query values are either true or false
          if (fieldType.type === 'check') {
            var trueValue = fieldType.name,
                falseValue = '(!' + fieldType.name + ')';

            if (!(field.term === trueValue || field.term === falseValue)) {
              field.invalid = true;
            }
          }

          if (fieldType.type === 'tokenized-string') {
            if (!field.transformer || field.transformer === '=') {
              field.transformer = '+';
            }

            if (field.transformer === '!') {
              field.transformer = '-';
            }
          }

          if (fieldType.type === 'string') {
            if (!field.transformer || field.transformer === '+') {
              field.transformer = '=';
            }

            if (field.transformer === '-') {
              field.transformer = '!';
            }
          }

          // Numbers can be a single or ranged term
          // The editor only handles ranges that have one of the boundaries set to infinity
          if (fieldType.type === 'number') {
            if (field.term) {
              field.transformer = '=';
            } else {
              if (field.upperBound && field.lowerBound === '*') {
                field.transformer = '<';
              } else if (field.lowerBound && field.upperBound === '*') {
                field.transformer = '>';
              } else if (field.lowerBound && field.upperBound) {
                field.transformer = '><';
                field.lowerBound = field.lowerBound;
                field.upperBound = field.upperBound;
              } else {
                field.transformer = '=';
                field.term = field.lowerBound || field.upperBound;
                field.lowerBound = undefined;
                field.upperBound = undefined;
              }
            }
          }

          if (fieldType.type === 'date-range') {
            var startDate = moment(field.lowerBound),
                endDate = moment(field.upperBound);

            if (startDate.isValid() && endDate.isValid()) {
              if (startDate.isSame(endDate, 'day')) {
                field.transformer = '=';
              } else {
                field.transformer = '><';
              }
            } else {
              if (!startDate.isValid() && endDate.isValid()) {
                field.transformer = '<';
              }

              if (!endDate.isValid() && startDate.isValid()) {
                field.transformer = '>';
              }
            }
          }
        }

      });
    });
  };

  /**
   * @description
   * Group a node in a query tree branch.
   * You should not need to call this method directly, use groupQueryTree instead.
   *
   * @param {object}  branch        - The branch of a query tree
   * @param {object}  fieldTree     - The field tree that will be returned
   * @param {object}  [fieldGroup]  - Keeps track of the current field group
   */
  this.groupNode = function (branch, fieldTree, fieldGroup, rootOperator) {
    // if the operator is implicit, you're dealing with grouped terms eg: field:(term1 term2)
    if (branch.operator === implicitToken) {
      branch.operator = 'OR';
    }
    if (!fieldGroup || branch.operator && (branch.operator !== fieldGroup.operator)) {
      var newFieldGroup = {
        type: 'group',
        operator: branch.operator || 'OR',
        nodes: []
      };

      if (rootOperator === 'NOT') {
        newFieldGroup.excluded = true;
      }

      fieldTree.nodes.push(newFieldGroup);
      fieldGroup = newFieldGroup;
    }

    // Track the last used field name to apply to implicitly defined terms
    if (branch.field && branch.field !== implicitToken) {
      fieldGroup.implicitField = branch.field;
    }

    if (branch.term || (branch.lowerBound && branch.upperBound)) {
      var field = branch.field;

      // Handle implicit field names by using the last used field name
      if (field === implicitToken) {
        if (fieldGroup.implicitField) {
          field = fieldGroup.implicitField;
        } else {
          // throw 'Field name is implicit and not defined elsewhere.';
        }
      }

      fieldGroup.nodes.push(makeField(branch, field));
    }

    if (branch.left) {
      this.groupNode(branch.left, fieldTree, fieldGroup);
      if (branch.right) {
        var passFieldGroup = branch.operator !== 'NOT' ? fieldGroup : undefined;
        this.groupNode(branch.right, fieldTree, passFieldGroup, branch.operator);
      }
    }

  };

  /**
   * @description
   * Generate a field object that's used to render the query editor fields.
   *
   * @param {object} node The node with all the necessary information
   * @return {object} A field object used to render the query editor
   */
  function makeField(node, fieldName) {
    var fieldType = _.find(queryFields, function (type) {
          return type.name === node.field;
        }),
        field = {
          field: fieldName || node.field,
          fieldType: fieldType || 'string',
          transformer: node.transformer || '='
        };

    if (node.lowerBound || node.upperBound) {
      field.lowerBound = node.lowerBound || undefined;
      field.upperBound = node.upperBound || undefined;
      field.inclusive = node.inclusive || true;
    } else {
      field.term = node.term || undefined;
    }

    return field;
  }
}
LuceneQueryBuilder.$inject = ["LuceneQueryParser", "QueryTreeValidator", "QueryTreeTranslator", "queryFields", "taxonomyTerms"];
})();

// Source: src/search/services/query-field-translations.constant.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.queryFieldTranslations
 * @description
 * # queryFieldTranslations
 * Value in the udb.search.
 */
angular
  .module('udb.search')
  .constant('queryFieldTranslations', {
    sapi2: {
      'TYPE' : 'type',
      'CDBID' : 'cdbid',
      'LOCATION_ID' : 'location_id',
      'ORGANISER_ID' : 'organiser_id',
      'TITLE' : 'title',
      'KEYWORDS' : 'keywords',
      'CITY' : 'city',
      'ORGANISER_KEYWORDS': 'organiser_keywords',
      'ZIPCODE' : 'zipcode',
      'COUNTRY' : 'country',
      'CATEGORY_NAME' : 'category_name',
      'AGEFROM' : 'agefrom',
      'DETAIL_LANG' : 'detail_lang',
      'PRICE' : 'price',
      'STARTDATE' : 'startdate',
      'ENDDATE' : 'enddate',
      'ORGANISER_LABEL' : 'organiser_label',
      'LOCATION_NAME' : 'location_name',
      'LOCATION_LABELS' : 'location_labels',
      'EXTERNALID' : 'externalid',
      'LASTUPDATED' : 'lastupdated',
      'CREATIONDATE' : 'creationdate',
      'CREATEDBY' : 'createdby',
      'PERMANENT' : 'permanent',
      'CATEGORY_EVENTTYPE_NAME' : 'category_eventtype_name',
      'LOCATIONTYPE' : 'locationtype',
      'OFFERTYPE' : 'offertype',
      'CATEGORY_THEME_NAME' : 'category_theme_name',
      'CATEGORY_FACILITY_NAME' : 'category_facility_name',
      'CATEGORY_TARGETAUDIENCE_NAME' : 'category_targetaudience_name',
      'CATEGORY_FLANDERSREGION_NAME' : 'category_flandersregion_name',
      'AVAILABLEFROM' : 'availablefrom'
    },
    en: {
      'TEXT': 'text',
      'KEYWORDS' : 'label',
      'PHYSICAL_GIS' : 'geo',
      'CATEGORY_NAME' : 'category',
      'DETAIL_LANG' : 'translation',
      'ORGANISER_LABEL' : 'organiser',
      'LOCATION_LABEL' : 'location',
      'CREATIONDATE' : 'created',
      'CATEGORY_EVENTTYPE_NAME' : 'eventtype',
      'LOCATIONTYPE' : 'locationtype',
      'OFFERTYPE' : 'offertype',
      'CATEGORY_THEME_NAME' : 'theme',
      'CATEGORY_FACILITY_NAME' : 'facility',
      'CATEGORY_TARGETAUDIENCE_NAME' : 'targetaudience',
      'CATEGORY_FLANDERSREGION_NAME' : 'region',
      'AVAILABLEFROM' : 'available',
      'LOCATION_ID' : 'locationid',
      'ORGANISER_ID' : 'organizationid',
      'DATE' : 'date'
    },
    fr: {
      'LOCATION_LABEL': 'location',
      'TITLE': 'titre'
    },
    nl: {
      'TYPE' : 'type',
      'TEXT': 'tekst',
      'LOCATION_ID' : 'locatieid',
      'ORGANISER_ID' : 'organisatieid',
      'TITLE' : 'titel',
      'KEYWORDS' : 'label',
      'CITY' : 'stad',
      'ORGANISER_KEYWORDS': 'organisatielabel',
      'ZIPCODE' : 'postcode',
      'COUNTRY' : 'land',
      'CATEGORY_NAME' : 'categorie',
      'AGEFROM' : 'leeftijd',
      'DETAIL_LANG' : 'vertaling',
      'PRICE' : 'prijs',
      'DATE' : 'datum',
      'STARTDATE' : 'startdatum',
      'ENDDATE' : 'einddatum',
      'ORGANISER_LABEL' : 'organisatienaam',
      'LOCATION_LABEL' : 'locatienaam',
      'EXTERNALID' : 'externalid',
      'LASTUPDATED' : 'laatst_aangepast',
      'CREATIONDATE' : 'gecreëerd',
      'CREATEDBY' : 'gecreëerd_door',
      'PERMANENT' : 'permanent',
      'CATEGORY_EVENTTYPE_NAME' : 'type',
      'LOCATIONTYPE' : 'locatietype',
      'OFFERTYPE' : 'aanbodtype',
      'CATEGORY_THEME_NAME' : 'thema',
      'CATEGORY_FACILITY_NAME' : 'voorzieningen',
      'CATEGORY_TARGETAUDIENCE_NAME' : 'doelgroep',
      'CATEGORY_FLANDERSREGION_NAME' : 'gemeente',
      'AVAILABLEFROM' : 'datum_beschikbaar'
    }
  });
})();

// Source: src/search/services/query-fields.value.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.queryFields
 * @description
 * Query field types:
 * - string
 * - string
 * - choice
 * - check
 * - date-range
 * - term
 *
 * When displayed in the editor, the first occurrence of a group name will determine its order in relation to the other
 * groups.
 */
angular
  .module('udb.search')
  .value('queryFields', [
    {name: 'cdbid', field:'id', type: 'string', group: 'what', editable: true},
    {name: 'offertype', field:'_type', type: 'choice', group: 'what', editable: true, options: ['event', 'place']},
    {name: 'keywords', field: 'labels', type: 'string', group: 'what', editable: true},
    {name: 'title', field: 'name.\\*', type: 'tokenized-string', group: 'what', editable: true},
    {name: 'category_eventtype_name', field:'terms.id', type: 'term', group: 'what', editable: true},
    {name: 'locationtype', field:'terms.id', type: 'term', group: 'what', editable: true},
    {name: 'category_theme_name', field:'terms.id', type: 'term', group: 'what', editable: true},
    {name: 'text', field:'<implicit>', type: 'tokenized-string', group: 'what', editable: true},

    {name: 'city', field:'address.\\*.addressLocality', type: 'string', group:'where', editable: true},
    {name: 'zipcode', field:'address.\\*.postalCode', type: 'string', group:'where', editable: true},
    {name: 'location_id', field:'location.id', type: 'string', group:'where', editable: true},
    {name: 'country', field: 'address.\\*.addressCountry', type: 'choice', group:'where', editable: false, options: ['AD', 'AE', 'AF', 'AG', 'AI', 'AL', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AW', 'AX', 'AZ', 'BA', 'BB', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BL', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS', 'BT', 'BV', 'BW', 'BY', 'BZ', 'CA', 'CC', 'CD', 'CF', 'CG', 'CH', 'CI', 'CK', 'CL', 'CM', 'CN', 'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ', 'DE', 'DJ', 'DK', 'DM', 'DO', 'DZ', 'EC', 'EE', 'EG', 'EH', 'ER', 'ES', 'ET', 'FI', 'FJ', 'FK', 'FM', 'FO', 'FR', 'GA', 'GB', 'GD', 'GE', 'GF', 'GG', 'GH', 'GI', 'GL', 'GM', 'GN', 'GP', 'GQ', 'GR', 'GS', 'GT', 'GU', 'GW', 'GY', 'HK', 'HM', 'HN', 'HR', 'HT', 'HU', 'ID', 'IE', 'IL', 'IM', 'IN', 'IO', 'IQ', 'IR', 'IS', 'IT', 'JE', 'JM', 'JO', 'JP', 'KE', 'KG', 'KH', 'KI', 'KM', 'KN', 'KP', 'KR', 'KW', 'KY', 'KZ', 'LA', 'LB', 'LC', 'LI', 'LK', 'LR', 'LS', 'LT', 'LU', 'LV', 'LY', 'MA', 'MC', 'MD', 'ME', 'MF', 'MG', 'MH', 'MK', 'ML', 'MM', 'MN', 'MO', 'MP', 'MQ', 'MR', 'MS', 'MT', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ', 'NA', 'NC', 'NE', 'NF', 'NG', 'NI', 'NL', 'NO', 'NP', 'NR', 'NU', 'NZ', 'OM', 'PA', 'PE', 'PF', 'PG', 'PH', 'PK', 'PL', 'PM', 'PN', 'PR', 'PS', 'PT', 'PW', 'PY', 'QA', 'RE', 'RO', 'RS', 'RU', 'RW', 'SA', 'SB', 'SC', 'SD', 'SE', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SR', 'SS', 'ST', 'SV', 'SX', 'SY', 'SZ', 'TC', 'TD', 'TF', 'TG', 'TH', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TR', 'TT', 'TV', 'TW', 'TZ', 'UA', 'UG', 'UM', 'US', 'UY', 'UZ', 'VA', 'VC', 'VE', 'VG', 'VI', 'VN', 'VU', 'WF', 'WS', 'YE', 'YT', 'ZA', 'ZM']},
    {name: 'location_name', field: 'location.name.\\*', type: 'tokenized-string', group:'where', editable: true},
    {name: 'location_labels', field: 'location.labels', type: 'string', group:'where', editable: true},
    {name: 'nisRegions', field:'regions', type: 'termNis' , group:'where', editable: true},

    {name: 'date', field:'dateRange', type: 'date-range', group:'when', editable: true},
    {name: 'permanent', field:'calendarType', type:'check', group:'when', editable: true},

    {name: 'lastupdated', field: 'modified', type: 'date-range', group:'input-information', editable: true},
    {name: 'creationdate', field: 'created', type: 'date-range', group:'input-information', editable: true},
    {name: 'createdby', field: 'creator', type: 'string', group:'input-information', editable: true},
    {name: 'availablefrom', field: 'availableRange', type: 'date-range', group:'input-information', editable: true},

    {name: 'detail_lang', field: 'languages', type: 'choice', group:'translations', editable: true, options: ['nl', 'fr', 'en', 'de']},

    {name: 'organiser_keywords', field: 'organizer.labels', type: 'string', group: 'other', editable: true},
    {name: 'organiser_id', field: 'organizer.id', type: 'string', group: 'other', editable: true},
    {name: 'agefrom', field:'typicalAgeRange', type: 'number', group: 'other', editable: true},
    {name: 'attendance_mode', field:'attendanceMode', type: 'choice', group: 'other', editable: true, options: ['online', 'offline', 'mixed']},
    {name: 'price', field: 'price', type: 'number' , group: 'other', editable: true},
    {name: 'status', field: 'status', type: 'choice', group: 'other', editable: true, options: ['Available', 'Unavailable', 'TemporarilyUnavailable']},
    {name: 'booking_availability', field: 'bookingAvailability', type: 'choice', group: 'other', editable: true, options: ['available', 'unavailable']},
    {name: 'organiser_label', field: 'organizer.name.\\*', type: 'tokenized-string', group: 'other', editable: true},
    {name: 'completeness', field: 'completeness', type: 'number' , group: 'other', editable: true},
    {name: 'category_facility_name', field:'terms.id', type: 'term', group: 'other', editable: true},
    {name: 'category_targetaudience_name', field: 'audienceType', type: 'choice', group: 'other', editable: true, options: ['everyone', 'members', 'education']},

    // The following fields are supported but not named and do not show up in the builder
    // https://github.com/cultuurnet/udb3-search-docs/blob/master/advanced-queries.md#supported-fields
    {field: 'calendarType', type: 'string'},
    {field: 'workflowStatus', type: 'choice', options: ['DRAFT', 'READY_FOR_VALIDATION', 'APPROVED', 'REJECTED', 'DELETED']},
    {field: 'name.nl', type: 'tokenized-string'},
    {field: 'name.fr', type: 'tokenized-string'},
    {field: 'name.de', type: 'tokenized-string'},
    {field: 'name.en', type: 'tokenized-string'},
    {field: 'description.nl', type: 'tokenized-string'},
    {field: 'description.fr', type: 'tokenized-string'},
    {field: 'description.de', type: 'tokenized-string'},
    {field: 'description.en', type: 'tokenized-string'},
    {field: 'terms.label', type: 'string'},
    {field: 'mediaObjectsCount', type: 'number'},
    {field: 'videosCount', type: 'number'},
    {field: 'address.\\*.streetAddress', type: 'string'},
    {field: 'location.id', type: 'string'},
    {field: 'location.name.nl', type: 'tokenized-string'},
    {field: 'location.name.fr', type: 'tokenized-string'},
    {field: 'location.name.de', type: 'tokenized-string'},
    {field: 'location.name.en', type: 'tokenized-string'},
    {field: 'location.terms.id', type: 'string'},
    {field: 'organizer.id', type: 'string'},
    {field: 'organizer.name.nl', type: 'tokenized-string'},
    {field: 'organizer.name.fr', type: 'tokenized-string'},
    {field: 'organizer.name.de', type: 'tokenized-string'},
    {field: 'organizer.name.en', type: 'tokenized-string'},
    {field: 'allAges', type: 'string'},
    {field: 'contributors', type: 'string'},

    // Start- and end-date have been dropped in favor of a single date field. Keep these around to map SAPI2 translations.
    {name: 'startdate', field:'dateRange', type: 'date-range'},
    {name: 'enddate', field:'dateRange', type: 'date-range'}
  ]);
})();

// Source: src/search/services/query-tree-translator.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.QueryTreeTranslator
 * @description
 * # QueryTreeTranslator
 * Service in the udb.search.
 */
angular
  .module('udb.search')
  .service('QueryTreeTranslator', QueryTreeTranslator);

/* @ngInject */
function QueryTreeTranslator(queryFieldTranslations, queryFields) {
  /**
   * @param {string} field    - The field to translate.
   * @param {string} srcLang  - To source language to translate from.
   */
  var translateField = function (field, srcLang) {
    var translatableFieldName = _.findKey(queryFieldTranslations[srcLang], function (src) {
      return src === field;
    });

    var queryField = (undefined === translatableFieldName) ?
      undefined :
      _.find(queryFields, {name: translatableFieldName.toLowerCase()});

    return (undefined === queryField) ? field : queryField.field;
  };

  var translateNode = function (node, depth) {
    var left = node.left || false,
      right = node.right || false,
      nodes = [];

    if (left) {
      nodes.push(left);
    }
    if (right) {
      nodes.push(right);
    }

    for (var i = 0, len = nodes.length; i < len; i++) {
      var iNode = nodes[i];
      if (typeof iNode === 'object') {
        translateNode(iNode, depth + 1);
      }
    }

    if (node.field) {
      node.field = translateField(node.field, 'sapi2');
      node.field = translateField(node.field, 'en');
      node.field = translateField(node.field, 'nl');
    }

  };

  this.translateQueryTree = function (queryTree) {
    return translateNode(queryTree, 0);
  };
}
QueryTreeTranslator.$inject = ["queryFieldTranslations", "queryFields"];
})();

// Source: src/search/services/query-tree-validator.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.QueryTreeValidator
 * @description
 * # QueryTreeValidator
 * Service in the udb.search.
 */
angular.module('udb.search')
  .service('QueryTreeValidator', QueryTreeValidator);

/* @ngInject */
function QueryTreeValidator(queryFields) {

  var validFields = _.union(_.map(queryFields, 'field'), ['_exists_']),
      implicitToken = '<implicit>',
      validParentFields = _(validFields)
        .filter(function (field) {
          return field.indexOf('.') > 0;
        })
        .map(function (field) {
          var fields = field.split('.');
          fields.pop();
          return fields.join('.');
        })
        .value();

  var validateFields = function (current, depth, errors) {
    var left = current.left || false,
      right = current.right || false,
      nodes = [];

    if (left) {
      nodes.push(left);
    }
    if (right) {
      nodes.push(right);
    }

    for (var i = 0, len = nodes.length; i < len; i++) {
      var node = nodes[i];
      if (typeof node === 'object') {
        validateFields(node, depth + 1, errors);
      }
    }

    var queryField = current.field;
    if (typeof(queryField) !== 'undefined') {
      var field = _.trim(queryField, '.\\*');
      var fieldHasWildcard = queryField !== field;

      if (field !== null && field !== implicitToken) {
        var validFieldsToCheck = fieldHasWildcard ? validParentFields : validFields;
        if (!_.contains(validFieldsToCheck, field)) {
          errors.push(queryField + ' is not a valid search field');
        }
      }
    }
  };

  this.validate = function (queryTree, errors) {
    validateFields(queryTree, 0, errors);
  };

}
QueryTreeValidator.$inject = ["queryFields"];
})();

// Source: src/search/services/sapi2.field-type-transformers.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.sapi2FieldTypeTransformers
 * @description
 * # sapi2FieldTypeTransformers
 * Value in udb.search module.
 */
angular
  .module('udb.search')
  .value('sapi2FieldTypeTransformers', {
    'string': ['=', '!'],
    'tokenized-string': ['+', '-'],
    'choice': ['=', '!'],
    'term': ['=', '!'],
    'number': ['=', '<', '>'],
    'check': ['='],
    'date-range': ['=', '><', '<', '>']
  });
})();

// Source: src/search/services/sapi2.query-builder.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udbApp.sapi2QueryBuilder
 * @description
 * # sapi2QueryBuilder
 * Service in the udb.search.
 */
angular.module('udb.search')
  .service('sapi2QueryBuilder', QueryBuilder);

QueryBuilder.$inject = [
  'LuceneQueryParser',
  'sapi2QueryTreeValidator',
  'sapi2QueryTreeTranslator',
  'sapi2QueryFields',
  'taxonomyTerms'
];
function QueryBuilder(LuceneQueryParser, QueryTreeValidator, QueryTreeTranslator, queryFields, taxonomyTerms) {
  var implicitToken = '<implicit>';

  this.translate = function (query) {
    QueryTreeTranslator.translateQueryTree(query.queryTree);
  };

  this.validate = function (query) {
    QueryTreeValidator.validate(query.queryTree, query.errors);
  };

  this.isValid = function (query) {
    this.translate(query);
    this.validate(query);

    return query.errors.length === 0;
  };

  this.parseQueryString = function (query) {
    try {
      query.queryTree = LuceneQueryParser.parse(query.queryString);
    } catch (e) {
      query.errors.push(e.message);
    }

    return query.queryTree;
  };

  /**
   *
   * @param {string} queryString
   */
  this.createQuery = function (queryString) {
    var query = {
      originalQueryString: queryString,
      queryString: queryString,
      queryTree: {},
      errors: []
    };

    this.parseQueryString(query);

    return query;
  };

  var printTerm = function (node) {
    var term = node.term,
      isRangeExpression = (node.lowerBound || node.upperBound);

    if (isRangeExpression) {
      var min = node.lowerBound || '*',
        max = node.upperBound || '*',
        inclusive = node.inclusive;

      if (min instanceof Date) {
        min = min.toISOString();
      }
      if (max instanceof Date) {
        max = max.toISOString();
      }

      term = min + ' TO ' + max;

      if (inclusive) {
        term = '[' + term + ']';
      } else {
        term = '{' + term + '}';
      }
    } else {
      // if the term is a phrase surround it with double quotes
      if (node.quoted || term.indexOf(' ') !== -1) {
        term = '"' + term + '"';
      }

      // check for fuzzy search modifier
      if (node.similarity) {
        term += ('~' + node.similarity);
      }

      // check for proximity modifier
      if (node.proximity) {
        term += ('~' + node.proximity);
      }

      // check for prefix modifier
      if (node.prefix) {
        term = node.prefix + term;
      }

      // check for boost modifier
      if (node.boost) {
        term += ('^' + node.boost);
      }
    }

    return term;
  };

  var unparseNode = function (branch, depth, sentence) {

    if (branch.left) {
      var result,
        operator = (branch.operator === implicitToken) ? ' ' : (' ' + branch.operator + ' ');

      if (branch.right) {
        result = unparseNode(branch.left, depth + 1, sentence);
        result += operator;
        result += unparseNode(branch.right, depth + 1, sentence);

        if (depth > 0) {
          result = '(' + result + ')';
        }

        if (branch.field && branch.field !== implicitToken) {
          result = (branch.field + ':') + result;
        }

      } else {
        result = unparseNode(branch.left, depth + 1, sentence);
      }

      return result;

    } else {
      var fieldQuery = '',
        term = printTerm(branch);

      if (branch.field !== implicitToken && branch.field !== null) {
        var fieldPrefix = '';

        if (_.contains(['!', '+', '-'], branch.transformer)) {
          fieldPrefix = branch.transformer;
        }

        fieldQuery += (fieldPrefix + branch.field + ':');
      }

      fieldQuery += term;

      return sentence += fieldQuery;
    }

    if (depth === 0) {
      return sentence;
    }
  };

  this.unparse = function (query) {
    query.queryString = this.unparseQueryTree(query.queryTree);
    return query.queryString;
  };

  this.unparseQueryTree = function (queryTree) {
    var queryString = '';

    if (queryTree.left) {
      queryString = unparseNode(queryTree, 0, '');
    }

    return queryString;
  };

  function printTreeField(field) {
    if (field.fieldType === 'date-range') {
      cleanUpDateRangeField(field);
    }
    var transformedField = transformField(field);
    return transformedField.field + ':' + printTerm(transformedField);
  }

  /**
   * @description
   * Unparse a grouped field information tree to a query string
   *
   * @param   {object}  groupedTree     A tree structure with field groups
   * @return  {string}  A query string
   */
  this.unparseGroupedTree = function (groupedTree) {
    var root = groupedTree;
    var queryString = '';

    _.forEach(root.nodes, function (node, nodeIndex) {
      var nodeString = '';
      if (node.type === 'group') {
        var group = node;

        _.forEach(group.nodes, function (field, fieldIndex) {

          // check if the field is actually a sub group
          if (field.type === 'group') {

            var subGroup = field,
              subGroupString = ' ';

            if (subGroup.nodes.length === 1) {
              var singleField = subGroup.nodes[0];
              subGroupString += subGroup.operator + ' ' + printTreeField(singleField);
            } else {
              subGroupString += subGroup.operator + ' (';
              _.forEach(subGroup.nodes, function (field, fieldIndex) {
                if (fieldIndex) {
                  subGroupString += ' OR ';
                }
                subGroupString += printTreeField(field);
              });
              subGroupString += ')';
            }

            nodeString += subGroupString;
          } else {
            if (fieldIndex) {
              nodeString += ' ' + node.operator + ' ';
            }

            nodeString += printTreeField(field);

            var nextIndex = fieldIndex + 1;
            if (fieldIndex && nextIndex < group.nodes.length && group.nodes[nextIndex].type === 'group') {
              nodeString = '(' + nodeString + ')';
            }
          }
        });

        if (root.nodes.length > 1 && group.nodes.length > 1) {
          nodeString = '(' + nodeString + ')';
        }
      } else {
        console.log('Expecting a group but found: ' + node.type);
      }

      // do not prepend the first node with an operator
      if (nodeIndex || node.excluded) {
        var operator = node.excluded ? 'NOT' : 'OR';
        queryString += ' ' + operator + ' ';
      }
      queryString += nodeString;
    });

    return queryString;
  };

  function cleanUpDateRangeField(field) {
    if (field.transformer === '=' && moment(field.lowerBound).isValid()) {
      field.lowerBound = moment(field.lowerBound).startOf('day').toDate();
      field.upperBound = moment(field.lowerBound).endOf('day').toDate();
    }

    if (field.transformer === '><') {
      if (moment(field.lowerBound).isValid()) {
        field.lowerBound = moment(field.lowerBound).startOf('day').toDate();
      } else {
        field.lowerBound = '*';
      }

      if (moment(field.upperBound).isValid()) {
        field.upperBound = moment(field.upperBound).endOf('day').toDate();
      } else {
        field.upperBound = '*';
      }
    }

    if (field.transformer === '<') {
      if (moment(field.upperBound).isValid()) {
        field.upperBound = moment(field.upperBound).endOf('day').toDate();
      } else {
        field.upperBound = moment().endOf('day').toDate();
      }
    }

    if (field.transformer === '>') {
      if (moment(field.lowerBound).isValid()) {
        field.lowerBound = moment(field.lowerBound).startOf('day').toDate();
      } else {
        field.lowerBound = moment().startOf('day').toDate();
      }
    }
  }

  function transformField(originalField) {
    var field = _.clone(originalField);

    switch (field.transformer) {
      case '!':
        field.field = '!' + field.field;
        break;
      case '-':
        field.field = '-' + field.field;
        break;
      case '<':
        field.lowerBound = '*';
        break;
      case '>':
        field.upperBound = '*';
        break;
      case '=':
        if (field.fieldType !== 'date-range') {
          field.upperBound = undefined;
          field.lowerBound = undefined;
        }
        break;
    }

    return field;
  }

  /**
   * @description
   * Generate a grouped field information tree from a query tree
   * The query tree should not nest different operators deeper than 2 levels.
   * Modifiers will be ignored.
   *
   * @param   {object}  queryTree   - The queryTree to get information from
   *
   * @return  {object}              - A grouped field information tree
   */
  this.groupQueryTree = function (queryTree) {
    var groupedFieldTree = {
      type: 'root',
      nodes: [],
      operator: queryTree.operator || 'OR'
    };

    // If the query tree of an empty search is used, add a default field and group
    if (!queryTree.left) {
      var group = {
        type: 'field',
        operator: 'OR',
        nodes: [
          {
            field: 'title',
            term: '',
            fieldType: 'tokenized-string',
            transformer: '+'
          }
        ]
      };
      groupedFieldTree.nodes.push(group);
    } else {
      this.groupNode(queryTree, groupedFieldTree);
      this.cleanUpGroupedFieldTree(groupedFieldTree);
    }

    return groupedFieldTree;
  };

  /**
   * @description
   * Clean up a field tree after grouping.
   * Used by groupQueryTree to cleanse a freshly grouped tree.
   *
   * @param {object} groupedFieldTree
   */
  this.cleanUpGroupedFieldTree = function (groupedFieldTree) {
    _.forEach(groupedFieldTree.nodes, function (fieldGroup) {
      // This property is just used to track implicit fields and can be removed when switching groups.
      delete fieldGroup.implicitField;

      // Switch the type of the node to field instead of group if it only contains one field.
      if (fieldGroup.nodes && fieldGroup.nodes.length === 1) {
        fieldGroup.type = 'field';
      }

      // Replace any remaining implicitly declared operators with OR.
      // Assuming the following term grouping syntax was used "field:(term1 term2)".
      if (fieldGroup.operator === implicitToken) {
        fieldGroup.operator = 'OR';
      }

      // add field-query type and map options for term and choice fields
      _.forEach(fieldGroup.nodes, function (field) {

        // Find the field-query field type
        var fieldType = _.find(queryFields, function (fieldType) {
          return fieldType.name === field.field;
        });

        // Set the type and map options depending on field type
        if (fieldType) {
          field.fieldType = fieldType.type;

          // terms should be matched to their domain and used as the field-query field
          // if no matching taxonomy term is found the query-field should be removed
          if (fieldType.type === 'term') {
            var taxonomyTerm = _.find(taxonomyTerms, function (term) {
              return term.label.toUpperCase() === field.term.toUpperCase();
            });

            if (taxonomyTerm) {
              var domainFieldName = 'category_' + taxonomyTerm.domain + '_name';
              field.field = domainFieldName;
              field.term = taxonomyTerm.label;
            } else {
              field.invalid = true;
            }
          }

          // Look up options for choice field-query
          if (fieldType.type === 'choice') {
            var option = _.find(fieldType.options, function (option) {
              return option === field.term.toUpperCase();
            });

            if (option) {
              field.term = option;
            } else {
              field.invalid = true;
            }
          }

          // Make sure boolean field-query values are either true or false
          if (fieldType.type === 'check') {
            if (_.contains(['TRUE', 'FALSE'], field.term.toUpperCase())) {
              field.term = field.term.toUpperCase();
            } else {
              field.invalid = true;
            }
          }

          if (fieldType.type === 'tokenized-string') {
            if (!field.transformer || field.transformer === '=') {
              field.transformer = '+';
            }

            if (field.transformer === '!') {
              field.transformer = '-';
            }
          }

          if (fieldType.type === 'string') {
            if (!field.transformer || field.transformer === '+') {
              field.transformer = '=';
            }

            if (field.transformer === '-') {
              field.transformer = '!';
            }
          }

          // Numbers can be a single or ranged term
          // The editor only handles ranges that have one of the boundaries set to infinity
          if (fieldType.type === 'number') {
            if (field.term) {
              field.transformer = '=';
            } else {
              if (field.upperBound && field.lowerBound === '*') {
                field.transformer = '<';
              } else if (field.lowerBound && field.upperBound === '*') {
                field.transformer = '>';
              } else {
                field.transformer = '=';
                field.term = field.lowerBound || field.upperBound;
                field.lowerBound = undefined;
                field.upperBound = undefined;
              }
            }
          }

          if (fieldType.type === 'date-range') {
            var startDate = moment(field.lowerBound),
              endDate = moment(field.upperBound);

            if (startDate.isValid() && endDate.isValid()) {
              if (startDate.isSame(endDate, 'day')) {
                field.transformer = '=';
              } else {
                field.transformer = '><';
              }
            } else {
              if (!startDate.isValid() && endDate.isValid()) {
                field.transformer = '<';
              }

              if (!endDate.isValid() && startDate.isValid()) {
                field.transformer = '>';
              }
            }
          }
        }

      });
    });
  };

  /**
   * @description
   * Group a node in a query tree branch.
   * You should not need to call this method directly, use groupQueryTree instead.
   *
   * @param {object}  branch        - The branch of a query tree
   * @param {object}  fieldTree     - The field tree that will be returned
   * @param {object}  [fieldGroup]  - Keeps track of the current field group
   */
  this.groupNode = function (branch, fieldTree, fieldGroup) {
    // if the operator is implicit, you're dealing with grouped terms eg: field:(term1 term2)
    if (branch.operator === implicitToken) {
      branch.operator = 'OR';
    }
    if (!fieldGroup || branch.operator && (branch.operator !== fieldGroup.operator)) {
      var newFieldGroup = {
        type: 'group',
        operator: branch.operator || 'OR',
        nodes: []
      };

      fieldTree.nodes.push(newFieldGroup);
      fieldGroup = newFieldGroup;
    }

    // Track the last used field name to apply to implicitly defined terms
    if (branch.field && branch.field !== implicitToken) {
      fieldGroup.implicitField = branch.field;
    }

    if (branch.term || (branch.lowerBound && branch.upperBound)) {
      var field = branch.field;

      // Handle implicit field names by using the last used field name
      if (field === implicitToken) {
        if (fieldGroup.implicitField) {
          field = fieldGroup.implicitField;
        } else {
          throw 'Field name is implicit and not defined elsewhere.';
        }
      }

      fieldGroup.nodes.push(makeField(branch, field));
    }

    if (branch.left) {
      this.groupNode(branch.left, fieldTree, fieldGroup);
      if (branch.right) {
        this.groupNode(branch.right, fieldTree, fieldGroup);
      }
    }
  };

  /**
   * @description
   * Generate a field object that's used to render the query editor fields.
   *
   * @param {object} node The node with all the necessary information
   * @return {object} A field object used to render the query editor
   */
  function makeField(node, fieldName) {
    var fieldType = _.find(queryFields, function (type) {
        return type.name === node.field;
      }),
      field = {
        field: fieldName || node.field,
        fieldType: fieldType || 'string',
        transformer: node.transformer || '='
      };

    if (node.lowerBound || node.upperBound) {
      field.lowerBound = node.lowerBound || undefined;
      field.upperBound = node.upperBound || undefined;
      field.inclusive = node.inclusive || true;
    } else {
      field.term = node.term || undefined;
    }

    return field;
  }
}
})();

// Source: src/search/services/sapi2.query-fields.value.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.sapi2QueryFields
 * @description
 * Query field types:
 * - string
 * - string
 * - choice
 * - check
 * - date-range
 * - term
 *
 * When displayed in the editor, the first occurrence of a group name will determine its order in relation to the other
 * groups.
 */
angular
  .module('udb.search')
  .value('sapi2QueryFields', [
    {name: 'cdbid', type: 'string', group: 'what', editable: true},
    {name: 'keywords', type: 'string', group: 'what', editable: true},
    {name: 'title', type: 'tokenized-string', group: 'what', editable: true},
    {name: 'category_eventtype_name', type: 'term', group: 'what', editable: true},
    {name: 'category_theme_name', type: 'term', group: 'what', editable: true},

    {name: 'city', type: 'string', group:'where', editable: true},
    {name: 'zipcode', type: 'string', group:'where', editable: true},
    {name: 'country', type: 'choice', group:'where', editable: false, options: ['AD', 'AE', 'AF', 'AG', 'AI', 'AL', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AW', 'AX', 'AZ', 'BA', 'BB', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BL', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS', 'BT', 'BV', 'BW', 'BY', 'BZ', 'CA', 'CC', 'CD', 'CF', 'CG', 'CH', 'CI', 'CK', 'CL', 'CM', 'CN', 'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ', 'DE', 'DJ', 'DK', 'DM', 'DO', 'DZ', 'EC', 'EE', 'EG', 'EH', 'ER', 'ES', 'ET', 'FI', 'FJ', 'FK', 'FM', 'FO', 'FR', 'GA', 'GB', 'GD', 'GE', 'GF', 'GG', 'GH', 'GI', 'GL', 'GM', 'GN', 'GP', 'GQ', 'GR', 'GS', 'GT', 'GU', 'GW', 'GY', 'HK', 'HM', 'HN', 'HR', 'HT', 'HU', 'ID', 'IE', 'IL', 'IM', 'IN', 'IO', 'IQ', 'IR', 'IS', 'IT', 'JE', 'JM', 'JO', 'JP', 'KE', 'KG', 'KH', 'KI', 'KM', 'KN', 'KP', 'KR', 'KW', 'KY', 'KZ', 'LA', 'LB', 'LC', 'LI', 'LK', 'LR', 'LS', 'LT', 'LU', 'LV', 'LY', 'MA', 'MC', 'MD', 'ME', 'MF', 'MG', 'MH', 'MK', 'ML', 'MM', 'MN', 'MO', 'MP', 'MQ', 'MR', 'MS', 'MT', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ', 'NA', 'NC', 'NE', 'NF', 'NG', 'NI', 'NL', 'NO', 'NP', 'NR', 'NU', 'NZ', 'OM', 'PA', 'PE', 'PF', 'PG', 'PH', 'PK', 'PL', 'PM', 'PN', 'PR', 'PS', 'PT', 'PW', 'PY', 'QA', 'RE', 'RO', 'RS', 'RU', 'RW', 'SA', 'SB', 'SC', 'SD', 'SE', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SR', 'SS', 'ST', 'SV', 'SX', 'SY', 'SZ', 'TC', 'TD', 'TF', 'TG', 'TH', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TR', 'TT', 'TV', 'TW', 'TZ', 'UA', 'UG', 'UM', 'US', 'UY', 'UZ', 'VA', 'VC', 'VE', 'VG', 'VI', 'VN', 'VU', 'WF', 'WS', 'YE', 'YT', 'ZA', 'ZM']},
    {name: 'location_name', type: 'tokenized-string', group:'where', editable: true},
    {name: 'location_labels', type: 'string', group:'where', editable: true},
    {name: 'category_flandersregion_name', type: 'term' , group:'where', editable: true},

    {name: 'startdate', type: 'date-range', group:'when', editable: true},
    {name: 'enddate', type: 'date-range', group:'when', editable: true},
    {name: 'permanent', type: 'check', group:'when', editable: true},

    {name: 'lastupdated', type: 'date-range', group:'input-information', editable: true},
    {name: 'lastupdatedby', type: 'string', group:'input-information', editable: true},
    {name: 'creationdate', type: 'date-range', group:'input-information', editable: true},
    {name: 'createdby', type: 'string', group:'input-information', editable: true},
    {name: 'availablefrom', type: 'date-range', group:'input-information', editable: true},

    {name: 'detail_lang', type: 'choice', group:'translations', editable: true, options: ['nl', 'fr', 'en', 'de']},

    {name: 'organiser_keywords', type: 'string', group: 'other', editable: true},
    {name: 'agefrom', type: 'number', group: 'other', editable: true},
    {name: 'price', type: 'number' , group: 'other', editable: true},
    {name: 'organiser_label', type: 'tokenized-string', group: 'other', editable: true},
    {name: 'category_facility_name', type: 'term', group: 'other', editable: true},
    {name: 'category_targetaudience_name', type: 'term', group: 'other', editable: true},
    {name: 'category_publicscope_name', type: 'term', group: 'other', editable: true},

    {name: 'like_count', type: 'number'},
    {name: 'recommend_count', type: 'number'},
    {name: 'attend_count', type: 'number'},
    {name: 'comment_count', type: 'number'},
    {name: 'category_name', type: 'term'},
    {name: 'externalid', type: 'string'},
    {name: 'private', type: 'check'},
    {name: 'physical_gis', type: 'string'}
  ]);
})();

// Source: src/search/services/sapi2.query-tree-translator.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.sapi2QueryTreeTranslator
 * @description
 * # QueryTreeTranslator
 * Service in the udb.search.
 */
angular
  .module('udb.search')
  .service('sapi2QueryTreeTranslator', QueryTreeTranslator);

/* @ngInject */
function QueryTreeTranslator(queryFieldTranslations) {

  var translations = queryFieldTranslations;

  /**
   * @param {string} field    - The field to translate.
   * @param {string} srcLang  - To source language to translate from.
   */
  var translateField = function (field, srcLang) {
    var translation = field,
      identifier = _.findKey(translations[srcLang], function (src) {
        return src === field;
      });

    if (identifier) {
      translation = identifier.toLowerCase();
    }

    return translation;
  };

  var translateNode = function (node, depth) {
    var left = node.left || false,
      right = node.right || false,
      nodes = [];

    if (left) {
      nodes.push(left);
    }
    if (right) {
      nodes.push(right);
    }

    for (var i = 0, len = nodes.length; i < len; i++) {
      var iNode = nodes[i];
      if (typeof iNode === 'object') {
        translateNode(iNode, depth + 1);
      }
    }

    if (node.field) {
      node.field = translateField(node.field, 'en');
      node.field = translateField(node.field, 'nl');
    }

  };

  this.translateQueryTree = function (queryTree) {
    return translateNode(queryTree, 0);
  };
}
QueryTreeTranslator.$inject = ["queryFieldTranslations"];
})();

// Source: src/search/services/sapi2.query-tree-validator.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.sapi2QueryTreeValidator
 * @description
 * # sapi2QueryTreeValidator
 * Service in the udb.search.
 */
angular.module('udb.search')
  .service('sapi2QueryTreeValidator', QueryTreeValidator);

QueryTreeValidator.$inject = ['sapi2QueryFields'];
function QueryTreeValidator(queryFields) {

  var validFieldNames = _.union(_.map(queryFields, 'name'), ['_exists_']),
    implicitToken = '<implicit>',
    validParentFieldNames = _(validFieldNames)
      .filter(function (fieldName) {
        return fieldName.indexOf('.') > 0;
      })
      .map(function (fieldName) {
        return fieldName.split('.')[0];
      })
      .value();

  var validateFields = function (current, depth, errors) {
    var left = current.left || false,
      right = current.right || false,
      nodes = [];

    if (left) {
      nodes.push(left);
    }
    if (right) {
      nodes.push(right);
    }

    for (var i = 0, len = nodes.length; i < len; i++) {
      var node = nodes[i];
      if (typeof node === 'object') {
        validateFields(node, depth + 1, errors);
      }
    }

    var field = current.field;
    if (typeof(field) !== 'undefined') {

      var fieldName = _.trim(field, '.\\*');
      var fieldHasWildcard = field !== fieldName;

      if (field !== null && field !== implicitToken) {
        var validFieldsToCheck = fieldHasWildcard ? validParentFieldNames : validFieldNames;
        if (!_.contains(validFieldsToCheck, fieldName)) {
          errors.push(field + ' is not a valid search field');
        }
      }
    }
  };

  this.validate = function (queryTree, errors) {
    validateFields(queryTree, 0, errors);
  };

}
})();

// Source: src/search/services/search-helper.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.searchHelper
 * @description
 * # searchHelper
 * Service in the udb.search.
 */
angular
  .module('udb.search')
  .service('searchHelper', SearchHelper);

/* @ngInject */
function SearchHelper(LuceneQueryBuilder, $rootScope) {
  var query = null;
  var queryTree = null;

  this.clearQueryTree = function () {
    queryTree = null;
  };

  /**
   *
   * @param {string} queryString
   * @param {boolean} forceUpdate
   *  Set to true to emit a "searchQueryChanged" even if the query has not changed.
   *  A possible use-case is navigating back to the search page and reloading the same query.
   */
  this.setQueryString = function (queryString, forceUpdate) {
    var newQuery = false;

    if (!query || query.queryString !== queryString) {
      newQuery = LuceneQueryBuilder.createQuery(queryString);
      LuceneQueryBuilder.isValid(newQuery);
      this.setQuery(newQuery);
      queryTree = null;
    }

    if (query && !newQuery && forceUpdate) {
      this.setQuery(query);
    }
  };

  this.setQueryTree = function (groupedQueryTree) {
    var queryString = LuceneQueryBuilder.unparseGroupedTree(groupedQueryTree);
    var newQuery = LuceneQueryBuilder.createQuery(queryString);
    LuceneQueryBuilder.isValid(newQuery);
    this.setQuery(newQuery);

    queryTree = groupedQueryTree;
  };

  this.setQuery = function (searchQuery) {
    query = searchQuery;
    $rootScope.$emit('searchQueryChanged', searchQuery);
  };

  this.getQuery = function () {
    return query;
  };

  this.getQueryTree = function () {
    return angular.copy(queryTree);
  };
}
SearchHelper.$inject = ["LuceneQueryBuilder", "$rootScope"];
})();

// Source: src/search/services/search-result-viewer.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.SearchResultViewer
 * @description
 * # SearchResultViewer
 * Search result viewer factory
 */
angular
  .module('udb.search')
  .factory('SearchResultViewer', SearchResultViewerFactory);

/* @ngInject */
function SearchResultViewerFactory($translate) {

  var SelectionState = {
    ALL: {'name': 'all', 'icon': 'fas fa-check-square'},
    NONE: {'name': 'none', 'icon': 'far fa-square'},
    SOME: {'name': 'some', 'icon': 'fas fa-minus-square'}
  };

  var identifyItem = function (event) {
    return event['@id'].split('/').pop();
  };

  /**
   * @class SearchResultViewer
   * @constructor
   * @param    {number}     pageSize        The number of items shown per page
   * @param    {number}     activePage
   *
   * @property {object[]}   events          A list of json-LD event objects
   * @property {number}     pageSize        The current page size
   * @property {number}     totalItems      The total items found
   * @property {number}     currentPage     The index of the current page without zeroing
   * @property {boolean}    loading         A flag to indicate the period between changing of the query and
   *                                        receiving of the results.
   * @property {object}     eventProperties A list of event properties that can be shown complementary
   * @property {array}      eventSpecifics  A list of specific event info that can be shown exclusively
   * @property {SelectionState} selectionState Enum that keeps the state of selected results
   */
  var SearchResultViewer = function (pageSize, activePage) {
    this.pageSize = pageSize || 30;
    this.events = [];
    this.totalItems = 0;
    this.currentPage = activePage || 1;
    this.loading = true;
    this.lastQuery = null;
    this.eventProperties = {
      description: {name: $translate.instant('search.description'), visible: false},
      labels: {name: $translate.instant('search.labels'), visible: false},
      image: {name: $translate.instant('search.picture'), visible: false}
    };
    this.eventSpecifics = [
      {id: 'input', name: $translate.instant('search.inputInformation')}
    ];
    this.activeSpecific = this.eventSpecifics[0];
    this.selectedOffers = [];
    this.selectionState = SelectionState.NONE;
    this.querySelected = false;
  };

  SearchResultViewer.prototype = {
    enableSpecifics: function (specifics) {
      this.eventSpecifics = _.uniq(_.union(this.eventSpecifics, specifics), 'id');
    },
    toggleSelection: function () {
      var state = this.selectionState;

      if (state === SelectionState.SOME || state === SelectionState.ALL) {
        this.deselectPageItems();
        if (this.querySelected) {
          this.deselectAll();
          this.querySelected = false;
        }
      } else {
        this.selectPageItems();
      }
    },
    selectQuery: function () {
      this.querySelected = true;
      this.selectPageItems();
    },
    updateSelectionState: function () {
      var selectedOffers = this.selectedOffers,
          selectedPageItems = _.filter(this.events, function (event) {
            return _.contains(selectedOffers, event);
          });

      if (selectedPageItems.length === this.pageSize) {
        this.selectionState = SelectionState.ALL;
      } else if (selectedPageItems.length > 0) {
        this.selectionState = SelectionState.SOME;
      } else {
        this.selectionState = SelectionState.NONE;
      }
    },
    toggleSelect: function (offer) {

      // Prevent toggling individual items when the whole query is selected
      if (this.querySelected) {
        return;
      }

      var foundOffer = _.find(this.selectedOffers, function (selectedOffer) {
        return selectedOffer['@id'] === offer['@id'];
      });
      if (!!foundOffer) {
        // remove offer from selectedOffers
        this.selectedOffers = _.filter(this.selectedOffers, function (selectedOffer) {
          return selectedOffer['@id'] !== offer['@id'];
        });
      } else {
        // add event to selectedOffers
        var foundEvent = _.find(this.events, function (event) {
          return event['@id'] === offer['@id'];
        });
        this.selectedOffers.push(foundEvent);
      }

      this.updateSelectionState();
    },
    deselectAll: function () {
      this.selectedOffers = [];
      this.selectionState = SelectionState.NONE;
    },
    deselectPageItems: function () {
      var selectedOffers = this.selectedOffers;
      _.forEach(this.events, function (event) {
        _.remove(selectedOffers, function (offer) {
          return offer['@id'] === event['@id'];
        });
      });

      this.selectionState = SelectionState.NONE;
    },
    selectPageItems: function () {
      var events = this.events,
          selectedOffers = this.selectedOffers;

      _.each(events, function (event) {
        selectedOffers.push(event);
      });

      this.selectedOffers = _.uniq(selectedOffers);
      this.selectionState = SelectionState.ALL;
    },
    isOfferSelected: function (offer) {
      return !!_.find(this.selectedOffers, function (selectedOffer) {
        return selectedOffer['@id'] === offer['@id'];
      });
    },
    isDifferentDate: function (startDate, endDate) {
      return new Date(startDate).toDateString() !== new Date(endDate).toDateString();
    },
    /**
     * @param {PagedCollection} pagedResults
     */
    setResults: function (pagedResults) {
      var viewer = this;

      viewer.pageSize = pagedResults.itemsPerPage || 30;
      viewer.events = pagedResults.member || [];
      viewer.totalItems = pagedResults.totalItems || 0;

      viewer.loading = false;
      if (this.querySelected) {
        this.selectPageItems();
      }
      this.updateSelectionState();
    },
    queryChanged: function (query) {
      this.loading = true;
      this.selectedOffers = [];
      this.querySelected = false;

      // prevent the initial search from resetting the active page
      if (this.lastQuery && this.lastQuery !== query) {
        this.currentPage = 1;
      }

      this.lastQuery = query;
    },
    activateSpecific: function (specific) {
      this.activeSpecific = specific;
    },
    /**
     * Checks if at least one of the event properties is visible
     * @return {boolean}
     */
    isShowingProperties: function () {
      var property = _.find(this.eventProperties, function (property) {
        return property.visible;
      });

      return !!property;
    }
  };

  return (SearchResultViewer);
}
SearchResultViewerFactory.$inject = ["$translate"];
})();

// Source: src/search/ui/event-translation-state.constant.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc constant
 * @name udb.search.EventTranslationState
 * @description
 * # EventTranslationState
 * Event translation state
 */
angular
  .module('udb.search')
  .constant(
  'EventTranslationState',
  /**
   * Enum for event translation states
   * @readonly
   * @enum {string}
   */
  {
    ALL: {'name': 'all', 'icon': 'fa-circle'},
    NONE: {'name': 'none', 'icon': 'fa-circle-o'},
    SOME: {'name': 'some', 'icon': 'fa-dot-circle-o'}
  }
);
})();

// Source: src/search/ui/event.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEvent
 * @description
 * # udbEvent
 */
angular
  .module('udb.search')
  .directive('udbEvent', udbEvent);

/* @ngInject */
function udbEvent() {
  var eventDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'eventCtrl',
    templateUrl: 'templates/event.directive.html'
  };

  return eventDirective;
}
})();

// Source: src/search/ui/offer.controller.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.controller:OfferController
 * @description
 * # OfferController
 */
angular
  .module('udb.search')
  .controller('OfferController', OfferController);

/* @ngInject */
function OfferController(
  udbApi,
  $scope,
  jsonLDLangFilter,
  EventTranslationState,
  offerTranslator,
  offerLabeller,
  $window,
  $q,
  appConfig,
  UdbEvent,
  $translate,
  authorizationService
) {
  var controller = this;
  var cachedOffer;
  var defaultLanguage = $translate.use() || 'nl';

  controller.translation = false;
  controller.activeLanguage = defaultLanguage;
  controller.languageSelector = [
    {'lang': 'fr'},
    {'lang': 'en'},
    {'lang': 'de'}
  ];
  controller.uitId = _.get(appConfig, 'uitidUrl');
  controller.labelRemoved = labelRemoved;
  authorizationService.isGodUser()
    .then(function (permission) {
      controller.isGodUser = permission;
    });
  controller.init = function () {
    if (!$scope.event.title) {
      controller.fetching = true;

      if ($scope.event.name) {
        var offer = udbApi.formatJsonLDEntity($scope.event);
        formatOffers(offer);
        return;
      }

      return udbApi
        .getOffer($scope.event['@id'])
        .then(function (offerObject) {
          formatOffers(offerObject);
        });
    } else {
      controller.fetching = false;
    }
  };

  function translateType (type) {
    // Work around for III-3348
    var translatedString = $translate.instant('offerTypes.' + type);
    if (_.includes(translatedString, 'offerTypes.')) {
      return type;
    }
    else {
      return translatedString;
    }
  }

  function formatOffers(offerObject) {

    var sortedFacilities = offerObject.facilities.sort(
      function(a, b) {
        return a.label.localeCompare(b.label);
      });
    offerObject.facilities = sortedFacilities;

    cachedOffer = offerObject;
    cachedOffer.updateTranslationState();

    $scope.event = jsonLDLangFilter(cachedOffer, defaultLanguage, true);
    $scope.offerType = $scope.event.url.split('/').shift();
    $scope.translatedOfferType = translateType($scope.event.type.label);
    controller.offerExpired = $scope.offerType === 'event' ? offerObject.isExpired() : false;
    controller.hasFutureAvailableFrom = offerObject.hasFutureAvailableFrom();
    controller.fetching = false;
    watchLabels();
    return cachedOffer;
  }

  // initialize controller and take optional event actions
  $q.when(controller.init())
    .then(translateLocation)
    .then(ifOfferIsEvent)
    .finally(function () {
      controller.editable = true;
    });

  function ifOfferIsEvent(offer) {
    if (offer && $scope.event.url.split('/').shift() === 'event') {
      return $q.resolve(offer);
    } else {
      return $q.reject();
    }
  }

  function watchLabels() {
    $scope.$watch(function () {
      return cachedOffer.labels;
    }, function (labels) {
      $scope.event.labels = angular.copy(labels);
    });
  }

  controller.hasActiveTranslation = function () {
    var offer = cachedOffer;
    return offer && offer.translationState[controller.activeLanguage] !== EventTranslationState.NONE;
  };

  controller.getLanguageTranslationIcon = function (lang) {
    var icon = EventTranslationState.NONE.icon;

    if (cachedOffer && lang) {
      icon = cachedOffer.translationState[lang].icon;
    }

    return icon;
  };

  controller.translate = function () {
    controller.applyPropertyChanges('name');
    controller.applyPropertyChanges('description');
  };

  /**
   * Sets the provided language as active or toggles it off when already active
   *
   * @param {String} lang
   */
  controller.toggleLanguage = function (lang) {
    if (lang === controller.activeLanguage) {
      controller.stopTranslating();
    } else {
      controller.activeLanguage = lang;
      controller.translation = jsonLDLangFilter(cachedOffer, controller.activeLanguage);
    }
  };

  controller.hasPropertyChanged = function (propertyName) {
    var lang = controller.activeLanguage,
        translation = controller.translation;

    return controller.translation && cachedOffer[propertyName][lang] !== translation[propertyName];
  };

  controller.undoPropertyChanges = function (propertyName) {
    var lang = controller.activeLanguage,
        translation = controller.translation;

    if (translation) {
      translation[propertyName] = cachedOffer[propertyName][lang];
    }
  };

  controller.applyPropertyChanges = function (propertyName) {
    var translation = controller.translation[propertyName];
    translateEventProperty(propertyName, translation, propertyName);
  };

  controller.stopTranslating = function () {
    controller.translation = undefined;
    controller.activeLanguage = defaultLanguage;
  };

  function translateEventProperty(property, translation, apiProperty) {
    var language = controller.activeLanguage,
        udbProperty = apiProperty || property;

    if (translation && translation !== cachedOffer[property][language]) {
      offerTranslator
        .translateProperty(cachedOffer, udbProperty, language, translation)
        .then(cachedOffer.updateTranslationState(cachedOffer));
    }
  }

  // Labelling
  /**
   * @param {Label} newLabel
   */
  controller.labelAdded = function (newLabel) {
    var similarLabel = _.find(cachedOffer.labels, function (label) {
      return newLabel.name.toUpperCase() === label.toUpperCase();
    });
    if (similarLabel) {
      $scope.$apply(function () {
        $scope.event.labels = angular.copy(cachedOffer.labels);
      });
      $window.alert('Het label "' + newLabel.name + '" is reeds toegevoegd als "' + similarLabel + '".');
    } else {
      controller.addedLabel = newLabel.name;
      offerLabeller.label(cachedOffer, newLabel.name)
        .then(function() {
          controller.labelResponse = 'success';
          $scope.event.labels = angular.copy(cachedOffer.labels);
        })
        .catch(function() {
          controller.labelResponse = 'error';
        });
    }
  };

  controller.showConcludedButton = function () {
    var shouldShowConcludeButton = _.get(appConfig, 'concludedButton.toggle', false);

    if (!shouldShowConcludeButton) {
      return false;
    }

    var omdDate = _.get(appConfig, 'calendarHighlight.date');
    var endofOmdDay = moment(omdDate).endOf('day');

    return (
      $scope.offerType === 'event' &&
      (endofOmdDay < new Date())
    );
  };

  controller.concludedButtonLabel = _.get(appConfig, 'concludedButton.label', '');

  controller.handleConcludedButtonClick = function (eventId, eventTitle) {
    window.parent.location.href = _.get(appConfig, 'concludedButton.url', '')
      .replace(/%EVENT_ID%/gi, eventId)
      .replace(/%EVENT_TITLE%/gi, eventTitle);
  };

  function clearLabelsError() {
    controller.labelResponse = '';
    controller.labelsError = '';
  }

  /**
   * @param {ApiProblem} problem
   */
  function showUnlabelProblem(problem) {
    $scope.event.labels = angular.copy(cachedOffer.labels);
    controller.labelResponse = 'unlabelError';
    controller.labelsError = $translate.instant('errors.labelNotAllowed');
  }

  /**
   * @param {Label} label
   */
  function labelRemoved(label) {
    clearLabelsError();

    return $q(function(resolve, reject) {
      offerLabeller
      .unlabel(cachedOffer, label.name)
      .then(resolve)
      .catch(function (err) {
        showUnlabelProblem(err);
        reject(err);
      });
    });
  }

  /**
   * @param {UdbEvent} event
   * @return {Promise}
   */
  function translateLocation(event) {
    if ($scope.event.location) {
      $scope.event.location = jsonLDLangFilter($scope.event.location, defaultLanguage);
    }
    return $q.resolve(event);
  }

}
OfferController.$inject = ["udbApi", "$scope", "jsonLDLangFilter", "EventTranslationState", "offerTranslator", "offerLabeller", "$window", "$q", "appConfig", "UdbEvent", "$translate", "authorizationService"];
})();

// Source: src/search/ui/place.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbPlace
 * @description
 * # udbPlace
 */
angular
  .module('udb.search')
  .directive('udbPlace', udbPlace);

/* @ngInject */
function udbPlace() {
  var placeDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'placeCtrl',
    templateUrl: 'templates/place.directive.html'
  };

  return placeDirective;
}
})();

// Source: src/search/ui/search-facilities-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:SearchFacilitiesModalController
 * @description
 * # SearchFacilitiesModalController
 * Modal for selecting facilities.
 */
angular
  .module('udb.event-form')
  .controller('SearchFacilitiesModalController', SearchFacilitiesModalController);

/* @ngInject */
function SearchFacilitiesModalController($scope, $uibModalInstance, offer, eventCrud, facilities) {
  $scope.saving = false;
  $scope.error = false;
  $scope.cancel = cancel;
  $scope.saveFacilities = saveFacilities;
  $scope.facilities = preselectFacilities(facilities);

  function preselectFacilities(facilities) {
    return _.mapValues(facilities, function (facilityType) {
      return _.map(facilityType, function (facility) {
        return _.assign(facility, {
          selected: !!_.find(offer.facilities, {id: facility.id})
        });
      });
    });
  }

  function cancel() {
    $uibModalInstance.dismiss('cancel');
  }

  function saveFacilities() {
    showSaving();

    var newFacilites = _.where(
      _.flatten(_.map($scope.facilities)),
      {selected: true}
    );

    function persistAndClose() {
      offer.facilities = newFacilites;
      closeModal();
    }

    eventCrud
      .updateFacilities(offer, newFacilites)
      .then(persistAndClose, showError);
  }

  function closeModal() {
    $scope.saving = false;
    $uibModalInstance.close();
  }

  function showError() {
    $scope.error = true;
    $scope.saving = false;
  }

  function showSaving() {
    $scope.saving = true;
    $scope.error = false;
  }
}
SearchFacilitiesModalController.$inject = ["$scope", "$uibModalInstance", "offer", "eventCrud", "facilities"];
})();

// Source: src/search/ui/search.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.search.controller:SearchCtrl
 * @description
 * # SearchCtrl
 * Search controller
 */
angular
  .module('udb.search')
  .controller('SearchController', SearchController);

/* @ngInject */
function SearchController(
  $scope,
  $timeout,
  $document,
  udbApi,
  $window,
  $location,
  $uibModal,
  SearchResultViewer,
  offerLabeller,
  offerLocator,
  searchHelper,
  $rootScope,
  eventExporter,
  $translate,
  LuceneQueryBuilder,
  authorization,
  authorizationService
) {
  function getSearchQuery() {
    return searchHelper.getQuery();
  }

  function getCurrentPage() {
    var currentPage = 1;
    var searchParams = $location.search();

    if (searchParams.page) {
      currentPage = parseInt(searchParams.page);
    }

    return currentPage;
  }

  $scope.resultViewer = new SearchResultViewer(30, getCurrentPage());
  $scope.realQuery = false;
  $scope.activeQuery = false;
  $scope.queryEditorShown = false;
  $scope.currentPage = getCurrentPage();
  $scope.language = $translate.use() || 'nl';

  var handleClick = function() {
    $rootScope.$emit('searchComponentReady');
  };

  $document.on('click', handleClick);

  $scope.$on('$destroy', function() {
    $document.off('click', handleClick);
  });

  var additionalSpecifics = [
    {id: 'accessibility', name: 'Toegankelijkheidsinformatie', permission: authorization.editFacilities}
  ];
  authorizationService
    .getPermissions()
    .then(function (userPermissions) {
      var specifics = _.filter(
        additionalSpecifics,
        function (specific) {
          return !_.has(specific, 'permission') || _.contains(userPermissions, specific.permission);
        }
      );

      $scope.resultViewer.enableSpecifics(specifics);
    })
  ;

  /**
   * Fires off a search for offers using a plain query string or a query object.
   * @param {String|Query} query A query string or object to search with.
   */
  var findOffers = function (query) {
    var offset = ($scope.resultViewer.currentPage - 1) * $scope.resultViewer.pageSize;
    var queryString = typeof query === 'string' ? query : query.queryString;
    var pageSearchParameter = $scope.resultViewer.currentPage > 1 ? String($scope.resultViewer.currentPage) : null;

    $location.search({
      'query': getSearchQuery().queryString || null,
      'page': pageSearchParameter
    });

    $scope.resultViewer.loading = true;

    udbApi
      .findOffers(queryString, offset)
      .then(function (pagedEvents) {
        if (pagedEvents.member) {
          pagedEvents = udbApi.reformatJsonLDData(pagedEvents);
        }
        offerLocator.addPagedCollection(pagedEvents);
        $scope.resultViewer.setResults(pagedEvents);
        $timeout(function() {
          $rootScope.$emit('searchComponentReady');
        });
      });
  };

  /**
   * @param {Query} query A query object used to update the interface and result viewer.
   */
  var updateQuery = function (query) {
    $scope.activeQuery = query;

    if (LuceneQueryBuilder.isValid(query)) {
      var realQuery = LuceneQueryBuilder.unparse(query);
      $scope.resultViewer.queryChanged(realQuery);
      findOffers(realQuery);
      if (realQuery !== query.originalQueryString) {
        $scope.realQuery = realQuery;
      } else {
        $scope.realQuery = false;
      }
    }
  };

  var saveLabels = function (labels) {
    var selectedOffers = $scope.resultViewer.selectedOffers;
    _.each(selectedOffers, function (offer) {
      var eventPromise;
      eventPromise = udbApi.getOffer(new URL(offer['@id']));

      eventPromise.then(function (event) {
        event.label(labels);
      });
    });

    _.each(labels, function (label) {
      offerLabeller.labelOffersById(selectedOffers, label);
    });
  };

  var labelSelection = function () {
    var selectedOffers = $scope.resultViewer.selectedOffers;
    if (!selectedOffers.length) {
      $window.alert('First select the events you want to label.');
      return;
    }

    var modal = $uibModal.open({
      templateUrl: 'templates/offer-label-modal.html',
      controller: 'OfferLabelModalCtrl',
      controllerAs: 'lmc'
    });

    modal.result.then(saveLabels);
  };

  function labelActiveQuery() {
    var query = $scope.activeQuery,
      eventCount = $scope.resultViewer.totalItems;

    if (LuceneQueryBuilder.isValid(query)) {
      var modal = $uibModal.open({
        templateUrl: 'templates/offer-label-modal.html',
        controller: 'OfferLabelModalCtrl',
        controllerAs: 'lmc'
      });

      modal.result.then(function (labels) {
        // eagerly label all cached events on the first page
        var selectedIds = $scope.resultViewer.selectedIds;
        _.each(selectedIds, function (eventId) {
          var eventPromise = udbApi.getEventById(eventId);

          eventPromise.then(function (event) {
            event.label(labels);
          });
        });

        _.each(labels, function (label) {
          offerLabeller.labelQuery(query.queryString, label, eventCount);
        });
      });
    } else {
      $window.alert('provide a valid query to label');
    }
  }

  var label = function () {
    var labellingQuery = $scope.resultViewer.querySelected;

    if (labellingQuery) {
      labelActiveQuery();
    } else {
      labelSelection();
    }
  };

  var addLanguageIcons = function () {
    var selectedOffers = $scope.resultViewer.selectedOffers;
    if (!selectedOffers.length) {
      $window.alert('First select the events you want to label.');
      return;
    }

    var modal = $uibModal.open({
      templateUrl: 'templates/offer-languages-modal.html',
      controller: 'OfferLanguagesModalCtrl',
      controllerAs: 'lmc'
    });

    modal.result.then(saveLabels);
  };

  function exportEvents() {
    var exportingQuery = $scope.resultViewer.querySelected,
      query = $scope.activeQuery,
      eventCount,
      selectedIds = [];

    if (exportingQuery) {
      eventCount = $scope.resultViewer.totalItems;
    } else {
      selectedIds = _.chain($scope.resultViewer.selectedOffers)
        .filter({'@type': 'Event'})
        .map(function (offer) {
          return new URL(offer['@id']);
        })
        .value();

      if (!selectedIds.length) {
        $window.alert(
          $translate.instant('search.modal')
        );
        return;
      } else {
        eventCount = selectedIds.length;
      }
    }

    eventExporter.activeExport.query = query;
    eventExporter.activeExport.eventCount = eventCount;
    eventExporter.activeExport.selection = selectedIds;

    var exportLimit = 5000;

    var tooManyItems = eventCount >= exportLimit;

    if (tooManyItems) {
      $translate('EVENT-EXPORT.TOO-MANY-ITEMS', {limit: exportLimit}).then(function (message) {
        $window.alert(message);
      });
    } else {
      if (query && query.queryString.length && LuceneQueryBuilder.isValid(query)) {
        var modal = $uibModal.open({
          templateUrl: 'templates/event-export-modal.html',
          controller: 'EventExportController',
          controllerAs: 'exporter',
          size: 'lg'
        });
      } else {
        $translate('EVENT-EXPORT.QUERY-IS-MISSING').then(function (message) {
          $window.alert(message);
        });
      }
    }
  }

  $scope.exportEvents = exportEvents;
  $scope.label = label;
  $scope.addLanguageIcons = addLanguageIcons;

  $scope.startEditing = function () {
    $scope.queryEditorShown = true;
  };

  $scope.stopEditing = function () {
    $scope.queryEditorShown = false;
  };

  function queryChanged(event, newQuery) {
    updateQuery(newQuery);
  }

  // Because the uib pagination directive is messed up and overrides the initial page to 1,
  // you have to silence and revert it.
  var initialChangeSilenced = $scope.currentPage === 1;
  $scope.pageChanged = function () {
    var newPageNumber = $scope.currentPage;

    if (!initialChangeSilenced) {
      $scope.currentPage = $scope.resultViewer.currentPage;
      initialChangeSilenced = true;
    } else {
      $scope.resultViewer.currentPage = newPageNumber;

      findOffers($scope.activeQuery)
      .then(function() {
        $timeout(function() {
          $rootScope.$emit('searchComponentReady');
        });
      });
      $window.scroll(0, 0);
    }
  };

  /**
   * Get the query string from the URI params
   *
   * @return {null|string}
   */
  function getQueryStringFromParams() {
    var queryString = null;
    var searchParams = $location.search();

    if (searchParams.query) {
      queryString = searchParams.query;
    }

    return queryString;
  }

  var initListeners = _.once(function () {
    var searchQueryChangedListener = $rootScope.$on('searchQueryChanged', queryChanged);
    var startEditingQueryListener = $rootScope.$on('startEditingQuery', $scope.startEditing);
    var stopEditingQueryListener = $rootScope.$on('stopEditingQuery', $scope.stopEditing);

    $scope.$on('$destroy', startEditingQueryListener);
    $scope.$on('$destroy', searchQueryChangedListener);
    $scope.$on('$destroy', stopEditingQueryListener);
  });

  initListeners();
}
SearchController.$inject = ["$scope", "$timeout", "$document", "udbApi", "$window", "$location", "$uibModal", "SearchResultViewer", "offerLabeller", "offerLocator", "searchHelper", "$rootScope", "eventExporter", "$translate", "LuceneQueryBuilder", "authorization", "authorizationService"];
})();

// Source: src/search/ui/search.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEvent
 * @description
 * # udb search directive
 */
angular
  .module('udb.search')
  .directive('udbSearch', searchDirective);

/* @ngInject */
function searchDirective() {
  return {
    templateUrl: 'templates/search.html',
    restrict: 'EA',
    controller: 'SearchController'
  };
}
})();

// Source: src/uitpas/components/card-systems/card-system-selector.component.js
(function () {
'use strict';

/**
 * @typedef {Object} Cardsystem
 * @property {string} id
 *  a number serialized as a string
 * @property {string} name
 * @property {DistributionKey[]} distributionKeys
 * @property {DistributionKey|undefined} [assignedDistributionKey]
 */

/**
 * @ngdoc function
 * @name udbApp.controller:CardSystemSelector
 * @description
 * # CardSystemSelector
 * Component for setting UiTPAS info.
 */
angular
  .module('udb.uitpas')
  .component('cardSystemSelector', {
    templateUrl: 'templates/card-systems.html',
    controller: CardSystemsController,
    controllerAs: 'cardSystemSelector',
    bindings: {
      organisation: '<',
      offerData: '<'
    }
  });

/* @ngInject */
function CardSystemsController($q, udbUitpasApi, $rootScope) {
  var controller = this;
  var organisation = controller.organisation;
  var offerData = controller.offerData;
  controller.$onInit = init;
  controller.refresh = refresh;

  function init() {
    $q
      .all([
        udbUitpasApi.getEventCardSystems(offerData.id),
        udbUitpasApi.findOrganisationsCardSystems(organisation.id)
      ])
      .then(showCardSystems, showUitpasUnavailableNotice);
  }

  function showUitpasUnavailableNotice(requestInfo) {
    if (requestInfo.status === 400) {
      controller.uitpasUnavailableType = 'already_has_ticketsales';
    }
    if (requestInfo.status === 404) {
      controller.uitpasUnavailableType = 'not_found';
    }
  }

  function hideUitpasUnavailableNotice() {
    controller.uitpasUnavailableType = undefined;
  }

  function refresh() {
    controller.availableCardSystems = undefined;
    hideUitpasUnavailableNotice();
    unlockCardSystems();
    init();
  }

  function showCardSystems(cardSystemCollections) {
    var eventCardSystems = cardSystemCollections[0],
        organisationCardSystems = cardSystemCollections[1];

    controller.availableCardSystems = _.map(organisationCardSystems, function (cardSystem) {
      return _.assign(cardSystem, {
        assignedDistributionKey: findAssignedDistributionKey(eventCardSystems, cardSystem),
        active: !!_.find(eventCardSystems, {id: cardSystem.id})
      });
    });
  }

  /**
   * @param {CardSystem[]} cardSystemCollection
   * @param {CardSystem} cardSystem
   *
   * @return {(DistributionKey|null)}
   */
  function findAssignedDistributionKey(cardSystemCollection, cardSystem) {
    var matchingCardSystem = _.find(cardSystemCollection, {id: cardSystem.id});

    return _.first(
      (!matchingCardSystem || _.isEmpty(matchingCardSystem.distributionKeys)) ?
        cardSystem.distributionKeys :
        matchingCardSystem.distributionKeys
    );
  }

  /**
   * @param {CardSystem} cardSystem
   */
  controller.distributionKeyAssigned = function(cardSystem) {
    if (!cardSystem.assignedDistributionKey) {
      throw 'card system distribution key is missing';
    }

    controller.persistingCardSystems = true;

    return udbUitpasApi
      .addEventCardSystemDistributionKey(offerData.id, cardSystem.id, cardSystem.assignedDistributionKey.id)
      .then(function () {
        $rootScope.$emit('uitpasDataSaved');
        unlockCardSystems();
        return $q.resolve();
      });
  };

  function unlockCardSystems() {
    controller.persistingCardSystems = false;
  }

  /**
   * @param {CardSystem} cardSystem
   * @return {Promise}
   */
  function assignKeyAndOrCardSystem(cardSystem) {
    return cardSystem.assignedDistributionKey ?
      controller.distributionKeyAssigned(cardSystem) :
      udbUitpasApi.addEventCardSystem(offerData.id, cardSystem.id);
  }

  /**
   * @param {CardSystem} cardSystem
   */
  controller.activeCardSystemsChanged = function(cardSystem) {
    controller.persistingCardSystems = true;
    var activeCardSystemsUpdated = cardSystem.active ?
      assignKeyAndOrCardSystem(cardSystem) :
      udbUitpasApi.removeEventCardSystem(offerData.id, cardSystem.id);

    function revertCardSystemStatus(requestInfo) {
      cardSystem.active = !cardSystem.active;
      showUitpasUnavailableNotice(requestInfo);
    }

    function notifyUitpasDataSaved () {
      $rootScope.$emit('uitpasDataSaved');
    }

    activeCardSystemsUpdated
      .then(notifyUitpasDataSaved, revertCardSystemStatus)
      .finally(unlockCardSystems);
  };
}
CardSystemsController.$inject = ["$q", "udbUitpasApi", "$rootScope"];
})();

// Source: src/uitpas/components/uitpas-info/uitpas-info.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormUitpasInfoController
 * @description
 * # EventFormUitpasInfoController
 * Component for setting UiTPAS info.
 */
angular
  .module('udb.uitpas')
  .component('uitpasInfo', {
    templateUrl: 'templates/uitpasInfo.html',
    controller: UitpasInfoComponent,
    controllerAs: 'upic',
    bindings: {
      organizer: '<',
      price: '<'
    }
  });

/* @ngInject */
function UitpasInfoComponent(
  $scope,
  $rootScope,
  EventFormData
) {
  var controller = this;

  $scope.showUitpasInfo = false;
  $scope.uitpasCssClass = 'state-incomplete';
  controller.listeners = [];
  controller.showCardSystems = false;

  controller.$onInit = init;
  controller.$onDestroy = destroy;

  /**
   *
   * @param {Object} angularEvent
   * @param {EventFormData} offerData
   */
  controller.showCardSystemsIfPriceIsSelected = function(angularEvent, offerData) {
    controller.showCardSystems = offerData.priceInfo && !!offerData.priceInfo.length;
  };

  controller.markUitpasDataAsCompleted = function () {
    $scope.uitpasCssClass = 'state-complete';
  };

  controller.updateOrganizer = function (angularEvent, organization) {
    controller.organizer = organization;
    showOrganizer(organization);
  };

  function showOrganizer(organization) {
    if (organization) {
      $scope.showUitpasInfo = _.get(controller, 'organizer.isUitpas', false) && EventFormData.isEvent;
      controller.showCardSystems = controller.price && !!controller.price.length;
    } else {
      controller.showCardSystems = false;
      $scope.showUitpasInfo = false;
    }
  }

  function init() {
    controller.eventFormData = EventFormData;
    showOrganizer(controller.organizer);

    controller.listeners = [
      $rootScope.$on('eventFormSaved', controller.showCardSystemsIfPriceIsSelected),
      $rootScope.$on('eventOrganizerSelected', controller.updateOrganizer),
      $rootScope.$on('eventOrganizerDeleted', controller.updateOrganizer),
      $rootScope.$on('uitpasDataSaved', controller.markUitpasDataAsCompleted)
    ];
  }

  function destroy() {
    _.invoke(controller.listeners, 'call');
  }
}
UitpasInfoComponent.$inject = ["$scope", "$rootScope", "EventFormData"];
})();

// Source: src/uitpas/default-uitpas-labels.constant.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc service
 * @name udb.uitpas.DefaultUitpasLabels
 * @description
 * # Default UiTPAS Labels
 *
 * All the known UiTPAS labels that link an organizer to card-systems on 2017-03-30.
 * This file used to be updated each time labels changed but now acts as a placeholder.
 *
 * The actual labels should be fetched when building or bootstrapping your app and written to the UitpasLabels constant.
 * The UiTPAS service should have an endpoint with all the labels for your environment.
 * e.g.: https://uitpas.uitdatabank.be/labels for production
 */
angular
  .module('udb.uitpas')
  .constant('DefaultUitpasLabels',
  /**
   * Enum for UiTPAS labels
   * @readonly
   * @enum {string}
   */
  {
    'PASPARTOE': 'Paspartoe',
    'UITPAS': 'UiTPAS',
    'UITPAS_GENT': 'UiTPAS Gent',
    'UITPAS_OOSTENDE': 'UiTPAS Oostende',
    'UITPAS_REGIO_AALST': 'UiTPAS Regio Aalst',
    'UITPAS_DENDER': 'UiTPAS Dender',
    'UITPAS_ZUIDWEST': 'UiTPAS Zuidwest',
    'UITPAS_MECHELEN': 'UiTPAS Mechelen',
    'UITPAS_KEMPEN': 'UiTPAS Kempen',
    'UITPAS_MAASMECHELEN': 'UiTPAS Maasmechelen',
    'UITPAS_LEUVEN': 'UiTPAS Leuven',
    'UITPAS_LIER': 'UiTPAS Lier',
    'UITPAS_HEIST-OP-DEN-BERG': 'UiTPAS Heist-op-den-Berg',
    'UITPAS_MEETJESLAND': 'UiTPAS Meetjesland',
    'UITPAS_WESTHOEK': 'UiTPAS Westhoek'
  });
})();

// Source: src/uitpas/organisation-suggestion.controller.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.controller:OfferController
 * @description
 * # OfferController
 */
angular
  .module('udb.uitpas')
  .controller('OrganisationSuggestionController', OrganisationSuggestionController);

/* @ngInject */
function OrganisationSuggestionController($scope) {
  var controller = this;
  controller.organisation = $scope.organisation;
  controller.query = $scope.query;
}
OrganisationSuggestionController.$inject = ["$scope"];
})();

// Source: src/uitpas/organisation-suggestion.directive.js
(function () {
'use strict';

angular
  .module('udb.uitpas')
  .directive('uitpasOrganisationSuggestion', uitpasOrganisationSuggestion);

/* @ngInject */
function uitpasOrganisationSuggestion() {
  return {
    templateUrl: 'templates/organisation-suggestion.directive.html',
    controller: 'OrganisationSuggestionController',
    controllerAs: 'os',
    scope: {
      organisation: '<',
      query: '<'
    },
    restrict: 'A'
  };
}
})();

// Source: src/uitpas/udb-uitpas-api.service.js
(function () {
'use strict';

/**
 * @typedef {Object} CardSystem
 * @property {string} id
 *  a number serialized as a string
 * @property {string} name
 * @property {DistributionKey[]} distributionKeys
 */

/**
 * @typedef {Object} DistributionKey
 * @property {string} id
 *  a number serialized as a string
 * @property {string} name
 *  the name of the key including the price, eg: "CC De Werf - 1,5 EUR / dag"
 */

angular
  .module('udb.uitpas')
  .service('udbUitpasApi', UdbUitpasApi);

function UdbUitpasApi($q, $http, appConfig, uitidAuth, $timeout, moment) {
  var uitpasApiUrl = _.get(appConfig, 'uitpasUrl');
  var uitpasMaxDelay = _.get(appConfig, 'uitpasMaxDelay', 8);
  var defaultApiConfig = {
    headers: {
      'Content-Type': 'application/json',
      'Authorization': 'Bearer ' + uitidAuth.getToken(),
      'X-Api-Key': _.get(appConfig, 'apiKey')
    },
    params: {}
  };

  /**
   * Events are automatically registered by UiTPAS but there can be some delay.
   * In the meantime the UiTPAS API will not known about the event.
   * Make sure to poke UiTPAS a few times before giving up.
   *
   * An empty collection is returned if UiTPAS repeatedly fails on an event.
   *
   * @param {string} eventId
   * @return {Promise.<CardSystem[]>}
   */
  this.getEventCardSystems = function(eventId) {
    function request () {
      return $http.get(uitpasApiUrl + 'events/' + eventId + '/cardSystems/', defaultApiConfig);
    }

    var until = moment().add(uitpasMaxDelay, 's');

    return retry(request, 2, until).then(returnCardSystemCollection);
  };

  /**
   * getTicketSales
   * @param {string} eventId
   * @param {Organizer} organizer
   * @return {Promise.<hasTicketSales>}
   */
  this.getTicketSales = function(eventId, organizer) {
    var deferred = $q.defer();
    var until = moment().add(uitpasMaxDelay, 's');

    function request () {
      return $http.get(uitpasApiUrl + 'events/' + eventId, defaultApiConfig);
    }

    function returnTicketSales(response) {
      return response.data.hasTicketSales;
    }

    if (organizer.isUitpas) {
      deferred.resolve(retry(request, 2, until).then(returnTicketSales));
    } else {
      deferred.resolve(false);
    }

    return deferred.promise;
  };

  /**
   * @param {string} organizerId of the organizer
   * @return {Promise.<CardSystem[]>}
   */
  this.findOrganisationsCardSystems = function(organizerId) {
    return $http
      .get(uitpasApiUrl + 'organizers/' + organizerId + '/cardSystems/', defaultApiConfig)
      .then(returnCardSystemCollection);
  };

  /**
   * @param {CardSystem} cardSystem
   * @returns {CardSystem}
   */
  function convertDistributionKeysToList(cardSystem) {
    if ('object' === typeof cardSystem.distributionKeys) {
      cardSystem.distributionKeys = _.values(cardSystem.distributionKeys);
    }

    return cardSystem;
  }

  /**
   * @param {object} response
   *  Angular HTTP response
   * @return {CardSystem[]}
   */
  function returnCardSystemCollection(response) {
    var cardSystemCollection = 'object' === typeof response.data ? _.values(response.data) : response.data;
    return $q.resolve(_.map(cardSystemCollection, convertDistributionKeysToList));
  }

  /**
   * @param {string} eventId
   * @param {string} cardSystemId
   * @return {Promise.<Object>}
   */
  this.addEventCardSystem = function(eventId, cardSystemId) {
    return $http
      .put(
        uitpasApiUrl + 'events/' + eventId + '/cardSystems/' + cardSystemId,
        null,
        defaultApiConfig
      )
      .then(returnUnwrappedData);
  };

  /**
   * @param {string} eventId
   * @param {string} cardSystemId
   * @return {Promise.<Object>}
   */
  this.removeEventCardSystem = function(eventId, cardSystemId) {
    return $http
      .delete(
        uitpasApiUrl + 'events/' + eventId + '/cardSystems/' + cardSystemId,
        defaultApiConfig
      )
      .then(returnUnwrappedData);
  };

  /**
   * @param {string} eventId
   * @param {string} cardSystemId
   * @param {string} distributionKeyId
   * @return {Promise.<Object>}
   */
  this.addEventCardSystemDistributionKey = function(eventId, cardSystemId, distributionKeyId) {
    return $http
      .put(
        uitpasApiUrl + 'events/' + eventId + '/cardSystems/' + cardSystemId + '/distributionKey/' + distributionKeyId,
        null,
        defaultApiConfig
      )
      .then(returnUnwrappedData);
  };

  function returnUnwrappedData(response) {
    return $q.resolve(response.data);
  }

  /**
   * @param {function} repeatable
   *  A promise returning function without arguments.
   *
   * @param {number} delay
   *  The number of seconds to delay after a response before firing a consecutive request.
   *
   * @param {moment} limit
   *  The moment that marks the time limit.
   */
  function retry(repeatable, delay, limit) {
    function retryLater(error) {
      return moment().add(delay, 'seconds').isAfter(limit) ?
        $q.reject(error) :
        $timeout(function () {
          return retry(repeatable, delay, limit);
        }, delay);
    }

    return repeatable().catch(retryLater);
  }
}
UdbUitpasApi.$inject = ["$q", "$http", "appConfig", "uitidAuth", "$timeout", "moment"];
})();

// Source: src/uitpas/uitpas-labels.provider.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc service
 * @name udb.uitpas.UitpasLabelsProvider
 * @description
 * # UiTPAS Labels Provider
 *
 * All the known UiTPAS labels that link an organizer to card-systems on 2017-03-01 are in the DefaultUitpasLabels
 * constant. The file used to be updated each time labels changed but now acts as a placeholder.
 *
 * The actual labels should be fetched when building or bootstrapping your app and written to the ExtermalUitpasLabels
 * constant. The UiTPAS service should have an endpoint with all the labels for your environment.
 * e.g.: https://uitpas.uitdatabank.be/labels for production
 */
angular
  .module('udb.uitpas')
  .provider('UitpasLabels', UitpasLabelsProvider);

function UitpasLabelsProvider() {
  var customUitpasLabels;

  /**
   * Configure the UiTPAS labels by providing a map of {LABEL_KEY: label name}
   * @param {object} labels
   */
  this.useLabels = function(labels) {
    customUitpasLabels = labels;
  };

  this.$get = ['DefaultUitpasLabels', function(DefaultUitpasLabels) {
    return !!customUitpasLabels ? customUitpasLabels : DefaultUitpasLabels;
  }];
}
})();

// Source: .tmp/udb3-angular.templates.js
(function () {
angular.module('udb.core').run(['$templateCache', function($templateCache) {
  'use strict';

  $templateCache.put('templates/calendar-summary.directive.html',
    "<span ng-if=\"offer.calendarType\" ng-switch=\"offer.calendarType\">\n" +
    "\n" +
    "  <span ng-switch-when=\"single\">\n" +
    "    <span ng-bind=\"::offer.startDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "\n" +
    "    <span ng-if=\"showOpeningHours\">\n" +
    "      <span ng-if=\"getOpeningHoursCount(offer) == 1\">\n" +
    "        <span translate-once=\"calendarSummary.from | uppercase\"></span> <span ng-bind=\"::offer.openingHours[0].startDate | date: 'HH:mm'\"></span>\n" +
    "        <span translate-once=\"calendarSummary.till\"></span> <span ng-bind=\"::offer.openingHours[0].endDate | date: 'HH:mm'\"></span>\n" +
    "      </span>\n" +
    "      <span ng-if=\"getOpeningHoursCount(offer) > 1\" translate-once=\"calendarSummary.openinghours\"></span>\n" +
    "    </span>\n" +
    "  </span>\n" +
    "\n" +
    "  <span ng-switch-when=\"multiple\">\n" +
    "      <span translate-once=\"calendarSummary.from\"></span> <span ng-bind=\"::offer.startDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "      <span translate-once=\"calendarSummary.till\"></span> <span ng-bind=\"::offer.endDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "  </span>\n" +
    "\n" +
    "  <span ng-switch-when=\"periodic\">\n" +
    "     <span translate-once=\"calendarSummary.from\"></span> <span ng-bind=\"::offer.startDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "     <span translate-once=\"calendarSummary.till\"></span> <span ng-bind=\"::offer.endDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "  </span>\n" +
    "\n" +
    "  <span ng-switch-when=\"permanent\" translate-once=\"calendarSummary.permanent\"></span>\n" +
    "\n" +
    "</span>"
  );


  $templateCache.put('templates/image-detail.directive.html',
    "<tr ng-class=\"::{muted: !images.length}\">\n" +
    "    <td>\n" +
    "        <span class=\"row-label\" translate-once=\"imageDetail.label\"></span>\n" +
    "    </td>\n" +
    "    <td ng-if=\"::images.length\">\n" +
    "        <ul class=\"list-unstyled media-list\">\n" +
    "            <li ng-repeat=\"image in images | imagesByLanguage:language track by image.contentUrl\" class=\"media\">\n" +
    "                <div class=\"media-left\">\n" +
    "                    <a target=\"_blank\" href=\"{{image.contentUrl}}\">\n" +
    "                        <img class=\"media-object\"\n" +
    "                             src=\"{{image.contentUrl}}?height=100\"\n" +
    "                             alt=\"{{::translateImageDetail('alt_image', {index: $index}) }}\">\n" +
    "                    </a>\n" +
    "                </div>\n" +
    "                <div class=\"media-body\">\n" +
    "                   <span ng-if=\"$first\" class=\"label label-default\" translate-once=\"imageDetail.main_image\"></span>\n" +
    "                    <p>{{image.description}}</p>\n" +
    "                    <p class=\"text-muted\">&copy; {{image.copyrightHolder}}</p>\n" +
    "                </div>\n" +
    "                <hr ng-if=\"!$last\">\n" +
    "            </li>\n" +
    "        </ul>\n" +
    "    </td>\n" +
    "    <td ng-if=\"::!images.length\" translate-once=\"imageDetail.no_images\"></td>\n" +
    "</tr>\n"
  );


  $templateCache.put('templates/udb.workflow-status.directive.html',
    "<tr>\n" +
    "    <td><span class=\"row-label\" translate-once=\"workflowStatus.label\"></span></td>\n" +
    "    <td ng-if=\"cm.event.workflowStatus !== 'REJECTED'\">\n" +
    "        <span ng-if=\"cm.event.available\" ng-bind=\"cm.event.available | date: 'dd/MM/yyyy'\">\n" +
    "                    </span>\n" +
    "        <span ng-if=\"!cm.event.available && !cm.event.availableFrom\">{{::cm.status | translate }}</span>\n" +
    "        <span ng-if=\"!cm.event.available && cm.event.availableFrom\"><span translate-once=\"workflowStatus.APPROVED\"></span> {{cm.event.availableFrom | date: 'dd/MM/yyyy'}}</span>\n" +
    "    </td>\n" +
    "    <td ng-if=\"cm.event.workflowStatus === 'REJECTED'\">\n" +
    "      <p><span translate-once=\"workflowStatus.rejected_full\"></span>&nbsp;<a ng-href=\"{{::cm.publicationRulesLink}}\" target=\"_blank\"><span translate-once=\"workflowStatus.rules\"></span></a></p>\n" +
    "    </td>\n" +
    "</tr>\n" +
    "<tr ng-if=\"cm.event.workflowStatus !== 'REJECTED'\">\n" +
    "    <td><span class=\"row-label\" translate-once=\"workflowStatus.id\"></span></td>\n" +
    "    <td>\n" +
    "        <ul>\n" +
    "            <li>\n" +
    "                <span ng-bind=\"cm.event.id\"></span>\n" +
    "            </li>\n" +
    "            <li ng-if=\"cm.getPublicUrl(cm.event.id) && cm.showPublicUrl() \">\n" +
    "                <a ng-href=\"{{cm.getPublicUrl(cm.event.id)}}\" translate-once=\"preview.publiq_url\" target=\"_blank\" translate-values=\"{ publicationBrand: '{{::cm.publicationBrand}}' }\"></a>\n" +
    "            </li>\n" +
    "            <li ng-if=\"cm.getCultuurkuurKUrl(cm.event.id) && cm.showCultuurkuurUrl()\">\n" +
    "              <a ng-href=\"{{cm.getCultuurkuurKUrl(cm.event.id)}}\" translate-once=\"preview.publiq_url\" target=\"_blank\" translate-values=\"{ publicationBrand: 'cultuurkuur' }\"></a>\n" +
    "            </li>\n" +
    "            <li ng-repeat=\"sameAs in cm.sameAsRelations(cm.event)\"><span ng-bind=\"sameAs\"></span></li>\n" +
    "        </ul>\n" +
    "    </td>\n" +
    "</tr>\n"
  );


  $templateCache.put('templates/unexpected-error-modal.html',
    "<div class=\"modal-body\">\n" +
    "  <p ng-bind=\"errorMessage\"></p>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button class=\"btn btn-primary\" ng-click=\"dismiss()\">sluiten</button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-cultuurkuur.html',
    "<div class=\"cultuurkuur-component\">\n" +
    "    <div ng-if=\"::!$ctrl.cultuurkuurMaintenance\">\n" +
    "        <p ng-if=\"::!$ctrl.permission && $ctrl.forSchools\"><i class=\"fa fa-check-circle text-success\" aria-hidden=\"true\"></i> <span translate-once=\"cultuurkuur.info\" translate-values=\"{ previewLink: '{{$ctrl.previewLink}}' }\"></span></p>\n" +
    "        <div ng-if=\"::$ctrl.permission\">\n" +
    "            <div ng-if=\"::!$ctrl.isIncomplete\" class=\"row\">\n" +
    "                <p ng-if=\"$ctrl.forSchools\"><i class=\"fa fa-check-circle text-success\" aria-hidden=\"true\"></i> <span translate-once=\"cultuurkuur.info\" translate-values=\"{ previewLink: '{{$ctrl.previewLink}}' }\"></span></p>\n" +
    "                <div class=\"panel panel-default\">\n" +
    "                    <div class=\"panel-body\">\n" +
    "                        <div class=\"row\">\n" +
    "                            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 cultuurkuur-logo\">\n" +
    "                                <div ng-if=\"::($ctrl.cultuurKuurInfo.fields.length > 0)\" class=\"row\">\n" +
    "                                    <div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n" +
    "                                        <strong>Onderwerp</strong>\n" +
    "                                    </div>\n" +
    "                                    <div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n" +
    "                                        <p ng-repeat=\"field in ::$ctrl.cultuurKuurInfo.fields\" ng-bind=\"::field\"></p>\n" +
    "                                    </div>\n" +
    "                                </div>\n" +
    "                                <div ng-if=\"$ctrl.cultuurKuurInfo.targetAudience.length > 0\" class=\"row\">\n" +
    "                                    <div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n" +
    "                                        <strong>Doelgroep</strong>\n" +
    "                                    </div>\n" +
    "                                    <div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n" +
    "                                        <p ng-repeat=\"target in ::$ctrl.cultuurKuurInfo.targetAudience\" ng-bind=\"::target\"></p>\n" +
    "                                    </div>\n" +
    "                                </div>\n" +
    "                                <div ng-if=\"$ctrl.cultuurKuurInfo.levels.length > 0\" class=\"row\">\n" +
    "                                    <div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n" +
    "                                        <strong>Geschikt voor</strong>\n" +
    "                                    </div>\n" +
    "                                    <div ng-if=\"$ctrl.cultuurKuurInfo.levels.length <= 4\" class=\"col-xs-5 col-sm-5 col-md-5 col-lg-5\">\n" +
    "                                        <p ng-repeat=\"level in ::$ctrl.cultuurKuurInfo.levels\" ng-bind=\"::level\"></p>\n" +
    "                                    </div>\n" +
    "                                    <div ng-if=\"$ctrl.cultuurKuurInfo.levels.length > 4\" class=\"col-xs-5 col-sm-5 col-md-5 col-lg-5\">\n" +
    "                                        <a role=\"button\" data-toggle=\"collapse\" href=\"#level\" aria-expanded=\"false\" aria-controls=\"level\"> {{$ctrl.cultuurKuurInfo.levels.length}} onderwijsgraden</a>\n" +
    "                                        <div class=\"collapse\" id=\"level\">\n" +
    "                                            <div>\n" +
    "                                                <p ng-repeat=\"level in ::$ctrl.cultuurKuurInfo.levels\" ng-bind=\"::level\"></p>\n" +
    "\n" +
    "                                            </div>\n" +
    "                                        </div>\n" +
    "                                    </div>\n" +
    "                                </div>\n" +
    "                            </div>\n" +
    "                        </div>\n" +
    "                    </div>\n" +
    "                    <div class=\"panel-footer\"> <a ng-href=\"{{::$ctrl.editLink}}\" target=\"_blank\">Wijzig op cultuurkuur.be</a>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "            <div class=\"alert alert-info\" ng-if=\"::$ctrl.isIncomplete && $ctrl.forSchools\">\n" +
    "                <p>Bekijk je evenement op cultuurkuur.be en voeg de juiste onderwijsniveaus toe zodat leerkrachten je vinden.</p>\n" +
    "                <a ng-href=\"{{::$ctrl.continueLink}}\" target=\"_blank\" class=\"btn btn-default btn-info\">Doorgaan</a>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "    <div ng-if=\"::$ctrl.cultuurkuurMaintenance\">\n" +
    "        <div class=\"alert alert-warning\">\n" +
    "            <p ng-bind=\"::$ctrl.cultuurkuurMessage\"></p>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/dashboard-item.directive.html',
    "<td ng-class=\"{past: offerCtrl.offerExpired}\">\n" +
    "  <strong>\n" +
    "    <a ng-href=\"{{ event.url  + '/preview' }}\" ng-bind=\"::event.name\"></a>\n" +
    "  </strong>\n" +
    "  <span ng-if=\"event.workflowStatus==='DELETED' || event.workflowStatus==='DRAFT' \" class=\"label label-default\" translate-once=\"workflowStatus.DRAFT\"></span>\n" +
    "  <span class=\"label label-default\" ng-if=\"offerCtrl.hasFutureAvailableFrom && !offerCtrl.offerExpired && event.workflowStatus!=='DRAFT' && !offerCtrl.hideOnlineDate\"><span translate-once=\"workflowStatus.APPROVED\">Online op</span> <span ng-bind=\"::event.availableFrom | date:'yyyy-MM-dd'\"></span></span>\n" +
    "  <span ng-if=\"event.workflowStatus==='REJECTED'\"><span class=\"label label-default\" translate-once=\"workflowStatus.REJECTED\">Publicatie afgewezen</span><small>&nbsp;<a ng-href=\"{{::dash.publicationRulesLink}}\" target=\"blank\" translate-once=\"workflowStatus.rules\"></a></small></span>\n" +
    "  <br/>\n" +
    "  <small>\n" +
    "    <span class=\"dashboard-item-type\" ng-bind=\"::translatedOfferType\"></span>\n" +
    "    <span ng-if=\"event.calendarType && (offerType === 'event' || (event.calendarType !== 'permanent' && offerType === 'place'))\">\n" +
    "      <span> - </span>\n" +
    "      <udb-calendar-summary offer=\"event\" show-opening-hours=\"true\"></udb-calendar-summary>\n" +
    "    </span>\n" +
    "  </small>\n" +
    "</td>\n" +
    "\n" +
    "<td ng-if=\"!offerCtrl.fetching\" ng-class=\"{past: offerCtrl.offerExpired}\">\n" +
    "  <span ng-if=\"::!offerCtrl.offerExpired\">\n" +
    "    <div class=\"pull-right btn-group\" uib-dropdown>\n" +
    "      <a class=\"btn btn-default\" ng-href=\"{{ event.url + '/edit' }}\" translate-once=\"dashboard.directive.edit\"></a>\n" +
    "      <button type=\"button\" class=\"btn btn-default\" uib-dropdown-toggle><span class=\"caret\"></span></button>\n" +
    "      <ul uib-dropdown-menu role=\"menu\">\n" +
    "        <li role=\"menuitem\">\n" +
    "          <a ng-href=\"{{ event.url  + '/preview' }}\" translate-once=\"dashboard.directive.example\"></a>\n" +
    "        </li>\n" +
    "        <li class=\"divider\"></li>\n" +
    "        <li role=\"menuitem\">\n" +
    "          <a href=\"\" ng-click=\"dash.openDeleteConfirmModal(event)\" translate-once=\"dashboard.directive.delete\"></a>\n" +
    "        </li>\n" +
    "      </ul>\n" +
    "    </div>\n" +
    "  </span>\n" +
    "  <span ng-if=\"::offerCtrl.offerExpired\">\n" +
    "    <div class=\"pull-right text-right\">\n" +
    "      <span class=\"text-muted\" translate-once=\"dashboard.directive.expired_event\"></span>\n" +
    "      <br ng-if=\"offerCtrl.showConcludedButton()\" />\n" +
    "      <button type=\"button\" class=\"btn btn-default\" ng-if=\"offerCtrl.showConcludedButton()\" ng-click=\"offerCtrl.handleConcludedButtonClick(event.id, event.name)\" ng-bind=\"::offerCtrl.concludedButtonLabel\"></button>\n" +
    "    </div>\n" +
    "  </span>\n" +
    "</td>\n"
  );


  $templateCache.put('templates/dashboard-organizer-item.directive.html',
    "<td>\n" +
    "  <strong>\n" +
    "    <a ui-sref=\"split.organizerDetail({ id: event.id })\" ng-bind=\"::event.name\"></a>\n" +
    "  </strong>\n" +
    "  <br/>\n" +
    "  <small ng-if=\"event.address\">\n" +
    "    <span ng-bind=\"::event.address.streetAddress\"></span>\n" +
    "    <span ng-if=\"_.isEmpty(event.address)\">,</span>\n" +
    "    <span ng-bind=\"::event.address.postalCode\"></span> <span ng-bind=\"::event.address.addressLocality\"></span>\n" +
    "  </small>\n" +
    "</td>\n" +
    "\n" +
    "<td ng-if=\"!organizerCtrl.fetching\">\n" +
    "  <span ng-if=\"!event.deleted\">\n" +
    "    <div class=\"pull-right\">\n" +
    "      <a class=\"btn btn-default\" ui-sref=\"split.organizerEdit({ id: event.id })\" translate-once=\"dashboard.directive.edit\"></a>\n" +
    "    </div>\n" +
    "  </span>\n" +
    "</td>\n"
  );


  $templateCache.put('templates/event-delete-confirm-modal.html',
    "<div class=\"modal-body\">\n" +
    "\n" +
    "    <div class=\"row\">\n" +
    "\n" +
    "      <div class=\"col-xs-12\">\n" +
    "        <p translate-once=\"dashboard.delete.sure\"\n" +
    "           translate-values=\"{ name: '{{item.name}}' }\"></p>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"alert alert-danger\"\n" +
    "           ng-show=\"error\"\n" +
    "           translate-once=\"dashboard.delete.error\">\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button\n" +
    "          type=\"button\"\n" +
    "          class=\"btn btn-default\"\n" +
    "          ng-click=\"cancelRemoval()\"\n" +
    "          translate-once=\"dashboard.delete.cancel\">\n" +
    "  </button>\n" +
    "  <button type=\"button\" class=\"btn btn-primary\" ng-click=\"deleteEvent()\">\n" +
    "    <span translate-once=\"dashboard.delete.delete\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "  </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/place-delete-confirm-modal.html',
    "<div class=\"modal-body\">\n" +
    "    <div class=\"row\">\n" +
    "\n" +
    "      <div class=\"col-xs-12\" ng-if=\"!hasEvents\">\n" +
    "        <p translate-once=\"dashboard.delete.sure\" translate-values=\"{ name: '{{ place.name }}' }\"></p>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"col-xs-12\" ng-if=\"hasEvents\">\n" +
    "        <p translate-once=\"dashboard.delete.error_location\" translate-values=\"{ name: '{{ place.name }}'}\"></p>\n" +
    "\n" +
    "        <ul>\n" +
    "          <li ng-click=\"$dismiss('navigating away')\" ng-repeat=\"event in events\" udb-event-link ng-hide=\"fetching\"></li>\n" +
    "        </ul>\n" +
    "\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"alert alert-danger\" ng-show=\"error\" translate-once=\"dashboard.delete.error\">\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"cancelRemoval()\" translate-once=\"dashboard.delete.cancel\">\n" +
    "  </button>\n" +
    "  <button type=\"button\" class=\"btn btn-primary\" ng-disabled=\"hasEvents\" ng-click=\"deletePlace()\">\n" +
    "    <span translate-once=\"dashboard.delete.delete\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "  </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/dashboard.html',
    "<h1 class=\"title\" id=\"page-title\">\n" +
    "  <span translate-once=\"dashboard.welcome\"></span> <span ng-bind=\"dash.username\"></span>\n" +
    "</h1>\n" +
    "\n" +
    "<div class=\"text-center\" ng-show=\"dash.pagedItemViewer.loading\">\n" +
    "  <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"udb-dashboard-header\">\n" +
    "  <!-- udb-dashboard-header -->\n" +
    "</div>\n" +
    "\n" +
    "<div ng-cloak ng-show=\"!dash.pagedItemViewer.loading\">\n" +
    "\n" +
    "  <div class=\"row udb-dashboard\">\n" +
    "    <div class=\"col-xs-12\">\n" +
    "\n" +
    "      <div class=\"alert alert-info\" ng-if=\"dash.toggleInfoMessage && dash.infoMessage\">\n" +
    "        <span ng-bind-html=\"::dash.infoMessage\"></span>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"alert alert-info\" ng-if=\"!dash.toggleAddOffer && dash.addOfferExpirationMessage\">\n" +
    "        <span ng-bind-html=\"::dash.addOfferExpirationMessage\"></span>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"panel panel-default no-new no-data\" ng-hide=\"dash.pagedItemViewer.events.length\">\n" +
    "        <div class=\"panel-body text-center\">\n" +
    "          <p class=\"text-center\"><span translate-once=\"dashboard.no_items\"></span>\n" +
    "            <span ng-if=\"dash.toggleAddOffer\"><br/><a href=\"event\" translate-once=\"dashboard.add_activity\"></a></span>\n" +
    "          </p>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "      <div ng-show=\"dash.pagedItemViewer.events.length\">\n" +
    "\n" +
    "        <div class=\"clearfix\">\n" +
    "          <p class=\"invoer-title\"><span class=\"block-header\" translate-once=\"dashboard.my_activities\"></span>\n" +
    "            <span class=\"pull-right\" ng-if=\"dash.toggleAddOffer\">\n" +
    "              <a class=\"btn btn-primary\" href=\"event\"><i class=\"fa fa-plus-circle\"></i> <span translate-once=\"dashboard.add\"></span></a>\n" +
    "            </span>\n" +
    "          </p>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"panel panel-default\">\n" +
    "          <table class=\"table\">\n" +
    "            <tbody>\n" +
    "              <tr udb-dashboard-event-item\n" +
    "                  ng-if=\"event['@type'] === 'Event'\"\n" +
    "                  class=\"dashboard-item\" ng-class=\"{'deleting': event.showDeleted}\"\n" +
    "                  ng-repeat-start=\"event in dash.pagedItemViewer.events\">\n" +
    "              </tr>\n" +
    "              <tr udb-dashboard-place-item\n" +
    "                  ng-if=\"event['@type'] === 'Place'\"\n" +
    "                  class=\"dashboard-item\" ng-class=\"{'deleting': event.showDeleted}\"\n" +
    "                  ng-repeat-end>\n" +
    "              </tr>\n" +
    "            </tbody>\n" +
    "          </table>\n" +
    "          <div class=\"panel-footer\">\n" +
    "            <uib-pagination\n" +
    "              total-items=\"dash.pagedItemViewer.totalItems\"\n" +
    "              ng-model=\"dash.pagedItemViewer.currentPage\"\n" +
    "              items-per-page=\"dash.pagedItemViewer.pageSize\"\n" +
    "              ng-show=\"dash.pagedItemViewer.totalItems > 0\"\n" +
    "              max-size=\"10\"\n" +
    "              ng-change=\"dash.updateItemViewer()\">\n" +
    "            </uib-pagination>\n" +
    "          </div>\n" +
    "\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "      <div ng-show=\"dash.pagedItemViewerOrganizers.events.length && dash.enableMyOrganizers\">\n" +
    "\n" +
    "        <div class=\"clearfix\">\n" +
    "          <p class=\"invoer-title\"><span class=\"block-header\" translate-once=\"dashboard.my_organizers\"></span>\n" +
    "            <span class=\"pull-right\" ng-if=\"dash.toggleAddOffer\">\n" +
    "              <a class=\"btn btn-primary\" href=\"organizer\"><i class=\"fa fa-plus-circle\"></i> <span translate-once=\"dashboard.add_organizer\"></span></a>\n" +
    "            </span>\n" +
    "          </p>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"panel panel-default\">\n" +
    "          <table class=\"table\">\n" +
    "            <tbody>\n" +
    "            <tr udb-dashboard-organizer-item\n" +
    "                class=\"dashboard-item\" ng-class=\"{'deleting': event.showDeleted}\"\n" +
    "                ng-repeat-start=\"event in dash.pagedItemViewerOrganizers.events\"\n" +
    "                ng-repeat-end>\n" +
    "            </tr>\n" +
    "            </tbody>\n" +
    "          </table>\n" +
    "          <div class=\"panel-footer\">\n" +
    "            <uib-pagination\n" +
    "                    total-items=\"dash.pagedItemViewerOrganizers.totalItems\"\n" +
    "                    ng-model=\"dash.pagedItemViewerOrganizers.currentPage\"\n" +
    "                    items-per-page=\"dash.pagedItemViewerOrganizers.pageSize\"\n" +
    "                    ng-show=\"dash.pagedItemViewerOrganizers.totalItems > 0\"\n" +
    "                    max-size=\"10\"\n" +
    "                    ng-change=\"dash.updateOrganizerViewer()\">\n" +
    "            </uib-pagination>\n" +
    "          </div>\n" +
    "\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-duplication-footer.component.html',
    "<div class=\"event-validation\">\n" +
    "    <button class=\"btn btn-success\"\n" +
    "            ng-disabled=\"duplication.duplicating\"\n" +
    "            ng-click=\"duplication.createDuplicate()\"\n" +
    "            role=\"button\"\n" +
    "            ng-class=\"{disabled: !duplication.readyForDuplication}\"\n" +
    "            translate-once=\"duplicate.title\"></button>\n" +
    "    <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"duplication.duplicating\"></i>\n" +
    "    <span ng-show=\"duplication.asyncError\" translate-once=\"duplicate.error\"></span>\n" +
    "</div>"
  );


  $templateCache.put('templates/event-duplication-step.component.html',
    "<h1 class=\"title\" translate-once=\"duplicate.title\"></h1>\n" +
    "\n" +
    "<div class=\"alert alert-info\" role=\"alert\" translate-once=\"duplicate.description\"></div>\n" +
    "\n" +
    "<udb-event-duplication-calendar></udb-event-duplication-calendar>\n"
  );


  $templateCache.put('templates/event-duplication.html',
    "<div class=\"offer-form\" ng-if=\"loaded\">\n" +
    "    <udb-event-duplication-step></udb-event-duplication-step>\n" +
    "    <udb-event-duplication-footer></udb-event-duplication-footer>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/job-logo.directive.html',
    "<div id=\"indicator\" class=\"{{jl.getState()}}\">\n" +
    "  <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n" +
    "    <g class=\"warning\">\n" +
    "      <circle cx=\"20\" cy=\"40\" r=\"10\" id=\"warning-background\"></circle>\n" +
    "      <circle fill=\"#ED1C24\" cx=\"20\" cy=\"40\" r=\"8\" id=\"warning-circle\"></circle>\n" +
    "      <g transform=\"translate(-50,-1.666667)\">\n" +
    "        <path fill=\"#FFFFFF\"\n" +
    "              d=\"M68.798,45.538c0-0.383,0.103-0.672,0.308-0.868s0.504-0.294,0.896-0.294c0.378,0,0.671,0.1,0.878,0.301 c0.208,0.201,0.312,0.488,0.312,0.861c0,0.36-0.104,0.644-0.314,0.851S70.375,46.7,70.001,46.7c-0.383,0-0.679-0.102-0.889-0.304 S68.798,45.907,68.798,45.538z M70.842,43.2h-1.668l-0.349-6.679h2.365L70.842,43.2z\"\n" +
    "              id=\"warning-remark\"></path>\n" +
    "      </g>\n" +
    "    </g>\n" +
    "\n" +
    "    <g class=\"busy\" fill-rule=\"evenodd\" fill=\"none\">\n" +
    "      <circle cx=\"20\" cy=\"40\" r=\"10\" id=\"busy-background\"></circle>\n" +
    "      <g stroke-width=\"2\" transform=\"translate(14 34)\" class=\"busy-spinner\">\n" +
    "        <path d=\"M12 6c0-6-6-6-6-6\" transform=\"rotate(308.674 6 6)\">\n" +
    "          <animateTransform repeatCount=\"indefinite\" dur=\"1s\" to=\"360 6 6\" from=\"0 6 6\" type=\"rotate\"\n" +
    "                            attributeName=\"transform\"></animateTransform>\n" +
    "        </path>\n" +
    "      </g>\n" +
    "    </g>\n" +
    "\n" +
    "    <g class=\"complete\" fill-rule=\"evenodd\" fill=\"none\">\n" +
    "      <circle cx=\"20\" cy=\"40\" r=\"10\" id=\"complete-background\"></circle>\n" +
    "      <circle cx=\"20\" cy=\"40\" r=\"8\" id=\"complete-circle\"></circle>\n" +
    "      <g stroke-width=\"2\" transform=\"translate(-6 14)\" class=\"complete-check\">\n" +
    "        <path d=\"M31.162,24.359l-4.612,4.611l-0.864,0.867c-0.115,0.114-0.274,0.178-0.434,0.178s-0.318-0.063-0.433-0.178\n" +
    "        l-0.866-0.867l-2.307-2.307c-0.115-0.114-0.179-0.272-0.179-0.432c0-0.16,0.063-0.318,0.179-0.433l0.866-0.867\n" +
    "        c0.115-0.115,0.273-0.179,0.434-0.179c0.159,0,0.317,0.063,0.433,0.179l1.873,1.88l4.178-4.186\n" +
    "        c0.115-0.115,0.275-0.179,0.434-0.179c0.159,0,0.318,0.063,0.433,0.179l0.866,0.866c0.116,0.114,0.179,0.273,0.179,0.434\n" +
    "        C31.341,24.086,31.278,24.244,31.162,24.359z\"></path>\n" +
    "      </g>\n" +
    "    </g>\n" +
    "  </svg>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/offer-label-modal.html',
    "<div class=\"modal-body offer-label-modal\">\n" +
    "\n" +
    "  <h2>Labels</h2>\n" +
    "\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"col-lg-12\">\n" +
    "      <input type=\"text\"\n" +
    "             class=\"form-control\"\n" +
    "             ng-model=\"lmc.labelNames\"\n" +
    "             name=\"labels\" />\n" +
    "      <p class=\"help-block\">Een puntkomma start een nieuw label. <br />\n" +
    "        <span class=\"lmc-alert text-danger\" ng-if=\"lmc.alert\" ng-bind=\"lmc.alert\"><</span></p>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"col-lg-12\">\n" +
    "      <div class=\"checkbox\" ng-repeat=\"label in lmc.labelSelection\">\n" +
    "        <label>\n" +
    "          <input type=\"checkbox\" ng-model=\"label.selected\"/>\n" +
    "          <span ng-bind=\"label.name\"></span>\n" +
    "        </label>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button class=\"btn btn-default\" ng-click=\"lmc.close()\">Annuleren</button>\n" +
    "  <button class=\"btn btn-primary\" ng-click=\"lmc.ok()\">Label</button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/offer-languages-modal.html',
    "<div class=\"modal-body offer-languages-modal\">\n" +
    "  <h2>Taaliconen toevoegen</h2>\n" +
    "  <div class=\"alert alert-info\" role=\"alert\">\n" +
    "    Aan de hand van taaliconen geef je aan hoeveel kennis van het Nederlands vereist is om aan je aanbod te kunnen\n" +
    "    deelnemen. Een leidraad over taaliconen vind je <a\n" +
    "    href=\"https://helpdesk.publiq.be/hc/nl/articles/15301494887058-Hoe-voeg-ik-taaliconen-toe\" target=\"_blank\">hier</a>\n" +
    "  </div>\n" +
    "  <div class=\"checkbox\" ng-repeat=\"(index,option) in lmc.options\">\n" +
    "    <label>\n" +
    "      <input type=\"checkbox\" ng-model=\"option.selected\"/>\n" +
    "      <span style=\"display:flex; gap: 5px; justify-content: flex-start; align-items: center\">\n" +
    "        <img ng-src=\"../images/language-icons/{{index+1}}.png\" style=\"height: 1em\" />\n" +
    "        <strong ng-bind=\"option.label\"></strong>\n" +
    "      </span>\n" +
    "      <span class=\"text-muted\" ng-bind=\"option.text\"></span>\n" +
    "    </label>\n" +
    "  </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button class=\"btn btn-default\" ng-click=\"lmc.close()\">Annuleren</button>\n" +
    "  <button class=\"btn btn-primary\" ng-click=\"lmc.ok()\">Toevoegen</button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/base-job.template.html',
    "<p>\n" +
    "  <ins>\n" +
    "    <span am-time-ago=\"::job.getLogDateByState()\"></span> <i class=\"fa fa-circle-o-notch fa-spin udb-job-busy\"\n" +
    "       ng-show=\"job.state === 'started'\"></i>\n" +
    "  </ins>\n" +
    "  <span class=\"udb-job-description\" ng-bind=\"::job.getDescription()\"></span>\n" +
    "</p>\n"
  );


  $templateCache.put('templates/failed-job.template.html',
    "<p>\n" +
    "  <a class=\"udb-hide-job-button\" ng-click=\"hideJob(job)\">\n" +
    "    <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\n" +
    "  </a>\n" +
    "  <ins>\n" +
    "    <span am-time-ago=\"::job.getLogDateByState()\"></span>\n" +
    "  </ins>\n" +
    "  <span ng-bind=\"job.getDescription()\"></span>\n" +
    "</p>\n"
  );


  $templateCache.put('templates/job-log.component.html',
    "<div class=\"udb-job-log\" ng-class=\"{'shown': logger.isVisible()}\">\n" +
    " <div class=\"udb-job-log-header\">\n" +
    "     <div class=\"row\">\n" +
    "         <div class=\"col-sm-12\">\n" +
    "            <button type=\"button\" class=\"close\" ng-click=\"logger.hideJobLog()\"><span aria-hidden=\"true\">&times;</span></button>\n" +
    "         </div>\n" +
    "         <div class=\"col-sm-12\">\n" +
    "           <div class=\"udb-job-log-header-message\">\n" +
    "             <!-- udb-job-log-header-message -->\n" +
    "           </div>\n" +
    "         </div>\n" +
    "     </div>\n" +
    " </div>\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"col-sm-12\">\n" +
    "      <div class=\"udb-job-block udb-job-block-ready\">\n" +
    "        <p class=\"udb-job-title\" translate-once=\"entry.exported_documents\"></p>\n" +
    "        <ul class=\"list-unstyled udb-job-messages\">\n" +
    "          <li class=\"udb-alert repeat-animation\" ng-repeat=\"job in logger.getFinishedExportJobs()\">\n" +
    "            <udb-job></udb-job>\n" +
    "          </li>\n" +
    "        </ul>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"udb-job-block udb-job-block-errors\">\n" +
    "        <p class=\"udb-job-title\" translate-once=\"entry.notifications\"> <span class=\"badge\" ng-bind=\"logger.getFailedJobs().length\"></span></p>\n" +
    "        <ul class=\"list-unstyled udb-job-messages\">\n" +
    "          <li class=\"udb-alert repeat-animation\" ng-repeat=\"job in logger.getFailedJobs()\">\n" +
    "            <udb-job></udb-job>\n" +
    "          </li>\n" +
    "        </ul>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"udb-job-block udb-job-block-pending\">\n" +
    "        <p class=\"udb-job-title\" translate=\"entry.in_progress\"></p>\n" +
    "        <ul class=\"list-unstyled udb-job-messages\">\n" +
    "          <li class=\"udb-alert repeat-animation\" ng-repeat=\"job in logger.getQueuedJobs()\">\n" +
    "            <udb-job></udb-job>\n" +
    "          </li>\n" +
    "        </ul>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"udb-job-log-footer-message\">\n" +
    "        <!-- udb-job-log-footer-message -->\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n" +
    "<div class=\"udb-job-log-overlay\" ng-class=\"{'shown': logger.isVisible()}\" ng-click=\"logger.hideJobLog()\"></div>\n"
  );


  $templateCache.put('templates/booking-info-detail.directive.html',
    "<tr ng-class=\"::{muted: isEmpty(bookingInfo) || (bookingInfo.phone == null && bookingInfo.email == null && bookingInfo.url == null)}\">\n" +
    "    <td>\n" +
    "        <span class=\"row-label\" translate-once=\"booking.label\"></span>\n" +
    "    </td>\n" +
    "    <td ng-if=\"hasAtLeastOneContactPoint()\">\n" +
    "        <ul class=\"list-unstyled\" >\n" +
    "            <li ng-if=\"::bookingInfo.url\">\n" +
    "                    <span>\n" +
    "                      <a class=\"btn btn-info\" target=\"_blank\" ng-href=\"{{::bookingInfo.url}}\"\n" +
    "                         ng-bind=\"::bookingInfo.urlLabel\"></a>\n" +
    "                    </span>\n" +
    "            </li>\n" +
    "\n" +
    "            <li ng-if=\"::bookingInfo.phone\" ng-bind=\"::bookingInfo.phone\"></li>\n" +
    "            <li ng-if=\"::bookingInfo.email\"> <a href=\"::{{'mailto:'+ bookingInfo.email}}\">{{::bookingInfo.email}}</a></li>\n" +
    "            <li ng-if=\"::bookingInfo.availabilityStarts\" > Van {{::bookingInfo.availabilityStarts | date}} tot {{::bookingInfo.availabilityEnds | date}}</li>\n" +
    "        </ul>\n" +
    "    </td>\n" +
    "    <td ng-if=\"!hasAtLeastOneContactPoint()\" translate-once=\"booking.no_booking\"></td>\n" +
    "</tr>\n"
  );


  $templateCache.put('templates/contact-point-detail.directive.html',
    "<tr ng-class=\"::{muted: isEmpty(contactPoint)}\">\n" +
    "    <td>\n" +
    "        <span class=\"row-label\" translate-once=\"contact.label\"></span>\n" +
    "    </td>\n" +
    "    <td ng-if=\"::!isEmpty(contactPoint)\">\n" +
    "        <ul class=\"list-unstyled\">\n" +
    "            <li>\n" +
    "                    <span ng-repeat=\"website in ::contactPoint.url track by $index\">\n" +
    "                      <a ng-href=\"{{::website}}\" target=\"_blank\" ng-bind=\"::website\"></a>\n" +
    "                      <span ng-if=\"::!$last\" translate-once=\"contact.or\"> </span>\n" +
    "                    </span>\n" +
    "            </li>\n" +
    "            <li>\n" +
    "                    <span ng-repeat=\"phone in ::contactPoint.phone track by $index\">\n" +
    "                      <span ng-bind=\"::phone\"></span>\n" +
    "                      <span ng-if=\"::!$last\" translate-once=\"contact.or\"> </span>\n" +
    "                    </span>\n" +
    "            </li>\n" +
    "            <li>\n" +
    "                    <span ng-repeat=\"email in ::contactPoint.email track by $index\">\n" +
    "                      <span ng-bind=\"::email\"></span>\n" +
    "                      <span ng-if=\"::!$last\" translate-once=\"contact.or\"> </span>\n" +
    "                    </span>\n" +
    "            </li>\n" +
    "        </ul>\n" +
    "    </td>\n" +
    "    <td ng-if=\"::isEmpty(contactPoint)\" translate-once=\"contact.no_contact\"></td>\n" +
    "</tr>\n"
  );


  $templateCache.put('templates/event-detail.html',
    "<div ng-if=\"eventIdIsInvalid\">\n" +
    "  <div class=\"page-header\">\n" +
    "    <h1 translate-once=\"preview.not_found\"></h1>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"col-xs-12\">\n" +
    "      <p translate-once=\"preview.not_found_help\"></p>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-if=\"!finishedLoading()\">\n" +
    "  <p class=\"title\"><span class=\"placeholder-title\"></span></p>\n" +
    "  <p class=\"text-center\"><i class=\"fa fa-circle-o-notch fa-spin fa-fw\"></i><span class=\"sr-only\" translate-once=\"preview.loading\"></span></p>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-if=\"finishedLoading()\" class=\"event-detail\">\n" +
    "  <h1 class=\"title\" ng-bind=\"::event.name\"></h1>\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"col-sm-3 col-sm-push-9\">\n" +
    "      <div class=\"list-group\" ng-if=\"::permissions\">\n" +
    "        <button ng-if=\"::permissions.editing\"\n" +
    "                class=\"list-group-item\"\n" +
    "                type=\"button\"\n" +
    "                ng-disabled=\"!isEditable()\"\n" +
    "                ng-class=\"{'disabled': !isEditable()}\"\n" +
    "                ng-click=\"openEditPage()\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.edit\"></span> <span class=\"badge\" ng-if=\"event.mainLanguage !== language\" ng-bind=\"::event.mainLanguage\"></span></button>\n" +
    "        <button ng-if=\"::(permissions.moderate && permissions.editingMovies)\"\n" +
    "                class=\"list-group-item\"\n" +
    "                type=\"button\"\n" +
    "                ng-disabled=\"!isEditable()\"\n" +
    "                ng-class=\"{'disabled': !isEditable()}\"\n" +
    "                ng-click=\"openEditPageMovies()\"><i class=\"fas fa-video\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.editMovie\"></span> <span class=\"badge\" ng-if=\"event.mainLanguage !== language\" ng-bind=\"::event.mainLanguage\"></span></button>\n" +
    "        <button ng-if=\"::permissions.moderate\"\n" +
    "                class=\"list-group-item\"\n" +
    "                type=\"button\"\n" +
    "                ng-disabled=\"!isEditable()\"\n" +
    "                ng-class=\"{'disabled': !isEditable()}\"\n" +
    "                ng-click=\"openTranslatePage()\"><i class=\"fa fa-globe\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.translate\"></span></button>\n" +
    "        <button ng-if=\"::permissions.duplication\"\n" +
    "                class=\"list-group-item\"\n" +
    "                type=\"button\"\n" +
    "                ng-disabled=\"!isEditable()\"\n" +
    "                ng-class=\"{'disabled': !isEditable()}\"\n" +
    "                ui-sref='duplication.event(::{id: event.id})'><i class=\"far fa-copy\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.duplicate\"></span></button>\n" +
    "        <button ng-if=\"::(permissions.duplication && permissions.editingMovies)\"\n" +
    "                class=\"list-group-item\"\n" +
    "                type=\"button\"\n" +
    "                ng-disabled=\"!isEditable()\"\n" +
    "                ng-class=\"{'disabled': !isEditable()}\"\n" +
    "                ng-click=\"duplicateMovie()\"><i class=\"fas fa-video\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.duplicate_as_movie\"></span></button>\n" +
    "        <a ng-if=\"::(permissions.moderate && !isOmdApp)\"\n" +
    "           class=\"list-group-item\"\n" +
    "           ng-disabled=\"!isEditable()\"\n" +
    "           ng-class=\"{'disabled': !isEditable()}\"\n" +
    "           ng-href=\"{{ event.url + '/status' }}\"><i class=\"far fa-calendar-check\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.change_availability\"></span></a>\n" +
    "        <button ng-if=\"::permissions.delete\"\n" +
    "                class=\"list-group-item\"\n" +
    "                href=\"#\"\n" +
    "                ng-disabled=\"!isDeletable()\"\n" +
    "                ng-class=\"{'disabled': !isDeletable()}\"\n" +
    "                ng-click=\"deleteEvent()\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.delete\"></span></button>\n" +
    "        <udb-moderation-offer ng-if=\"::moderationPermission\" class=\"list-group-item moderation-detail\" offer-id=\"{{::event['@id']}}\" continue=\"true\"></udb-moderation-offer>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "    <div class=\"col-sm-9 col-sm-pull-3\">\n" +
    "      <ul class=\"nav nav-tabs\">\n" +
    "        <li ng-repeat=\"tab in tabs\" ng-class=\"{active: isTabActive(tab.id)}\" role=\"tab\">\n" +
    "          <a ng-click=\"makeTabActive(tab.id)\" role=\"tab\" translate-once=\"preview.tabs.{{tab.id}}\" href=\"#\"></a>\n" +
    "        </li>\n" +
    "      </ul>\n" +
    "\n" +
    "      <div class=\"tab-pane\" role=\"tabpanel\" ng-show=\"isTabActive('data')\">\n" +
    "          <table class=\"table udb3-data-table\">\n" +
    "            <colgroup>\n" +
    "              <col style=\"width:20%\"/>\n" +
    "              <col style=\"width:80%\"/>\n" +
    "            </colgroup>\n" +
    "            <tbody>\n" +
    "              <tr>\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.title\"></span></td>\n" +
    "                <td>{{::event.name}}</td>\n" +
    "              </tr>\n" +
    "              <tr>\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.type\"></span></td>\n" +
    "                <td>{{::translateType(event.type.label)}}</td>\n" +
    "              </tr>\n" +
    "              <tr ng-if=\"::event.audience.audienceType !== 'everyone'\">\n" +
    "                <td><span class=\"row-label\">Toegang</span></td>\n" +
    "                <td>\n" +
    "                  <p ng-bind=\"::translateAudience(event.audience.audienceType)\"></p>\n" +
    "                  <udb-event-cultuurkuur-component\n" +
    "                          ng-if=\"::cultuurkuurEnabled\"\n" +
    "                          event=\"event\"\n" +
    "                          permission=\"::permissions.editing\" >\n" +
    "                  </udb-event-cultuurkuur-component>\n" +
    "                </td>\n" +
    "              </tr>\n" +
    "              <tr>\n" +
    "                <td>\n" +
    "                  <span class=\"row-label\" translate-once=\"preview.labels\"></span>\n" +
    "                </td>\n" +
    "                <td>\n" +
    "                  <p>\n" +
    "                    <udb-label-select labels=\"::event.labels\"\n" +
    "                                    label-added=\"labelAdded(label)\"\n" +
    "                                    label-removed=\"labelRemoved(label)\">\n" +
    "                    </udb-label-select>\n" +
    "                  </p>\n" +
    "                  <p ng-if=\"labelResponse === 'error'\" class=\"alert alert-danger\">\n" +
    "                    <span translate-once=\"preview.labels_error\" translate-values=\"{ labelName: '{{labelsError.name}}' }\"></span>\n" +
    "                  </p>\n" +
    "                  <p ng-if=\"labelResponse === 'success'\" class=\"alert alert-success\">\n" +
    "                    <span translate-once=\"preview.labels_success\" translate-values=\"{ addedLabel: '{{addedLabel}}' }\"></span>\n" +
    "                  </p>\n" +
    "                  <p ng-if=\"labelResponse === 'unlabelError'\" class=\"alert alert-danger\">\n" +
    "                    <span ng-if=\"labelsError !== 'Label not allowed'\" ng-bind=\"labelsError\"></span>\n" +
    "                    <span ng-if=\"labelsError === 'Label not allowed'\" translate-once=\"errors.labelNotAllowed\"></span>\n" +
    "                  </p>\n" +
    "                </td>\n" +
    "              </tr>\n" +
    "              <tr ng-class=\"::{muted: isEmpty(event.description)}\">\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.description\"></span></td>\n" +
    "                <td ng-if=\"::(!isEmpty(event.description))\">\n" +
    "                  <div ng-bind-html=\"::event.description\" class=\"event-detail-description\"></div>\n" +
    "                </td>\n" +
    "                <td ng-if=\"::(isEmpty(event.description))\" translate-once=\"preview.no_description\"></td>\n" +
    "              </tr>\n" +
    "              <tr ng-show=\"::event.location.isRealLocation\">\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.where\"></span></td>\n" +
    "                <td ng-show=\"::event.location.url\"><a ui-sref=\"split.footer.place-preview({id: event.location.id})\">{{eventLocation(event)}}</a></td>\n" +
    "                <td ng-hide=\"::event.location.url\">\n" +
    "                  {{eventLocation(event)}}\n" +
    "                </td>\n" +
    "              </tr>\n" +
    "              <tr ng-show=\"::event.location.isDummyPlaceForEducationEvents\">\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.where\"></span></td>\n" +
    "                <td><span translate-once=\"preview.bookable_event_location_info\"></span></td>\n" +
    "              </tr>\n" +
    "              <tr ng-show=\"::event.location.isVirtualLocation\">\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.where\"></span></td>\n" +
    "                <td><span translate-once=\"preview.online\"></span></td>\n" +
    "              </tr>\n" +
    "              <tr ng-show=\"::event.attendanceMode !== 'offline'\">\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.online_location\"></span></td>\n" +
    "                <td>\n" +
    "                  <span ng-show=\"::(!isEmpty(event.onlineUrl))\">\n" +
    "                    <a href=\"{{::event.onlineUrl}}\" target=\"_blank\">{{::event.onlineUrl}}</a>\n" +
    "                  </span>\n" +
    "                  <span ng-show=\"::(isEmpty(event.onlineUrl))\" translate-once=\"preview.online_location_missing\"></span>\n" +
    "                </td>\n" +
    "              </tr>\n" +
    "              <tr>\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.when\"></span></td>\n" +
    "                <td>\n" +
    "                  <span ng-if=\"::calendarSummary\" ng-bind-html=\"::calendarSummary\"></span>\n" +
    "                  <span class=\"text-muted\"\n" +
    "                        ng-if=\"::(calendarSummary !== undefined ? (calendarSummary === false) : undefined)\">\n" +
    "                      Probleem bij het ophalen van de kalenderinformatie\n" +
    "                  </span>\n" +
    "                  <div ng-if=\"isLessonSeries\" class=\"alert alert-info lesson-series-info\">\n" +
    "                    <p translate-once=\"preview.info_lesson_series\"></p>\n" +
    "                  </div>\n" +
    "                  <div ng-if=\"isHolidayCamp\" class=\"alert alert-info lesson-series-info\">\n" +
    "                    <p translate-once=\"preview.info_holiday_camp\"></p>\n" +
    "                  </div>\n" +
    "                </td>\n" +
    "              </tr>\n" +
    "              <tr ng-class=\"::{muted: (!event.organizer)}\">\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.organizer\"></span></td>\n" +
    "                <td ng-if=\"::event.organizer\">\n" +
    "                  <a ng-if=\"::(!event.hasDummyOrganizer)\" ng-href=\"/organizer/{{event.organizer.id}}/preview\" >{{::event.organizer.name}}</a>\n" +
    "                  <span ng-if=\"::(event.hasDummyOrganizer)\">{{::event.organizer.name}}</span>\n" +
    "                </td>\n" +
    "                <td ng-if=\"::(!event.organizer)\" translate-once=\"preview.no_organizer\"></td>\n" +
    "              </tr>\n" +
    "              <tr class=\"rv-event-info-price\" ng-class=\"::{muted: !event.priceInfo.length}\">\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.price\"></span></td>\n" +
    "                <td ng-if=\"::event.priceInfo.length\">\n" +
    "                  <table class=\"table table-bordered event-detail-price-table\">\n" +
    "                    <tr ng-repeat=\"priceInfo in ::event.priceInfo\">\n" +
    "                      <td>{{priceInfo.name}}</td>\n" +
    "                      <td>\n" +
    "                        <span ng-if=\"priceInfo.price == 0\" translate-once=\"preview.free\"></span>\n" +
    "                        <span ng-if=\"::priceInfo.price != 0\">\n" +
    "                          {{priceInfo.price | currency}} <span translate-once=\"preview.currency\"></span>\n" +
    "                        </span>\n" +
    "                      </td>\n" +
    "                    </tr>\n" +
    "                  </table>\n" +
    "                </td>\n" +
    "                <td ng-if=\"::(event.priceInfo.length == 0)\" translate-once=\"preview.no_price\"></td>\n" +
    "              </tr>\n" +
    "              <tr>\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.booking_availability\"></span></td>\n" +
    "                <td ng-if=\"::(event.bookingAvailability.type == 'Available')\" translate-once=\"preview.booking_available\"></td>\n" +
    "                <td ng-if=\"::(event.bookingAvailability.type == 'Unavailable')\" translate-once=\"preview.booking_unavailable\"></td>\n" +
    "              </tr>\n" +
    "              <tr>\n" +
    "                <td><span class=\"row-label\" translate-once=\"workflowStatus.label\"></span></td>\n" +
    "                <td>{{::translateWorkflowStatus(event.workflowStatus)}}</td>\n" +
    "              </tr>\n" +
    "            </tbody>\n" +
    "            <tbody ng-if=\"::(!isEmpty(event.bookingInfo))\" udb-booking-info-detail=\"::event.bookingInfo\"></tbody>\n" +
    "            <tbody udb-contact-point-detail=\"::event.contactPoint\"></tbody>\n" +
    "            <tbody>\n" +
    "              <tr  ng-class=\"::{muted: noAgeInfo}\">\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.age_label\"></span></td>\n" +
    "                <td>\n" +
    "                  <span ng-if=\"::!allAges && !noAgeInfo\">{{ageRange}}</span>\n" +
    "                  <span ng-if=\"::allAges && !noAgeInfo\" translate-once=\"preview.all_ages\"></span>\n" +
    "                  <span ng-if=\"noAgeInfo\" translate-once=\"preview.no_age\"></span>\n" +
    "                </td>\n" +
    "\n" +
    "              </tr>\n" +
    "            </tbody>\n" +
    "            <tbody udb-image-detail=\"::event.mediaObject\" image=\"::event.image\"></tbody>\n" +
    "            <tbody>\n" +
    "              <tr ng-class=\"::{muted:isEmpty(event.videos)}\">\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.videos_label\"></span></td>\n" +
    "                <td ng-if=\"::event.videos.length\">\n" +
    "                  <ul>\n" +
    "                    <li ng-repeat=\"video in ::event.videos\">\n" +
    "                      <a target=\"_blank\" rel=\"noopener noreferrer\" ng-href=\"{{video.url}}\" >{{ video.url }}</a>\n" +
    "                    </li>\n" +
    "                  </ul>\n" +
    "                </td>\n" +
    "                <td ng-if=\"::isEmpty(event.videos)\" translate-once=\"preview.no_videos\"></td>\n" +
    "              </tr>\n" +
    "            </tbody>\n" +
    "          </table>\n" +
    "      </div>\n" +
    "\n" +
    "      <div role=\"tabpanel\" class=\"tab-pane\" ng-show=\"isTabActive('history')\">\n" +
    "        <div class=\"timeline\">\n" +
    "          <p ng-show=\"!eventHistory\" class=\"text-center\">\n" +
    "            <i class=\"fa fa-circle-o-notch fa-spin fa-fw\"></i><span class=\"sr-only\" translate-once=\"preview.loading\"></span>\n" +
    "          </p>\n" +
    "          <div ng-if=\"::eventHistory\">\n" +
    "            <dl ng-repeat=\"eventAction in ::eventHistory track by $index\">\n" +
    "              <dt ng-bind=\"::eventAction.date | date:'dd/MM/yyyy H:mm'\"></dt>\n" +
    "              <dd>\n" +
    "                <span class=\"author\" ng-if=\"eventAction.author\" ng-bind=\"::eventAction.author\"></span>\n" +
    "                <br ng-if=\"::eventAction.author\"/>\n" +
    "                <span class=\"description\" ng-bind=\"::eventAction.description\"></span>\n" +
    "                <div ng-if=\"::eventAction.api\">\n" +
    "                  API: <span class=\"api\" ng-bind=\"::eventAction.api\"></span>\n" +
    "                </div>\n" +
    "                <div ng-if=\"::eventAction.apiKey\">\n" +
    "                  API key: <span class=\"api\" ng-bind=\"::eventAction.apiKey\"></span>\n" +
    "                  <span ng-if=\"::eventAction.consumerName\">(<span class=\"consumerName\" ng-bind=\"::eventAction.consumerName\"></span>)</span>\n" +
    "                </div>\n" +
    "                <div ng-if=\"::eventAction.clientId\">\n" +
    "                  Client id: <span class=\"api\" ng-bind=\"::eventAction.clientId\"></span>\n" +
    "                </div>\n" +
    "                <div ng-if=\"::eventAction.clientName\">\n" +
    "                  Client name: <span class=\"api\" ng-bind=\"::eventAction.clientName\"></span>\n" +
    "                </div>\n" +
    "              </dd>\n" +
    "            </dl>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"tab-pane\" role=\"tabpanel\" ng-show=\"isTabActive('publication')\">\n" +
    "        <table class=\"table udb3-data-table\">\n" +
    "          <colgroup>\n" +
    "            <col style=\"width:20%\"/>\n" +
    "            <col style=\"width:80%\"/>\n" +
    "          </colgroup>\n" +
    "          <tbody udb-workflow-status=\"::event\">\n" +
    "          </tbody>\n" +
    "        </table>\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/form-age.html',
    "<div class=\"row extra-leeftijd\">\n" +
    "  <div\n" +
    "    class=\"extra-task col-md-8 col-lg-7\"\n" +
    "    ng-class=\"{'state-complete': !!fagec.activeAgeRange}\"\n" +
    "  >\n" +
    "    <label\n" +
    "      ng-show=\"eventFormData.isEvent\"\n" +
    "      translate-once=\"eventForm.step4.age.age_label\"\n" +
    "    ></label>\n" +
    "    <div>\n" +
    "      <span ng-repeat=\"(type, ageRange) in ::fagec.ageRanges\">\n" +
    "        <button\n" +
    "          class=\"form-age-range-button\"\n" +
    "          ng-class=\"(fagec.activeAgeRange === type) ? 'btn active' : 'btn btn-default'\"\n" +
    "          ng-mousedown=\"fagec.setAgeRangeByType(type);\"\n" +
    "        >\n" +
    "          {{ translateAgeRange(ageRange.label) }}\n" +
    "          <span>{{ getAgeRangeLabel(ageRange) }}</span>\n" +
    "        </button>\n" +
    "      </span>\n" +
    "      <div ng-show=\"fagec.rangeInputEnabled\" class=\"form-inline\" id=\"form-age\">\n" +
    "        <form name=\"ageForm\">\n" +
    "          <div class=\"form-group\">\n" +
    "            <label\n" +
    "              for=\"min-age\"\n" +
    "              translate-once=\"eventForm.step4.age.from\"\n" +
    "            ></label>\n" +
    "            <div>\n" +
    "              <input\n" +
    "                type=\"text\"\n" +
    "                class=\"form-control\"\n" +
    "                id=\"min-age\"\n" +
    "                name=\"min\"\n" +
    "                ng-model=\"fagec.minAge\"\n" +
    "                ng-blur=\"fagec.instantSaveAgeRange()\"\n" +
    "                ng-change=\"fagec.delayedSaveAgeRange()\"\n" +
    "                udb-age-input\n" +
    "              />\n" +
    "              <span\n" +
    "                class=\"form-text\"\n" +
    "                translate-once=\"eventForm.step4.age.age\"\n" +
    "              ></span>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "          <div class=\"form-group\">\n" +
    "            <label\n" +
    "              for=\"max-age\"\n" +
    "              translate-once=\"eventForm.step4.age.till\"\n" +
    "            ></label>\n" +
    "            <div>\n" +
    "              <input\n" +
    "                type=\"text\"\n" +
    "                class=\"form-control\"\n" +
    "                id=\"max-age\"\n" +
    "                name=\"max\"\n" +
    "                ng-model=\"fagec.maxAge\"\n" +
    "                ng-blur=\"fagec.instantSaveAgeRange()\"\n" +
    "                ng-change=\"fagec.delayedSaveAgeRange()\"\n" +
    "                udb-age-input\n" +
    "              />\n" +
    "              <span\n" +
    "                class=\"form-text\"\n" +
    "                translate-once=\"eventForm.step4.age.age\"\n" +
    "              ></span>\n" +
    "            </div> \n" +
    "          </div>\n" +
    "        </form>\n" +
    "      </div>\n" +
    "      <div class=\"alert alert-danger\" role=\"alert\" ng-show=\"fagec.error\">\n" +
    "        <span ng-bind=\"fagec.error\"></span>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/form-audience.html',
    "<div class=\"row audience\" ng-if=\"::fac.enabled\">\n" +
    "    <div class=\"extra-task state-complete\">\n" +
    "        <div class=\"col-sm-3\">\n" +
    "            <em class=\"extra-task-label\" translate-once=\"audience.entrance\"></em>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-8\" ng-hide=\"fac.isBookableEvent()\">\n" +
    "            <div class=\"radio\">\n" +
    "                <label>\n" +
    "                    <input ng-model=\"fac.audienceType\"\n" +
    "                           ng-change=\"fac.setAudienceType('everyone')\"\n" +
    "                           type=\"radio\"\n" +
    "                           name=\"audience-type\"\n" +
    "                           id=\"audience-everyone\"\n" +
    "                           value=\"everyone\"\n" +
    "                           checked>\n" +
    "                    <span translate-once=\"audience.everyone\"></span>\n" +
    "                </label>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"radio\">\n" +
    "                <label>\n" +
    "                    <input ng-model=\"fac.audienceType\"\n" +
    "                           ng-change=\"fac.setAudienceType('members')\"\n" +
    "                           type=\"radio\"\n" +
    "                           name=\"audience-type\"\n" +
    "                           id=\"audience-members\"\n" +
    "                           value=\"members\"\n" +
    "                           aria-describedby=\"audience-members-help\">\n" +
    "                    <span translate-once=\"audience.members\"></span>\n" +
    "                    <span id=\"audience-members-help\"\n" +
    "                          class=\"help-block\"\n" +
    "                          translate-once=\"audience.members_help\"\n" +
    "                          ng-show=\"fac.audienceType === 'members'\">\n" +
    "                    </span>\n" +
    "                </label>\n" +
    "            </div>\n" +
    "\n" +
    "\n" +
    "            <div class=\"radio\">\n" +
    "                <label>\n" +
    "                    <input ng-model=\"fac.audienceType\"\n" +
    "                           ng-change=\"fac.setAudienceType('education')\"\n" +
    "                           type=\"radio\"\n" +
    "                           name=\"audience-type\"\n" +
    "                           id=\"audience-education\"\n" +
    "                           value=\"education\"\n" +
    "                           aria-describedby=\"audience-education-help\">\n" +
    "                    <span translate-once=\"audience.education\"></span>\n" +
    "                    <span id=\"audience-education-help\"\n" +
    "                          class=\"help-block\"\n" +
    "                          translate-once=\"audience.education_help\"\n" +
    "                          ng-show=\"fac.audienceType === 'education'\">\n" +
    "                    </span>\n" +
    "                </label>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "        <!-- show bookable event help block-->\n" +
    "        <div class=\"col-sm-8\" ng-show=\"fac.isBookableEvent()\">\n" +
    "          <span class=\"help-block\" translate-once=\"audience.education_help\"></span>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>"
  );


  $templateCache.put('templates/form-calendar-datepicker.component.html',
    "<p class=\"input-group\" ng-class=\"{'has-error': !datepicker.date}\">\n" +
    "    <input type=\"text\" \n" +
    "           class=\"form-control\" \n" +
    "           uib-datepicker-popup=\"dd/MM/yyyy\"\n" +
    "           ng-model=\"datepicker.date\"\n" +
    "           is-open=\"datepicker.isOpen\"\n" +
    "           datepicker-options=\"datepicker.options\"\n" +
    "           ng-required=\"true\"\n" +
    "           ng-change=\"datepicker.changed()\"\n" +
    "           show-button-bar=\"false\"\n" +
    "           ng-disabled=\"datepicker.disabled\"\n" +
    "           ng-focus=\"datepicker.open()\"/>\n" +
    "    <span class=\"input-group-btn\">\n" +
    "        <button type=\"button\"\n" +
    "                class=\"btn btn-default\"\n" +
    "                ng-disabled=\"datepicker.disabled\"\n" +
    "                ng-class=\"{'btn-danger': !datepicker.date}\"\n" +
    "                ng-click=\"datepicker.open()\"><i class=\"fa fa-calendar\"></i></button>\n" +
    "    </span>\n" +
    "</p>"
  );


  $templateCache.put('templates/form-calendar-period.component.html',
    "<div class=\"form-calendar-period\">\n" +
    "    <label>\n" +
    "        <input type=\"checkbox\"\n" +
    "               class=\"permanent-check\"\n" +
    "               ng-model=\"$ctrl.calendarType\"\n" +
    "               ng-disabled=\"$ctrl.disabled\"\n" +
    "               ng-true-value=\"'periodic'\"\n" +
    "               ng-false-value=\"'permanent'\"\n" +
    "               ng-change=\"$ctrl.formData.setCalendarType($ctrl.calendarType)\">\n" +
    "        <span translate-once=\"calendar.period.title\"></span>\n" +
    "    </label>\n" +
    "    <div class=\"periodic-info\">\n" +
    "        <div class=\"start-date\">\n" +
    "            <label translate-once=\"calendar.period.from\"></label>\n" +
    "            <udb-form-calendar-datepicker ng-disabled=\"$ctrl.disabled || $ctrl.formData.calendar.calendarType !== 'periodic'\"\n" +
    "                                            ng-model=\"$ctrl.formData.calendar.startDate\"\n" +
    "                                            ng-change=\"$ctrl.formData.periodicTimingChanged()\">\n" +
    "            </udb-form-calendar-datepicker>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"end-date\">\n" +
    "            <label translate-once=\"calendar.period.till\"></label>\n" +
    "            <udb-form-calendar-datepicker ng-disabled=\"$ctrl.disabled || $ctrl.formData.calendar.calendarType !== 'periodic'\"\n" +
    "                                            ng-model=\"$ctrl.formData.calendar.endDate\"\n" +
    "                                            ng-change=\"$ctrl.formData.periodicTimingChanged()\">\n" +
    "            </udb-form-calendar-datepicker>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"requirements\"\n" +
    "             ng-show=\"$ctrl.formData.calendarType === 'periodic' && $ctrl.formData.periodicRangeError\">\n" +
    "            <div class=\"alert alert-danger\">\n" +
    "                <p translate-once=\"calendar.period.alert\"></p>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/form-calendar-timepicker.component.html',
    "<uib-timepicker ng-model=\"timepicker.time\" \n" +
    "                ng-change=\"timepicker.changed()\" \n" +
    "                ng-disabled=\"timepicker.disabled\"\n" +
    "                hour-step=\"1\" \n" +
    "                minute-step=\"15\" \n" +
    "                show-spinners=\"false\" \n" +
    "                show-meridian=\"false\">\n" +
    "</uib-timepicker>\n"
  );


  $templateCache.put('templates/form-event-calendar.component.html',
    "<div class=\"calendar-type-picker\">\n" +
    "    <div class=\"calendar-type-options\">\n" +
    "\n" +
    "        <a href=\"#\" ng-click=\"calendar.setType('single')\" ng-class=\"{'selected': calendar.type === 'single' || calendar.type === 'multiple' }\">\n" +
    "            <img src=\"../images/form-calendar/days.svg\" class=\"calendar-type-icon\">\n" +
    "            <p class=\"text-center\"><strong translate-once=\"calendar.one_more_days\"></strong></p></a><span class=\"or\" translate-once=\"calendar.or\"></span><a href=\"#\" ng-click=\"calendar.setType('periodic')\" ng-class=\"{'selected': calendar.type === 'periodic' || calendar.type === 'permanent'}\">\n" +
    "            <img src=\"../images/form-calendar/period.svg\" class=\"calendar-type-icon\">\n" +
    "            <p class=\"text-center\"><strong translate-once=\"calendar.default_days\"></strong></p>\n" +
    "        </a>\n" +
    "\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"calendar-timing-info\">\n" +
    "    <div class=\"panel panel-default\">\n" +
    "        <div class=\"panel-body\">\n" +
    "            <div class=\"calendar-time-spans\" ng-if=\"!calendar.weeklyRecurring\">\n" +
    "                <div class=\"calendar-time-span\" ng-repeat=\"timeSpan in calendar.timeSpans track by $index\">\n" +
    "                    <div class=\"column\">\n" +
    "                        <div class=\"row\">\n" +
    "                            <span ng-show=\"calendar.timeSpans.length > 1\" aria-hidden=\"true\" ng-click=\"calendar.removeTimeSpan(timeSpan)\" class=\"close\">×</span>\n" +
    "                            <div class=\"dates\">\n" +
    "                                <div class=\"date form-group\">\n" +
    "                                    <label for=\"time-span-{{$index}}-start-date\" translate-once=\"calendar.start_label\"></label>\n" +
    "                                    <udb-form-calendar-datepicker ng-disabled=\"calendar.timeSpans && calendar.timeSpans[$index].status.type !== 'Available'\" ng-model=\"timeSpan.start\" ng-change=\"calendar.delayedTimeSpanChanged('start')\">\n" +
    "                                    </udb-form-calendar-datepicker>\n" +
    "                                </div>\n" +
    "                                <div class=\"date form-group\">\n" +
    "                                    <label for=\"time-span-{{$index}}-end-date\" translate-once=\"calendar.end_label\"></label>\n" +
    "                                    <udb-form-calendar-datepicker ng-disabled=\"calendar.timeSpans && calendar.timeSpans[$index].status.type !== 'Available'\" ng-model=\"timeSpan.end\" ng-change=\"calendar.delayedTimeSpanChanged('end')\">\n" +
    "                                    </udb-form-calendar-datepicker>\n" +
    "                                </div>\n" +
    "                            </div>\n" +
    "                            <div class=\"timing-control\">\n" +
    "                                <div class=\"checkbox all-day\">\n" +
    "                                    <label for=\"time-span-{{$index}}-has-timing-info\">\n" +
    "                                        <input type=\"checkbox\"\n" +
    "                                            id=\"time-span-{{$index}}-has-timing-info\"\n" +
    "                                            ng-disabled=\"calendar.timeSpans && calendar.timeSpans[$index].status.type !== 'Available'\"\n" +
    "                                            ng-model=\"timeSpan.allDay\"\n" +
    "                                            ng-change=\"calendar.toggleAllDay(timeSpan)\"\n" +
    "                                            class=\"all-day-check\"> <span translate-once=\"calendar.whole_day_label\"></span>\n" +
    "                                    </label>\n" +
    "                                </div>\n" +
    "                            </div>\n" +
    "                            <div class=\"timing\" ng-if=\"!timeSpan.allDay\">\n" +
    "                                <div class=\"time form-group\">\n" +
    "                                    <label translate-once=\"calendar.start_hour_label\"></label>\n" +
    "                                    <udb-form-calendar-timepicker ng-disabled=\"calendar.timeSpans && calendar.timeSpans[$index].status.type !== 'Available'\" ng-model=\"timeSpan.start\" ng-change=\"calendar.delayedTimeSpanChanged('start')\"></udb-form-calendar-timepicker>\n" +
    "                                </div>\n" +
    "\n" +
    "                                <div class=\"time form-group\">\n" +
    "                                    <label translate-once=\"calendar.end_hour_label\"></label>\n" +
    "                                    <udb-form-calendar-timepicker ng-disabled=\"calendar.timeSpans && calendar.timeSpans[$index].status.type !== 'Available'\" ng-model=\"timeSpan.end\" ng-change=\"calendar.delayedTimeSpanChanged('end')\"></udb-form-calendar-timepicker>\n" +
    "                                </div>\n" +
    "                            </div>\n" +
    "                            <div class=\"requirements\" ng-show=\"calendar.timeSpanRequirements[$index] && calendar.timeSpanRequirements[$index].length\">\n" +
    "                                <div class=\"error alert alert-danger\">\n" +
    "                                    <p ng-repeat=\"requirement in calendar.timeSpanRequirements[$index]\"\n" +
    "                                    ng-bind=\"'TIME_SPAN_REQUIREMENTS.' + requirement | translate\"></p>\n" +
    "                                </div>\n" +
    "                            </div>\n" +
    "                        </div>\n" +
    "                        <div ng-if=\"calendar.timeSpans && (calendar.timeSpans[$index].status.type !== 'Available' || calendar.timeSpans[$index].bookingAvailability.type === 'Unavailable')\" class=\"status row alert alert-info\">\n" +
    "                            <span ng-show=\"calendar.timeSpans[$index].status.type === 'TemporarilyUnavailable'\" translate-once=\"offerStatus.postponed\"></span>\n" +
    "                            <span ng-show=\"calendar.timeSpans[$index].status.type === 'Unavailable'\" translate-once=\"offerStatus.cancelled\"></span>\n" +
    "                            <span ng-show=\"calendar.timeSpans[$index].status.type !== 'Available' && calendar.timeSpans[$index].bookingAvailability.type === 'Unavailable'\">&</span>\n" +
    "                            <span ng-show=\"calendar.timeSpans[$index].bookingAvailability.type === 'Unavailable'\" translate-once=\"bookingAvailability.unavailable\"></span>\n" +
    "                        </div>\n" +
    "                    </div>\n" +
    "\n" +
    "                    <a href=\"#\" ng-click=\"calendar.createTimeSpan()\" class=\"add-day-link\" translate-once=\"calendar.add_days\"></a>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"calendar-recurrence\" ng-if=\"calendar.weeklyRecurring\">\n" +
    "                <udb-form-calendar-period ng-disabled=\"calendar.offerStatus && calendar.offerStatus.type !== 'Available'\" form-data=\"calendar.formData\"></udb-form-calendar-period>\n" +
    "                <hr>\n" +
    "                <udb-event-form-opening-hours ng-disabled=\"calendar.offerStatus && calendar.offerStatus.type !== 'Available'\" form-data=\"calendar.formData\" opening-hours=\"calendar.openingHoursCollection\">\n" +
    "                </udb-event-form-opening-hours>\n" +
    "                <div ng-if=\"calendar.offerStatus && calendar.offerStatus.type !== 'Available'\" class=\"status alert alert-info\">\n" +
    "                    <div ng-switch=\"calendar.offerStatus.type\">\n" +
    "                        <span ng-switch-when=\"TemporarilyUnavailable\" translate-once=\"offerStatus.temporarilyClosed\"></span>\n" +
    "                        <span ng-switch-when=\"Unavailable\" translate-once=\"offerStatus.permanentlyClosed\"></span>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "            </div>            \n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/form-place-calendar.component.html',
    "<div class=\"calendar-timing-info\">\n" +
    "    <div class=\"panel panel-default\">\n" +
    "        <div class=\"panel-body\">\n" +
    "            <div class=\"calendar-recurrence\" ng-if=\"calendar.weeklyRecurring\">\n" +
    "                <udb-form-calendar-period ng-disabled=\"calendar.offerStatus && calendar.offerStatus.type !== 'Available'\" form-data=\"calendar.formData\"></udb-form-calendar-period>\n" +
    "                <hr>\n" +
    "                <udb-event-form-opening-hours ng-disabled=\"calendar.offerStatus && calendar.offerStatus.type !== 'Available'\" form-data=\"calendar.formData\" opening-hours=\"calendar.openingHoursCollection\">\n" +
    "                </udb-event-form-opening-hours>\n" +
    "                <div ng-if=\"calendar.offerStatus && calendar.offerStatus.type !== 'Available'\" class=\"status alert alert-info\">\n" +
    "                    <div ng-switch=\"calendar.offerStatus.type\">\n" +
    "                        <span ng-switch-when=\"TemporarilyUnavailable\" translate-once=\"offerStatus.temporarilyClosed\"></span>\n" +
    "                        <span ng-switch-when=\"Unavailable\" translate-once=\"offerStatus.permanentlyClosed\"></span>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/city-suggestion.html',
    "<a href tabindex=\"-1\" ng-bind-html=\"match.label | uibTypeaheadHighlight:query\" class=\"city-suggestion\"></a>\n"
  );


  $templateCache.put('templates/event-form-image-edit.html',
    "<div class=\"modal-content\">\n" +
    "  <div class=\"modal-header\">\n" +
    "    <button type=\"button\" class=\"close\" ng-click=\"cancel()\">\n" +
    "      <span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span>\n" +
    "    </button>\n" +
    "    <h4 class=\"modal-title\" translate-once=\"images.edit.title\"></h4>\n" +
    "  </div>\n" +
    "  <div class=\"modal-body\">\n" +
    "\n" +
    "    <div>\n" +
    "      <div class=\"form-group\" ng-class=\"{ 'has-error': description.length > 250 }\">\n" +
    "        <label><span translate-once=\"images.description\"></span> <strong class=\"text-danger\">*</strong></label>\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"description\" required>\n" +
    "        <p class=\"help-block\" translate-once=\"images.edit.description_help\"></p>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"form-group\">\n" +
    "        <label><span translate-once=\"images.copyright\"></span> <strong class=\"text-danger\">*</strong></label>\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"copyrightHolder\" required>\n" +
    "        <p class=\"help-block\" translate-once=\"images.copyright_help\"></p>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-show=\"error\" class=\"alert alert-danger\">\n" +
    "      <span translate-once=\"images.edit.save_error\"></span>\n" +
    "    </div>\n" +
    "\n" +
    "    <p class=\"image-copyright-agreements\">\n" +
    "      <span translate-once=\"images.agreement\"></span>\n" +
    "      <a ng-href=\"{{::uploadTermsConditionsUrl}}\" target=\"_blank\" translate-once=\"images.conditions\"></a>.\n" +
    "      <a ng-href=\"{{::uploadCopyRightInfoUrl}}\" target=\"_blank\" translate-once=\"images.copyright_info\"></a>\n" +
    "    </p>\n" +
    "  </div>\n" +
    "  <div class=\"modal-footer\">\n" +
    "\n" +
    "    <button type=\"button\" class=\"btn btn-default\" ng-click=\"cancel()\" translate-once=\"images.cancel\"></button>\n" +
    "    <button type=\"button\" class=\"btn btn-primary\" ng-click=\"updateImageInfo()\" ng-disabled=\"!allFieldsValid() || saving\">\n" +
    "      <span translate-once=\"images.edit.update\"></span> <i ng-show=\"saving\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "    </button>\n" +
    "\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-image-remove.html',
    "<div class=\"modal-content\">\n" +
    "  <div class=\"modal-header\">\n" +
    "    <button type=\"button\" class=\"close\" ng-click=\"cancel()\">\n" +
    "      <span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span>\n" +
    "    </button>\n" +
    "    <h4 class=\"modal-title\" translate-once=\"images.remove.title\"></h4>\n" +
    "  </div>\n" +
    "  <div class=\"modal-body\">\n" +
    "\n" +
    "    <p translate-once=\"images.remove.sure\"></p>\n" +
    "\n" +
    "    <div ng-show=\"error\" class=\"alert alert-danger\">\n" +
    "      <span translate-once=\"images.remove.save_error\"></span>\n" +
    "    </div>\n" +
    "\n" +
    "  </div>\n" +
    "  <div class=\"modal-footer\">\n" +
    "\n" +
    "    <button type=\"button\" class=\"btn btn-default\" ng-click=\"cancel()\" translate-once=\"images.cancel\"></button>\n" +
    "    <button class=\"btn btn-primary\" ng-click=\"removeImage()\">\n" +
    "      <span translate-once=\"images.agree\"></span> <i ng-show=\"saving\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "    </button>\n" +
    "\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-image-upload.html',
    "<div class=\"modal-content\">\n" +
    "  <div class=\"modal-header\">\n" +
    "    <button type=\"button\" class=\"close\" ng-click=\"cancel()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n" +
    "    <h4 class=\"modal-title\" ng-bind=\"::modalTitle\"></h4>\n" +
    "  </div>\n" +
    "  <div class=\"modal-body\">\n" +
    "\n" +
    "    <p ng-show=\"showAgreements\">\n" +
    "      <span translate-once=\"images.agreement\"></span>\n" +
    "       <a ng-href=\"{{::userAgreementUrl}}\" target=\"_blank\" translate-once=\"images.conditions\"></a>.\n" +
    "       <a ng-href=\"{{::copyrightUrl}}\" target=\"_blank\" translate-once=\"images.copyright_info\"></a>\n" +
    "    </p>\n" +
    "    <div ng-hide=\"showAgreements\">\n" +
    "      <div class=\"form-group\">\n" +
    "        <label for=\"inputFile\" translate-once=\"images.upload.select_image\"></label>\n" +
    "        <p>\n" +
    "          <button type=\"file\"\n" +
    "                  class=\"btn btn-primary\"\n" +
    "                  id=\"inputFile\"\n" +
    "                  ngf-select=\"selectFile($file, $invalidFiles)\"\n" +
    "                  accept=\"image/*\"\n" +
    "                  ngf-max-size=\"{{maxFileSize}}\">\n" +
    "            <span translate-once=\"images.upload.choose_file\"></span></button>\n" +
    "        </p>\n" +
    "\n" +
    "        <p ng-show=\"selectedFile\">\n" +
    "          <span ng-bind=\"selectedFile.name\"></span>\n" +
    "        </p>\n" +
    "\n" +
    "        <p class=\"help-block\" translate-once=\"images.upload.max_filesize\" translate-values=\"{ maxFileSize: '{{maxFileSize}}' }\"></p>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"form-group\" ng-class=\"{ 'has-error': description.length > 250 }\">\n" +
    "        <label><span translate-once=\"images.description\"></span> <strong class=\"text-danger\">*</strong></label>\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"description\" required>\n" +
    "        <p class=\"help-block\" translate-once=\"images.description_help\"></p>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"form-group\">\n" +
    "        <label><span translate-once=\"images.copyright\"></span> <strong class=\"text-danger\">*</strong></label>\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"copyright\" required>\n" +
    "        <p class=\"help-block\" translate-once=\"images.copyright_help\"></p>\n" +
    "      </div>\n" +
    "\n" +
    "      <p class=\"image-copyright-agreements\">\n" +
    "        <span translate-once=\"images.agreement\"></span>\n" +
    "        <a ng-href=\"{{::userAgreementUrl}}\" target=\"_blank\" translate-once=\"images.conditions\"></a>.\n" +
    "        <a ng-href=\"{{::copyrightUrl}}\" target=\"_blank\" translate-once=\"images.copyright_info\"></a>\n" +
    "      </p>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-show=\"error\" class=\"alert alert-danger\">\n" +
    "      <span ng-bind=\"error\"></span>\n" +
    "    </div>\n" +
    "\n" +
    "  </div>\n" +
    "  <div class=\"modal-footer\">\n" +
    "    <button type=\"button\" class=\"btn btn-default\" ng-click=\"cancel()\" translate-once=\"images.cancel\"></button>\n" +
    "    <button type=\"button\" class=\"btn btn-primary\" ng-hide=\"showAgreements\" ng-disabled=\"!allFieldsValid() || saving\" ng-click=\"addImage()\">\n" +
    "      <span translate-once=\"images.upload.upload\"></span> <i ng-show=\"saving\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "    </button>\n" +
    "    <button class=\"btn btn-primary\" ng-show=\"showAgreements\" ng-click=\"acceptAgreements()\" translate-once=\"images.agree\"></button>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/opening-hours-editor.modal.html',
    "<div class=\"modal-header\">\n" +
    "    <h4 class=\"modal-title\" translate-once=\"calendar.openingHours.opening_hours\"></h4>\n" +
    "</div>\n" +
    "<div class=\"modal-body\">\n" +
    "    <div class=\"well text-center add-opening-hours\"\n" +
    "         ng-show=\"ohemc.openingHoursCollection.openingHours.length === 0\">\n" +
    "        <span translate-once=\"calendar.openingHours.permanent_title\"></span>\n" +
    "        <br>\n" +
    "        <span translate-once=\"calendar.openingHours.permanent_subtitle\"></span>\n" +
    "        <br>\n" +
    "        <button type=\"button\" class=\"btn btn-primary\" ng-click=\"ohemc.createNewOpeningHours()\" translate-once=\"calendar.openingHours.add_hours\"></button>\n" +
    "    </div>\n" +
    "    <div class=\"alert alert-danger\" role=\"alert\" ng-if=\"!!ohemc.errors.length\">\n" +
    "        <ul>\n" +
    "            <li ng-repeat=\"error in ohemc.errors\"\n" +
    "                ng-bind=\"'OPENING_HOURS_ERROR.' + error | translate\"></li>\n" +
    "        </ul>\n" +
    "    </div>\n" +
    "    <div class=\"opening-hours\" ng-show=\"ohemc.openingHoursCollection.openingHours.length > 0\">\n" +
    "        <div class=\"opening-hours-labels\">\n" +
    "            <div class=\"weekdays\" translate-once=\"calendar.openingHours.days\"></div>\n" +
    "            <div class=\"opening-time\" translate-once=\"calendar.openingHours.from\"></div>\n" +
    "            <div class=\"closing-time\" translate-once=\"calendar.openingHours.till\"></div>\n" +
    "        </div>\n" +
    "        <div class=\"opening-hours-collection\">\n" +
    "            <div class=\"opening-hours-set\" ng-form=\"openingHoursInfo\" ng-repeat=\"openingHours in ohemc.openingHoursCollection.openingHours\">\n" +
    "                <div class=\"weekdays\">\n" +
    "                    <label class=\"checkbox-inline\" ng-repeat=\"(day, weekday) in openingHours.dayOfWeek\">\n" +
    "                        <input type=\"checkbox\" ng-model=\"openingHours.dayOfWeek[day].open\">\n" +
    "                            <span ng-bind=\"::weekday.label\"></span>\n" +
    "                    </label>\n" +
    "                </div>\n" +
    "                <div class=\"opening-time\">\n" +
    "                    <div class=\"form-group\"\n" +
    "                        ng-class=\"{'has-error': openingHoursInfo.opens.$invalid && openingHoursInfo.opens.$touched}\">\n" +
    "                        <udb-form-calendar-timepicker\n" +
    "                            name=\"opens\"\n" +
    "                            class=\"uur\"\n" +
    "                            ng-required=\"true\"\n" +
    "                            ng-model=\"openingHours.opensAsDate\"></udb-form-calendar-timepicker>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "                <div class=\"closing-time\">\n" +
    "                    <div class=\"form-group\"\n" +
    "                        ng-class=\"{'has-error': openingHoursInfo.closes.$invalid && openingHoursInfo.closes.$touched}\">\n" +
    "                        <udb-form-calendar-timepicker\n" +
    "                            name=\"closes\"\n" +
    "                            class=\"uur\"\n" +
    "                            ng-required=\"true\"\n" +
    "                            ng-model=\"openingHours.closesAsDate\"></udb-form-calendar-timepicker>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "                <div class=\"remove\">\n" +
    "                    <button type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"ohemc.removeOpeningHours(openingHours)\"><span aria-hidden=\"true\">&times;</span></button>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"add\">\n" +
    "            <a class=\"btn btn-link btn-plus\" ng-click=\"ohemc.createNewOpeningHours()\" translate-once=\"calendar.openingHours.more_hours\">\n" +
    "            </a>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "    <button type=\"button\" class=\"btn btn-default\" ng-click=\"$dismiss()\" translate-once=\"calendar.openingHours.cancel\"></button>\n" +
    "    <button type=\"button\" class=\"btn btn-primary openingsuren-toevoegen\"\n" +
    "            ng-click=\"ohemc.saveOpeningHours()\" translate-once=\"calendar.openingHours.save\">\n" +
    "    </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-openinghours.html',
    "<div class=\"opening-hours-week-schedule\">\n" +
    "  <div class=\"empty\" ng-hide=\"!!cm.openingHoursCollection.openingHours.length\">\n" +
    "    <div class=\"well text-center add-opening-hours\">\n" +
    "        <p>\n" +
    "          <span class=\"permanent-title\" translate-once=\"calendar.openingHours.permanent_title\"></span>\n" +
    "          <span class=\"permanent-subtitle\" translate-once=\"calendar.openingHours.permanent_subtitle\"></span>\n" +
    "        </p>\n" +
    "        <button type=\"button\" class=\"btn btn-primary\" ng-disabled=\"cm.disabled\" ng-click=\"cm.edit()\" translate-once=\"calendar.openingHours.add_hours\"></button>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "  <div class=\"time-table\">\n" +
    "    <table class=\"table table-condensed\" ng-if=\"!!cm.openingHoursCollection.openingHours.length\">\n" +
    "      <thead>\n" +
    "      <th translate-once=\"calendar.openingHours.opening_hours\"></th>\n" +
    "      <th>\n" +
    "        <a href=\"#\" ng-disabled=\"cm.disabled\" ng-click=\"cm.edit()\" class=\"btn btn-default\" translate-once=\"calendar.openingHours.change\"></a>\n" +
    "      </th>\n" +
    "      </thead>\n" +
    "      <tbody>\n" +
    "        <tr ng-repeat=\"openingHour in cm.openingHoursCollection.openingHours\">\n" +
    "          <td ng-bind=\"openingHour.label\"></td>\n" +
    "          <td>\n" +
    "            <span ng-bind=\"openingHour.opens\"></span> – <span ng-bind=\"openingHour.closes\"></span>\n" +
    "          </td>\n" +
    "          </tr>\n" +
    "      </tbody>\n" +
    "    </table>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-organizer-modal.html',
    "\n" +
    "<div class=\"modal-header\">\n" +
    "  <button type=\"button\" class=\"close\" ng-click=\"cancel()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n" +
    "  <h4 class=\"modal-title\" ng-hide=\"organizersFound\" translate-once=\"organizer.modal.title\"></h4>\n" +
    "  <h4 class=\"modal-title\" ng-show=\"organizersFound\" translate-once=\"organizer.modal.avoid_doubles\"></h4>\n" +
    "</div>\n" +
    "<div class=\"modal-body\">\n" +
    "\n" +
    "  <section ng-hide=\"organizersFound\">\n" +
    "    <form name=\"organizerForm\" class=\"organizer-form\">\n" +
    "      <p class=\"alert alert-info\" translate-once=\"organizer.modal.unique_notice\"></p>\n" +
    "      <div class=\"form-group has-feedback\"\n" +
    "           ng-class=\"{'has-warning' : organizersWebsiteFound || (organizerForm.website.$error.required && organizerForm.website.$dirty) || (organizerForm.website.$error.pattern && organizerForm.website.$dirty) }\">\n" +
    "        <label class=\"control-label\" for=\"organizer-website\" translate-once=\"organizer.modal.website\"></label>\n" +
    "        <input type=\"url\"\n" +
    "               id=\"organizer-website\"\n" +
    "               name=\"website\"\n" +
    "               class=\"form-control\"\n" +
    "               ng-model-options=\"{ debounce: 300 }\"\n" +
    "               ng-model=\"newOrganizer.website\"\n" +
    "               aria-describedby=\"organizer-website-status\"\n" +
    "               ng-change=\"validateWebsite()\"\n" +
    "               autocomplete=\"off\"\n" +
    "               udb-http-prefix\n" +
    "               ng-pattern=\"contactUrlRegex\"\n" +
    "               required>\n" +
    "        <span class=\"fa fa-circle-o-notch fa-spin form-control-feedback\" ng-show=\"showWebsiteValidation\" aria-hidden=\"true\"></span>\n" +
    "        <span id=\"organizer-website-status\" class=\"sr-only\">(warning)</span>\n" +
    "\n" +
    "          <p class=\"alert alert-warning\" ng-show=\"organizersWebsiteFound\">\n" +
    "            <span translate=\"organizer.modal.alert_warning\"\n" +
    "                  translate-values=\"{ organizerName: '{{firstOrganizerFound.name}}' }\"></span>\n" +
    "            <a ng-click=\"selectOrganizer(firstOrganizerFound)\" class=\"alert-link\" href=\"#\">\n" +
    "              <span translate=\"organizer.modal.alert_button\"\n" +
    "                    translate-values=\"{ organizerName: '{{firstOrganizerFound.name}}' }\"></span>\n" +
    "            </a>.\n" +
    "          </p>\n" +
    "          <div class=\"help-block\" ng-messages=\"organizerForm.website.$error\" ng-show=\"organizerForm.website.$dirty && organizerForm.website.$error\">\n" +
    "            <p ng-message=\"required\">\n" +
    "              <span translate-once=\"organizer.contact.required\"></span>\n" +
    "            </p>\n" +
    "            <p ng-message=\"pattern\">\n" +
    "              <span translate-once=\"organizer.contact.valid_url\"></span>\n" +
    "            </p>\n" +
    "          </div>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"form-group\" ng-class=\"{'has-error' : (showValidation && organizerForm.name.$error.required) || organizerForm.name.$error.maxlength}\">\n" +
    "        <label translate-once=\"organizer.modal.label_name\"></label>\n" +
    "        <input type=\"text\"\n" +
    "               name=\"name\"\n" +
    "               class=\"form-control\"\n" +
    "               ng-model=\"newOrganizer.name\"\n" +
    "               ng-change=\"updateName()\"\n" +
    "               ng-maxlength=\"250\"\n" +
    "               required>\n" +
    "        <span class=\"help-block\" ng-show=\"organizerForm.name.$error.maxlength\" translate-once=\"organizer.modal.name_maxlength\"></span>\n" +
    "        <p class=\"help-block\" translate-once=\"organizer.modal.name_help\"></p>\n" +
    "        <span class=\"help-block\"\n" +
    "              ng-show=\"showValidation && organizerForm.name.$error.required\"\n" +
    "              translate-once=\"organizer.modal.name_required\">\n" +
    "        </span>\n" +
    "      </div>\n" +
    "    </form>\n" +
    "\n" +
    "    <udb-organizer-address address=\"newOrganizer.address\"\n" +
    "                           on-update=\"validateAddress(error)\"></udb-organizer-address>\n" +
    "    <udb-organizer-contact contact=\"newOrganizer.contact\"\n" +
    "                           on-update=\"validateContact(error)\"></udb-organizer-contact>\n" +
    "  </section>\n" +
    "\n" +
    "  <section ng-show=\"organizersFound\">\n" +
    "\n" +
    "    <div class=\"alert alert-info\">\n" +
    "      <p translate=\"organizer.modal.add_confirm\" translate-values=\"{ newOrganizerName: '{{newOrganizer.name}}' }\"></p>\n" +
    "    </div>\n" +
    "    <p translate-once=\"organizer.modal.doubles\"></p>\n" +
    "    <table class=\"table\">\n" +
    "      <tr ng-repeat=\"organizer in organizers\" udb-organizer=\"organizer\">\n" +
    "        <td colspan=\"2\" ng-show=\"fetching\">\n" +
    "          <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "        </td>\n" +
    "        <td ng-hide=\"fetching\">\n" +
    "          <strong ng-bind=\"::organizer.name\"></strong>\n" +
    "          , <span ng-bind=\"::organizer.addresses[0].streetAddress\"></span>\n" +
    "          , <span ng-bind=\"::organizer.addresses[0].postalCode\"></span>\n" +
    "           <span ng-bind=\"::organizer.addresses[0].addressLocality\"></span>\n" +
    "        </td>\n" +
    "        <td ng-hide=\"fetching\"><a class=\"btn btn-default\" ng-click=\"selectOrganizer(organizer)\" translate-once=\"organizer.modal.select\"></a></td>\n" +
    "      </tr>\n" +
    "      <tr>\n" +
    "        <td>\n" +
    "          <span translate-once=\"organizer.modal.your_input\"></span>\n" +
    "          <br/>\n" +
    "          <strong ng-bind=\"newOrganizer.name\"></strong>\n" +
    "          , <span ng-bind=\"newOrganizer.street\"></span>\n" +
    "           <span ng-bind=\"newOrganizer.number\"></span>\n" +
    "           <span ng-bind=\"newOrganizer.postalCode\"></span>\n" +
    "           <span ng-bind=\"newOrganizer.city\"></span>\n" +
    "        </td>\n" +
    "        <td><a class=\"btn btn-default\" ng-click=\"saveOrganizer()\" translate-once=\"organizer.modal.still_enter\"></a></td>\n" +
    "      </tr>\n" +
    "    </table>\n" +
    "\n" +
    "  </section>\n" +
    "\n" +
    "  <div class=\"alert alert-danger\" ng-show=\"saveError\">\n" +
    "    <span translate-once=\"organizer.modal.save_error\"></span>\n" +
    "  </div>\n" +
    "  <div class=\"alert alert-danger\" ng-show=\"error && (addressError || contactError)\">\n" +
    "    <p ng-show=\"addressError\"><span translate-once=\"organizer.modal.address_error\"></span><br /></p>\n" +
    "    <p ng-show=\"contactError\"><span translate-once=\"organizer.modal.contact_error\"></span><br /></p>\n" +
    "  </div>\n" +
    "\n" +
    "</div>\n" +
    "<div class=\"modal-footer\" ng-hide=\"organizersFound\">\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"cancel()\" translate-once=\"organizer.modal.close\"></button>\n" +
    "  <button type=\"button\"\n" +
    "          class=\"btn btn-primary organisator-toevoegen-bewaren\"\n" +
    "          ng-disabled=\"disableSubmit || contactError || organizerForm.website.$invalid\"\n" +
    "          ng-click=\"validateNewOrganizer()\">\n" +
    "    <span translate-once=\"organizer.modal.save\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "  </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/organizer-typeahead-template.html',
    "<a>{{match.model.name}}</a>"
  );


  $templateCache.put('templates/event-form-place-modal.html',
    "<div class=\"modal-header\">\n" +
    "    <h4 class=\"modal-title\" translate-once=\"location.title\"></h4>\n" +
    "</div>\n" +
    "<div class=\"modal-body\">\n" +
    "    <form name=\"placeForm\" class=\"css-form\">\n" +
    "        <div class=\"form-group\" ng-class=\"{'has-error' : showValidation && placeForm.name.$error.required }\">\n" +
    "            <label for=\"name\" translate-once=\"location.name\"></label>\n" +
    "            <input id=\"name\" class=\"form-control\" type=\"text\" ng-model=\"newPlace.name\" name=\"name\" required>\n" +
    "            <span class=\"help-block\"\n" +
    "                  translate-once=\"location.name_validation\"\n" +
    "                  ng-show=\"error\">\n" +
    "            </span>\n" +
    "        </div>\n" +
    "        <div class=\"form-group\" ng-class=\"{'has-error' : showValidation && (placeForm.address_streetAddress.$error.required || invalidStreet)}\">\n" +
    "            <label for=\"locatie-straat\" translate-once=\"location.street\"></label>\n" +
    "            <input class=\"form-control\" id=\"locatie-straat\" name=\"address_streetAddress\" type=\"text\" ng-model=\"newPlace.address.streetAddress\" required>\n" +
    "            <span class=\"help-block\"\n" +
    "                  translate-once=\"location.street_validation\"\n" +
    "                  ng-show=\"error && !invalidStreet\">\n" +
    "                    </span>\n" +
    "            <span class=\"help-block\"\n" +
    "                  translate-once=\"location.invalid_street\"\n" +
    "                  ng-show=\"invalidStreet\">\n" +
    "                    </span>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"row\">\n" +
    "          <div class=\"col-xs-4\">\n" +
    "            <div class=\"form-group\" ng-class=\"{'has-error' : showValidation && (placeForm.address_postalCode.$error.required || invalidNlPostalCode)}\">\n" +
    "              <label translate-once=\"location.zip\"></label>\n" +
    "              <span class=\"text-muted\" ng-if=\"newPlace.address.addressCountry === 'NL'\">bv. 1104CA</span>\n" +
    "              <input class=\"form-control\" id=\"locatie-straat\" name=\"address_postalCode\" type=\"text\" ng-model=\"newPlace.address.postalCode\" required ng-disabled=\"newPlace.address.addressCountry === 'BE'\">\n" +
    "                <span class=\"help-block\"\n" +
    "                      translate-once=\"location.nlPostalCode_validation\"\n" +
    "                      ng-show=\"error && !invalidNlPostalCode\">\n" +
    "                    </span>\n" +
    "                <span class=\"help-block\"\n" +
    "                      translate-once=\"location.invalid_PostalCode\"\n" +
    "                      ng-show=\"invalidNlPostalCode\">\n" +
    "                    </span>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "          <div class=\"col-xs-8\">\n" +
    "            <div class=\"form-group\">\n" +
    "                <label translate-once=\"location.city\"></label>\n" +
    "                <p class=\"form-control-static\" id=\"waar-locatie-toevoegen-gemeente\">\n" +
    "                    <span ng-bind=\"newPlace.address.addressLocality\"></span>\n" +
    "                    <span class=\"text-muted\">(<span ng-bind=\"newPlace.address.addressCountry\"></span>)</span>\n" +
    "                </p>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"form-group\" ng-class=\"{'has-error' : showValidation && placeForm.eventType.$error.required }\">\n" +
    "            <label for=\"locatie-toevoegen-types\" translate-once=\"location.category\"></label>\n" +
    "            <p class=\"help-block\" translate-once=\"location.category_help\"></p>\n" +
    "            <select class=\"form-control\" size=\"4\" name=\"eventType\" id=\"locatie-toevoegen-types\" ng-model=\"newPlace.eventType\" required  ng-options=\"category as ::translateEventTypes(category.label) for category in categories | orderBy:'label' track by category.id\">\n" +
    "            </select>\n" +
    "            <span class=\"help-block\"\n" +
    "                  translate-once=\"location.category_validation\"\n" +
    "                  ng-show=\"showValidation && placeForm.eventType.$error.required\">\n" +
    "            </span>\n" +
    "        </div>\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-xs-12\">\n" +
    "                <div class=\"alert alert-danger\"\n" +
    "                     translate-once=\"location.error\"\n" +
    "                     ng-show=\"error\">\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </form>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "    <button type=\"button\"\n" +
    "            class=\"btn btn-default\"\n" +
    "            data-dismiss=\"modal\"\n" +
    "            translate-once=\"location.cancel\"\n" +
    "            ng-click=\"resetAddLocation()\"></button>\n" +
    "    <button type=\"button\"\n" +
    "            class=\"btn btn-primary\"\n" +
    "            ng-click=\"addLocation()\">\n" +
    "        <span translate-once=\"location.add\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "  </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/place-suggestion-popup.html',
    "<ul class=\"dropdown-menu\" ng-show=\"isOpen() && !moveInProgress\" ng-style=\"{top: position().top+'px', left: position().left+'px'}\" role=\"listbox\" aria-hidden=\"{{!isOpen()}}\">\n" +
    "    <li class=\"uib-typeahead-match\" ng-repeat=\"match in matches track by $index\" ng-class=\"{active: isActive($index) }\" ng-mouseenter=\"selectActive($index)\" ng-click=\"selectMatch($index, $event)\" role=\"option\" id=\"{{::match.id}}\">\n" +
    "        <div uib-typeahead-match index=\"$index\" match=\"match\" query=\"query\" template-url=\"templateUrl\"></div>\n" +
    "    </li>\n" +
    "    <li>\n" +
    "        <div class=\"panel panel-default text-center\">\n" +
    "            <div class=\"panel-body\">\n" +
    "                <p>Locatie niet gevonden?</p>\n" +
    "                <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\"\n" +
    "                        data-target=\"#waar-locatie-toevoegen\" ng-click=\"$parent.openPlaceModal()\">\n" +
    "                    Een locatie toevoegen\n" +
    "                </button>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </li>\n" +
    "</ul>"
  );


  $templateCache.put('templates/place-suggestion.html',
    "<div class=\"place-suggestion\">\n" +
    "  <span class=\"place-suggestion-name\" ng-bind-html=\"match.model.name | uibTypeaheadHighlight:query\"></span>\n" +
    "  <span class=\"place-suggestion-address\" ng-bind-html=\"match.model.address.streetAddress | uibTypeaheadHighlight:query\">\n" +
    "  </span>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/price-form-modal.html',
    "\n" +
    "<div class=\"modal-header\">\n" +
    "    <button type=\"button\" class=\"close\" ng-click=\"pfmc.cancelEditPrice()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n" +
    "    <h4 class=\"modal-title\" translate-once=\"prices.title\"></h4>\n" +
    "</div>\n" +
    "<div class=\"modal-body\">\n" +
    "\n" +
    "    <form name=\"pfmc.priceForm\" novalidate>\n" +
    "        <table class=\"table\">\n" +
    "            <div class=\"form-group\">\n" +
    "                <tr ng-repeat=\"(key, priceInfo) in pfmc.price\"\n" +
    "                    ng-model=\"priceInfo\"\n" +
    "                    ng-form=\"pfmc.priceForm.priceFieldForm\">\n" +
    "                    <td ng-switch on=\"priceInfo.category\"\n" +
    "                        class=\"col-xs-4\">\n" +
    "                        <p ng-switch-when=\"base\"\n" +
    "                           class=\"form-text\"\n" +
    "                           translate-once=\"prices.base\">\n" +
    "                        </p>\n" +
    "                        <span ng-switch-default>\n" +
    "                            <input type=\"text\"\n" +
    "                                   class=\"form-control\"\n" +
    "                                   name=\"name\"\n" +
    "                                   placeholder=\"{{::'prices.target_group' | translate }}\"\n" +
    "                                   ng-model=\"priceInfo.name[pfmc.mainLanguage]\"\n" +
    "                                   ng-class=\"{ 'has-error': pfmc.priceForm.priceFieldForm.name.$invalid }\"\n" +
    "                                   required />\n" +
    "                        </span>\n" +
    "                    </td>\n" +
    "                    <td class=\"col-xs-4\">\n" +
    "                        <span ng-if=\"priceInfo.price === 0\"\n" +
    "                              translate-once=\"prices.free\">\n" +
    "                        </span>\n" +
    "                        <span ng-if=\"priceInfo.price !== 0\">\n" +
    "                            <div class=\"form-inline\">\n" +
    "                                <div class=\"form-group\">\n" +
    "                                    <input type=\"text\"\n" +
    "                                           class=\"form-control\"\n" +
    "                                           name=\"price\"\n" +
    "                                           ng-pattern=\"/^([1-9][0-9]*|[0-9]|[0])(,[0-9]{1,2})?$/\"\n" +
    "                                           ng-model=\"priceInfo.price\"\n" +
    "                                           ng-model-options=\"{ updateOn: 'default' }\"\n" +
    "                                           ng-class=\"{ 'has-error': pfmc.priceForm.priceFieldForm.price.$invalid }\"\n" +
    "                                           required />\n" +
    "                                </div>\n" +
    "                                <div class=\"form-group\"> <span class=\"text-muted\" translate-once=\"prices.currency\"></span></div>\n" +
    "                            </div>\n" +
    "                        </span>\n" +
    "                    </td>\n" +
    "                    <td ng-switch on=\"priceInfo.price\"\n" +
    "                        class=\"col-xs-3\">\n" +
    "                        <a class=\"btn btn-link\"\n" +
    "                           ng-click=\"pfmc.unsetPriceItemFree(key)\"\n" +
    "                           ng-switch-when=\"0\"\n" +
    "                           translate-once=\"prices.add_price\">\n" +
    "                        </a>\n" +
    "                        <a class=\"btn btn-link\"\n" +
    "                           translate-once=\"prices.free\"\n" +
    "                           ng-click=\"pfmc.setPriceItemFree(key)\"\n" +
    "                           ng-switch-default>\n" +
    "                        </a>\n" +
    "                    </td>\n" +
    "                    <td class=\"col-xs-1\">\n" +
    "                        <a aria-hidden=\"true\"\n" +
    "                           ng-click=\"pfmc.deletePriceItem(key)\"\n" +
    "                           ng-if=\"pfmc.showPriceDelete(key)\" class=\"close\">&times;</a>\n" +
    "                    </td>\n" +
    "                </tr>\n" +
    "                <tr>\n" +
    "                    <td colspan=\"4\">\n" +
    "                        <a class=\"btn btn-default\"\n" +
    "                           translate-once=\"prices.add_tarriff\"\n" +
    "                           ng-click=\"pfmc.addPriceItem()\">\n" +
    "                        </a>\n" +
    "                    </td>\n" +
    "                </tr>\n" +
    "            </div>\n" +
    "        </table>\n" +
    "    </form>\n" +
    "    <div ng-show=\"pfmc.priceError\"\n" +
    "         class=\"alert alert-danger\"\n" +
    "         translate-once=\"prices.error\">\n" +
    "    </div>\n" +
    "    <div ng-show=\"(pfmc.priceForm.priceFieldForm.price.$invalid || pfmc.priceForm.$invalid) && pfmc.priceForm.priceFieldForm.price.$dirty && !saving\" class=\"alert alert-info\">\n" +
    "        <p translate-once=\"prices.invalid\"></p>\n" +
    "        <ul class=\"small\">\n" +
    "          <li translate-once=\"prices.invalid_tip1\"></li>\n" +
    "          <li translate-once=\"prices.invalid_tip2\"></li>\n" +
    "          <li translate-once=\"prices.invalid_tip3\"></li>\n" +
    "        </ul>\n" +
    "    </div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button type=\"button\"\n" +
    "          class=\"btn btn-default\"\n" +
    "          translate-once=\"prices.close\"\n" +
    "          ng-click=\"pfmc.cancelEditPrice()\">\n" +
    "  </button>\n" +
    "  <button type=\"button\"\n" +
    "          class=\"btn btn-primary organisator-toevoegen-bewaren\"\n" +
    "          ng-click=\"pfmc.validatePrice()\"\n" +
    "          ng-disabled=\"pfmc.priceForm.$invalid || pfmc.priceForm.$pristine\">\n" +
    "      <span translate-once=\"prices.save\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "  </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/priceInfo.html',
    "<div class=\"row extra-prijs\">\n" +
    "  <div class=\"extra-task\" ng-class=\"$ctrl.priceCssClass\">\n" +
    "    <div class=\"col-sm-3\">\n" +
    "      <em class=\"extra-task-label\" translate-once=\"eventForm.step5.priceInfo.price_label\"></em>\n" +
    "        <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"$ctrl.savingPrice\"></i>\n" +
    "    </div>\n" +
    "    <div class=\"col-sm-8\">\n" +
    "\n" +
    "      <div ng-show=\"$ctrl.price.length == 0\">\n" +
    "        <section>\n" +
    "          <a class=\"btn btn-default to-filling\"\n" +
    "             ng-click=\"$ctrl.priceCssClass = 'state-filling'; $ctrl.changePrice()\"\n" +
    "             translate-once=\"eventForm.step5.priceInfo.add_prices\">\n" +
    "          </a>\n" +
    "          <a class=\"btn btn-link\"\n" +
    "             ng-click=\"$ctrl.setPriceFree()\"\n" +
    "             translate-once=\"eventForm.step5.priceInfo.free\"></a>\n" +
    "        </section>\n" +
    "      </div>\n" +
    "      <div ng-show=\"$ctrl.price.length > 0\">\n" +
    "        <table class=\"table\">\n" +
    "          <thead>\n" +
    "            <td translate-once=\"eventForm.step5.priceInfo.prices\"></td>\n" +
    "            <td>\n" +
    "              <a class=\"btn btn-default pull-right\"\n" +
    "                 ng-click=\"$ctrl.changePrice()\"\n" +
    "                 translate-once=\"eventForm.step5.priceInfo.change\">\n" +
    "            </a>\n" +
    "            </td>\n" +
    "          </thead>\n" +
    "          <tr ng-repeat=\"(key, priceInfo) in $ctrl.price\"\n" +
    "              ng-model=\"priceInfo\">\n" +
    "            <td>{{priceInfo.name[$ctrl.mainLanguage]}}</td>\n" +
    "            <td>\n" +
    "              <span ng-if=\"priceInfo.price == 0\" translate-once=\"eventForm.step5.priceInfo.free\">\n" +
    "                Gratis\n" +
    "              </span>\n" +
    "              <span ng-if=\"priceInfo.price != 0\">\n" +
    "                {{priceInfo.price | currency:'€' }} <span translate-once=\"eventForm.step5.priceInfo.currency\"></span>\n" +
    "              </span>\n" +
    "            </td>\n" +
    "          </tr>\n" +
    "        </table>\n" +
    "        <div ng-if=\"$ctrl.hasUitpasError\" class=\"alert alert-danger\" translate=\"uitpas.uitpasInfo.unavailable\"></div>\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-publish-modal.html',
    "<div class=\"modal-header\">\n" +
    "  <h4 class=\"modal-title\" translate-once=\"eventForm.embargo.title\"></h4>\n" +
    "</div>\n" +
    "<div id=\"event-form-publish-modal\" class=\"modal-body\">\n" +
    "  <p translate-once=\"eventForm.embargo.help\"></p>\n" +
    "    <div ng-if=\"!efpmc.eventFormData.availableFrom\" class=\"form-inline\">\n" +
    "      <div class=\"input-group\">\n" +
    "      <input\n" +
    "             class=\"form-control\"\n" +
    "             type=\"text\"\n" +
    "             uib-datepicker-popup=\"dd/MM/yyyy\"\n" +
    "             datepicker-options=\"efpmc.drp.options\"\n" +
    "             ng-model=\"efpmc.publicationDate\"\n" +
    "             show-button-bar=\"false\"\n" +
    "             on-open-focus=\"true\"\n" +
    "             is-open=\"efpmc.opened\"\n" +
    "             ng-required=\"true\"\n" +
    "             ng-click=\"efpmc.toggleDatePicker()\" />\n" +
    "      <span class=\"input-group-btn\">\n" +
    "          <button type=\"button\" class=\"btn btn-default\" ng-click=\"efpmc.toggleDatePicker()\">\n" +
    "              <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n" +
    "          </button>\n" +
    "      </span>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "    <br>\n" +
    "    <div class=\"alert alert-warning\" ng-if=\"efpmc.error==='past'\" translate-once=\"eventForm.embargo.error_past\"></div>\n" +
    "    <div class=\"alert alert-warning\" ng-if=\"efpmc.error==='empty'\" translate-once=\"eventForm.embargo.error_empty\"></div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"efpmc.dismiss();\" data-dismiss=\"modal\" translate-once=\"eventForm.embargo.cancel\">\n" +
    "  </button>\n" +
    "  <button type=\"button\" class=\"btn btn-primary\" ng-click=\"efpmc.savePublicationDate()\" translate-once=\"eventForm.embargo.ready\">\n" +
    "  </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/reservation-period.html',
    "<div class=\"col-sm-12\" ng-hide=\"haveBookingPeriod\">\n" +
    "    <a class=\"btn btn-primary reservatie-periode-toevoegen\"\n" +
    "       href=\"#\"\n" +
    "       ng-click=\"changeHaveBookingPeriod()\"\n" +
    "       translate-once=\"eventForm.step5.reservationPeriod.add_reservation_period\">\n" +
    "    </a>\n" +
    "</div>\n" +
    "<div class=\"col-sm-12\" ng-show=\"haveBookingPeriod\">\n" +
    "    <div class=\"booking-period\">\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-lg-11\">\n" +
    "                <p><strong translate-once=\"eventForm.step5.reservationPeriod.reservation_period\"></strong></p>\n" +
    "            </div>\n" +
    "            <div class=\"col-lg-1\">\n" +
    "                <button ng-if=\"!info.booking\" type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"deleteBookingPeriod()\">\n" +
    "                    <span aria-hidden=\"true\">&times;</span>\n" +
    "                </button>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "        <div class=\"alert alert-danger\" ng-if=\"errorMessage\" ng-bind=\"::errorMessage\">\n" +
    "        </div>\n" +
    "        <form name=\"bookingPeriod\" class=\"booking-period\">\n" +
    "\n" +
    "            <div class=\"row\">\n" +
    "                <div class=\"col-lg-6\">\n" +
    "                    <div class=\"input-group\">\n" +
    "                        <span class=\"input-group-addon\"\n" +
    "                              translate-once=\"eventForm.step5.reservationPeriod.from\"></span>\n" +
    "                        <input name=\"bookingStartDate\"\n" +
    "                               class=\"form-control\"\n" +
    "                               type=\"text\"\n" +
    "                               uib-datepicker-popup=\"dd/MM/yyyy\"\n" +
    "                               datepicker-options=\"dateOptions\"\n" +
    "                               ng-model=\"availabilityStarts\"\n" +
    "                               ng-change=\"validateBookingPeriod()\"\n" +
    "                               is-open=\"popup1.opened\"\n" +
    "                               show-button-bar=\"false\"\n" +
    "                               ng-required=\"true\" />\n" +
    "                        <span class=\"input-group-btn\">\n" +
    "                            <button type=\"button\" class=\"btn btn-default\" ng-click=\"open1()\">\n" +
    "                                <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n" +
    "                            </button>\n" +
    "                        </span>\n" +
    "                    </div><!-- /input-group -->\n" +
    "                </div><!-- /.col-lg-6 -->\n" +
    "                <div class=\"col-lg-6\">\n" +
    "                    <div class=\"input-group\">\n" +
    "                        <span class=\"input-group-addon\"\n" +
    "                              translate-once=\"eventForm.step5.reservationPeriod.till\"></span>\n" +
    "                        <input name=\"bookingEndDate\"\n" +
    "                               type=\"text\"\n" +
    "                               class=\"form-control\"\n" +
    "                               type=\"text\"\n" +
    "                               uib-datepicker-popup=\"dd/MM/yyyy\"\n" +
    "                               datepicker-options=\"dateOptions\"\n" +
    "                               ng-model=\"availabilityEnds\"\n" +
    "                               ng-change=\"validateBookingPeriod()\"\n" +
    "                               is-open=\"popup2.opened\"\n" +
    "                               show-button-bar=\"false\"\n" +
    "                               ng-required=\"true\" />\n" +
    "                        <span class=\"input-group-btn\">\n" +
    "                            <button type=\"button\" class=\"btn btn-default\" ng-click=\"open2()\">\n" +
    "                                <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n" +
    "                            </button>\n" +
    "                          </span>\n" +
    "                    </div><!-- /input-group -->\n" +
    "                </div><!-- /.col-lg-6 -->\n" +
    "            </div><!-- /.row -->\n" +
    "        </form>\n" +
    "    </div>\n" +
    "</div>"
  );


  $templateCache.put('templates/event-preview.directive.html',
    "<div class=\"panel panel-default preview\">\n" +
    "\n" +
    "  <div class=\"panel-heading\" ng-style=\"{'background-image': 'url(' + event.image + ')'}\">\n" +
    "    <ul class=\"list-inline\">\n" +
    "      <li><small class=\"label label-default\" ng-bind=\"::event.type.label\"></small></li>\n" +
    "    </ul>\n" +
    "    <p class=\"title\" ng-bind=\"::event.name\"></p>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"panel-body\">\n" +
    "\n" +
    "    <p ng-bind-html=\"::event.description\"></p>\n" +
    "\n" +
    "    <table class=\"table table-condensed\">\n" +
    "      <tbody>\n" +
    "      <tr>\n" +
    "        <td class=\"\">\n" +
    "          <strong class=\"hidden-xs hidden-sm\">Waar</strong>\n" +
    "          <i class=\"fa fa-map-marker hidden-md hidden-lg\"></i>\n" +
    "        </td>\n" +
    "        <td ng-bind=\"::event.location.name\"></td>\n" +
    "      </tr>\n" +
    "      <tr>\n" +
    "        <td>\n" +
    "          <strong class=\"hidden-xs hidden-sm\">Wanneer</strong>\n" +
    "          <i class=\"fa fa-calendar hidden-md hidden-lg\"></i>\n" +
    "        </td>\n" +
    "        <td class=\"cf-when scroll scroll-150\">\n" +
    "          <udb-calendar-summary offer=\"event\"></udb-calendar-summary>\n" +
    "        </td>\n" +
    "      </tr>\n" +
    "      <tr>\n" +
    "        <td>\n" +
    "          <strong class=\"hidden-xs hidden-sm\">Organisatie</strong>\n" +
    "          <i class=\"far fa-building hidden-md hidden-lg\"></i>\n" +
    "        </td>\n" +
    "        <td ng-bind=\"::event.organizer.name\"></td>\n" +
    "      </tr>\n" +
    "      <tr>\n" +
    "        <td><strong class=\"hidden-xs hidden-sm\">Prijs</strong><i class=\"fa fa-eur hidden-md hidden-lg\"></i></td>\n" +
    "        <td>\n" +
    "          <div ng-switch=\"::event.pricing\">\n" +
    "            <span ng-switch-when=\"free\">gratis</span>\n" +
    "                <span ng-switch-when=\"payed\">\n" +
    "                  <i class=\"fa fa-eur meta icon\"></i>\n" +
    "                  <span ng-if=\"::event.price\" ng-bind=\"::event.price | currency\">\n" +
    "                </span>\n" +
    "                </span>\n" +
    "            <span ng-switch-when=\"unknown\">niet ingevoerd</span>\n" +
    "          </div>\n" +
    "        </td>\n" +
    "      </tr>\n" +
    "      </tbody>\n" +
    "    </table>\n" +
    "  </div>\n" +
    "</div>\n" +
    "\n" +
    "<div>\n" +
    "  <em>\n" +
    "    Ingevoerd door <span ng-bind=\"::event.organizer.name\"></span>\n" +
    "    <span> op </span>\n" +
    "    <span ng-bind=\"::event.created | date : 'dd/MM/yyyy • HH:mm'\"></span>\n" +
    "  </em>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-suggestion.directive.html',
    "<div class=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\" ng-hide=\"eventCtrl.fetching\">\n" +
    "  <a class=\"btn btn-tile\"\n" +
    "     ng-click=\"previewSuggestedItem(event)\">\n" +
    "    <small class=\"label label-default\" ng-bind=\"::event.type.label\"></small><br>\n" +
    "    <strong class=\"title\" ng-bind=\"::event.name\"></strong><br>\n" +
    "    <span ng-bind=\"::event.location.name\"></span> -\n" +
    "    <ng-switch on=\"event.calendarType\">\n" +
    "      <span ng-switch-when=\"single\" ng-bind=\"::event.startDate | date: 'dd/MM'\"></span>\n" +
    "      <span ng-switch-when=\"multiple\">\n" +
    "        <span translate-once=\"eventForm.step4.suggestions.from\"></span> <span ng-bind=\"::event.startDate | date: 'dd/MM'\"></span> <span translate-once=\"eventForm.step4.suggestions.till\"></span> <span ng-bind=\"::event.endDate | date: 'dd/MM'\"></span>\n" +
    "      </span>\n" +
    "      <span ng-switch-when=\"periodic\">\n" +
    "        <span translate-once=\"eventForm.step4.suggestions.from\"></span> <span ng-bind=\"::event.startDate | date: 'dd/MM'\"></span> <span translate-once=\"eventForm.step4.suggestions.till\"></span> <span ng-bind=\"::event.endDate | date: 'dd/MM'\"></span>\n" +
    "      </span>\n" +
    "      <span ng-switch-when=\"permanent\" translate-once=\"eventForm.step4.suggestions.permanent\"></span>\n" +
    "    </ng-switch>\n" +
    "    <br>\n" +
    "    <small class=\"preview-corner\"></small>\n" +
    "    <i class=\"fa fa-eye preview-icon\"></i>\n" +
    "  </a>\n" +
    "</div>"
  );


  $templateCache.put('templates/place-preview.directive.html',
    "<div class=\"panel panel-default preview\">\n" +
    "\n" +
    "  <div class=\"panel-heading\" ng-style=\"{'background-image': 'url(' + event.image + ')'}\">\n" +
    "    <ul class=\"list-inline\">\n" +
    "      <li><small class=\"label label-default\" ng-bind=\"::event.type.label\"></small></li>\n" +
    "    </ul>\n" +
    "    <p class=\"title\" ng-bind=\"::event.name\"></p>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"panel-body\">\n" +
    "\n" +
    "    <p ng-bind-html=\"::event.description\"></p>\n" +
    "\n" +
    "    <table class=\"table table-condensed\">\n" +
    "      <tbody>\n" +
    "      <tr>\n" +
    "        <td>\n" +
    "          <strong class=\"hidden-xs hidden-sm\">Waar</strong>\n" +
    "          <i class=\"fa fa-map-marker hidden-md hidden-lg\"></i>\n" +
    "        </td>\n" +
    "        <td>\n" +
    "          <span ng-bind=\"::event.address.streetAddress\"></span>\n" +
    "          <br>\n" +
    "          <span ng-bind=\"::event.address.postalCode\"></span>\n" +
    "          <span ng-bind=\"::event.address.addressLocality\"></span>\n" +
    "        </td>\n" +
    "      </tr>\n" +
    "      <tr ng-if=\"::event.calendarType\">\n" +
    "        <td>\n" +
    "          <strong class=\"hidden-xs hidden-sm\">Wanneer</strong>\n" +
    "          <i class=\"fa fa-calendar hidden-md hidden-lg\"></i>\n" +
    "        </td>\n" +
    "        <td class=\"cf-when scroll scroll-150\">\n" +
    "          <udb-calendar-summary offer=\"event\"></udb-calendar-summary>\n" +
    "        </td>\n" +
    "      </tr>\n" +
    "      </tbody>\n" +
    "    </table>\n" +
    "  </div>\n" +
    "</div>\n" +
    "\n" +
    "<div>\n" +
    "  <em>\n" +
    "    Ingevoerd door <span ng-bind=\"::event.creator\"></span>\n" +
    "    <span ng-if=\"event.created\"> op <span ng-bind=\"::event.created | date : 'dd/MM/yyyy • HH:mm'\"></span></span>\n" +
    "  </em>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/place-suggestion.directive.html',
    "<div class=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\" ng-hide=\"eventCtrl.fetching\">\n" +
    "  <a class=\"btn btn-tile\"\n" +
    "     ng-click=\"previewSuggestedItem(event)\">\n" +
    "    <small class=\"label label-default\" ng-bind=\"::event.type.label\"></small><br>\n" +
    "    <strong class=\"title\" ng-bind=\"::event.name\"></strong><br>\n" +
    "    <span translate-once=\"eventForm.step4.suggestions.permanent\"></span>\n" +
    "    <br>\n" +
    "    <small class=\"preview-corner\"></small>\n" +
    "    <i class=\"fa fa-eye preview-icon\"></i>\n" +
    "  </a>\n" +
    "</div>"
  );


  $templateCache.put('templates/suggestion-preview-modal.html',
    "<div class=\"modal-header\">\n" +
    "  <button type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"closePreview()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n" +
    "  <h4 class=\"modal-title\">\n" +
    "    Gelijkaardige items\n" +
    "    <span> </span>\n" +
    "    <small>\n" +
    "      Evenement <span ng-bind=\"(currentSuggestionIndex + 1)\"></span> van <span ng-bind=\"::suggestionCount\"></span>\n" +
    "    </small>\n" +
    "  </h4>\n" +
    "</div>\n" +
    "<div class=\"modal-body\">\n" +
    "  <div ng-repeat=\"event in suggestions\" ng-show=\"$index === currentSuggestionIndex\">\n" +
    "    <udb-event-preview ng-if=\"suggestionType === 'event'\"></udb-event-preview>\n" +
    "    <udb-place-preview ng-if=\"suggestionType === 'place'\"></udb-place-preview>\n" +
    "  </div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"previousSuggestion()\">Vorige</button>\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"nextSuggestion()\">Volgende</button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-publish.html',
    "<div class=\"event-validation\" ng-if=\"efpc.eventFormData.showStep5\">\n" +
    "    <div class=\"text-danger\" ng-if=\"efpc.error\" ng-bind=\"efpc.error\"></div>\n" +
    "\n" +
    "    <udb-event-form-save-time-tracker></udb-event-form-save-time-tracker>\n" +
    "    <div ng-if=\"!efpc.saving\">\n" +
    "      <button type=\"submit\"\n" +
    "              class=\"btn btn-success\"\n" +
    "              ng-click=\"efpc.publish()\"\n" +
    "              ng-if=\"efpc.isDraft(efpc.eventFormData.workflowStatus) && efpc.hasNoDefault\">\n" +
    "          <span translate-once=\"eventForm.publish.publish_now\"></span>\n" +
    "      </button>\n" +
    "      <button class=\"btn btn-default\"\n" +
    "              ng-click=\"efpc.publishLater()\"\n" +
    "              ng-if=\"efpc.canPublishLater()\">\n" +
    "          <span translate-once=\"eventForm.publish.publish_later\"></span>\n" +
    "      </button>\n" +
    "      <button type=\"submit\"\n" +
    "              class=\"btn btn-success\"\n" +
    "              ng-click=\"efpc.preview()\"\n" +
    "              ng-if=\"!efpc.isDraft(efpc.eventFormData.workflowStatus)\">\n" +
    "          <span translate-once=\"eventForm.publish.edit_done\"></span>\n" +
    "      </button>\n" +
    "      <button type=\"submit\"\n" +
    "              class=\"btn btn-success\"\n" +
    "              ng-click=\"efpc.publish()\"\n" +
    "              ng-if=\"efpc.isDraft(efpc.eventFormData.workflowStatus) && !efpc.hasNoDefault\">\n" +
    "          <span translate-once=\"eventForm.publish.edit_done\"></span>\n" +
    "      </button>\n" +
    "      <span ng-if=\"efpc.hasNoDefault && efpc.eventFormData.availableFrom !== ''\" && !efpc.isDraft(efpc.eventFormData.workflowStatus)>\n" +
    "          <span translate-once=\"eventForm.publish.online_from\"></span> <span ng-bind=\"efpc.eventFormData.availableFrom | date: 'dd/MM/yyyy'\"></span>\n" +
    "      </span>\n" +
    "    </div>\n" +
    "    <div ng-if=\"efpc.saving\">\n" +
    "      <i class=\"fa fa-circle-o-notch fa-spin fa-fw\"></i>\n" +
    "      <span class=\"sr-only\">Loading...</span>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-step1.html',
    "<div ng-controller=\"EventFormStep1Controller as EventFormStep1\">\n" +
    "  <a name=\"wat\"></a>\n" +
    "  <section id=\"wat\">\n" +
    "    <div class=\"step-title\">\n" +
    "      <div class=\"row\">\n" +
    "        <div class=\"col-xs-12\">\n" +
    "          <h2>\n" +
    "            <span class=\"number\">1</span>\n" +
    "            <span translate-once=\"eventForm.step1.title\"></span>\n" +
    "          </h2>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"row\" ng-show=\"!activeEventType\">\n" +
    "      <div ng-class=\"splitTypes ? 'col-sm-5': 'col-sm-12'\"\n" +
    "           ng-show=\"splitTypes || eventFormData.getType() === 'event'\">\n" +
    "        <label class=\"event-type-choser-label event\"><span translate-once=\"eventForm.step1.label_event\"></span></label>\n" +
    "        <ul class=\"list-inline\" id=\"step1-events\">\n" +
    "          <li ng-repeat=\"eventType in ::eventTypeLabels | orderBy:'label'\" ng-show=\"eventType.primary === true || showAllEventTypes\">\n" +
    "            <button ng-bind=\"::translateOfferTypes(eventType.label)\" class=\"btn btn-default\"\n" +
    "                    ng-click=\"setEventType(eventType, true)\"></button>\n" +
    "          </li>\n" +
    "          <li ng-hide=\"showAllEventTypes\">\n" +
    "            <a href=\"\" ng-click=\"toggleEventTypes()\" translate-once=\"eventForm.step1.show_everything\"></a>\n" +
    "          </li>\n" +
    "        </ul>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"col-sm-2\" ng-show=\"splitTypes\">\n" +
    "        <p class=\"text-center event-type-splitter\"><em translate-once=\"eventForm.step1.or\"></em></p>\n" +
    "      </div>\n" +
    "\n" +
    "      <div ng-class=\"splitTypes ? 'col-sm-5': 'col-sm-12'\"\n" +
    "           ng-show=\"splitTypes || eventFormData.getType() === 'place'\">\n" +
    "        <label class=\"event-type-choser-label place\"><span translate-once=\"eventForm.step1.location_label\"></span></label>\n" +
    "        <ul class=\"list-inline\" id=\"step1-places\">\n" +
    "          <li ng-repeat=\"placeType in ::placeLabels | orderBy:'label'\" ng-show=\"placeType.primary == true || showAllPlaces\">\n" +
    "            <button ng-bind=\"::translateOfferTypes(placeType.label)\" class=\"btn btn-default\"\n" +
    "                    ng-click=\"setEventType(placeType, false)\"></button>\n" +
    "          </li>\n" +
    "          <li ng-hide=\"showAllPlaces\">\n" +
    "            <a href=\"\" ng-click=\"togglePlaces()\" translate-once=\"eventForm.step1.show_everything\"></a>\n" +
    "          </li>\n" +
    "        </ul>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"row\">\n" +
    "      <div class=\"col-xs-12 col-md-12\" ng-hide=\"activeEventType === ''\">\n" +
    "        <span class=\"btn-chosen\" ng-bind=\"activeEventTypeLabel\"></span>\n" +
    "        <a class=\"btn btn-link btn-default\"\n" +
    "           href=\"\" ng-click=\"resetEventType()\"\n" +
    "           translate-once=\"eventForm.step1.change\"></a>\n" +
    "        <div ng-if=\"isLessonSeries\" class=\"alert alert-info lesson-series-info\">\n" +
    "         <p translate-once=\"eventForm.step1.info_lesson_series\"></p>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"col-xs-12 theme-refinement\" ng-hide=\"activeEventType === '' || activeTheme !== ''\">\n" +
    "        <label class=\"event-theme-label\" ng-show=\"eventThemeLabels.length\" translate-once=\"eventForm.step1.refine\"></label>\n" +
    "        <div ng-repeat=\"(key, values) in eventThemeLabels | groupBy: 'group'\">\n" +
    "          <div class=\"row\">\n" +
    "            <div class=\"col-xs-2\" ng-show=\"key !== 'undefined'\" >\n" +
    "              <p class=\"text-muted\" ng-bind=\"::translateOfferThemesGroups(key)\"></p>\n" +
    "            </div>\n" +
    "            <div ng-class=\"key === 'undefined' ? 'col-xs-12' : 'col-xs-10'\">\n" +
    "              <ul class=\"list-inline list-themes\">\n" +
    "                <li ng-repeat=\"eventTheme in values\">\n" +
    "                  <button ng-bind=\"::translateOfferThemes(eventTheme.label)\" class=\"btn btn-default\"\n" +
    "                          ng-click=\"setTheme(eventTheme)\"></button>\n" +
    "                </li>\n" +
    "              </ul>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "      <p class=\"col-xs-12 col-md-12\"  ng-hide=\"activeTheme === ''\">\n" +
    "        <span class=\"btn-chosen\" ng-bind=\"activeThemeLabel\"></span>\n" +
    "        <a class=\"btn btn-link btn-default\"\n" +
    "           href=\"\" ng-click=\"resetTheme()\"\n" +
    "           translate-once=\"eventForm.step1.change\"></a>\n" +
    "      </p>\n" +
    "  </section>\n" +
    "\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-step2.html',
    "<div ng-controller=\"EventFormStep2Controller as EventFormStep2\">\n" +
    "  <a name=\"wanneer\"></a>\n" +
    "  <section id=\"wanneer\" ng-show=\"eventFormData.showStep2\">\n" +
    "    <div class=\"step-title\">\n" +
    "      <div class=\"row\">\n" +
    "        <div class=\"col-xs-12\">\n" +
    "          <h2>\n" +
    "            <span class=\"number\">2</span>\n" +
    "            <span ng-show=\"eventFormData.isEvent\" translate-once=\"eventForm.step2.date_help_event\"></span>\n" +
    "            <span ng-show=\"eventFormData.isPlace\" translate-once=\"eventForm.step2.date_help_place\"></span>\n" +
    "          </h2>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <udb-form-place-calendar ng-if=\"eventFormData.isPlace\"></udb-form-place-calendar>\n" +
    "    <udb-form-event-calendar ng-if=\"eventFormData.isEvent\"></udb-form-event-calendar>\n" +
    "  </section>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-step3.html',
    "<div ng-controller=\"EventFormStep3Controller as EventFormStep3\">\n" +
    "\n" +
    "<section id=\"waar\" ng-show=\"eventFormData.showStep3\">\n" +
    "  <form name=\"step3Form\" class=\"css-form\">\n" +
    "    <div class=\"step-title\">\n" +
    "      <div class=\"row\">\n" +
    "        <div class=\"col-xs-8\">\n" +
    "          <h2>\n" +
    "            <span class=\"number\">3</span>\n" +
    "            <span ng-show=\"eventFormData.isEvent\" translate-once=\"eventForm.step3.title_event\"></span>\n" +
    "            <span ng-show=\"eventFormData.isPlace\" translate-once=\"eventForm.step3.title_place\"></span>\n" +
    "          </h2>\n" +
    "        </div>\n" +
    "        <div class=\"col-xs-4\">\n" +
    "          <select ng-change=\"changeCountrySelection()\"\n" +
    "            ng-options=\"option.code | translate for option in filterAvailableCountries(eventFormData.isPlace) track by option.code\"\n" +
    "            ng-model=\"selectedCountry\"\n" +
    "            class=\"form-control\"\n" +
    "            ng-show=\"availableCountries.length > 1\">\n" +
    "          </select>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"row\">\n" +
    "      <div class=\"col-xs-12\">\n" +
    "        <!-- show info alert when event is a BOOKABLE_EVENT -->\n" +
    "        <div ng-show=\"isBookableEvent\">\n" +
    "          <div ng-hide=\"bookableEventShowStep4\">\n" +
    "            <div class=\"alert alert-info\">\n" +
    "              <span translate-once=\"eventForm.step3.bookable_event_info_alert\"></span>\n" +
    "            </div>\n" +
    "            <button type=\"button\" \n" +
    "                    class=\"btn btn-primary\" \n" +
    "                    ng-click=\"selectLocation(bookableEventLocationId)\" \n" +
    "                    translate-once=\"eventForm.step3.bookable_event_next_button\">\n" +
    "            </button>\n" +
    "          </div>\n" +
    "          <div ng-show=\"bookableEventShowStep4\">\n" +
    "            <span class=\"btn-chosen\" translate-once=\"eventForm.step3.bookable_event_success_message\"></span>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "        <span ng-show=\"selectedCountry.code==='BE'\">\n" +
    "          <label for=\"gemeente-autocomplete\"\n" +
    "                 id=\"gemeente-label\"\n" +
    "                 ng-hide=\"selectedCity\">\n" +
    "                 <span translate-once=\"eventForm.step3.choose_city\"></span>\n" +
    "                 <span translate-once=\"eventForm.step3.choose_city_helper\" class=\"text-muted\"></span>\n" +
    "         </label>\n" +
    "       </span>\n" +
    "       <span ng-show=\"selectedCountry.code==='NL'\">\n" +
    "         <label for=\"gemeente-autocomplete\"\n" +
    "                id=\"gemeente-label\"\n" +
    "                ng-hide=\"selectedCity\">\n" +
    "                <span translate-once=\"eventForm.step3.choose_residence\"></span>\n" +
    "                <span translate-once=\"eventForm.step3.choose_residence_helper\" class=\"text-muted\"></span>\n" +
    "        </label>\n" +
    "        </span>\n" +
    "        <div id=\"gemeente-kiezer\" ng-hide=\"selectedCity || isBookableEvent\">\n" +
    "          <span style=\"position: relative; display: inline-block; direction: ltr;\" class=\"twitter-typeahead\">\n" +
    "            <input type=\"text\"\n" +
    "                   id=\"gemeente-autocomplete\"\n" +
    "                   class=\"form-control uib-typeahead\"\n" +
    "                   ng-model=\"cityAutocompleteTextField\"\n" +
    "                   udb-auto-scroll\n" +
    "                   uib-typeahead=\"city as city.label for city in cities | filter:filterCities($viewValue) | orderBy:orderByLevenshteinDistance($viewValue)\"\n" +
    "                   typeahead-on-select=\"selectCity($item, $label)\"\n" +
    "                   typeahead-min-length=\"2\"\n" +
    "                   typeahead-template-url=\"templates/city-suggestion.html\"\n" +
    "                   autocomplete=\"off\" />\n" +
    "          </span>\n" +
    "          <div class=\"alert alert-danger\"\n" +
    "               ole=\"alert\"\n" +
    "               translate-once=\"eventForm.step3.problem_city\"\n" +
    "               ng-show=\"cityAutoCompleteError\">\n" +
    "          </div>\n" +
    "        </div>\n" +
    "        <div id=\"gemeente-gekozen\" ng-show=\"selectedCity && !isBookableEvent\">\n" +
    "          <span class=\"btn-chosen\" id=\"gemeente-gekozen-button\" ng-bind=\"selectedCity\"></span>\n" +
    "          <a href=\"\"\n" +
    "             class=\"btn btn-default btn-link\"\n" +
    "             translate-once=\"eventForm.step3.change\"\n" +
    "             ng-click=\"changeCitySelection()\"></a>\n" +
    "        </div>\n" +
    "\n" +
    "\n" +
    "    <div id=\"waar-evenement\" class=\"clearfix\" ng-show=\"eventFormData.isEvent && selectedCity\">\n" +
    "      <div class=\"row\">\n" +
    "        <div class=\"col-xs-12\">\n" +
    "          <label id=\"locatie-label\" ng-show=\"!selectedLocation\">\n" +
    "            <span translate-once=\"eventForm.step3.choose_location\"></span>\n" +
    "            <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"loadingLocations\"></i>\n" +
    "          </label>\n" +
    "          <div id=\"locatie-kiezer\" ng-hide=\"selectedLocation\">\n" +
    "            <span style=\"position: relative; display: block; direction: ltr;\" class=\"twitter-typeahead\">\n" +
    "              <input type=\"text\"\n" +
    "                     translate-once-placeholder=\"eventForm.step3.placeholder_location\"\n" +
    "                     class=\"form-control typeahead\"\n" +
    "                     ng-model=\"asyncPlaceSuggestion\"\n" +
    "                     uib-typeahead=\"location.id as location.name for location in filteredLocations = (getPlaces($viewValue)) | limitTo:50\"\n" +
    "                     typeahead-on-select=\"selectLocation($model, $label)\"\n" +
    "                     typeahead-min-length=\"3\"\n" +
    "                     typeahead-wait-ms=\"500\"\n" +
    "                     typeahead-loading=\"loadingLocations\"\n" +
    "                     typeahead-template-url=\"templates/place-suggestion.html\"\n" +
    "                     typeahead-popup-template-url=\"templates/place-suggestion-popup.html\"\n" +
    "                     udb-auto-scroll/>\n" +
    "              <div ng-show=\"loadingLocations\" class=\"dropdown-menu-no-results\">\n" +
    "                <div class=\"panel panel-default text-center\">\n" +
    "                  <div class=\"panel-body\">\n" +
    "                      <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "                  </div>\n" +
    "                </div>\n" +
    "              </div>\n" +
    "              <div class=\"plaats-adres-resultaat dropdown-menu-no-results\"\n" +
    "                   ng-show=\"!cityHasLocations() && locationsSearched && !loadingLocations\">\n" +
    "                <div class=\"panel panel-default text-center\">\n" +
    "                  <div class=\"panel-body\">\n" +
    "                    <p translate-once=\"eventForm.step3.location_not_found\"></p>\n" +
    "                    <button type=\"button\" class=\"btn btn-primary\"\n" +
    "                            data-toggle=\"modal\"\n" +
    "                            data-target=\"#waar-locatie-toevoegen\"\n" +
    "                            translate-once=\"eventForm.step3.add_location\"\n" +
    "                            ng-click=\"openPlaceModal()\">\n" +
    "                    </button>\n" +
    "                  </div>\n" +
    "                </div>\n" +
    "              </div>\n" +
    "            </span>\n" +
    "            <div class=\"alert alert-danger\"\n" +
    "                 role=\"alert\"\n" +
    "                 translate-once=\"eventForm.step3.location_error\"\n" +
    "                 ng-show=\"locationAutoCompleteError\">\n" +
    "            </div>\n" +
    "          </div>\n" +
    "\n" +
    "          <div id=\"locatie-gekozen\" ng-show=\"selectedLocation && !isBookableEvent\" >\n" +
    "            <span ng-bind=\"selectedLocation.name\"></span>\n" +
    "            <button type=\"button\"\n" +
    "                    class=\"btn btn-default btn-link\"\n" +
    "                    data-toggle=\"modal\"\n" +
    "                    data-target=\"#waar-locatie-toevoegen\"\n" +
    "                    translate-once=\"eventForm.step3.change\"\n" +
    "                    ng-click=\"changeLocationSelection()\"></button>\n" +
    "            <br>\n" +
    "            <span ng-bind=\"selectedLocation.address.streetAddress\"></span>\n" +
    "          </div>\n" +
    "\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div id=\"waar-plaats\" class=\"clearfix\" ng-show=\"eventFormData.isPlace && selectedCity\">\n" +
    "      <div class=\"plaats-adres-ingeven\" ng-hide=\"placeStreetAddress\">\n" +
    "        <div class=\"row\">\n" +
    "          <div class=\"col-xs-12 col-md-4\">\n" +
    "            <div class=\"form-group\" ng-class=\"{'has-error' : showValidation || (step3Form.street.$error.required && !step3Form.street.$pristine)}\">\n" +
    "              <label translate-once=\"eventForm.step3.street\"></label>\n" +
    "              <input class=\"form-control\"\n" +
    "                     id=\"straat\"\n" +
    "                     name=\"street\"\n" +
    "                     ng-model=\"newPlaceStreetAddress\"\n" +
    "                     ng-change=\"resetStreetValidation()\"\n" +
    "                     translate-once-placeholder=\"eventForm.step3.placeholder_street\"\n" +
    "                     type=\"text\"\n" +
    "                     required />\n" +
    "              <span class=\"help-block\"\n" +
    "                    translate-once=\"eventForm.step3.street_validate\"\n" +
    "                    ng-show=\"showValidation && step3Form.street.$error.required\">\n" +
    "              </span>\n" +
    "              <span class=\"help-block\" ng-show=\"showValidation && showStreetValidation\" translate-once=\"eventForm.step3.street_validate_long\">\n" +
    "              </span>\n" +
    "            </div>\n" +
    "            <div class=\"form-group\"\n" +
    "                 ng-if=\"selectedCountry.code==='NL'\"\n" +
    "                 ng-class=\"{'has-error' : showValidation || (step3Form.postalCode.$error.required && !step3Form.postalCode.$pristine)}\">\n" +
    "              <label translate-once=\"eventForm.step3.zip\"></label>\n" +
    "              <span class=\"text-muted\">bv. 1104CA</span>\n" +
    "              <input class=\"form-control\"\n" +
    "                     id=\"postalCode\"\n" +
    "                     name=\"postalCode\"\n" +
    "                     ng-model=\"newPlacePostalCode\"\n" +
    "                     ng-change=\"resetZipValidation()\"\n" +
    "                     translate-once-placeholder=\"eventForm.step3.placeholder_zip\"\n" +
    "                     type=\"text\"\n" +
    "                     required />\n" +
    "              <span class=\"help-block\"\n" +
    "                    translate-once=\"eventForm.step3.zip_validate\"\n" +
    "                    ng-show=\"showValidation && step3Form.postalCode.$error.required\">\n" +
    "              </span>\n" +
    "              <span class=\"help-block\" ng-show=\"showValidation && showZipValidation\" translate-once=\"eventForm.step3.invalid_zip\">\n" +
    "              </span>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "        <a class=\"btn btn-primary plaats-ok\"\n" +
    "           ng-if=\"selectedCountry.code==='BE'\"\n" +
    "           translate-once=\"eventForm.step3.ok\"\n" +
    "           ng-click=\"setPlaceStreetAddress(newPlaceStreetAddress)\"></a>\n" +
    "        <a class=\"btn btn-primary plaats-ok\"\n" +
    "           ng-if=\"selectedCountry.code==='NL'\"\n" +
    "           translate-once=\"eventForm.step3.ok\"\n" +
    "           ng-click=\"setNLPlaceStreetAddress(newPlaceStreetAddress, step3Form.postalCode.$viewValue)\"></a>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"plaats-adres-resultaat\" ng-show=\"placeStreetAddress\">\n" +
    "        <span>\n" +
    "          <span class=\"btn-chosen\" ng-bind=\"eventFormData.address.streetAddress\"></span>\n" +
    "          <a class=\"btn btn-link plaats-adres-wijzigen\"\n" +
    "             translate-once=\"eventForm.step3.change\"\n" +
    "             ng-click=\"changePlaceStreetAddress()\"></a>\n" +
    "        </span>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "  </form>\n" +
    "</section>\n" +
    "\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-step4.html',
    "<div ng-controller=\"EventFormStep4Controller as EventFormStep4\">\n" +
    "\n" +
    "  <a name=\"titel\"></a>\n" +
    "  <section id=\"titel\" ng-show=\"eventFormData.showStep4\">\n" +
    "    <div class=\"step-title\">\n" +
    "      <div class=\"row\">\n" +
    "        <div class=\"col-xs-12\">\n" +
    "          <h2>\n" +
    "            <span class=\"number\">4</span>\n" +
    "            <span translate-once=\"eventForm.step4.basic_data\"></span>\n" +
    "          </h2>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"row\">\n" +
    "      <div class=\"col-md-8 col-lg-7\">\n" +
    "        <label ng-show=\"eventFormData.isEvent\" translate-once=\"eventForm.step4.name_event\"></label>\n" +
    "        <label ng-show=\"eventFormData.isPlace\" translate-once=\"eventForm.step4.name_place\"></label>\n" +
    "\n" +
    "        <div class=\"form-group-lg\">\n" +
    "          <input type=\"text\"\n" +
    "                 class=\"form-control\"\n" +
    "                 ng-model=\"eventFormData.name\"\n" +
    "                 ng-model-options=\"titleInputOptions\"\n" +
    "                 ng-change=\"eventTitleChanged()\"\n" +
    "                 focus-if=\"eventFormData.showStep4 && eventFormData.id === ''\"\n" +
    "                 udb-auto-scroll>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"help-block\">\n" +
    "          <p>\n" +
    "            <span ng-show=\"eventFormData.isEvent\" translate-once=\"eventForm.step4.help_event\"></span>\n" +
    "            <span ng-show=\"eventFormData.isPlace\" translate-once=\"eventForm.step4.help_place\"></span>\n" +
    "            <span translate-once=\"eventForm.step4.help_description\"></span>\n" +
    "          </p>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <udb-form-age></udb-form-age>\n" +
    "\n" +
    "    <div class=\"alert alert-warning\" ng-show=\"infoMissing\">\n" +
    "      <strong translate-once=\"eventForm.step4.info_missing\"></strong>\n" +
    "      <ul>\n" +
    "        <li ng-repeat=\"error in missingInfo\" ng-bind-html=\"error\" translate>\n" +
    "          {{error}}\n" +
    "        </li>\n" +
    "      </ul>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"alert alert-danger\"\n" +
    "         translate-once=\"eventForm.step4.save_error\"\n" +
    "         ng-show=\"error\">\n" +
    "    </div>\n" +
    "\n" +
    "    <p ng-show=\"eventFormData.id === ''\">\n" +
    "      <a class=\"btn btn-primary titel-doorgaan\"\n" +
    "          ng-disabled=\"isValidateButtonDisabled\"\n" +
    "          ng-click=\"validateEvent()\">\n" +
    "        <span translate-once=\"eventForm.step4.continue\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "      </a>\n" +
    "    </p>\n" +
    "\n" +
    "  </section>\n" +
    "\n" +
    "  <div class=\"spinner\" style=\"display: none;\">\n" +
    "    <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "  </div>\n" +
    "\n" +
    "  <a name=\"dubbeldetectie\"></a>\n" +
    "  <section class=\"dubbeldetectie\" ng-show=\"eventFormData.name !== ''\">\n" +
    "\n" +
    "    <div class=\"panel panel-info\" ng-show=\"resultViewer.totalItems > 0\">\n" +
    "      <div class=\"panel-body bg-info text-info\">\n" +
    "        <p class=\"h2\" style=\"margin-top: 0;\" translate-once=\"eventForm.step4.doubles_title\"></p>\n" +
    "        <p translate-once=\"eventForm.step4.doubles_help\"></p>\n" +
    "\n" +
    "        <div class=\"row clearfix\" ng-if=\"eventFormData.getType() === 'event'\">\n" +
    "          <div ng-repeat=\"event in resultViewer.events | filter:{'@type': 'Event'}\">\n" +
    "            <udb-event-suggestion></udb-event-suggestion>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"row clearfix\" ng-if=\"eventFormData.getType() === 'place'\">\n" +
    "          <div ng-repeat=\"event in resultViewer.events | filter:{'@type': 'Place'}\">\n" +
    "            <udb-place-suggestion></udb-place-suggestion>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <h3 ng-show=\"duplicatesSearched && resultViewer.totalItems > 0\">\n" +
    "      <span translate-once=\"eventForm.step4.sure\" translate-values=\"{ name: '{{eventFormData.name}}' }\"></span>\n" +
    "    </h3>\n" +
    "    <ul class=\"list-inline\" ng-show=\"duplicatesSearched && resultViewer.totalItems > 0\">\n" +
    "      <li>\n" +
    "        <a class=\"btn btn-default\"\n" +
    "           translate-once=\"eventForm.step4.return_dashboard\"\n" +
    "           href=\"dashboard\"></a>\n" +
    "      </li>\n" +
    "      <li>\n" +
    "        <a class=\"btn btn-primary dubbeldetectie-doorgaan\" ng-click=\"saveEvent()\">\n" +
    "          <span translate-once=\"eventForm.step4.yes_continue\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "        </a>\n" +
    "      </li>\n" +
    "    </ul>\n" +
    "\n" +
    "  </section>\n" +
    "\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-step5.html',
    "<div ng-controller=\"EventFormStep5Controller as EventFormStep5\" >\n" +
    "  <a name=\"extra\"></a>\n" +
    "  <section id=\"extra\" ng-show=\"eventFormData.showStep5\">\n" +
    "\n" +
    "    <div class=\"step-title\">\n" +
    "      <div class=\"row\">\n" +
    "        <div class=\"col-xs-12\">\n" +
    "          <h2>\n" +
    "            <span class=\"number\">5</span>\n" +
    "            <span ng-show=\"eventFormData.isEvent\" translate-once=\"eventForm.step5.expose_event\"></span>\n" +
    "            <span ng-show=\"eventFormData.isPlace\" translate-once=\"eventForm.step5.expose_place\"></span>\n" +
    "          </h2>\n" +
    "          </h2>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"row\">\n" +
    "      <div class=\"col-sm-7\">\n" +
    "\n" +
    "        <div class=\"row extra-titnieel\">\n" +
    "          <div class=\"extra-task state-complete\">\n" +
    "            <div class=\"col-sm-3\">\n" +
    "              <em class=\"extra-task-label\" translate-once=\"eventForm.step5.title\"></em>\n" +
    "            </div>\n" +
    "            <div class=\"col-sm-8\">\n" +
    "              <p id=\"extra-titel-motivator\" ng-bind=\"eventFormData.name\"></p>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"row extra-beschrijving\">\n" +
    "          <div class=\"extra-task\" ng-class=\"descriptionCssClass\">\n" +
    "            <div class=\"col-sm-3\">\n" +
    "              <em class=\"extra-task-label\" translate-once=\"eventForm.step5.description\"></em>\n" +
    "              <span> </span>\n" +
    "              <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"savingDescription\"></i>\n" +
    "            </div>\n" +
    "            <div class=\"col-sm-8\">\n" +
    "              <section class=\"state incomplete\">\n" +
    "                <div class=\"row\">\n" +
    "                  <div class=\"col-sm-6\">\n" +
    "                    <a class=\"btn btn-default to-filling\"\n" +
    "                       translate-once=\"eventForm.step5.add_text\"\n" +
    "                       ng-click=\"alterDescription()\">\n" +
    "                    </a>\n" +
    "                  </div>\n" +
    "                </div>\n" +
    "              </section>\n" +
    "              <section class=\"state complete filling\">\n" +
    "                <div class=\"form-group\">\n" +
    "                  <textarea ng-blur=\"saveDescription()\"\n" +
    "                            ng-focus=\"focusDescription()\"\n" +
    "                            class=\"form-control event-description\"\n" +
    "                            ng-model=\"description\"\n" +
    "                            rows=\"6\"\n" +
    "                            udb-auto-scroll\n" +
    "                            focus-if=\"descriptionCssClass == 'state-filling'\">\n" +
    "                            </textarea>\n" +
    "\n" +
    "                  <p class=\"tip description-info\" ng-if=\"descriptionInfoVisible && countCharacters() < 200\">\n" +
    "                    <span translate-once=\"eventForm.step5.required_200\"></span>\n" +
    "                    <span translate-once=\"eventForm.step5.required_still\"></span> <span ng-bind=\"(200 - countCharacters())\"></span> <span translate-once=\"eventForm.step5.required_signs\"></span>\n" +
    "                    <span class=\"loader\">\n" +
    "                      <span class=\"empty\"></span>\n" +
    "                      <span class=\"bar\" ng-style=\"{width : (countCharacters()/2)+'%'}\" ></span>\n" +
    "                    </span>\n" +
    "                  </p>\n" +
    "                  <p class=\"tip description-info\"\n" +
    "                     translate-once=\"eventForm.step5.required_200_help\"\n" +
    "                     ng-if=\"descriptionInfoVisible && countCharacters() >= 200\">\n" +
    "                  </p>\n" +
    "                  <p>\n" +
    "                    <a ng-if=\"description\"\n" +
    "                       class=\"to-filling\"\n" +
    "                       translate-once=\"eventForm.step5.empty\"\n" +
    "                       ng-click=\"saveDescription(true)\">\n" +
    "                    </a>\n" +
    "                  </p>\n" +
    "                  <div class=\"alert alert-info description-tips\" ng-switch=\"eventFormData.type.id\">\n" +
    "                    <p ng-switch-when=\"0.50.4.0.0\" translate-once=\"eventForm.step5.tips.Concert\"></p>\n" +
    "                    <p ng-switch-when=\"0.54.0.0.0\" translate-once=\"eventForm.step5.tips.Dansvoorstelling\"></p>\n" +
    "                    <p ng-switch-when=\"0.5.0.0.0\" translate-once=\"eventForm.step5.tips.Festival\"></p>\n" +
    "                    <p ng-switch-when=\"0.50.6.0.0\" translate-once=\"eventForm.step5.tips.Film\"></p>\n" +
    "                    <p ng-switch-when=\"0.3.2.0.0\" translate-once=\"eventForm.step5.tips.Lezing of congres\"></p>\n" +
    "                    <p ng-switch-when=\"0.55.0.0.0\" translate-once=\"eventForm.step5.tips.Theatervoorstelling\"></p>\n" +
    "                    <p ng-switch-when=\"0.19.0.0.0\" translate-once=\"eventForm.step5.tips.Sportwedstrijd bekijken\"></p>\n" +
    "                    <p ng-switch-when=\"0.37.0.0.0\" translate-once=\"eventForm.step5.tips.Markt of braderie\"></p>\n" +
    "                    <p ng-switch-when=\"0.12.0.0.0\" translate-once=\"eventForm.step5.tips.Opendeurdag\"></p>\n" +
    "                    <p ng-switch-when=\"0.6.0.0.0\" translate-once=\"eventForm.step5.tips.Beurs\"></p>\n" +
    "                    <p ng-switch-when=\"0.0.0.0.0\" translate-once=\"eventForm.step5.tips.Tentoonstelling\"></p>\n" +
    "                    <p ng-switch-when=\"0.7.0.0.0\" translate-once=\"eventForm.step5.tips.Begeleide uitstap of rondleiding\"></p>\n" +
    "                    <p ng-switch-when=\"0.3.1.0.0\" translate-once=\"eventForm.step5.tips.Lessenreeks\"></p>\n" +
    "                    <p ng-switch-when=\"0.3.1.0.1\" translate-once=\"eventForm.step5.tips.Cursus met open sessies\"></p>\n" +
    "                    <p ng-switch-when=\"0.57.0.0.0\" translate-once=\"eventForm.step5.tips.Kamp of vakantie\"></p>\n" +
    "                    <p ng-switch-when=\"0.28.0.0.0\" translate-once=\"eventForm.step5.tips.Festiviteit\"></p>                    \n" +
    "                    <p ng-switch-when=\"0.17.0.0.0\" translate-once=\"eventForm.step5.tips.Route\"></p>\n" +
    "                    <p ng-switch-when=\"0.49.0.0.0\" translate-once=\"eventForm.step5.tips.Party of fuif\"></p>\n" +
    "                    <p ng-switch-when=\"1.50.0.0.0\" translate-once=\"eventForm.step5.tips.Eet of drankfestijn\"></p>\n" +
    "                    <p ng-switch-when=\"0.50.21.0.0\" translate-once=\"eventForm.step5.tips.Spel of quiz\"></p>\n" +
    "                    <p ng-switch-when=\"0.59.0.0.0\" translate-once=\"eventForm.step5.tips.Sport en beweging\"></p>\n" +
    "                    <p ng-switch-when=\"0.14.0.0.0\" translate-once=\"eventForm.step5.tips.Monument\"></p>\n" +
    "                  </div>\n" +
    "                </div>\n" +
    "                <div ng-show=\"descriptionError\"\n" +
    "                     class=\"alert alert-danger\"\n" +
    "                     translate-once=\"eventForm.step5.description_error\">\n" +
    "                </div>\n" +
    "              </section>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"row extra-organisator\">\n" +
    "          <div class=\"extra-task\" ng-class=\"organizerCssClass\">\n" +
    "            <div class=\"col-sm-3\">\n" +
    "              <em class=\"extra-task-label\" translate-once=\"eventForm.step5.organizer\"></em>\n" +
    "              <span> </span>\n" +
    "              <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"savingOrganizer\"></i>\n" +
    "            </div>\n" +
    "            <div class=\"col-sm-8\">\n" +
    "              <section class=\"state incomplete\">\n" +
    "                <a class=\"btn btn-default to-filling\"\n" +
    "                   translate-once=\"eventForm.step5.add_organizer\"\n" +
    "                   ng-click=\"organizerCssClass = 'state-filling'\">\n" +
    "                </a>\n" +
    "              </section>\n" +
    "              <section class=\"state complete\">\n" +
    "                <span>\n" +
    "                  <span ng-bind=\"eventFormData.organizer.name\"></span>\n" +
    "                  <a class=\"close\" ng-click=\"deleteOrganizerHandler()\">\n" +
    "                    <span aria-hidden=\"true\"> &times;</span>\n" +
    "                  </a>\n" +
    "                </span>\n" +
    "                <div ng-if=\"hasTicketSales\" class=\"alert alert-danger\" translate=\"uitpas.uitpasInfo.cantChangeOrganiser\"></div>\n" +
    "                <div ng-if=\"hasUitpasError\" class=\"alert alert-danger\" translate=\"uitpas.uitpasInfo.unavailable\"></div>\n" +
    "              </section>\n" +
    "              <section class=\"state filling\">\n" +
    "                <div class=\"form-group\">\n" +
    "                  <label>\n" +
    "                    <span translate-once=\"eventForm.step5.choose_organizer\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"loadingOrganizers\"></i>\n" +
    "                  </label>\n" +
    "                  <div id=\"organisator-kiezer\">\n" +
    "                    <span class=\"twitter-typeahead\" style=\"position: relative; display: inline-block; direction: ltr;\">\n" +
    "                      <input type=\"text\" class=\"form-control uib-typeahead\" id=\"organisator-autocomplete\"\n" +
    "                             ng-model=\"organizer\"\n" +
    "                             uib-typeahead=\"organizer for organizer in getOrganizers($viewValue)\"\n" +
    "                             typeahead-on-select=\"selectOrganizer(organizer)\"\n" +
    "                             typeahead-min-length=\"3\"\n" +
    "                             typeahead-template-url=\"templates/organisation-uitpas-typeahead-template.html\"\n" +
    "                             typeahead-wait-ms=\"300\"\n" +
    "                             focus-if=\"organizerCssClass == 'state-filling'\"\n" +
    "                             udb-auto-scroll/>\n" +
    "                      <div class=\"dropdown-menu-no-results text-center\" ng-show=\"emptyOrganizerAutocomplete\">\n" +
    "                        <div class=\"panel panel-default text-center\">\n" +
    "                          <div class=\"panel-body\">\n" +
    "                            <p translate-once=\"eventForm.step5.organizer_not_found\"></p>\n" +
    "                            <button type='button'\n" +
    "                                    class='btn btn-primary'\n" +
    "                                    translate-once=\"eventForm.step5.add_new_organizer\"\n" +
    "                                    ng-click=\"openOrganizerModal()\">\n" +
    "                            </button>\n" +
    "                          </div>\n" +
    "                        </div>\n" +
    "                      </div>\n" +
    "                    </span>\n" +
    "                  </div>\n" +
    "                </div>\n" +
    "              </section>\n" +
    "              <div ng-show=\"organizerError\" class=\"alert alert-danger\" translate-once=\"eventForm.step5.organizer_error\">\n" +
    "              </div>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <price-info price=\"price\" ng-if=\"!disablePriceInfo\" event-id=\"eventFormData.id\" organizer=\"eventFormData.organizer\"></price-info>\n" +
    "        <uitpas-info organizer=\"eventFormData.organizer\" price=\"eventFormData.priceInfo\"></uitpas-info>\n" +
    "\n" +
    "        <div class=\"row extra-contact\">\n" +
    "          <div class=\"extra-task meer-info\" ng-class=\"contactInfoCssClass\">\n" +
    "            <div class=\"col-sm-3\">\n" +
    "              <em class=\"extra-task-label\" translate-once=\"eventForm.step5.contact\"></em>\n" +
    "              <span> </span>\n" +
    "              <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"savingContactInfo\"></i>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"col-sm-8\">\n" +
    "              <section class=\"state incomplete\">\n" +
    "                <a class=\"btn btn-default\" ng-click=\"addContactInfo()\" translate-once=\"eventForm.step5.add_contact\">\n" +
    "                </a>\n" +
    "              </section>\n" +
    "\n" +
    "              <section class=\"state filling complete\">\n" +
    "                <form name=\"contactInfoForm\" class=\"contact-info\">\n" +
    "                  <table class=\"table\">\n" +
    "                    <tr ng-repeat=\"(key, info) in contactInfo\"\n" +
    "                        ng-model=\"info\"\n" +
    "                        udb-contact-info-validation\n" +
    "                        ng-class=\"{'has-error' : infoErrorMessage !== '' }\"\n" +
    "                        ng-change=\"saveContactInfo()\">\n" +
    "                      <td>\n" +
    "                        <select class=\"form-control\" ng-model=\"info.type\"\n" +
    "                                ng-change=\"clearInfo(); removeBookingInfo('{{info.type}}')\">\n" +
    "                          <option value=\"url\" translate-once=\"eventForm.step5.website\"></option>\n" +
    "                          <option value=\"phone\" translate-once=\"eventForm.step5.phone\"></option>\n" +
    "                          <option value=\"email\" translate-once=\"eventForm.step5.e-mail\"></option>\n" +
    "                        </select>\n" +
    "                      </td>\n" +
    "                      <td>\n" +
    "                        <ng-switch on=\"info.type\">\n" +
    "                          <input type=\"text\"\n" +
    "                                 ng-switch-when=\"url\"\n" +
    "                                 udb-http-prefix\n" +
    "                                 class=\"form-control\"\n" +
    "                                 ng-model=\"info.value\"\n" +
    "                                 name=\"contact[{{key}}]\"\n" +
    "                                 ng-change=\"validateInfo(); saveContactInfo();\"\n" +
    "                                 ng-model-options=\"{ updateOn: 'blur' }\"/>\n" +
    "                          <input type=\"text\"\n" +
    "                                 ng-switch-default\n" +
    "                                 class=\"form-control\"\n" +
    "                                 ng-model=\"info.value\"\n" +
    "                                 name=\"contact[{{key}}]\"\n" +
    "                                 ng-change=\"validateInfo(); saveContactInfo();\"\n" +
    "                                 ng-model-options=\"{ updateOn: 'blur' }\"/>\n" +
    "                        </ng-switch>\n" +
    "                        <span class=\"help-block\" ng-hide=\"infoErrorMessage === ''\" ng-bind=\"infoErrorMessage\"></span>\n" +
    "                        <div class=\"booking-options\" ng-show=\"showBookingOption(info)\">\n" +
    "                          <label>\n" +
    "                            <input type=\"checkbox\"\n" +
    "                                   class=\"reservatie-{{info.type}}-check reservatie-check\"\n" +
    "                                   ng-model=\"info.booking\"\n" +
    "                                   ng-click=\"toggleBookingType(info)\">\n" +
    "                            <span translate-once=\"eventForm.step5.use_booking\"></span>\n" +
    "                          </label>\n" +
    "                          <div class=\"reservatie-website-info reservatie-info\"\n" +
    "                               ng-if=\"info.type === 'url' && info.booking\">\n" +
    "                            <div class=\"reservatie-info-stap2\">\n" +
    "                              <div class=\"weergave\">\n" +
    "                                <p><strong translate-once=\"eventForm.step5.booking_exposure\"></strong></p>\n" +
    "                                <select ng-model=\"bookingModel.urlLabel[mainLanguage]\"\n" +
    "                                        ng-change=\"saveWebsitePreview()\"\n" +
    "                                        ng-options=\"option.label for option in bookingOptions[mainLanguage]\">\n" +
    "                                </select>\n" +
    "                              </div>\n" +
    "                            </div>\n" +
    "                          </div>\n" +
    "                        </div>\n" +
    "                      </td>\n" +
    "                      <td>\n" +
    "                        <button ng-if=\"!info.booking\" type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"deleteContactInfo(key)\">\n" +
    "                          <span aria-hidden=\"true\">&times;</span>\n" +
    "                        </button>\n" +
    "                        <button ng-if=\"info.booking\" type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"deleteBookingInfo(info, key)\">\n" +
    "                          <span aria-hidden=\"true\">&times;</span>\n" +
    "                        </button>\n" +
    "                      </td>\n" +
    "                    </tr>\n" +
    "                    <tr>\n" +
    "                      <td colspan=\"3\">\n" +
    "                        <a ng-click=\"addContactInfo()\" translate-once=\"eventForm.step5.add_more_contact\"></a>\n" +
    "                      </td>\n" +
    "                    </tr>\n" +
    "                  </table>\n" +
    "                </form>\n" +
    "              </section>\n" +
    "\n" +
    "              <div class=\"row extra-tickets-periode\"\n" +
    "                   ng-show=\"hasBookingInfo()\">\n" +
    "                  <div class=\"extra-task\">\n" +
    "                      <udb-reservation-period on-booking-period-saved=\"saveBookingInfo()\"></udb-reservation-period>\n" +
    "                  </div>\n" +
    "              </div>\n" +
    "\n" +
    "              <div ng-show=\"contactInfoError\" class=\"alert alert-danger\" translate-once=\"eventForm.step5.contact_error\">\n" +
    "              </div>\n" +
    "\n" +
    "            </div>\n" +
    "\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <udb-form-audience></udb-form-audience>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"col-sm-5\">\n" +
    "\n" +
    "        <div class=\"image-upload\" ng-class=\"eventFormData.mediaObjects.length ? 'state-complete' : 'state-incomplete'\">\n" +
    "          <div class=\"image-upload-none state incomplete\">\n" +
    "            <span class=\"image-upload-icon\"></span>\n" +
    "            <p class=\"muted\" translate-once=\"eventForm.step5.image_help\"></p>\n" +
    "          </div>\n" +
    "\n" +
    "          <div class=\"image-upload-list state complete\" ng-if=\"eventFormData.mediaObjects.length > 0\">\n" +
    "            <h4 translate-once=\"eventForm.step5.images\"></h4>\n" +
    "            <div ng-repeat=\"image in eventFormData.mediaObjects | imagesByLanguage:eventFormData.mainLanguage track by image.contentUrl\">\n" +
    "              <div class=\"uploaded-image\">\n" +
    "                <div class=\"media\" ng-class=\"{'main-image': ($index === 0)}\">\n" +
    "                  <a class=\"media-left\" href=\"#\">\n" +
    "                    <img ng-src=\"{{ image.thumbnailUrl }}?width=50&height=50\">\n" +
    "                  </a>\n" +
    "\n" +
    "                  <div class=\"media-body\">\n" +
    "                    <div ng-bind=\"image.description\"></div>\n" +
    "                    <div class=\"text-muted\">&copy; <span ng-bind=\"image.copyrightHolder\"><span translate-once=\"eventForm.step5.copyright\"></span></span></div>\n" +
    "                  </div>\n" +
    "\n" +
    "                  <div class=\"media-actions\">\n" +
    "                      <a class=\"btn btn-xs btn-primary\" ng-click=\"editImage(image)\" translate-once=\"eventForm.step5.change\"></a>\n" +
    "                      <a class=\"btn btn-xs btn-danger\" ng-click=\"removeImage(image)\" translate-once=\"eventForm.step5.delete\"></a>\n" +
    "                      <a class=\"btn btn-xs btn-default select-main-image\" ng-click=\"selectMainImage(image)\" translate-once=\"eventForm.step5.main_image\"></a>\n" +
    "                  </div>\n" +
    "\n" +
    "                </div>\n" +
    "              </div>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "\n" +
    "          <div class=\"text-center\">\n" +
    "            <a class=\"btn btn-default\"\n" +
    "               href=\"#\"\n" +
    "               translate-once=\"eventForm.step5.add_image\"\n" +
    "               ng-click=\"openUploadImageModal(-1)\"></a>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "\n" +
    "  </section>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form.html',
    "<div class=\"offer-form\" ng-if=\"loaded\">\n" +
    "  <div class=\"alert alert-warning\" ng-show=\"showLangWarning\">\n" +
    "    <p translate-once=\"eventForm.langWarning\" translate-values=\"{ language: '{{language}}' }\"></p>\n" +
    "  </div>\n" +
    "\n" +
    "  <udb-event-form-step1></udb-event-form-step1>\n" +
    "  <udb-event-form-step2></udb-event-form-step2>\n" +
    "  <udb-event-form-step3></udb-event-form-step3>\n" +
    "  <udb-event-form-step4></udb-event-form-step4>\n" +
    "  <udb-event-form-step5></udb-event-form-step5>\n" +
    "\n" +
    "  <udb-event-form-publish></udb-event-form-publish>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-export-modal.html',
    "<div class=\"modal-header\">\n" +
    "  <button type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"exporter.close()\">\n" +
    "    <span class=\"fa fa-close\"></span>\n" +
    "  </button>\n" +
    "  <h4 class=\"modal-title\">Exporteren - <span ng-bind=\"exporter.eventCount + ' Items'\"></span></h4>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-switch=\"exporter.getActiveStepName()\">\n" +
    "  <form ng-switch-when=\"format\" name=\"formatForm\">\n" +
    "    <div class=\"modal-body\">\n" +
    "      <h5>Selecteer het formaat</h5>\n" +
    "\n" +
    "      <div class=\"export-format-field\" ng-repeat=\"format in ::exporter.exportFormats\">\n" +
    "        <label>\n" +
    "          <input type=\"radio\" name=\"eventExportFormat\" ng-model=\"exporter.format\" ng-value=\"format.type\"\n" +
    "                 class=\"export-format-radio\">\n" +
    "          <span ng-bind=\"format.label\" class=\"export-format-label\"></span>\n" +
    "        </label>\n" +
    "        <div class=\"export-format-description\" ng-bind=\"format.description\"></div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "    <udb-export-modal-buttons></udb-export-modal-buttons>\n" +
    "  </form>\n" +
    "\n" +
    "  <form ng-switch-when=\"filter\" name=\"filterForm\">\n" +
    "    <div class=\"modal-body\">\n" +
    "      <h5>Kies de gewenste velden</h5>\n" +
    "\n" +
    "      <div class=\"export-field-selection\">\n" +
    "        <div class=\"checkbox\"\n" +
    "             ng-repeat=\"property in ::exporter.eventProperties\"\n" +
    "             ng-show=\"!property.format || property.format.type === exporter.format\">\n" +
    "          <label>\n" +
    "            <input type=\"checkbox\" ng-model=\"property.include\" name=\"eventExportFields\"\n" +
    "                   ng-disabled=\"!property.excludable\">\n" +
    "            <span ng-bind=\"('property.' + property.name) | translate\"></span>\n" +
    "          </label>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "    <udb-export-modal-buttons></udb-export-modal-buttons>\n" +
    "  </form>\n" +
    "\n" +
    "  <form ng-switch-when=\"customize\" name=\"customizeForm\" novalidate>\n" +
    "    <div class=\"modal-body\">\n" +
    "      <h5>Verfraai je rapport</h5>\n" +
    "\n" +
    "        <div class=\"form-group\">\n" +
    "          <label>Kies een logo</label>\n" +
    "          <div class=\"row\">\n" +
    "            <div class=\"col-sm-8\">\n" +
    "              <div class=\"radio\" ng-repeat=\"brand in ::exporter.brands\">\n" +
    "                <label>\n" +
    "                    <input type=\"radio\" name=\"eventExportBrand\" ng-model=\"exporter.customizations.brand\"\n" +
    "                           ng-value=\"brand\" class=\"export-customization-brand-radio\" ng-required=\"true\">\n" +
    "                    <span ng-bind=\"brand.label\"></span>\n" +
    "                </label>\n" +
    "              </div>\n" +
    "            </div>\n" +
    "            <div class=\"col-sm-4\">\n" +
    "              <img ng-src=\"{{exporter.exportLogoUrl}}{{exporter.customizations.brand.logo}}\" alt=\"{{exporter.customizations.brand.name}}\" ng-show=\"exporter.customizations.brand\" class=\"img-responsive img-thumbnail center-block export-logo\"/>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "          <p class=\"alert alert-danger\" role=\"alert\" ng-show=\"exporter.hasErrors && customizeForm.eventExportBrand.$error.required\">Gelieve een logo te selecteren. Dit is een noodzakelijk veld.</p>\n" +
    "        </div>\n" +
    "\n" +
    "      <div class=\"form-group\">\n" +
    "        <label>Kies een sjabloon</label>\n" +
    "        <div class=\"row\">\n" +
    "          <div class=\"col-sm-8\">\n" +
    "            <div class=\"radio\" ng-repeat=\"template in ::exporter.templates\">\n" +
    "              <label>\n" +
    "                <input type=\"radio\" name=\"eventExportTemplate\" ng-model=\"exporter.customizations.template\"\n" +
    "                       ng-value=\"template\" class=\"export-customization-brand-radio\" ng-required=\"true\">\n" +
    "                <span ng-bind=\"template.label\"></span>\n" +
    "              </label>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "          <div class=\"col-sm-4\">\n" +
    "            <img ng-src=\"{{exporter.templateUrl}}{{exporter.customizations.template.img}}\" alt=\"{{exporter.customizations.template.label}}\" ng-show=\"exporter.customizations.template\" class=\"img-responsive img-thumbnail center-block export-template\"/>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "        <p class=\"alert alert-danger\" role=\"alert\" ng-show=\"exporter.hasErrors && customizeForm.eventExportTemplate.$error.required\">Gelieve een sjabloon te selecteren. Dit is een noodzakelijk veld.</p>\n" +
    "      </div>\n" +
    "\n" +
    "        <div class=\"form-group\">\n" +
    "          <label for=\"export-customization-title\">Titel</label> <small class=\"text-muted\">verplicht in te vullen</small>\n" +
    "          <input placeholder=\"Bv. Uit met Vlieg of UiT in Gent\" class=\"form-control\" id=\"export-customization-title\"\n" +
    "                 ng-model=\"exporter.customizations.title\" name=\"eventExportTitle\" ng-required=\"'true'\">\n" +
    "          <p class=\"alert alert-danger\" role=\"alert\" ng-show=\"exporter.hasErrors && customizeForm.eventExportTitle.$error.required\">Gelieve een titel toe te voegen. Dit is een noodzakelijk veld.</p>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"form-group\">\n" +
    "          <label for=\"export-customization-subtitle\">Ondertitel</label>\n" +
    "          <input placeholder=\"Bv. 5 meeneemtips voor families\" class=\"form-control\" id=\"export-customization-subtitle\"\n" +
    "                 ng-model=\"exporter.customizations.subtitle\" name=\"eventExportSubtitle\">\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"form-group\">\n" +
    "          <label for=\"export.customization-footer\">Afsluiter</label>\n" +
    "          <input placeholder=\"Bv. Meer tips op www.uitinvlaanderen.be\" class=\"form-control\"\n" +
    "                 id=\"export.customization-footer\" ng-model=\"exporter.customizations.footer\" name=\"eventExportFooter\">\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"form-group\">\n" +
    "          <label for=\"export.customization-publisher\">Verantwoordelijke uitgever</label>\n" +
    "          <input placeholder=\"Bv. Cultuurnet Vlaanderen\" class=\"form-control\" id=\"export.customization-publisher\"\n" +
    "                 ng-model=\"exporter.customizations.publisher\" name=\"eventExportPublisher\">\n" +
    "        </div>\n" +
    "    </div>\n" +
    "    <udb-export-modal-buttons></udb-export-modal-buttons>\n" +
    "  </form>\n" +
    "\n" +
    "  <form ng-switch-when=\"confirm\">\n" +
    "    <div class=\"modal-body\">\n" +
    "      <h5>Export versturen</h5>\n" +
    "      <div class=\"form-group\">\n" +
    "        <label>Email</label>\n" +
    "        <input type=\"text\" ng-model=\"exporter.email\" name=\"eventExportEmail\"/>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "    <udb-export-modal-buttons></udb-export-modal-buttons>\n" +
    "  </form>\n" +
    "\n" +
    "  <form ng-switch-when=\"finished\">\n" +
    "    <div class=\"modal-body\">\n" +
    "      <h5>Bedankt</h5>\n" +
    "\n" +
    "      <p>De gevraagde items worden geëxporteerd.</p>\n" +
    "\n" +
    "      <p ng-hide=\"exporter.email\">Wanneer het gevraagde bestand klaar is, verschijnt een melding in de taakbalk.</p>\n" +
    "      <p ng-show=\"exporter.email\">Wanneer het gevraagde bestand klaar is, verschijnt een melding in de taakbalk en sturen we je het document via mail.</p>\n" +
    "    </div>\n" +
    "  </form>\n" +
    "\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"modal-footer\" ng-show=\"exporter.getActiveStepName() === 'finished'\">\n" +
    "  <button class=\"btn btn-default\" ng-click=\"exporter.close()\">sluiten</button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/export-job.template.html',
    "<p>\n" +
    "  <button type=\"button\" class=\"close udb-hide-job-button\" ng-click=\"hideJob(job)\" aria-label=\"Close\">\n" +
    "    <span aria-hidden=\"true\">×</span>\n" +
    "  </button>\n" +
    "  <ins>\n" +
    "    <span am-time-ago=\"::job.getLogDateByState()\"></span> <i class=\"fa fa-check-circle udb-job-success\"></i>\n" +
    "  </ins>\n" +
    "  <span class=\"udb-job-description\" ng-bind=\"::job.getDescription()\"></span>\n" +
    "  <a role=\"button\" target=\"_blank\" class=\"btn btn-default\" ng-href=\"{{job.exportUrl}}\">\n" +
    "    Downloaden\n" +
    "  </a>\n" +
    "</p>\n"
  );


  $templateCache.put('templates/export-modal-buttons.directive.html',
    "<div class=\"modal-footer\" ng-hide=\"exporter.getActiveStepName() === 'finished'\">\n" +
    "  <button class=\"btn btn-default pull-left\" ng-click=\"exporter.previousStep()\"\n" +
    "          ng-hide=\"exporter.isOnFirstStep()\">Vorige stap</button>\n" +
    "  <button ng-hide=\"exporter.onLastStep()\" class=\"btn btn-primary\"\n" +
    "          ng-click=\"exporter.nextStep()\">Volgende </button>\n" +
    "  <button ng-show=\"exporter.onLastStep()\" class=\"btn btn-primary\" ng-click=\"exporter.export()\">Exporteren</button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/query-search-bar.html',
    "<form class=\"form-inline query-search-bar\" role=\"search\">\n" +
    "  <div class=\"form-group\">\n" +
    "    <label for=\"user-search-input\" ng-bind=\"::qsb.searchLabel\"></label>\n" +
    "    <input type=\"text\"\n" +
    "           id=\"user-search-input\"\n" +
    "           class=\"form-control\"\n" +
    "           ng-model=\"qsb.queryString\"\n" +
    "           autocomplete=\"off\"\n" +
    "           ng-change=\"qsb.find()\">\n" +
    "    <a ng-if=\"qsb.helpLink\" ng-href=\"{{::qsb.helpLink}}\" target=\"_blank\" class=\"advanced-search\" ng-bind=\"::qsb.helpLabel\"></a>\n" +
    "  </div>\n" +
    "</form>\n"
  );


  $templateCache.put('templates/label-creator.html',
    "<h1 class=\"title\">Label toevoegen</h1>\n" +
    "\n" +
    "<form name=\"creator.form\" class=\"css-form\" novalidate>\n" +
    "    <div class=\"label-create-wrapper\">\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-md-6\">\n" +
    "                <div class=\"form-group\" udb-form-group>\n" +
    "                    <label class=\"control-label\" for=\"label-name-field\">Naam</label>\n" +
    "                    <input id=\"label-name-field\"\n" +
    "                        class=\"form-control\"\n" +
    "                        name=\"name\"\n" +
    "                        type=\"text\"\n" +
    "                        udb-unique-label\n" +
    "                        udb-semicolon-label-check\n" +
    "                        ng-minlength=\"2\"\n" +
    "                        ng-required=\"true\"\n" +
    "                        ng-maxlength=\"255\"\n" +
    "                        ng-model=\"creator.label.name\"\n" +
    "                        ng-model-options=\"{debounce: 300}\"\n" +
    "                        ng-disabled=\"creator.creating\">\n" +
    "                    <p class=\"help-block\" ng-if=\"creator.form.name.$error.uniqueLabel\">Er bestaat al een label met deze naam.</p>\n" +
    "                    <p class=\"help-block\" ng-if=\"creator.form.name.$error.required\">Een label naam is verplicht.</p>\n" +
    "                    <p class=\"help-block\" ng-if=\"creator.form.name.$error.minlength\">Een label moet uit minstens 2 tekens bestaan.</p>\n" +
    "                    <p class=\"help-block\" ng-if=\"creator.form.name.$error.maxlength\">Een label mag maximum 255 tekens bevatten.</p>\n" +
    "                    <p class=\"help-block\" ng-if=\"creator.form.name.$error.semicolonLabel\">Een label naam mag geen puntkomma bevatten.</p>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-md-12\">\n" +
    "                <div class=\"checkbox\">\n" +
    "                    <label>\n" +
    "                        <input type=\"checkbox\"\n" +
    "                            ng-model=\"creator.label.isVisible\"> Tonen op publicatiekanalen\n" +
    "                    </label>\n" +
    "                </div>\n" +
    "                <div class=\"checkbox\">\n" +
    "                    <label>\n" +
    "                        <input type=\"checkbox\"\n" +
    "                            ng-model=\"creator.label.isPrivate\"> Voorbehouden aan specifieke gebruikersgroepen\n" +
    "                    </label>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "\n" +
    "    \n" +
    "        </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"row\">\n" +
    "        <div class=\"col-md-12\">\n" +
    "            <button ng-disabled=\"!creator.form.$valid || creator.creating\"\n" +
    "                    type=\"button\"\n" +
    "                    class=\"btn btn-primary\"\n" +
    "                    ng-click=\"creator.create()\">\n" +
    "                Aanmaken <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"creator.creating\"></i>\n" +
    "            </button>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</form>\n"
  );


  $templateCache.put('templates/label-editor.html',
    "<h1 class=\"title\">Label bewerken</h1>\n" +
    "\n" +
    "<div ng-show=\"!editor.label && !editor.loadingError\">\n" +
    "    <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "</div>\n" +
    "\n" +
    "<form name=\"editor.form\" class=\"css-form label-editor-wrapper\" novalidate>\n" +
    "    <div ng-show=\"editor.label\">\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-md-6\">\n" +
    "                <div class=\"form-group\" udb-form-group>\n" +
    "                    <label for=\"label-name-field\">Naam</label>\n" +
    "                    <input id=\"label-name-field\"\n" +
    "                           class=\"form-control\"\n" +
    "                           type=\"text\"\n" +
    "                           name=\"name\"\n" +
    "                           udb-semicolon-label-check\n" +
    "                           ng-model=\"editor.label.name\"\n" +
    "                           ng-minlength=\"2\"\n" +
    "                           ng-required=\"true\"\n" +
    "                           ng-maxlength=\"255\"\n" +
    "                           ng-disabled=\"editor.renaming\">\n" +
    "                    <p class=\"help-block\" ng-if=\"editor.form.name.$error.required\">Een label naam is verplicht.</p>\n" +
    "                    <p class=\"help-block\" ng-if=\"editor.form.name.$error.minlength\">Een label moet uit minstens 2 tekens bestaan.</p>\n" +
    "                    <p class=\"help-block\" ng-if=\"editor.form.name.$error.maxlength\">Een label mag maximum 255 tekens bevatten.</p>\n" +
    "                    <p class=\"help-block\" ng-if=\"editor.form.name.$error.semicolonLabel\">Een label naam mag geen puntkomma bevatten.</p>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-md-12\">\n" +
    "                <label>\n" +
    "                    <input type=\"checkbox\"\n" +
    "                           ng-model=\"editor.label.isVisible\"> Tonen op publicatiekanalen\n" +
    "                </label>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-md-12\">\n" +
    "                <label>\n" +
    "                    <input type=\"checkbox\"\n" +
    "                           ng-model=\"editor.label.isPrivate\"> Voorbehouden aan specifieke gebruikersgroepen\n" +
    "                </label>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "    <button ng-disabled=\"!editor.form.$valid || editor.saving\"\n" +
    "            type=\"button\"\n" +
    "            class=\"btn btn-primary\"\n" +
    "            ng-click=\"editor.save()\">\n" +
    "        Opslaan <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"editor.saving\"></i>\n" +
    "    </button>\n" +
    "\n" +
    "    <div ng-show=\"editor.loadingError\">\n" +
    "        <span ng-bind=\"editor.loadingError\"></span>\n" +
    "    </div>\n" +
    "</form>\n"
  );


  $templateCache.put('templates/labels-list.html',
    "<h1 class=\"title\">Labels <small><a ui-sref=\"split.manageLabels.create\">toevoegen</a></small></h1>\n" +
    "\n" +
    "<div class=\"row\">\n" +
    "    <div class=\"col-md-11\">\n" +
    "        <udb-query-search-bar search-label=\"Zoeken op labelnaam\"\n" +
    "                              on-change=\"llc.queryChanged(query)\"\n" +
    "        ></udb-query-search-bar>\n" +
    "    </div>\n" +
    "    <div class=\"col-md-1 text-right\">\n" +
    "        <i ng-show=\"llc.loading\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row search-result-block\" ng-cloak>\n" +
    "    <div class=\"col-md-12\">\n" +
    "        <div class=\"alert alert-info\" role=\"alert\" ng-show=\"llc.query.length < llc.minQueryLength\">\n" +
    "            <p>Schrijf een zoekopdracht van minstens 3 karakters in het veld hierboven om labels te zoeken.</p>\n" +
    "            <p>Laat het veld leeg om alle labels op te vragen in alfabetische volgorde.</p>\n" +
    "        </div>\n" +
    "        <div ng-show=\"llc.query.length >= llc.minQueryLength && llc.searchResult.totalItems === 0\"\n" +
    "             class=\"alert alert-warning\" role=\"alert\">\n" +
    "            Geen labels gevonden.\n" +
    "        </div>\n" +
    "        <div ng-show=\"llc.problem\" class=\"alert alert-warning\" role=\"alert\">\n" +
    "            <span>Er ging iets mis tijdens het zoeken:</span>\n" +
    "            <br>\n" +
    "            <strong ng-bind=\"llc.problem.title\"></strong>\n" +
    "        </div>\n" +
    "        <div class=\"query-search-result\"\n" +
    "             ng-class=\"{'loading-search-result': llc.loading}\"\n" +
    "             ng-show=\"llc.searchResult.totalItems > 0\">\n" +
    "            <div class=\"table-responsive\" >\n" +
    "                <table class=\"table table-hover table-striped\">\n" +
    "                    <thead>\n" +
    "                    <tr>\n" +
    "                        <th>Naam</th>\n" +
    "                        <th>Verborgen</th>\n" +
    "                        <th>Voorbehouden</th>\n" +
    "                        <th>Uitgesloten</th>\n" +
    "                        <th>Opties</th>\n" +
    "                    </tr>\n" +
    "                    </thead>\n" +
    "                    <tbody>\n" +
    "                    <tr ng-repeat=\"label in llc.searchResult.member\">\n" +
    "                        <td ng-bind=\"::label.name\"></td>\n" +
    "                        <td ng-bind=\"::(label.visibility === 'invisible' ? 'Verborgen' : '')\"></td>\n" +
    "                        <td ng-bind=\"::(label.privacy === 'private' ? 'Voorbehouden' : '')\"></td>\n" +
    "                        <td ng-bind=\"::(label.excluded ? 'Uitgesloten' : '')\"></td>\n" +
    "                        <td>\n" +
    "                            <a ui-sref=\"split.manageLabels.edit({id: label.uuid})\">Bewerken</a>\n" +
    "                        </td>\n" +
    "                    </tr>\n" +
    "                    </tbody>\n" +
    "                </table>\n" +
    "            </div>\n" +
    "            <div class=\"panel-footer\">\n" +
    "                <uib-pagination\n" +
    "                        total-items=\"llc.searchResult.totalItems\"\n" +
    "                        ng-model=\"llc.page\"\n" +
    "                        items-per-page=\"llc.searchResult.itemsPerPage\"\n" +
    "                        max-size=\"10\"\n" +
    "                        ng-change=\"llc.pageChanged(llc.page)\">\n" +
    "                </uib-pagination>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/moderation-offer.html',
    "<p ng-show=\"moc.continueValidation()\" class=\"text-muted\" translate-once=\"moderate.validate\"></p>\n" +
    "\n" +
    "<button ng-if=\"moc.isReadyForValidation()\" type=\"submit\" class=\"btn btn-success btn-moderation\" ng-click=\"moc.approve()\">\n" +
    "    <i class=\"fa fa-flag text-success\"></i><span translate-once=\"moderate.approve\"></span></button>\n" +
    "<button ng-if=\"moc.isReadyForValidation()\" type=\"submit\" class=\"btn btn-danger btn-moderation\" ng-click=\"moc.askForRejectionReasons()\">\n" +
    "    <i class=\"fa fa-flag text-danger\"></i><span translate-once=\"moderate.reject\"></span></button>\n" +
    "\n" +
    "<span ng-if=\"moc.isApproved()\" class=\"offer-approved text-success btn-moderation\">\n" +
    "    <i class=\"fa fa-flag\"></i><span translate-once=\"moderate.approved\"></span>\n" +
    "</span>\n" +
    "<span ng-if=\"moc.isRejected()\" class=\"offer-rejected text-danger btn-moderation\">\n" +
    "    <i class=\"fa fa-flag\"></i><span translate-once=\"moderate.rejected\"></span>\n" +
    "</span>\n" +
    "\n" +
    "<span ng-show=\"moc.continueValidation()\">\n" +
    "    <a ui-sref=\"management.moderation.list\" ui-sref-opts=\"{reload:true}\" id=\"continue-validation\" ng-if=\"(moc.isApproved() || moc.isRejected())\" translate-once=\"moderate.continue_validation\"></a></span>\n"
  );


  $templateCache.put('templates/moderation-summary.html',
    "<article class=\"moderation-summary\">\n" +
    "    <div class=\"error text-danger\" ng-show=\"moc.error\" ng-bind=\"moc.error\"></div>\n" +
    "    <div class=\"text-info\" ng-show=\"moc.loading\"><i class=\"fa fa-circle-o-notch fa-spin\"></i> Moderatie aanbod \"{{moc.offerId}}\" wordt geladen.</div>\n" +
    "\n" +
    "    <div class=\"row\" ng-if=\"!moc.loading\">\n" +
    "        <div class=\"col-md-9\">\n" +
    "            <header class=\"udb-short-info\">\n" +
    "                <span class=\"udb-category\" ng-bind=\"moc.offer.type.label\"></span>\n" +
    "                <span class=\"udb-short-info-seperator\" ng-show=\"moc.offer.type.label && moc.offer.theme.label\"> • </span>\n" +
    "                <span class=\"udb-theme\" ng-bind=\"moc.offer.theme.label\"></span>\n" +
    "\n" +
    "                <a ng-href=\"{{ moc.offer.url  + '/preview' }}\">\n" +
    "                    <h2 ng-bind=\"moc.offer.name\"></h2>\n" +
    "                </a>\n" +
    "            </header>\n" +
    "\n" +
    "            <p class=\"text-muted\">\n" +
    "                <udb-calendar-summary offer=\"::moc.offer\" show-opening-hours=\"true\"></udb-calendar-summary>\n" +
    "            </p>\n" +
    "\n" +
    "            <div class=\"content\" ng-bind-html=\"moc.offer.description\"></div>\n" +
    "\n" +
    "            <a ng-href=\"{{ ::moc.offer.url  + '/preview' }}\">\n" +
    "                Alle info bekijken\n" +
    "            </a> &nbsp;\n" +
    "            <a ng-href=\"{{ ::moc.offer.url  + '/edit' }}\">\n" +
    "                Bewerken\n" +
    "            </a>\n" +
    "        </div>\n" +
    "        <div class=\"col-md-3\" ng-class=\"{muted: !moc.offer.image}\">\n" +
    "            <img ng-if=\"moc.offer.image\" class=\"offer-image-thumbnail center-block\" ng-src=\"{{moc.offer.image+'?maxwidth=150&maxheight=150'}}\" />\n" +
    "            <div class=\"no-img center-block\" ng-if=\"!moc.offer.image\">Geen afbeelding</div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "    <footer class=\"row\" ng-hide=\"moc.loading\">\n" +
    "        <div class=\"col-md-6\">Toegevoegd door\n" +
    "            <span ng-if=\"::!moc.isGodUser\">\n" +
    "                <span ng-bind=\"moc.offer.creator\"></span>\n" +
    "            </span>\n" +
    "            <span ng-if=\"::moc.isGodUser\">\n" +
    "                <a href=\"{{ moc.uitId + moc.offer.creator }}\"><span ng-bind=\"moc.offer.creator\"></span></a>\n" +
    "            </span>\n" +
    "        </div>\n" +
    "        <div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6 text-right\">\n" +
    "            <udb-moderation-offer offer-id=\"{{moc.offerId}}\" continue=\"false\"></udb-moderation-offer>\n" +
    "        </div>\n" +
    "    </footer>\n" +
    "</article>\n"
  );


  $templateCache.put('templates/reject-offer-confirm-modal.html',
    "<div class=\"modal-body\">\n" +
    "    <div class=\"row\">\n" +
    "\n" +
    "      <div class=\"col-xs-12\">\n" +
    "        <p>Duid de reden aan voor het afkeuren van dit aanbod:</p>\n" +
    "\n" +
    "        <form>\n" +
    "          <div class=\"checkbox\">\n" +
    "            <label>\n" +
    "              <input type=\"radio\" name=\"type\" ng-model=\"response.type\" value=\"DUPLICATE\"> Dit aanbod bestaat al.\n" +
    "            </label>\n" +
    "          </div>\n" +
    "\n" +
    "          <div class=\"checkbox\">\n" +
    "            <label>\n" +
    "              <input type=\"radio\" name=\"type\" ng-model=\"response.type\" value=\"INAPPROPRIATE\"> Dit aanbod heeft een ongepaste inhoud.\n" +
    "            </label>\n" +
    "          </div>\n" +
    "\n" +
    "          <div class=\"checkbox\">\n" +
    "            <label>\n" +
    "              <input type=\"radio\" name=\"type\" ng-model=\"response.type\" value=\"OTHER\"> Andere, specifieer:\n" +
    "              <input type=\"text\" name=\"reason\" ng-model=\"response.reason\">\n" +
    "            </label>\n" +
    "          </div>\n" +
    "        </form>\n" +
    "\n" +
    "        <div class=\"text-danger\" ng-show=\"error\" ng-bind=\"error\"></div>\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"cancel()\">\n" +
    "    Annuleren\n" +
    "  </button>\n" +
    "  <button type=\"button\" class=\"btn btn-primary\" ng-click=\"reject()\">\n" +
    "    Aanbod afkeuren <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "  </button>\n" +
    "</div>"
  );


  $templateCache.put('templates/moderation-list.html',
    "<h1 class=\"title\">Valideren</h1>\n" +
    "\n" +
    "<div ng-show=\"moderator.loading && !moderator.loadingError\">\n" +
    "    <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row\">\n" +
    "    <div class=\"col-md-12\">\n" +
    "        <div class=\"alert alert-info\" role=\"alert\" translate-once=\"moderate.infoAlert\">\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row\">\n" +
    "    <div class=\"col-md-12\">\n" +
    "        <div class=\"form-inline\">\n" +
    "            <div class=\"form-group\">\n" +
    "                <label>Valideer als</label>\n" +
    "                <select class=\"form-control\"\n" +
    "                        name=\"role\"\n" +
    "                        ng-change=\"moderator.findModerationContent(moderator.selectedRole)\"\n" +
    "                        ng-model=\"moderator.selectedRole\"\n" +
    "                        ng-options=\"role.name for role in moderator.roles track by role.uuid\">\n" +
    "                </select>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row search-result-block\" ng-cloak>\n" +
    "    <div class=\"col-md-12\">\n" +
    "        <p class=\"rv-item-counter\">\n" +
    "            <ng-pluralize count=\"moderator.searchResult.totalItems\"\n" +
    "                          when=\"{1: '1 resultaat', other: '{} resultaten'}\"></ng-pluralize>\n" +
    "        </p>\n" +
    "    </div>\n" +
    "    <div class=\"col-md-12\" ng-repeat=\"offer in moderator.searchResult.member\">\n" +
    "        <udb-moderation-summary offer-id=\"{{offer['@id']}}\" offer-type=\"{{offer['@type']}}\">\n" +
    "        </udb-moderation-summary>\n" +
    "    </div>\n" +
    "    <div class=\"col-md-12\">\n" +
    "        <div class=\"panel-footer\">\n" +
    "            <uib-pagination\n" +
    "                    total-items=\"moderator.searchResult.totalItems\"\n" +
    "                    ng-model=\"moderator.page\"\n" +
    "                    items-per-page=\"moderator.searchResult.itemsPerPage\"\n" +
    "                    max-size=\"10\"\n" +
    "                    ng-change=\"moderator.pageChanged(moderator.page)\">\n" +
    "            </uib-pagination>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/organization-delete.modal.html',
    "<div class=\"modal-body\">\n" +
    "    <div class=\"row\">\n" +
    "\n" +
    "        <div class=\"col-xs-12\">\n" +
    "            <p>Ben je zeker dat je \"<span ng-bind=\"::odc.organization.name\"></span>\" wil verwijderen? Deze actie kan niet ongedaan worden.</p>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"col-xs-12\">\n" +
    "            <div class=\"alert alert-danger\" ng-show=\"error\">\n" +
    "                Er ging iets fout bij het verwijderen van de organisatie.\n" +
    "            </div>\n" +
    "        </div>\n" +
    "\n" +
    "    </div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "    <button type=\"button\" class=\"btn btn-default\" ng-click=\"odc.cancelRemoval()\">\n" +
    "        Annuleren\n" +
    "    </button>\n" +
    "    <button type=\"button\" class=\"btn btn-primary\" ng-click=\"odc.deleteOrganization()\">\n" +
    "        Definitief verwijderen <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"odc.saving\"></i>\n" +
    "    </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/organization-search-item-new.html',
    "<tr class=\"organization-search-item\" ng-class=\"{'deleted': osic.organizationDeleted}\" ng-if=\"::osic.organization\">\n" +
    "    <td style=\"padding-left: 30px\"><strong><a ng-bind=\"::osic.organization.name\" ui-sref=\"split.organizerDetail({id: osic.organization.id})\"></a></strong></td>\n" +
    "    <td ng-if=\"::osic.organization.address.addressLocality\">\n" +
    "        <span ng-bind=\"::osic.organization.address.streetAddress\"></span>\n" +
    "        <br>\n" +
    "        <span ng-bind=\"::osic.organization.address.addressLocality\"></span>\n" +
    "    </td>\n" +
    "    <td ng-if=\"::!osic.organization.address.addressLocality\">\n" +
    "        <span translate-once=\"search.organization.noAddress\"></span>\n" +
    "    </td>\n" +
    "    <td style=\"padding-right: 30px\">\n" +
    "        <div ng-if=\"::osic.organization.created\">\n" +
    "            <i class=\"fa fa-clock\"></i> <span ng-bind=\"::osic.organization.created | amDateFormat:'DD/MM/YYYY HH:mm'\"></span>\n" +
    "        </div>\n" +
    "        <div ng-if=\"::osic.isGodUser\">\n" +
    "            <i class=\"fa fa-user\"></i> <span ng-bind=\"::osic.organization.creator\"></span>\n" +
    "        </div>\n" +
    "    </td>\n" +
    "    <td ng-if=\"::osic.isGodUser\" class=\"text-right\">\n" +
    "        <div class=\"btn-group\" style=\"display:flex\" uib-dropdown>\n" +
    "            <a class=\"btn btn-default\" ui-sref=\"split.organizerEdit({id: osic.organization.id})\">Bewerken</a>\n" +
    "            <button type=\"button\" class=\"btn btn-default\" uib-dropdown-toggle><span class=\"caret\"></span></button>\n" +
    "            <ul uib-dropdown-menu role=\"menu\">\n" +
    "                <li role=\"menuitem\">\n" +
    "                    <a ui-sref=\"split.footer.search.organizers.delete({id: osic.organization.id})\">Verwijderen</a>\n" +
    "                </li>\n" +
    "            </ul>\n" +
    "        </div>\n" +
    "    </td>\n" +
    "</tr>\n"
  );


  $templateCache.put('templates/organization-search-new.html',
    "<div class=\"row\" style=\"margin-top: 2rem\">\n" +
    "    <div class=\"col-md-9\"> \n" +
    "    <udb-query-search-bar search-label=\"search.organization.searchOrganization\"\n" +
    "                          on-change=\"$ctrl.queryChanged(query)\"></udb-query-search-bar>\n" +
    "    </div>\n" +
    "<div class=\"col-md-1\">\n" +
    "    <i ng-show=\"$ctrl.loading\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "</div>\n" +
    "<div class=\"col-md-2 text-right\">\n" +
    "    <a class=\"btn btn-primary pull-right\" ui-sref=\"split.organizer\">\n" +
    "        <i class=\"fa fa-plus-circle\"></i> <span translate-once=\"search.organization.addOrganizer\"></span>\n" +
    "    </a>\n" +
    "</div>\n" +
    "</div>\n" +
    "<div class=\"row search-result-block\" ng-cloak>\n" +
    "<div class=\"col-md-12\">\n" +
    "    <div ng-show=\"$ctrl.query.length >= $ctrl.minQueryLength && $ctrl.searchResult.totalItems === 0\"\n" +
    "         class=\"alert alert-warning\" role=\"alert\">\n" +
    "        <p translate-once=\"search.organization.notFound\"></p>\n" +
    "    </div>\n" +
    "    <div ng-show=\"$ctrl.problem\" class=\"alert alert-warning\" role=\"alert\">\n" +
    "        <span translate-once=\"search.organization.error\"></span>\n" +
    "        <br>\n" +
    "        <strong ng-bind=\"$ctrl.problem.title\"></strong>\n" +
    "    </div>\n" +
    "    <div class=\"query-search-result organization-search-results\"\n" +
    "         ng-class=\"{'loading-search-result': $ctrl.loading}\"\n" +
    "         ng-show=\"$ctrl.searchResult.totalItems > 0\">\n" +
    "      <div class=\"table-responsive\">\n" +
    "        <table class=\"table\">\n" +
    "            <thead>\n" +
    "            <tr>\n" +
    "                <th class=\"col-md-5\" style=\"padding-left: 30px\" translate-once=\"search.organization.name\"></th>\n" +
    "                <th class=\"col-md-3\" translate-once=\"search.organization.address\"></th>\n" +
    "                <th class=\"col-md-4\" style=\"padding-right: 30px\" translate-once=\"search.organization.info\"></th>\n" +
    "            </tr>\n" +
    "            </thead>\n" +
    "            <tbody udb-organization-search-item-new=\"organization\" ng-repeat=\"organization in $ctrl.searchResult.member\">\n" +
    "            </tbody>\n" +
    "        </table>\n" +
    "        <div class=\"panel-footer\">\n" +
    "            <uib-pagination\n" +
    "                    total-items=\"$ctrl.searchResult.totalItems\"\n" +
    "                    ng-model=\"$ctrl.page\"\n" +
    "                    items-per-page=\"$ctrl.searchResult.itemsPerPage\"\n" +
    "                    max-size=\"10\"\n" +
    "                    ng-change=\"$ctrl.pageChanged($ctrl.page)\">\n" +
    "            </uib-pagination>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "</div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/organization-search-item.html',
    "<tr class=\"organization-search-item\" ng-class=\"{'deleted': osic.organizationDeleted}\" ng-if=\"::osic.organization\">\n" +
    "    <td><strong><a ng-bind=\"::osic.organization.name\" ui-sref=\"split.organizerDetail({id: osic.organization.id})\"></a></strong></td>\n" +
    "    <td>\n" +
    "        <span ng-bind=\"::osic.organization.address.streetAddress\"></span>\n" +
    "        <br>\n" +
    "        <span ng-bind=\"::osic.organization.address.addressLocality\"></span>\n" +
    "    </td>\n" +
    "    <td>\n" +
    "        <span ng-bind=\"::osic.organization.created | amDateFormat:'DD/MM/YYYY HH:mm'\"></span>\n" +
    "        <span class=\"organization-search-item-email\" ng-if=\"::osic.organization.email\">\n" +
    "            <br><span ng-bind=\"::osic.organization.email\"></span>\n" +
    "        </span>\n" +
    "        <span class=\"organization-search-item-url\" ng-if=\"::osic.organization.url\">\n" +
    "            <br><a ng-href=\"{{::osic.organization.url}}\" target=\"_blank\" ng-bind=\"::osic.organization.url\"></a>\n" +
    "        </span>\n" +
    "    </td>\n" +
    "    <td class=\"text-right\">\n" +
    "        <div class=\"pull-right btn-group\" uib-dropdown>\n" +
    "            <a class=\"btn btn-default\" ui-sref=\"split.organizerEdit({id: osic.organization.id})\">Bewerken</a>\n" +
    "            <button type=\"button\" class=\"btn btn-default\" uib-dropdown-toggle><span class=\"caret\"></span></button>\n" +
    "            <ul uib-dropdown-menu role=\"menu\">\n" +
    "                <li role=\"menuitem\">\n" +
    "                    <a ui-sref=\"management.organizers.search.delete({id: osic.organization.id})\">Verwijderen</a>\n" +
    "                </li>\n" +
    "            </ul>\n" +
    "        </div>\n" +
    "    </td>\n" +
    "</tr>\n"
  );


  $templateCache.put('templates/organization-search.html',
    "<h1 class=\"title\">Organisaties</h1>\n" +
    "\n" +
    "<div class=\"row\">\n" +
    "    <div class=\"col-md-12\">\n" +
    "        <udb-query-search-bar search-label=\"Zoeken op organisatie\"\n" +
    "                              help-link=\"https://documentatie.uitdatabank.be/content/search_api_3/latest/searching-organizers.html\"\n" +
    "                              help-label=\"via geavanceerde zoekopdracht\"\n" +
    "                              on-change=\"$ctrl.queryChanged(query)\"></udb-query-search-bar>\n" +
    "    </div>\n" +
    "    <div class=\"col-md-2\">\n" +
    "        <i ng-show=\"$ctrl.loading\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "    </div>\n" +
    "    <div class=\"col-md-12 text-right\">\n" +
    "        <a class=\"btn btn-primary\" ui-sref=\"split.organizer\">\n" +
    "            <i class=\"fa fa-plus-circle\"></i> Organisatie toevoegen\n" +
    "        </a>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row search-result-block\" ng-cloak>\n" +
    "    <div class=\"col-md-12\">\n" +
    "        <div class=\"alert alert-info\" role=\"alert\" ng-show=\"$ctrl.query.length < $ctrl.minQueryLength\">\n" +
    "            <p>Schrijf een zoekopdracht van minstens 3 karakters in het veld hierboven om organisaties te zoeken.</p>\n" +
    "            <p>Laat het veld leeg om alle organisaties op te vragen in alfabetische volgorde.</p>\n" +
    "        </div>\n" +
    "        <div ng-show=\"$ctrl.query.length >= $ctrl.minQueryLength && $ctrl.searchResult.totalItems === 0\"\n" +
    "             class=\"alert alert-warning\" role=\"alert\">\n" +
    "            <p>Geen organisaties gevonden.</p>\n" +
    "        </div>\n" +
    "        <div ng-show=\"$ctrl.problem\" class=\"alert alert-warning\" role=\"alert\">\n" +
    "            <span>Er ging iets mis tijdens het zoeken:</span>\n" +
    "            <br>\n" +
    "            <strong ng-bind=\"$ctrl.problem.title\"></strong>\n" +
    "        </div>\n" +
    "        <div class=\"query-search-result organization-search-results\"\n" +
    "             ng-class=\"{'loading-search-result': $ctrl.loading}\"\n" +
    "             ng-show=\"$ctrl.searchResult.totalItems > 0\">\n" +
    "          <div class=\"panel panel-default\">\n" +
    "            <table class=\"table\">\n" +
    "                <thead>\n" +
    "                <tr>\n" +
    "                    <th>Naam</th>\n" +
    "                    <th>Adres</th>\n" +
    "                    <th></th>\n" +
    "                    <th class=\"text-right\">Opties</th>\n" +
    "                </tr>\n" +
    "                </thead>\n" +
    "                <tbody udb-organization-search-item=\"organization\" ng-repeat=\"organization in $ctrl.searchResult.member\">\n" +
    "                </tbody>\n" +
    "            </table>\n" +
    "            <div class=\"panel-footer\">\n" +
    "                <uib-pagination\n" +
    "                        total-items=\"$ctrl.searchResult.totalItems\"\n" +
    "                        ng-model=\"$ctrl.page\"\n" +
    "                        items-per-page=\"$ctrl.searchResult.itemsPerPage\"\n" +
    "                        max-size=\"10\"\n" +
    "                        ng-change=\"$ctrl.pageChanged($ctrl.page)\">\n" +
    "                </uib-pagination>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/role-delete-confirm-modal.html',
    "<div class=\"modal-body\">\n" +
    "    <div class=\"row\">\n" +
    "\n" +
    "      <div class=\"col-xs-12\">\n" +
    "        <p>Ben je zeker dat je \"<span ng-bind=\"::item.name\"></span>\" wil verwijderen? Deze actie kan niet ongedaan worden.</p>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"col-xs-12\">\n" +
    "        <div class=\"alert alert-danger\" ng-show=\"error\">\n" +
    "          Er ging iets fout bij het verwijderen van de rol.\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"cancelRemoval()\">\n" +
    "    Annuleren\n" +
    "  </button>\n" +
    "  <button type=\"button\" class=\"btn btn-primary\" ng-click=\"deleteRole()\">\n" +
    "    Definitief verwijderen <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "  </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/role-form.html',
    "<h1 class=\"title\">Role bewerken</h1>\n" +
    "\n" +
    "<div ng-show=\"!editor.loadedRole && !editor.loadingError\">\n" +
    "    <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "</div>\n" +
    "\n" +
    "<form name=\"editor.form\" class=\"css-form\" novalidate>\n" +
    "    <div class=\"row\">\n" +
    "        <div class=\"col-md-6\">\n" +
    "            <div class=\"form-group\" udb-form-group ng-if=\"!editor.editName && editor.role.name && editor.role['uuid']\">\n" +
    "              <label class=\"control-label\">Naam</label>\n" +
    "              <p><span ng-bind=\"editor.role.name\"></span>\n" +
    "              <a href ng-click=\"editor.editName = true\">Wijzigen</a></p>\n" +
    "            </div>\n" +
    "            <div class=\"form-group\" udb-form-group ng-if=\"editor.editName || !editor.role['uuid']\">\n" +
    "                <label class=\"control-label\" for=\"label-name-field\">Naam</label>\n" +
    "                <input id=\"label-name-field\"\n" +
    "                       class=\"form-control\"\n" +
    "                       name=\"name\"\n" +
    "                       type=\"text\"\n" +
    "                       ng-minlength=\"3\"\n" +
    "                       ng-required=\"true\"\n" +
    "                       ng-maxlength=\"255\"\n" +
    "                       ng-model=\"editor.role.name\"\n" +
    "                       ng-disabled=\"editor.saving\">\n" +
    "                <p class=\"help-block\" ng-if=\"editor.form.name.$error.required\">Een role naam is verplicht.</p>\n" +
    "                <p class=\"help-block\" ng-if=\"editor.form.name.$error.maxlength\">Een role mag maximum 255 tekens bevatten.</p>\n" +
    "                <p class=\"help-block\" ng-if=\"editor.form.name.$error.minlength\">Een role moet uit minstens 3 tekens bestaan.</p>\n" +
    "\n" +
    "            </div>\n" +
    "            <button ng-disabled=\"!editor.form.$valid || editor.saving\"\n" +
    "              ng-if=\"!editor.role['uuid']\"\n" +
    "              type=\"button\"\n" +
    "              class=\"btn btn-primary\"\n" +
    "              ng-click=\"editor.createRole()\">\n" +
    "              Opslaan <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"editor.saving\"></i>\n" +
    "            </button>\n" +
    "\n" +
    "            <button ng-disabled=\"!editor.form.$valid || editor.saving\"\n" +
    "              ng-if=\"editor.editName\"\n" +
    "              type=\"button\"\n" +
    "              class=\"btn btn-primary\"\n" +
    "              ng-click=\"editor.updateName()\">\n" +
    "              Opslaan <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"editor.saving\"></i>\n" +
    "            </button>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "    <div class=\"row\" ng-show=\"editor.role['uuid']\">\n" +
    "        <div class=\"col-md-12\">\n" +
    "            <div class=\"form-group\" udb-form-group ng-if=\"!editor.editConstraint\">\n" +
    "                <label class=\"control-label\">Bewerkrecht</label>\n" +
    "                <p><span ng-bind=\"editor.role.constraints.v3\"></span>\n" +
    "                    <a href ng-click=\"editor.editConstraint = true\">Wijzigen</a>\n" +
    "                    <a href ng-click=\"editor.removeConstraint()\" ng-if=\"editor.constraintExists()\">Verwijderen</a></p>\n" +
    "            </div>\n" +
    "            <div ng-if=\"editor.editConstraint\">\n" +
    "                <div class=\"form-group\" udb-form-group>\n" +
    "                    <label class=\"control-label\" for=\"label-name-field\">Bewerkrecht</label>\n" +
    "                    <input id=\"constraint-v3-field\"\n" +
    "                           class=\"form-control\"\n" +
    "                           name=\"constraintv3\"\n" +
    "                           type=\"text\"\n" +
    "                           ng-model=\"editor.role.constraints.v3\"\n" +
    "                           ng-disabled=\"editor.saving\">\n" +
    "                </div>\n" +
    "                <button ng-disabled=\"!editor.form.$valid || editor.saving\"\n" +
    "                        type=\"button\"\n" +
    "                        class=\"btn btn-primary\"\n" +
    "                        ng-if=\"::editor.constraintExists()\"\n" +
    "                        ng-click=\"editor.updateConstraint()\">\n" +
    "                    Opslaan <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"editor.saving\"></i>\n" +
    "                </button>\n" +
    "                <button ng-disabled=\"!editor.form.$valid || editor.saving\"\n" +
    "                        type=\"button\"\n" +
    "                        class=\"btn btn-primary\"\n" +
    "                        ng-if=\"::!editor.constraintExists()\"\n" +
    "                        ng-click=\"editor.createConstraint()\">\n" +
    "                    Opslaan <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"editor.saving\"></i>\n" +
    "                </button>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "    <div class=\"row\" ng-show=\"editor.role['uuid']\">\n" +
    "      <div class=\"col-md-12\">\n" +
    "        <uib-tabset class=\"role-form-tabset\">\n" +
    "          <uib-tab heading=\"Permissies\">\n" +
    "            <div class=\"row\">\n" +
    "              <div class=\"col-md-6\">\n" +
    "                  <input class=\"form-control permission-searchbar\" placeholder=\"Zoeken op naam\" ng-model=\"permissionSearch\">\n" +
    "              </div>\n" +
    "              <div class=\"col-md-1\">\n" +
    "                <i ng-show=\"!editor.loadedRolePermissions\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "              </div>\n" +
    "            </div>\n" +
    "            <div class=\"row\">\n" +
    "              <div class=\"col-md-12\">\n" +
    "                <div class=\"checkbox\" ng-repeat=\"permission in editor.availablePermissions | filter: permissionSearch\">\n" +
    "                  <label>\n" +
    "                        <input  type=\"checkbox\"\n" +
    "                                name=\"editor.role.permissions[]\"\n" +
    "                                value=\"{{permission.key}}\"\n" +
    "                                ng-checked=\"!!(editor.role.permissions | filter: {key: permission.key}).length\"\n" +
    "                                ng-click=\"editor.updatePermission(permission)\"\n" +
    "                        > <strong ng-bind=\"permission.name\"></strong>\n" +
    "                  </label>\n" +
    "                </div>\n" +
    "              </div>\n" +
    "            </div>\n" +
    "      \n" +
    "          </uib-tab>\n" +
    "          <uib-tab heading=\"Leden\">\n" +
    "              <div class=\"row\">\n" +
    "                  <div class=\"col-md-11 form-inline\">\n" +
    "                          <label class=\"control-label\">Voeg lid toe</label>\n" +
    "                          <input placeholder=\"E-mailadres\"\n" +
    "                                 id=\"email\"\n" +
    "                                 type=\"email\"\n" +
    "                                 name=\"email\"\n" +
    "                                 data-ng-model=\"editor.email\"\n" +
    "                                 class=\"form-control\" />\n" +
    "                          <button type=\"submit\"\n" +
    "                                  class=\"btn btn-primary\"\n" +
    "                                  ng-click=\"editor.addUser()\"\n" +
    "                                  ng-disabled=\"!editor.form.$valid || editor.addingUser\">\n" +
    "                              Toevoegen <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"editor.addingUser\"></i>\n" +
    "                          </button>\n" +
    "                  </div>\n" +
    "                  <div class=\"col-md-1\">\n" +
    "                      <i ng-show=\"!editor.loadedRoleUsers\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "                  </div>\n" +
    "              </div>\n" +
    "              <div class=\"row\">\n" +
    "                  <div class=\"col-md-12\" ng-show=\"editor.role.users.length && editor.loadedRoleUsers\">\n" +
    "                    <table class=\"table\">\n" +
    "                        <thead>\n" +
    "                          <tr>\n" +
    "                              <th>E-mailadres</th>\n" +
    "                              <th>Verwijderen</th>\n" +
    "                          </tr>\n" +
    "                        </thead>\n" +
    "                        <tbody>\n" +
    "                          <tr ng-repeat=\"user in editor.role.users\">\n" +
    "                              <td ng-bind=\"::user.email\"></td>\n" +
    "                              <td><a href ng-click=\"editor.removeUser(user)\">Lidmaatschap verwijderen</a></td>\n" +
    "                          </tr>\n" +
    "                        </tbody>\n" +
    "                    </table>\n" +
    "                  </div>\n" +
    "                  <div class=\"col-md-12\" ng-hide=\"editor.role.users.length\">\n" +
    "                      Er hangen nog geen gebruikers aan deze rol. Voeg een gebruiker aan deze rol toe door zijn/haar e-mailadres hierboven in te geven.\n" +
    "                  </div>\n" +
    "              </div>\n" +
    "          </uib-tab>\n" +
    "          <uib-tab heading=\"Labels\">\n" +
    "            <div class=\"row\">\n" +
    "              <div class=\"col-md-6 form-group\">\n" +
    "                <label class=\"control-label\">Voeg een label toe</label>\n" +
    "                <udb-search-label role=\"editor.role\"\n" +
    "                                  label-added=\"editor.addLabel(label)\">\n" +
    "              </div>\n" +
    "            </div><!-- /row -->\n" +
    "            <div class=\"row\">\n" +
    "              <div class=\"col-md-12\" ng-show=\"editor.role.labels.length && editor.loadedRoleLabels\">\n" +
    "                <table class=\"table\">\n" +
    "                    <thead>\n" +
    "                      <tr>\n" +
    "                          <th>Toegevoegde labels</th>\n" +
    "                          <th>Verwijderen</th>\n" +
    "                          <th></th>\n" +
    "                      </tr>\n" +
    "                    </thead>\n" +
    "                    <tbody>\n" +
    "                      <tr ng-repeat=\"label in editor.role.labels\">\n" +
    "                          <td ng-bind=\"::label.name\"></td>\n" +
    "                          <td><a href ng-click=\"editor.removeLabel(label)\">Lidmaatschap verwijderen</a></td>\n" +
    "                          <td><span class=\"text-danger\" ng-if=\"label.privacy === 'public'\">Dit label is niet voorbehouden</span></td>\n" +
    "                      </tr>\n" +
    "                    </tbody>\n" +
    "                </table>\n" +
    "              </div>\n" +
    "              <div class=\"col-md-12\" ng-hide=\"editor.role.labels.length\">\n" +
    "                  Er hangen nog geen labels aan deze rol.\n" +
    "              </div>\n" +
    "            </div><!-- /row -->\n" +
    "          </uib-tab>\n" +
    "        </uib-tabset>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "</form>\n"
  );


  $templateCache.put('templates/roles-list.html',
    "<h1 class=\"title\">Rollen <small><a ui-sref=\"split.manageRoles.create\" ui-sref-opts=\"{reload:true}\">toevoegen</a></small></h1>\n" +
    "\n" +
    "<div class=\"row\">\n" +
    "    <div class=\"col-md-9\">\n" +
    "        <udb-query-search-bar search-label=\"Zoeken op rolnaam\"\n" +
    "                              on-change=\"rlc.queryChanged(query)\"\n" +
    "        ></udb-query-search-bar>\n" +
    "    </div>\n" +
    "    <div class=\"col-md-1\">\n" +
    "        <i ng-show=\"rlc.loading\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "    </div>\n" +
    "    <div class=\"col-md-2 text-right\">\n" +
    "        <a class=\"btn btn-primary\" ui-sref=\"split.manageRoles.create\" ui-sref-opts=\"{reload:true}\">\n" +
    "            <i class=\"fa fa-plus-circle\"></i> Rol toevoegen\n" +
    "        </a>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row search-result-block\" ng-cloak>\n" +
    "    <div class=\"col-md-12\">\n" +
    "        <div class=\"alert alert-info\" role=\"alert\" ng-show=\"rlc.query.length < rlc.minQueryLength\">\n" +
    "            <p>Schrijf een zoekopdracht van minstens 3 karakters in het veld hierboven om rollen te zoeken.</p>\n" +
    "            <p>Laat het veld leeg om alle rollen op te vragen in alfabetische volgorde.</p>\n" +
    "        </div>\n" +
    "        <div ng-show=\"rlc.query.length >= rlc.minQueryLength && rlc.searchResult.totalItems === 0\"\n" +
    "             class=\"alert alert-warning\" role=\"alert\">\n" +
    "            <p>Geen rollen gevonden.</p>\n" +
    "        </div>\n" +
    "        <div ng-show=\"rlc.problem\" class=\"alert alert-warning\" role=\"alert\">\n" +
    "            <span>Er ging iets mis tijdens het zoeken:</span>\n" +
    "            <br>\n" +
    "            <strong ng-bind=\"rlc.problem.title\"></strong>\n" +
    "        </div>\n" +
    "        <div class=\"query-search-result roles-results\"\n" +
    "             ng-class=\"{'loading-search-result': rlc.loading}\"\n" +
    "             ng-show=\"rlc.searchResult.totalItems > 0\">\n" +
    "                <table class=\"table table-hover table-striped\">\n" +
    "                    <thead>\n" +
    "                    <tr>\n" +
    "                        <th>Naam</th>\n" +
    "                        <th>Opties</th>\n" +
    "                    </tr>\n" +
    "                    </thead>\n" +
    "                    <tbody>\n" +
    "                    <tr ng-repeat=\"role in rlc.searchResult.member\">\n" +
    "                        <td ng-bind=\"::role.name\"></td>\n" +
    "                        <td>\n" +
    "                            <div class=\"btn-group\">\n" +
    "                                <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n" +
    "                                    Bewerken <span class=\"caret\"></span></button>\n" +
    "                                <ul class=\"dropdown-menu\">\n" +
    "                                    <li><a ui-sref=\"split.manageRoles.edit({id: role.uuid})\" ui-sref-opts=\"{reload:true}\">Bewerken</a></li>\n" +
    "                                    <li><a href ng-click=\"rlc.openDeleteConfirmModal(role)\">Verwijderen</a></li>\n" +
    "                                </ul>\n" +
    "                            </div>\n" +
    "                            </td>\n" +
    "                    </tr>\n" +
    "                    </tbody>\n" +
    "                </table>\n" +
    "            <div class=\"panel-footer\">\n" +
    "                <uib-pagination\n" +
    "                        total-items=\"rlc.searchResult.totalItems\"\n" +
    "                        ng-model=\"rlc.page\"\n" +
    "                        items-per-page=\"rlc.searchResult.itemsPerPage\"\n" +
    "                        max-size=\"10\"\n" +
    "                        ng-change=\"rlc.pageChanged(rlc.page)\">\n" +
    "                </uib-pagination>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/search-label.html',
    "<ui-select ng-model=\"select.label\"\n" +
    "           reset-search-input=\"true\"\n" +
    "           on-select=\"select.labelAdded({label: $item})\">\n" +
    "    <ui-select-match placeholder=\"Voeg een label toe...\">{{$item.name}}</ui-select-match>\n" +
    "    <ui-select-no-choice ng-show=\"$select.search.length >= select.minimumInputLength &&\">\n" +
    "        <div class=\"udb-label-select-refreshing\" style=\"padding: 3px 20px\">\n" +
    "            <i class=\"fa fa-circle-o-notch fa-spin\"></i> Suggesties laden\n" +
    "        </div>\n" +
    "    </ui-select-no-choice>\n" +
    "    <ui-select-choices repeat=\"label in select.availableLabels track by label.name\"\n" +
    "                       ng-show=\"$select.search.length >= select.minimumInputLength &&\"\n" +
    "                       ui-disable-choice=\"select.refreshing\"\n" +
    "                       refresh=\"select.suggestLabels($select.search)\"\n" +
    "                       refresh-delay=\"0\"\n" +
    "                       minimum-input-length=\"{{select.minimumInputLength}}\">\n" +
    "        <div>\n" +
    "            <span ng-bind-html=\"label.name | highlight: $select.search\"></span>\n" +
    "            <span ng-if=\"!label.uuid\"> (nieuw label toevoegen)</span>\n" +
    "        </div>\n" +
    "    </ui-select-choices>\n" +
    "</ui-select>\n"
  );


  $templateCache.put('templates/user-editor.html',
    "<h1 class=\"title\">Gebruiker bewerken</h1>\n" +
    "\n" +
    "<div ng-show=\"!editor.user && !editor.loadingError\">\n" +
    "    <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"user-editor-wrapper\" ng-show=\"editor.user\">\n" +
    "    <div class=\"row\">\n" +
    "        <div class=\"col-md-3\">\n" +
    "            <span>E-mailadres</span>\n" +
    "        </div>\n" +
    "        <div class=\"col-md-9\">\n" +
    "            <span ng-bind=\"editor.user.email\"></span>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "    <div class=\"row\">\n" +
    "        <div class=\"col-md-3\">\n" +
    "            <span>Nick</span>\n" +
    "        </div>\n" +
    "        <div class=\"col-md-9\">\n" +
    "            <span ng-bind=\"editor.user.username\"></span>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n" +
    "<br>\n" +
    "<div class=\"panel panel-primary\">\n" +
    "    <div class=\"panel-heading\">\n" +
    "        <h3 class=\"panel-title\">Rollen</h3>\n" +
    "    </div>\n" +
    "    <div class=\"panel-body\">\n" +
    "        <form class=\"form-inline\" role=\"search\">\n" +
    "            <div class=\"form-group\">\n" +
    "                <label for=\"role-lookup\">Rol toevoegen</label>\n" +
    "                <input type=\"text\"\n" +
    "                       id=\"role-lookup\"\n" +
    "                       class=\"form-control uib-typeahead\"\n" +
    "                       placeholder=\"rol naam\"\n" +
    "                       ng-model=\"editor.roleLookupName\"\n" +
    "                       ng-disabled=\"editor.saving\"\n" +
    "                       uib-typeahead=\"role.name for role in editor.lookupRoles($viewValue)\"\n" +
    "                       typeahead-loading=\"editor.lookingForRoles\"\n" +
    "                       typeahead-on-select=\"editor.addRole($item)\"\n" +
    "                       typeahead-min-length=\"3\"\n" +
    "                       typeahead-template-url=\"templates/user-role-suggestion.html\"/>\n" +
    "            </div>\n" +
    "        </form>\n" +
    "        <br>\n" +
    "        <p ng-show=\"editor.roles && editor.roles.length === 0\">\n" +
    "            Er zijn nog geen rollen toegekend aan deze gebruiker.\n" +
    "        </p>\n" +
    "    </div>\n" +
    "    <ul class=\"list-group\" ng-show=\"editor.roles\">\n" +
    "        <li class=\"list-group-item\" ng-repeat=\"role in editor.roles\" ng-class=\"editor.getRoleStyle(role)\">\n" +
    "            <a ui-sref=\"split.manageRoles.edit({id: role.uuid})\" ng-bind=\"role.name\"></a>\n" +
    "            <button type=\"button\" class=\"btn btn-link pull-right\"\n" +
    "                    ng-if=\"!editor.getRoleStyle(role)\"\n" +
    "                    ng-click=\"editor.deleteRole(role)\">Verwijderen</button>\n" +
    "            <button type=\"button\" class=\"btn btn-link pull-right\"\n" +
    "                    ng-if=\"editor.getRoleStyle(role)\"\n" +
    "                    ng-click=\"editor.undoAction(role)\">\n" +
    "                <i class=\"fa fa-undo\" aria-hidden=\"true\"></i>\n" +
    "            </button>\n" +
    "        </li>\n" +
    "    </ul>\n" +
    "    <div class=\"panel-footer\" ng-show=\"!editor.roles && !editor.rolesLoadingError\">\n" +
    "        <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row\">\n" +
    "    <div class=\"col-md-12 text-right\">\n" +
    "        <button ng-disabled=\"editor.actions.length === 0 || editor.saving\"\n" +
    "                type=\"button\"\n" +
    "                class=\"btn btn-primary\"\n" +
    "                ng-click=\"editor.save()\">\n" +
    "            Opslaan <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"editor.saving\"></i>\n" +
    "        </button>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-show=\"editor.loadingError\">\n" +
    "    <span ng-bind=\"editor.loadingError\"></span>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/user-role-suggestion.html',
    "<a href tabindex=\"-1\" ng-bind-html=\"match.model.name | uibTypeaheadHighlight:query\"></a>"
  );


  $templateCache.put('templates/users-list.html',
    "<h1 class=\"title\">Gebruikers</h1>\n" +
    "\n" +
    "<div class=\"row\">\n" +
    "    <div class=\"col-md-11\">\n" +
    "        <form class=\"form-inline\" role=\"search\" ng-submit=\"ulc.handleSubmit()\">\n" +
    "            <div class=\"form-group\">\n" +
    "                <label for=\"user-search-input\">Zoeken op email</label>\n" +
    "                <input type=\"text\"\n" +
    "                       id=\"user-search-input\"\n" +
    "                       class=\"form-control\"\n" +
    "                       ng-model=\"ulc.query\"\n" +
    "                       autocomplete=\"off\"\n" +
    "                       ng-change=\"ulc.handleChange()\">\n" +
    "            </div>\n" +
    "        </form>\n" +
    "    </div>\n" +
    "    <div class=\"col-md-1 text-right\">\n" +
    "        <i ng-show=\"ulc.status === 'loading'\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row search-result-block\" ng-cloak>\n" +
    "    <div class=\"col-md-12\">\n" +
    "        <div class=\"alert alert-info\" ng-show=\"ulc.status === 'idle'\" role=\"alert\">\n" +
    "            <p>Schrijf een geldig email-adres in het veld hierboven en druk op enter om gebruikers te zoeken.</p>\n" +
    "        </div>\n" +
    "        <div ng-show=\"ulc.status === 'notFound'\"\n" +
    "             class=\"alert alert-warning\" role=\"alert\">\n" +
    "            <p>Geen gebruiker gevonden voor het opgegeven e-mail adres.</p>\n" +
    "        </div>\n" +
    "        <div ng-show=\"ulc.status === 'problem'\" class=\"alert alert-warning\" role=\"alert\">\n" +
    "            <span>Er ging iets mis tijdens het zoeken:</span>\n" +
    "            <br>\n" +
    "            <strong ng-bind=\"ulc.problem\"></strong>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-migration-footer.component.html',
    "<div class=\"event-validation\">\n" +
    "    <a class=\"btn btn-success\"\n" +
    "       ng-click=\"migration.completeMigration()\"\n" +
    "       role=\"button\"\n" +
    "       ng-class=\"{disabled: !migration.migrationReady()}\"\n" +
    "       ng-bind=\"::migration.destination.description\"></a>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-migration.html',
    "<div class=\"offer-form\" ng-if=\"loaded\">\n" +
    "    <div class=\"alert alert-danger\" role=\"alert\">\n" +
    "        <strong>Deze activiteit werd ingevoerd in de vorige versie van UiTdatabank.</strong><br>\n" +
    "        Om deze te kunnen bewerken, is het nodig om de eerder gekozen locatie en adres éénmalig opnieuw te selecteren of in te voeren.\n" +
    "    </div>\n" +
    "\n" +
    "    <udb-event-form-step3></udb-event-form-step3>\n" +
    "\n" +
    "    <udb-event-migration-footer></udb-event-migration-footer>\n" +
    "</div>\n" +
    "\n"
  );


  $templateCache.put('templates/translate-address.html',
    "<section class=\"translate-section\">\n" +
    "    <div class=\"row\">\n" +
    "        <div class=\"col-sm-3\">\n" +
    "            <p><strong><span translate-once=\"translate.address\"></span></strong></p>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-9\">\n" +
    "            <div class=\"row\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"text-muted\"><span translate-once=\"translate.original\"></span></p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <p class=\"text-muted\">\n" +
    "                      <span ng-bind=\"tac.originalAddress.streetAddress\"></span><br/>\n" +
    "                      <span ng-bind=\"tac.originalAddress.postalCode\"></span> \n" +
    "                      <span ng-bind=\"tac.originalAddress.addressLocality\"></span>\n" +
    "                    </p>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"row\" ng-repeat=\"(code, language) in tac.activeLanguages\" ng-show=\"language.active && !language.main\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"text-muted\"><span translate-once=\"translate.translation\"></span> {{code}}</p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    \n" +
    "                    <input type=\"text\" ng-blur=\"tac.saveTranslatedAddress(code)\" class=\"form-control form-group\" ng-model=\"tac.translatedAddresses[code].streetAddress\" placeholder=\"{{ 'translate.street' | translate }}\">\n" +
    "                    <div class=\"row\">\n" +
    "                      <div class=\"col-xs-3\">\n" +
    "                        <span class=\"text-muted text-right form-control-static\" ng-bind=\"::tac.translatedAddresses[code].postalCode\"></span>\n" +
    "                      </div>\n" +
    "                      <div class=\"col-xs-9\">\n" +
    "                        <input type=\"text\" ng-blur=\"tac.saveTranslatedAddress(code)\" class=\"form-control form-group\" ng-model=\"tac.translatedAddresses[code].addressLocality\">\n" +
    "                      </dvi>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</section>"
  );


  $templateCache.put('templates/translate-description.html',
    "<section class=\"translate-section\" ng-show=\"ttd.originalDescription\">\n" +
    "    <div class=\"row\" >\n" +
    "        <div class=\"col-sm-3\">\n" +
    "            <p><strong translate-once=\"translate.description\"></strong></p>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-9\">\n" +
    "            <div class=\"row\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"text-muted\" translate-once=\"translate.original\"></p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <p class=\"text-muted\" ng-bind=\"ttd.originalDescription\"></p>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"row\" ng-repeat=\"(code, language) in ttd.activeLanguages\" ng-show=\"language.active && !language.main\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"text-muted\"><span translate-once=\"translate.translation\"></span> {{code}}</p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <textarea ng-blur=\"ttd.saveTranslatedDescription(code)\" class=\"form-control form-group\" ng-model=\"ttd.translatedDescriptions[code]\"></textarea>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</section>"
  );


  $templateCache.put('templates/translate-images.html',
    "<section class=\"translate-section\" ng-show=\"tic.offer.mediaObject.length > 0\">\n" +
    "    <div class=\"row\">\n" +
    "        <div class=\"col-sm-3\">\n" +
    "            <p><strong>Afbeelding(en)</strong></p>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-9\">\n" +
    "            <div class=\"row\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"text-muted\">Origineel</p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <div class=\"panel panel-default\">\n" +
    "                        <div class=\"panel-body\">\n" +
    "                            <div ng-repeat=\"image in tic.eventFormData.mediaObjects | filter:{'@type': 'schema:ImageObject', 'inLanguage': tic.offer.mainLanguage} track by image.contentUrl\" class=\"media-object\">\n" +
    "                                <div class=\"uploaded-image media\">\n" +
    "\n" +
    "                                  <div class=\"media-left\">\n" +
    "                                    <img ng-src=\"{{ image.thumbnailUrl }}?width=50&height=50\" style=\"width: 50px;\">\n" +
    "                                  </div>\n" +
    "\n" +
    "                                  <div class=\"media-body\">\n" +
    "                                    <div ng-bind=\"image.description\"></div>\n" +
    "                                    <div class=\"text-muted\">&copy; <span ng-bind=\"image.copyrightHolder\"><span translate-once=\"eventForm.step5.copyright\"></span></span></div>\n" +
    "                                  </div>\n" +
    "\n" +
    "                                </div>\n" +
    "                              \n" +
    "                              <!-- Single button -->\n" +
    "                              <div class=\"btn-group\">\n" +
    "                                  <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n" +
    "                                      Kopieren in een andere taal <span class=\"caret\"></span>\n" +
    "                                  </button>\n" +
    "                                  <ul class=\"dropdown-menu\">\n" +
    "                                      <li ng-repeat=\"(code, language) in tic.activeLanguages\" ng-if=\"language.active && !language.main\"><button ng-click=\"tic.copyImage(image, code)\" class=\"btn-link\">{{code}}</button></li>\n" +
    "                                  </ul>\n" +
    "                              </div>\n" +
    "                              \n" +
    "                            </div>\n" +
    "\n" +
    "\n" +
    "                        </div>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"row\" ng-repeat=\"(code, language) in tic.activeLanguages\" ng-show=\"language.active && !language.main\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"text-muted\"><span translate-once=\"translate.translation\"></span> {{code}}</p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <div class=\"panel panel-default\">\n" +
    "                        <div class=\"panel-body\">\n" +
    "                            <div ng-repeat=\"image in tic.eventFormData.mediaObjects | filter:{'@type': 'schema:ImageObject', 'inLanguage': code} track by image.contentUrl\" class=\"media-object\">\n" +
    "                                <div class=\"uploaded-image\">\n" +
    "                                    <div class=\"media\" ng-class=\"{'main-image': ($index === 0)}\">\n" +
    "                                        <a class=\"media-left\" href=\"#\">\n" +
    "                                            <img ng-src=\"{{ image.thumbnailUrl }}?width=50&height=50\" style=\"width: 50px;\">\n" +
    "                                        </a>\n" +
    "\n" +
    "                                        <div class=\"media-body\">\n" +
    "                                            <div ng-bind=\"image.description\"></div>\n" +
    "                                            <div class=\"text-muted\">&copy; <span ng-bind=\"image.copyrightHolder\"><span translate-once=\"eventForm.step5.copyright\"></span></span></div>\n" +
    "                                        </div>\n" +
    "\n" +
    "                                        <div class=\"media-actions\">\n" +
    "                                            <a class=\"btn btn-xs btn-primary\" ng-click=\"tic.editImage(image)\" translate-once=\"eventForm.step5.change\"></a>\n" +
    "                                            <a class=\"btn btn-xs btn-danger\" ng-click=\"tic.removeImage(image)\" translate-once=\"eventForm.step5.delete\"></a>\n" +
    "                                        </div>\n" +
    "\n" +
    "                                    </div>\n" +
    "                                </div>\n" +
    "                            </div>\n" +
    "                            <a class=\"btn btn-default\"\n" +
    "                               href=\"#\"\n" +
    "                               translate-once=\"eventForm.step5.add_image\"\n" +
    "                               ng-click=\"tic.openUploadImageModal(code)\"></a>\n" +
    "                        </div>\n" +
    "                    </div>\n" +
    "\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</section>"
  );


  $templateCache.put('templates/translate-tariffs.html',
    "<section class=\"translate-section\" ng-show=\"ttsc.originalTariffs.length > 0\">\n" +
    "    <div class=\"row\" ng-repeat=\"originalTariff in ttsc.originalTariffs track by $index\">\n" +
    "        <div class=\"col-sm-3\">\n" +
    "            <p><strong><span translate-once=\"translate.tariff\"></span> {{$index+1}}</strong></p>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-9\">\n" +
    "            <div class=\"row\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"orginal text-muted\" translate-once=\"translate.original\"></p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <p class=\"orginal text-muted\" ng-bind=\"originalTariff\"></p>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"row\" ng-repeat=\"(code, language) in ttsc.activeLanguages\" ng-show=\"language.active && !language.main\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"text-muted\"><span translate-once=\"translate.translation\"></span> {{code}}</p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <input type=\"text\" ng-blur=\"ttsc.saveTranslatedTariffs()\" class=\"form-control form-group\" ng-model=\"ttsc.translatedTariffs[$parent.$index][code]\">\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</section>"
  );


  $templateCache.put('templates/translate-title.html',
    "<section class=\"translate-section\">\n" +
    "    <div class=\"row\">\n" +
    "        <div class=\"col-sm-3\">\n" +
    "            <p><strong translate-once=\"translate.title\"></strong></p>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-9\">\n" +
    "            <div class=\"row\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"orginal text-muted\" translate-once=\"translate.original\"></p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <p class=\"orginal text-muted\" ng-bind=\"ttc.originalName\"></p>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"row\" ng-repeat=\"(code, language) in ttc.activeLanguages\" ng-show=\"language.active && !language.main\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"orginal text-muted\"><span translate-once=\"translate.original\"></span> {{code}}</p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <textarea ng-blur=\"ttc.saveTranslatedName(code)\" class=\"form-control form-group\" ng-model=\"ttc.translatedNames[code]\"></textarea>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</section>"
  );


  $templateCache.put('templates/offer-translate.html',
    "<div ng-if=\"!loaded\">\n" +
    "  <p class=\"title\"><span class=\"placeholder-title\"></span></p>\n" +
    "  <p class=\"text-center\"><i class=\"fa fa-circle-o-notch fa-spin fa-fw\"></i><span class=\"sr-only\" translate-once=\"preview.loading\"></span></p>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"offer-translate\" ng-if=\"loaded\" >\n" +
    "\n" +
    "  <div class=\"page-header\">\n" +
    "    <div class=\"row\">\n" +
    "      <div class=\"col-sm-6\">\n" +
    "        <h1><span ng-bind=\"originalName\"></span> <span translate-once=\"translate.translate\"></span></h1>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"col-sm-6\">\n" +
    "        <div class=\"offer-translate-chooser\">\n" +
    "          <label class=\"form-text\">\n" +
    "             <button ng-click=\"openEditPage()\" class=\"btn-link btn-sm\">\n" +
    "               <span translate-once=\"translate.edit\"></span> <span translate-once=\"translate.original\"></span> ({{mainLanguage}})\n" +
    "             </button>\n" +
    "          </label>\n" +
    "          <span ng-repeat=\"language in languages\">\n" +
    "            <span ng-if=\"!activeLanguages[language].main\">\n" +
    "              <label class=\"checkbox-inline\" >\n" +
    "                <input type=\"checkbox\" ng-model=\"activeLanguages[language].active\"/>{{language}}\n" +
    "              </label>\n" +
    "            </span>\n" +
    "          </span>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"offer-translate-wrapper\">\n" +
    "     <!-- Titel -->\n" +
    "    <offer-translate-title offer=\"cachedOffer\" active-languages=\"activeLanguages\"></offer-translate-title>\n" +
    "\n" +
    "    <!-- Beschrijving -->\n" +
    "    <offer-translate-description offer=\"cachedOffer\" active-languages=\"activeLanguages\"></offer-translate-description>\n" +
    "\n" +
    "    <!-- Prijs -->\n" +
    "    <offer-translate-tariffs offer=\"cachedOffer\" active-languages=\"activeLanguages\"></offer-translate-tariffs>\n" +
    "\n" +
    "    <!-- Address -->\n" +
    "    <offer-translate-address offer=\"cachedOffer\" active-languages=\"activeLanguages\" ng-if=\"isPlace\"></offer-translate-address>\n" +
    "  </div>\n" +
    "\n" +
    "  <button class=\"btn btn-success\" ng-click=\"goToDashboard()\" translate-once=\"translate.ready\"></button>\n" +
    "\n" +
    "</div>\n"
  );


  $templateCache.put('templates/organizer-address.html',
    "<form name=\"oac.organizerAddressForm\" class=\"organizer-address-form\">\n" +
    "    <div class=\"row\">\n" +
    "      <div class=\"col-xs-6\">\n" +
    "        <label translate-once=\"organizer.manage.address\"></label>\n" +
    "      </div>\n" +
    "      <div class=\"col-xs-6\">\n" +
    "        <select ng-change=\"oac.changeCountrySelection()\"\n" +
    "          ng-options=\"option.code | translate for option in oac.availableCountries track by option.code\"\n" +
    "          ng-model=\"oac.selectedCountry\"\n" +
    "          ng-show=\"oac.availableCountries.length > 1\"\n" +
    "          class=\"form-control\">\n" +
    "        </select>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"form-group\"\n" +
    "         ng-class=\"{'has-error' : oac.streetHasErrors && oac.organizerAddressForm.$submitted}\">\n" +
    "        <label translate-once=\"organizer.address.label_street\"></label>\n" +
    "        <input type=\"text\"\n" +
    "               class=\"form-control\"\n" +
    "               name=\"street\"\n" +
    "               placeholder=\"{{ 'organizer.address.label_street' | translate }}\"\n" +
    "               ng-model=\"oac.address.streetAddress\"\n" +
    "               ng-change=\"oac.validateAddress()\"\n" +
    "               ng-model-options=\"{ updateOn: 'blur' }\">\n" +
    "        <span class=\"has-error\"\n" +
    "              ng-show=\"oac.streetHasErrors && oac.organizerAddressForm.$submitted\">\n" +
    "            <span class=\"help-block\" translate-once=\"organizer.address.help_street\"></span>\n" +
    "        </span>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"row\" >\n" +
    "        <div class=\"col-xs-6\">\n" +
    "            <div class=\"form-group\" ng-hide=\"oac.selectedCity !== ''\"\n" +
    "                 ng-class=\"{'has-error' : oac.cityHasErrors && oac.organizerAddressForm.$submitted}\">\n" +
    "                <label for=\"organizer-gemeente-autocomplete\" id=\"gemeente-label\" translate-once=\"organizer.address.label_city\" ng-show=\"oac.selectedCountry.code === 'BE'\"></label>\n" +
    "                <label for=\"organizer-gemeente-autocomplete\" id=\"gemeente-label\" translate-once=\"organizer.address.label_residence\" ng-show=\"oac.selectedCountry.code === 'NL'\"></label>\n" +
    "                <div id=\"gemeente-kiezer\">\n" +
    "                    <input id=\"organizer-gemeente-autocomplete\"\n" +
    "                           type=\"text\"\n" +
    "                           name=\"city\"\n" +
    "                           class=\"form-control uib-typeahead\"\n" +
    "                           ng-model=\"oac.cityAutocompleteTextField\"\n" +
    "                           uib-typeahead=\"city as city.label for city in oac.cities | filter:oac.filterCities($viewValue) | orderBy:oac.orderByLevenshteinDistance($viewValue)\"\n" +
    "                           typeahead-on-select=\"oac.selectCity($item, $label)\"\n" +
    "                           typeahead-min-length=\"2\"\n" +
    "                           typeahead-template-url=\"templates/city-suggestion.html\"\n" +
    "                           autocomplete=\"off\">\n" +
    "                    <span class=\"help-block\" ng-show=\"oac.cityAutoCompleteError\" translate-once=\"organizer.address.help_city\">\n" +
    "                    </span>\n" +
    "                    <span class=\"has-error\"\n" +
    "                          ng-show=\"oac.cityHasErrors && oac.organizerAddressForm.$submitted\">\n" +
    "                        <span class=\"help-block\" translate-once=\"organizer.address.error_city\">\n" +
    "                        </span>\n" +
    "                    </span>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "            <div class=\"form-group\" id=\"gemeente-gekozen\" ng-if=\"oac.selectedCity\">\n" +
    "              <label id=\"gemeente-label\" translate-once=\"organizer.address.label_city\" ng-show=\"oac.selectedCountry.code === 'BE'\"></label>\n" +
    "              <label id=\"gemeente-label\" translate-once=\"organizer.address.label_residence\" ng-show=\"oac.selectedCountry.code === 'NL'\"></label>\n" +
    "              <p class=\"form-text\">\n" +
    "                <span id=\"gemeente-gekozen-button\" ng-bind=\"::oac.selectedCity\"></span>\n" +
    "                <a href=\"#\" class=\"btn btn-default btn-link\" ng-click=\"oac.changeCitySelection()\" translate-once=\"organizer.address.change\"></a>\n" +
    "              </p>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "        <div class=\"col-xs-6\" ng-show=\"oac.selectedCountry.code == 'NL'\">\n" +
    "            <div class=\"form-group\"\n" +
    "                 ng-class=\"{'has-error' : oac.zipHasErrors && oac.organizerAddressForm.$submitted}\">\n" +
    "                <label translate-once=\"organizer.address.zip\"></label>\n" +
    "                <span class=\"text-muted\">bv. 1104CA</span>\n" +
    "                <input type=\"text\"\n" +
    "                       class=\"form-control\"\n" +
    "                       name=\"postalCode\"\n" +
    "                       placeholder=\"{{ 'organizer.address.zip' | translate }}\"\n" +
    "                       ng-model=\"oac.address.postalCode\"\n" +
    "                       ng-change=\"oac.validateAddress()\">\n" +
    "                <span class=\"has-error\"\n" +
    "                      ng-show=\"oac.zipHasErrors && oac.organizerAddressForm.$submitted\">\n" +
    "                    <span class=\"help-block\" translate-once=\"organizer.address.help_zip\"></span>\n" +
    "                </span>\n" +
    "                <span class=\"has-error\"\n" +
    "                      ng-show=\"!oac.zipHasErrors && oac.zipValidateError && oac.organizerAddressForm.$submitted\">\n" +
    "                    <span class=\"help-block\" translate-once=\"organizer.address.validate_zip\"></span>\n" +
    "                </span>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "    <div class=\"row\">\n" +
    "      <div class=\"col-xs-6\">\n" +
    "        <a href=\"#\" ng-show=\"oac.hasAddress\" class=\"btn btn-default\" ng-click=\"oac.clearAddressInfo()\" translate-once=\"organizer.address.delete\">Leegmaken</a>\n" +
    "        <p ng-show=\"oac.addressRemovedSuccess\" class=\"alert alert-success\" translate-once=\"organizer.address.delete_success\"></span>\n" +
    "        <p ng-show=\"oac.addressRemovedError\" class=\"alert alert-danger\" translate-once=\"organizer.address.delete_error\"></span>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "</form>\n"
  );


  $templateCache.put('templates/organizer-contact.html',
    "<div class=\"row\">\n" +
    "    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n" +
    "        <p><strong translate-once=\"organizer.contact.title\"></strong></p>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "\n" +
    "<div class=\"row\" ng-show=\"occ.contact.length\">\n" +
    "  <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n" +
    "    <ul>\n" +
    "      <li ng-repeat=\"contact in occ.contact track by $index\">\n" +
    "        {{contact.value}}\n" +
    "        <button type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"occ.deleteOrganizerContactInfo($index)\">\n" +
    "            <span aria-hidden=\"true\">&times;</span>\n" +
    "        </button>\n" +
    "      </li>\n" +
    "    </ul>\n" +
    "  </div>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-show=\"occ.addingContactEntry\">\n" +
    "  <div class=\"panel panel-default\">\n" +
    "    <div class=\"panel-body\">\n" +
    "      <form name=\"occ.organizerContactWrapper\">\n" +
    "        <div ng-switch=\"occ.newContact.type\">\n" +
    "          <label ng-switch-when=\"url\"><span translate-once=\"organizer.contact.enter_url\"></span></label>\n" +
    "          <label ng-switch-when=\"email\"><span translate-once=\"organizer.contact.enter_email\"></span></label>\n" +
    "          <label ng-switch-when=\"phone\"><span translate-once=\"organizer.contact.enter_phone\"></span></label>\n" +
    "        </div>\n" +
    "        <div ng-switch=\"occ.newContact.type\">\n" +
    "          <div ng-switch-when=\"url\" class=\"form-group\" ng-class=\"{ 'has-error': urlContactForm.url.$touched && urlContactForm.url.$invalid }\">\n" +
    "              <ng-form name=\"urlContactForm\">\n" +
    "                  <input type=\"text\" name=\"url\" udb-http-prefix class=\"form-control\" ng-model=\"occ.newContact.value\" ng-pattern=\"occ.contactUrlRegex\" ng-model-options=\"{allowInvalid:true}\" required>\n" +
    "                  <div class=\"help-block\" ng-messages=\"urlContactForm.url.$error\" ng-show=\"!occ.isPristine && urlContactForm.url.$error\">\n" +
    "                      <p ng-message=\"required\">\n" +
    "                          <span translate-once=\"organizer.contact.required\"></span>\n" +
    "                      </p>\n" +
    "                      <p ng-message=\"pattern\">\n" +
    "                          <span translate-once=\"organizer.contact.valid_url\"></span>\n" +
    "                      </p>\n" +
    "                  </div>\n" +
    "              </ng-form>\n" +
    "          </div>\n" +
    "          <div ng-switch-when=\"email\" class=\"form-group\" ng-class=\"{ 'has-error': mailContactForm.email.$touched && mailContactForm.email.$invalid }\">\n" +
    "              <ng-form name=\"mailContactForm\">\n" +
    "                  <input type=\"text\" name=\"email\" ng-pattern=\"/^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/\" class=\"form-control\" ng-model=\"occ.newContact.value\" ng-model-options=\"{allowInvalid:true}\" required>\n" +
    "                  <div class=\"help-block\" ng-messages=\"mailContactForm.email.$error\" ng-show=\"!occ.isPristine && mailContactForm.email.$error\">\n" +
    "                      <p ng-message=\"required\">\n" +
    "                          <span translate-once=\"organizer.contact.required\"></span>\n" +
    "                      </p>\n" +
    "                      <p ng-message=\"pattern\">\n" +
    "                          <span translate-once=\"organizer.contact.valid_email\"></span>\n" +
    "                      </p>\n" +
    "                  </div>\n" +
    "              </ng-form>\n" +
    "          </div>\n" +
    "          <div ng-switch-default class=\"form-group\" ng-class=\"{ 'has-error': phoneContactForm.phone.$touched && phoneContactForm.phone.$invalid }\">\n" +
    "              <ng-form name=\"phoneContactForm\">\n" +
    "                  <input type=\"tel\" name=\"phone\" class=\"form-control\" ng-model=\"occ.newContact.value\" ng-pattern=\"/^[^a-zA-Z]*$/\" ng-model-options=\"{allowInvalid:true}\" required>\n" +
    "                  <div class=\"help-block\" ng-messages=\"phoneContactForm.phone.$error\" ng-show=\"!occ.isPristine && phoneContactForm.phone.$error\">\n" +
    "                      <p ng-message=\"required\">\n" +
    "                          <span translate-once=\"organizer.contact.required\"></span>\n" +
    "                      </p>\n" +
    "                      <p ng-message=\"pattern\">\n" +
    "                          <span translate-once=\"organizer.contact.valid_phone\"></span>\n" +
    "                      </p>\n" +
    "                  </div>\n" +
    "              </ng-form>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <button type=\"button\" ng-click=\"occ.cancelOrganizerContactEntry()\" class=\"btn btn-link\" translate-once=\"organizer.contact.cancel\">\n" +
    "        </button>\n" +
    "\n" +
    "        <button type=\"button\" ng-click=\"occ.addOrganizerContactInfo()\" class=\"btn btn-default\" ng-disabled=\"occ.isPristine\" translate-once=\"organizer.contact.add\">\n" +
    "        </button>\n" +
    "\n" +
    "      </form>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row\" ng-hide=\"occ.addingContactEntry\">\n" +
    "    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n" +
    "        <ul class=\"list-unstyled\">\n" +
    "            <li><a ng-click=\"occ.addOrganizerContactEntry('phone')\" href=\"#\" translate-once=\"organizer.contact.add_phone\"></a></li>\n" +
    "            <li><a ng-click=\"occ.addOrganizerContactEntry('email')\" href=\"#\" translate-once=\"organizer.contact.add_email\"></a></li>\n" +
    "            <li><a ng-click=\"occ.addOrganizerContactEntry('url')\" href=\"#\" translate-once=\"organizer.contact.add_url\"></a></li>\n" +
    "        </ul>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/organizer-detail.html',
    "<div ng-if=\"!odc.finishedLoading()\">\n" +
    "    <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "</div>\n" +
    "\n" +
    "<h1 class=\"title\" ng-bind=\"odc.organizer.name\"></h1>\n" +
    "\n" +
    "<div class=\"row\" ng-if=\"odc.finishedLoading()\">\n" +
    "  <div class=\"col-sm-3 col-sm-push-9\">\n" +
    "    <div class=\"list-group\" ng-if=\"!odc.organizer.deleted\">\n" +
    "      <button class=\"list-group-item\"\n" +
    "              type=\"button\"\n" +
    "              ui-sref=\"split.organizerEdit({id: odc.organizer.id})\"\n" +
    "              ng-if=\"odc.canEdit()\">\n" +
    "        <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i>\n" +
    "        <span translate-once=\"organizer.manage.edit\"></span>\n" +
    "      </button>\n" +
    "      <button\n" +
    "      class=\"list-group-item\"\n" +
    "      type=\"button\"\n" +
    "      ui-sref=\"split.organizerOwnership({id: odc.organizer.id})\"\n" +
    "      ng-if=\"odc.canEdit() && odc.isOwnershipEnabled()\"\n" +
    "    >\n" +
    "      <span translate-once=\"organizer.manage.ownerships.manage\"></span>\n" +
    "    </button>\n" +
    "      <span ng-if=\"odc.isManageState()\">\n" +
    "        <button class=\"list-group-item\"\n" +
    "                ng-click=\"odc.deleteOrganization()\">\n" +
    "          <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n" +
    "          <span translate-once=\"organizer.manage.delete\"></span>\n" +
    "        </button>\n" +
    "        <button class=\"list-group-item\"\n" +
    "                ui-sref=\"management.organizers.search({id: odc.organizer.id})\">\n" +
    "          <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\n" +
    "          <span translate-once=\"organizer.manage.overview\"></span>\n" +
    "        </button>\n" +
    "      </span>\n" +
    "      <span ng-if=\"!odc.isManageState()\">\n" +
    "        <button class=\"list-group-item\"\n" +
    "                ui-sref=\"split.footer.dashboard\">\n" +
    "          <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\n" +
    "          <span translate-once=\"organizer.manage.dashboard\"></span>\n" +
    "        </button>\n" +
    "      </span>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "  <div class=\"col-sm-9 col-sm-pull-3\">\n" +
    "    <div class=\"organizer-detail-wrapper\">\n" +
    "      <table ng-if=\"odc.organizer && !odc.organizer.deleted\" class=\"table udb3-data-table\">\n" +
    "        <colgroup>\n" +
    "          <col style=\"width:20%\"/>\n" +
    "          <col style=\"width:80%\"/>\n" +
    "        </colgroup>\n" +
    "        <tr>\n" +
    "          <td>\n" +
    "            <span class=\"row-label\" translate-once=\"organizer.manage.name\"></span>\n" +
    "          </td>\n" +
    "          <td>\n" +
    "            <span ng-bind=\"::odc.organizer.name\"></span>\n" +
    "          </td>\n" +
    "        </tr>\n" +
    "        <tr ng-if=\"::odc.organizer.description\">\n" +
    "          <td>\n" +
    "            <span class=\"row-label\" translate-once=\"organizer.manage.description\"></span>\n" +
    "          </td>\n" +
    "          <td>\n" +
    "            <span ng-bind-html=\"::odc.organizer.description\"></span>\n" +
    "          </td>\n" +
    "        </tr>\n" +
    "        <tr ng-if=\"::odc.organizer.educationalDescription\">\n" +
    "          <td>\n" +
    "            <span class=\"row-label\" translate-once=\"organizer.manage.educational_description\"></span>\n" +
    "          </td>\n" +
    "          <td>\n" +
    "            <span ng-bind-html=\"::odc.organizer.educationalDescription\"></span>\n" +
    "          </td>\n" +
    "        </tr>\n" +
    "        <tr>\n" +
    "          <td>\n" +
    "            <span class=\"row-label\" translate-once=\"organizer.manage.address\"></span>\n" +
    "          </td>\n" +
    "          <td>\n" +
    "            <span ng-bind=\"::odc.organizer.address.streetAddress\"></span><br/>\n" +
    "            <span ng-bind=\"::odc.organizer.address.postalCode\"></span>\n" +
    "            <span ng-bind=\"::odc.organizer.address.addressLocality\"></span>\n" +
    "          </td>\n" +
    "        </tr>\n" +
    "        <tbody udb-contact-point-detail=\"::odc.organizer.contactPoint\"></tbody>\n" +
    "        <tr>\n" +
    "          <td>\n" +
    "            <span class=\"row-label\" translate-once=\"organizer.manage.labels\"></span>\n" +
    "            <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"labelSaving\"></i>\n" +
    "          </td>\n" +
    "          <td>\n" +
    "            <udb-label-select labels=\"odc.organizer.labels\"\n" +
    "                              label-added=\"odc.addLabel(label)\"\n" +
    "                              label-removed=\"odc.deleteLabel(label)\"></udb-label-select>\n" +
    "            <div ng-if=\"odc.labelResponse === 'unlabelError'\" class=\"alert alert-danger\">\n" +
    "                <span ng-if=\"odc.labelsError !== 'Label not allowed'\" ng-bind=\"odc.labelsError\"></span>\n" +
    "                <span ng-if=\"odc.labelsError === 'Label not allowed'\" translate-once=\"errors.labelNotAllowed\"></span>\n" +
    "            </div>\n" +
    "          </td>\n" +
    "        </tr>\n" +
    "        <tbody udb-image-detail=\"::odc.organizer.mediaObject\" image=\"::odc.organizer.image\"></tbody>\n" +
    "      </table>\n" +
    "    </div>\n" +
    " \n" +
    "\n" +
    "    <div class=\"alert alert-danger\" ng-if=\"odc.organizer && odc.organizer.deleted\">\n" +
    "      <span translate-once=\"organizer.manage.removed\"></span>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-show=\"odc.loadingError\">\n" +
    "        <span ng-bind=\"odc.loadingError\"></span>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/organizer-form.html',
    "<h1 class=\"title\" ng-bind=\"ofc.originalName\"></h1>\n" +
    "\n" +
    "<div ng-show=\"ofc.loadingError\">\n" +
    "    <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "</div>\n" +
    "\n" +
    "    <form name=\"ofc.organizerForm\" class=\"organizer-edit-form\">\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-sm-12 col-md-8\">\n" +
    "                <p class=\"alert alert-danger\" ng-show=\"ofc.hasErrors\">\n" +
    "                    <span ng-show=\"ofc.organizersWebsiteFound\">Deze URL is al in gebruik door een andere organisatie.<br /></span>\n" +
    "                    <span ng-show=\"ofc.websiteError\">Er ging iets mis met het controleren van de website.<br /></span>\n" +
    "                    <span ng-show=\"ofc.organizerForm.website.$error.required || ofc.urlError\">Gelieve een website in te vullen.<br /></span>\n" +
    "                    <span ng-show=\"ofc.organizerForm.name.$error.required\">Gelieve een naam in te vullen.<br /></span>\n" +
    "                    <span ng-show=\"ofc.organizerForm.name.$error.maxlength\" translate-once=\"organizer.modal.name_maxlength\"><br /></span>\n" +
    "                    <span ng-show=\"ofc.addressError\">Gelieve een geldig adres in te vullen.<br /></span>\n" +
    "                    <span ng-show=\"ofc.contactError\">Gelieve alle contactinfo correct in te vullen.<br /></span>\n" +
    "                    <span ng-show=\"ofc.saveError\">Er ging iets mis tijdens het opslaan.<br /></span>\n" +
    "                </p>\n" +
    "\n" +
    "                <div class=\"form-group has-feedback\"\n" +
    "                     ng-class=\"{'has-error' : (ofc.organizersWebsiteFound || ofc.urlError || ofc.organizerEditForm.website.$error.required) && ofc.hasErrors }\">\n" +
    "                    <label>Website</label>\n" +
    "                    <input type=\"url\"\n" +
    "                           id=\"organizer-website\"\n" +
    "                           udb-http-prefix\n" +
    "                           name=\"website\"\n" +
    "                           class=\"form-control\"\n" +
    "                           ng-model-options=\"{ debounce: 300 }\"\n" +
    "                           ng-model=\"ofc.organizer.website\"\n" +
    "                           ng-change=\"ofc.validateWebsite()\"\n" +
    "                           aria-describedby=\"organizer-website-status\"\n" +
    "                           autocomplete=\"off\"\n" +
    "                           required>\n" +
    "                    <span class=\"fa fa-circle-o-notch fa-spin form-control-feedback\" ng-show=\"ofc.showWebsiteValidation\" aria-hidden=\"true\"></span>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-sm-12 col-md-8\">\n" +
    "                <div class=\"form-group\" ng-class=\"{'has-error' : ofc.nameError && ofc.hasErrors }\">\n" +
    "                    <label>Naam</label>\n" +
    "                    <input type=\"text\"\n" +
    "                           name=\"name\"\n" +
    "                           class=\"form-control\"\n" +
    "                           ng-model=\"ofc.organizer.name\"\n" +
    "                           ng-change=\"ofc.validateName()\"\n" +
    "                           ng-maxlength=\"250\"\n" +
    "                           required>\n" +
    "                    <p class=\"help-block\">De officiële publieke naam van de organisatie.</p>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </form>\n" +
    "\n" +
    "    <udb-organizer-address ng-if=\"ofc.showAddressComponent\"\n" +
    "                           address=\"ofc.organizer.address\"\n" +
    "                           on-update=\"ofc.validateAddress(error)\"></udb-organizer-address>\n" +
    "    <udb-organizer-contact contact=\"ofc.contact\"\n" +
    "                           on-update=\"ofc.validateContact(error)\"></udb-organizer-contact>\n" +
    "\n" +
    "    <button type=\"button\"\n" +
    "            class=\"btn btn-primary organisator-bewerken-bewaren\"\n" +
    "            ng-disabled=\"ofc.disableSubmit || ofc.contactError\"\n" +
    "            ng-click=\"ofc.validateOrganizer()\">\n" +
    "        Bewaren\n" +
    "    </button>\n" +
    "    <a class=\"btn btn-default organisator-bewerken-annuleren\"\n" +
    "       ng-click=\"ofc.cancel()\">Annuleren</a>\n" +
    "\n" +
    "<div ng-show=\"ofc.loadingError\">\n" +
    "    <span ng-bind=\"ofc.loadingError\"></span>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/place-detail.html',
    "<div ng-if=\"placeIdIsInvalid\">\n" +
    "  <div class=\"page-header\">\n" +
    "    <h1 translate-once=\"preview.not_found\"></h1>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"col-xs-12\">\n" +
    "      <p translate-once=\"preview.not_found_help\"></p>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-if=\"!finishedLoading\">\n" +
    "  <p class=\"title\"><span class=\"placeholder-title\"></span></p>\n" +
    "  <p class=\"text-center\"><i class=\"fa fa-circle-o-notch fa-spin fa-fw\"></i><span class=\"sr-only\" translate-once=\"preview.loading\"></span></p>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-if=\"place && finishedLoading\" class=\"place-detail\">\n" +
    "  <h1 class=\"title\" ng-bind=\"::place.name\"></h1>\n" +
    "\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"col-sm-3 col-sm-push-9\">\n" +
    "      <div class=\"list-group\" ng-if=\"::permissions\">\n" +
    "        <button ng-if=\"::permissions.editing\"\n" +
    "                class=\"list-group-item\"\n" +
    "                type=\"button\"\n" +
    "                ng-click=\"openEditPage()\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.edit\"></span> <span ng-if=\"place.mainLanguage !== language\" ng-bind=\"'(' + place.mainLanguage + ')'\"></span></button>\n" +
    "        <button ng-if=\"::permissions.moderate\"\n" +
    "                class=\"list-group-item\"\n" +
    "                type=\"button\"\n" +
    "                ng-click=\"openTranslatePage()\"><i class=\"fa fa-globe\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.translate\"></span></button>\n" +
    "        <a ng-if=\"::(permissions.moderate && !isOmdApp)\"\n" +
    "           class=\"list-group-item\"\n" +
    "           ng-href=\"{{ place.url + '/status' }}\"><i class=\"far fa-calendar-check\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.change_availability\"></span></a>\n" +
    "        <button ng-if=\"::permissions.delete\"\n" +
    "                class=\"list-group-item\"\n" +
    "                href=\"#\"\n" +
    "                ng-click=\"deletePlace()\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.delete\"></span></button>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"col-xs-9 col-sm-pull-3\">\n" +
    "      <ul class=\"nav nav-tabs\">\n" +
    "        <li ng-repeat=\"tab in tabs\" ng-class=\"{active: isTabActive(tab.id)}\" role=\"tab\">\n" +
    "          <a ng-click=\"makeTabActive(tab.id)\" role=\"tab\" translate-once=\"preview.tabs.{{tab.id}}\" href=\"#\"></a>\n" +
    "        </li>\n" +
    "      </ul>\n" +
    "\n" +
    "      <div class=\"tab-pane\" role=\"tabpanel\" ng-show=\"isTabActive('data')\">\n" +
    "        <table class=\"table udb3-data-table\">\n" +
    "          <colgroup>\n" +
    "            <col style=\"width:20%\"/>\n" +
    "            <col style=\"width:80%\"/>\n" +
    "          </colgroup>\n" +
    "          <tbody>\n" +
    "            <tr>\n" +
    "              <td><span class=\"row-label\" translate-once=\"preview.title\"></span></td>\n" +
    "              <td>{{::place.name}}</td>\n" +
    "            </tr>\n" +
    "            <tr>\n" +
    "              <td><span class=\"row-label\" translate-once=\"preview.type\"></span></td>\n" +
    "              <td>{{::translateType(place.type.label)}}</td>\n" +
    "            </tr>\n" +
    "\n" +
    "            <tr ng-class=\"{muted: !place.description}\">\n" +
    "              <td><span class=\"row-label\" translate-once=\"preview.description\"></span></td>\n" +
    "              <td ng-if=\"place.description\">\n" +
    "                <div ng-bind-html=\"place.description\" class=\"event-detail-description\"></div>\n" +
    "              </td>\n" +
    "              <td ng-if=\"!place.description\" translate-once=\"preview.no_description\"></td>\n" +
    "            </tr>\n" +
    "            <tr>\n" +
    "              <td><span class=\"row-label\" translate-once=\"preview.where\"></span></td>\n" +
    "              <td>{{::place.address.streetAddress}}<br />\n" +
    "                {{::place.address.postalCode}} {{::place.address.addressLocality}}<br />\n" +
    "                {{::place.address.addressCountry}}</td>\n" +
    "            </tr>\n" +
    "          </tbody>\n" +
    "          <tbody udb-booking-info-detail=\"::place.bookingInfo\"></tbody>\n" +
    "          <tbody udb-contact-point-detail=\"::place.contactPoint\"></tbody>\n" +
    "          <tbody>\n" +
    "            <tr>\n" +
    "              <td>\n" +
    "                <span class=\"row-label\" translate-once=\"preview.labels\"></span>\n" +
    "              </td>\n" +
    "              <td>\n" +
    "                <p><udb-label-select labels=\"::place.labels\"\n" +
    "                                  label-added=\"labelAdded(label)\"\n" +
    "                                  label-removed=\"labelRemoved(label)\">\n" +
    "                </udb-label-select></p>\n" +
    "                <p ng-if=\"labelResponse === 'error'\" class=\"alert alert-danger\">\n" +
    "                  <span translate-once=\"preview.labels_error\" translate-values=\"{ labelName: '{{labelsError.name}}' }\"></span>\n" +
    "                </p>\n" +
    "                <p ng-if=\"labelResponse === 'success'\" class=\"alert alert-success\">\n" +
    "                  <span translate-once=\"preview.labels_success\" translate-values=\"{ addedLabel: '{{addedLabel}}' }\"></span>\n" +
    "                </p>\n" +
    "                <p ng-if=\"labelResponse === 'unlabelError'\" class=\"alert alert-danger\">\n" +
    "                  <span ng-if=\"labelsError !== 'Label not allowed'\" ng-bind=\"labelsError\"></span>\n" +
    "                  <span ng-if=\"labelsError === 'Label not allowed'\" translate-once=\"errors.labelNotAllowed\"></span>\n" +
    "                </p>\n" +
    "              </td>\n" +
    "            </tr>\n" +
    "            <tr>\n" +
    "              <td><span class=\"row-label\" translate-once=\"preview.age_label\"></span></td>\n" +
    "              <td>\n" +
    "                <span ng-if=\"::place.typicalAgeRange\">{{ageRange}}</span>\n" +
    "                <span ng-if=\"::(!place.typicalAgeRange)\" translate-once=\"preview.all_ages\"></span>\n" +
    "              </td>\n" +
    "            </tr>\n" +
    "          </tbody>\n" +
    "          <tbody udb-image-detail=\"::place.mediaObject\" image=\"::place.image\"></tbody>\n" +
    "          <tbody>\n" +
    "            <tr ng-class=\"::{muted:(place.videos.length === 0)}\">\n" +
    "              <td><span class=\"row-label\" translate-once=\"preview.videos_label\"></span></td>\n" +
    "              <td ng-if=\"::place.videos.length\"> \n" +
    "                <ul>\n" +
    "                  <li ng-repeat=\"video in ::place.videos\">\n" +
    "                    <a target=\"_blank\" rel=\"noopener noreferrer\" ng-href=\"{{video.url}}\" >{{ video.url }}</a>\n" +
    "                  </li>\n" +
    "                </ul>\n" +
    "              </td>\n" +
    "              <td ng-if=\"::place.videos.length === 0\" translate-once=\"preview.no_videos\"></td>\n" +
    "            </tr>\n" +
    "          </tbody>\n" +
    "        </table>\n" +
    "      </div>\n" +
    "\n" +
    "      <div role=\"tabpanel\" class=\"tab-pane\" ng-show=\"isTabActive('history')\">\n" +
    "        <div class=\"timeline\">\n" +
    "          <p ng-show=\"!placeHistory\" class=\"text-center\">\n" +
    "            <i class=\"fa fa-circle-o-notch fa-spin fa-fw\"></i><span class=\"sr-only\" translate-once=\"preview.loading\"></span>\n" +
    "          </p>\n" +
    "          <div ng-if=\"::placeHistory\">\n" +
    "            <dl ng-repeat=\"placeAction in ::placeHistory track by $index\">\n" +
    "              <dt ng-bind=\"::placeAction.date | date:'dd/MM/yyyy H:mm'\"></dt>\n" +
    "              <dd>\n" +
    "                <span class=\"author\" ng-if=\"placeAction.author\" ng-bind=\"::placeAction.author\"></span>\n" +
    "                <br ng-if=\"::placeAction.author\"/>\n" +
    "                <span class=\"description\" ng-bind=\"::placeAction.description\"></span>\n" +
    "                <div ng-if=\"::placeAction.api\">\n" +
    "                  API: <span class=\"api\" ng-bind=\"::placeAction.api\"></span>\n" +
    "                </div>\n" +
    "                <div ng-if=\"::placeAction.apiKey\">\n" +
    "                  API key: <span class=\"api\" ng-bind=\"::placeAction.apiKey\"></span>\n" +
    "                  <span ng-if=\"::placeAction.consumerName\">(<span class=\"consumerName\" ng-bind=\"::placeAction.consumerName\"></span>)</span>\n" +
    "                </div>\n" +
    "              </dd>\n" +
    "            </dl>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"tab-pane\" role=\"tabpanel\" ng-show=\"isTabActive('publication')\">\n" +
    "        <table class=\"table udb3-data-table\">\n" +
    "          <colgroup>\n" +
    "            <col style=\"width:20%\"/>\n" +
    "            <col style=\"width:80%\"/>\n" +
    "          </colgroup>\n" +
    "          <tbody udb-workflow-status=\"::place\">\n" +
    "          </tbody>\n" +
    "        </table>\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/delete-search-modal.html',
    "<div class=\"modal-body\">\n" +
    "    <p>Ben je zeker dat je deze zoekopdracht wil verwijderen?</p>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"modal-footer\">\n" +
    "    <button class=\"btn btn-primary udb-delete-query-cancel-button\" ng-click=\"cancel()\">Annuleren</button>\n" +
    "    <button class=\"btn btn-danger udb-delete-query-confirm-button\" ng-click=\"confirm()\">Verwijderen</button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/save-search-modal.html',
    "<form name=\"saveQueryForm\" novalidate class=\"save-search-modal\">\n" +
    "\n" +
    "    <div class=\"modal-header\">\n" +
    "        <h5 class=\"modal-title\" translate-once=\"search.savedSearches.modal.mainTitle\"></h5>\n" +
    "    </div>\n" +
    "\n" +
    "    <ul class=\"nav nav-tabs\">\n" +
    "        <li ng-class=\"{active: isTabActive('new')}\"><a style=\"cursor: pointer;\" ng-click=\"makeTabActive('new')\" translate-once=\"search.savedSearches.modal.newTab\"></a></li>\n" +
    "        <li ng-class=\"{active: isTabActive('existing')}\"><a style=\"cursor: pointer;\" ng-click=\"makeTabActive('existing')\" translate-once=\"search.savedSearches.modal.existingTab\"></a></li>\n" +
    "    </ul>\n" +
    "\n" +
    "    \n" +
    "    <div class=\"tab-pane\" ng-show=\"isTabActive('new')\" role=\"tabpanel\">\n" +
    "        <div class=\"modal-body\">\n" +
    "\n" +
    "            <label translate-once=\"search.savedSearches.modal.giveName\"></label>\n" +
    "\n" +
    "            <div class=\"row\">\n" +
    "                <div class=\"col-lg-12\">\n" +
    "                    <p class=\"alert alert-danger\" role=\"alert\" ng-show=\"wasSubmitted && saveQueryForm.queryName.$error.required\">Een naam is verplicht.</p>\n" +
    "                    <input type=\"text\" ng-required=\"'true'\" name=\"queryName\" ng-model=\"queryName\" class=\"form-control\"/>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"modal-footer\">\n" +
    "        <button type=\"button\" class=\"btn btn-default udb-save-query-cancel-button\" ng-click=\"cancel()\" translate-once=\"search.savedSearches.modal.cancel\"></button>\n" +
    "        <button type=\"submit\" class=\"btn btn-primary udb-save-query-ok-button\" ng-click=\"ok('new')\" translate-once=\"search.savedSearches.modal.save\"></button>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"tab-pane\"  ng-show=\"isTabActive('existing')\"  role=\"tabpanel\">\n" +
    "        <div class=\"modal-body\">\n" +
    "            <label translate-once=\"search.savedSearches.modal.selectSavedSearch\"></label>\n" +
    "            <select class=\"form-control\" ng-model=\"queryId\" ng-change=\"setQueryName()\">\n" +
    "                <option ng-repeat=\"search in savedSearches\" value=\"{{search.id}}\">{{search.name}}</option>\n" +
    "            </select>\n" +
    "        </div>\n" +
    "  \n" +
    "        <div class=\"modal-footer\">\n" +
    "            <button type=\"button\" class=\"btn btn-default udb-save-query-cancel-button\" ng-click=\"cancel()\" translate-once=\"search.savedSearches.modal.cancel\"></button>\n" +
    "            <button type=\"submit\" class=\"btn btn-primary udb-save-query-ok-button\" ng-click=\"ok('existing')\" translate-once=\"search.savedSearches.modal.save\"></button>\n" +
    "        </div>\n" +
    "\n" +
    "    </div>\n" +
    "\n" +
    "\n" +
    "</form>\n"
  );


  $templateCache.put('templates/save-search.directive.html',
    "<p style=\"margin-top: 12px;\">\n" +
    "    <strong translate-once=\"search.savedSearches.yourSearch\"></strong>\n" +
    "    <button href=\"#\" ng-click=\"saveSearch()\" class=\"btn btn-default rv-action\">\n" +
    "        <i class=\"fa fa-save\"></i> <span translate-once=\"search.savedSearches.save\"></span>\n" +
    "    </button>\n" +
    "    <span style=\"cursor:pointer;color:#999999;margin-left: 5px;\" ng-click=\"openAnnouncementModal()\">\n" +
    "        <i class=\"fa fa-question-circle\"></i>\n" +
    "    </span>\n" +
    "</p>\n"
  );


  $templateCache.put('templates/saved-searches-list.html',
    "<div class=\"container-fluid\">\n" +
    "    <h1 translate-once=\"search.savedSearches.mySearches\"></h1>\n" +
    "    <table class=\"table\">\n" +
    "        <tr>\n" +
    "            <th class=\"saved-search-title-column\">\n" +
    "                <strong translate-once=\"search.savedSearches.title\"></strong>\n" +
    "            </th>\n" +
    "            <th>\n" +
    "                Query\n" +
    "            </th>\n" +
    "            <td>\n" +
    "            </td>\n" +
    "        </tr>\n" +
    "        <tr ng-repeat=\"savedSearch in savedSearches\">\n" +
    "            <td>\n" +
    "                <p>\n" +
    "                  <i class=\"fa fa-bookmark\"></i>\n" +
    "                  <span ng-bind=\"::savedSearch.name\"></span></p>\n" +
    "                <p><a \n" +
    "                    ng-href=\"search?query={{::encodeURI(savedSearch.query)}}\" \n" +
    "                    class=\"small\"\n" +
    "                    translate-once=\"search.savedSearches.viewResults\"\n" +
    "                    ></a></p>\n" +
    "            </td>\n" +
    "            <td class=\"saved-search-query\">\n" +
    "                <textarea ui-codemirror=\"{ onLoad : codemirrorLoaded }\" ng-model=\"::savedSearch.query\" class=\"query form-control\" rows=\"3\"\n" +
    "                          ui-codemirror-opts=\"editorOptions\"></textarea>\n" +
    "            </td>\n" +
    "            <td>\n" +
    "                <a class=\"btn btn-default\" ng-if=\"::savedSearch.id\" ng-click=\"::deleteSavedSearch(savedSearch.id)\"><i class=\"fa fa-trash\"></i></a>\n" +
    "            </td>\n" +
    "        </tr>\n" +
    "    </table>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-link.directive.html',
    "<a ng-href=\"{{ event.url + '/preview' }}\" ng-bind=\"::event.name\"></a>\n"
  );


  $templateCache.put('templates/label-select.html',
    "<p class=\"small text-muted\" translate-once=\"labels.what\"></p>\n" +
    "\n" +
    "<form name=\"form\">\n" +
    "  <div class=\"form-group\">\n" +
    "    <input type=\"text\"\n" +
    "    class=\"form-control typeahead\"\n" +
    "    ng-model=\"select.currentLabel\"\n" +
    "    ng-pattern=\"select.regex\"\n" +
    "    uib-typeahead=\"suggestion.name for suggestion in select.suggestLabels($viewValue)\"\n" +
    "    typeahead-on-select=\"select.onSelect($item)\"\n" +
    "    typeahead-min-length=\"2\"\n" +
    "    id=\"input\" name=\"input\"\n" +
    "    autocomplete=\"off\"\n" +
    "    ng-minlength=\"2\"\n" +
    "    ng-maxlength=\"50\"/>\n" +
    "  </div>\n" +
    "</form>\n" +
    "\n" +
    "<div class=\"alert alert-warning\" ng-show=\"!form.input.$valid && !form.input.$error.minlength \">\n" +
    "  <p><span translate-once=\"labels.invalid\"></span><br>\n" +
    "    <ul>\n" +
    "      <li translate-once=\"labels.chars\"></li>\n" +
    "      <li translate-once=\"labels.excluded\"></li>\n" +
    "      <li translate-once=\"labels.length\"></li>\n" +
    "    </ul>\n" +
    "</div>\n" +
    "\n" +
    "<ul class=\"list-inline\">\n" +
    "  <li ng-repeat=\"label in select.labels\">\n" +
    "    <span ng-hide=\"select.hiddenLabels.includes(label.name)\" class=\"badge\">{{label.name}} <a ng-click=\"select.onRemove(label)\" class=\"badge-remove\">&times;</a></span>\n" +
    "  </li>\n" +
    "</ul>\n"
  );


  $templateCache.put('templates/offer-accessibility-info.component.html',
    "<div ng-if=\"$ctrl.offer.facilities.length > 0\">\n" +
    "    <div>\n" +
    "        <span ng-click=\"showFacilities = !showFacilities\" style=\"cursor:pointer;\">\n" +
    "            <i class=\"fa fa-{{ showFacilities ? 'chevron-down' : 'chevron-right' }}\"></i>\n" +
    "            <strong ng-bind=\"$ctrl.offer.facilities.length\"></strong> voorziening(en)\n" +
    "        </span>\n" +
    "        <ul ng-show=\"showFacilities\">\n" +
    "            <li ng-repeat=\"facility in $ctrl.offer.facilities\" ng-bind=\"::facility.label\"></li>\n" +
    "        </ul>\n" +
    "    </div>\n" +
    "\n" +
    "    <button type=\"button\" class=\"btn btn-link\" ng-click=\"$ctrl.changeFacilities()\">Wijzigen</button>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-show=\"$ctrl.offer.facilities.length === 0\">\n" +
    "    <button type=\"button\" class=\"btn btn-primary\" ng-click=\"$ctrl.changeFacilities()\">\n" +
    "        Voorzieningen toevoegen\n" +
    "    </button>\n" +
    "</div>"
  );


  $templateCache.put('templates/query-editor-daterangepicker.directive.html',
    "<div>\n" +
    "  <p class=\"input-group\" ng-hide=\"field.transformer === '<'\">\n" +
    "    <input type=\"text\" class=\"form-control\" uib-datepicker-popup=\"{{drp.dateFormat}}\" ng-model=\"field.lowerBound\"\n" +
    "           is-open=\"drp.startOpened\" ng-required=\"true\" datepicker-options=\"drp.options\"/>\n" +
    "    <span class=\"input-group-btn\">\n" +
    "        <button type=\"button\" class=\"btn btn-default\" ng-click=\"drp.openStart($event)\">\n" +
    "          <i class=\"fa fa-calendar\"></i>\n" +
    "        </button>\n" +
    "    </span>\n" +
    "  </p>\n" +
    "\n" +
    "  <span ng-hide=\"field.transformer === '<' || field.transformer === '>' || field.transformer === '='\">tot</span>\n" +
    "\n" +
    "  <p class=\"input-group\" ng-hide=\"field.transformer === '>' || field.transformer === '='\">\n" +
    "    <input type=\"text\" class=\"form-control\" uib-datepicker-popup=\"{{drp.dateFormat}}\" ng-model=\"field.upperBound\"\n" +
    "           is-open=\"drp.endOpened\" ng-required=\"true\" datepicker-options=\"drp.options\"/>\n" +
    "    <span class=\"input-group-btn\">\n" +
    "        <button type=\"button\" class=\"btn btn-default\" ng-click=\"drp.openEnd($event)\">\n" +
    "          <i class=\"fa fa-calendar\"></i>\n" +
    "        </button>\n" +
    "    </span>\n" +
    "  </p>\n" +
    "</div>"
  );


  $templateCache.put('templates/query-editor-field.directive.html',
    "<div class=\"row voorwaarde qe-field {{ getOperatorClass() }}\">\n" +
    "  <div class=\"col-md-3\">\n" +
    "    <div class=\"form-group\">\n" +
    "      <select\n" +
    "          ng-options=\"fieldOption.name as fieldOption.label group by fieldOption.groupLabel for fieldOption in qe.fieldOptions | orderBy:['groupIndex','label']\"\n" +
    "          ng-model=\"field.name\" class=\"form-control\" ng-change=\"qe.fieldTypeSelected(field)\">\n" +
    "      </select>\n" +
    "    </div>\n" +
    "\n" +
    "  </div>\n" +
    "  <div class=\"col-md-3\">\n" +
    "    <div class=\"form-group\">\n" +
    "      <select ng-model=\"field.transformer\" class=\"form-control\"\n" +
    "              ng-options=\"transformer + (field.fieldType === 'date-range' ? '_DATE' : '') | translate for transformer in qe.transformers[field.name]\">\n" +
    "      </select>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-md-3 field-query-term\" ng-switch=\"field.fieldType\">\n" +
    "    <div ng-switch-when=\"string\">\n" +
    "      <input type=\"text\" ng-model=\"field.term\"\n" +
    "             class=\"form-control\"/>\n" +
    "    </div>\n" +
    "    <div ng-switch-when=\"tokenized-string\">\n" +
    "      <input type=\"text\" ng-model=\"field.term\"\n" +
    "             class=\"form-control\"/>\n" +
    "    </div>\n" +
    "    <div ng-switch-when=\"term\">\n" +
    "      <select ng-options=\"term.id as term.label for term in qe.termOptions[field.name] | orderBy:'label'\"\n" +
    "              ng-model=\"field.term\" class=\"form-control\">\n" +
    "        <option value=\"\">-- maak een keuze --</option>\n" +
    "      </select>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-switch-when=\"termNis\">\n" +
    "      <select ng-options=\"term.key as term.name for term in qe.termOptions[field.name]\"\n" +
    "              ng-model=\"field.term\" class=\"form-control\">\n" +
    "        <option value=\"\">-- maak een keuze --</option>\n" +
    "      </select>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-switch-when=\"choice\">\n" +
    "      <select ng-options=\"'choice.' + option | translate for option in qe.termOptions[field.name]\"\n" +
    "              ng-model=\"field.term\" class=\"form-control\">\n" +
    "        <option value=\"\">-- maak een keuze --</option>\n" +
    "      </select>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-switch-when=\"check\">\n" +
    "      <label class=\"radio-inline\">\n" +
    "        <input type=\"radio\" ng-model=\"field.term\" value=\"{{field.name}}\"> ja\n" +
    "      </label>\n" +
    "      <label class=\"radio-inline\">\n" +
    "        <input type=\"radio\" ng-model=\"field.term\" value=\"(!{{field.name}})\"> nee\n" +
    "      </label>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-switch-when=\"date-range\">\n" +
    "      <udb-query-editor-daterangepicker>\n" +
    "      </udb-query-editor-daterangepicker>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-switch-when=\"number\" ng-switch=\"field.transformer\">\n" +
    "      <div ng-switch-when=\"=\">\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"field.term\"/>\n" +
    "      </div>\n" +
    "\n" +
    "      <div ng-switch-when=\">\">\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"field.lowerBound\"/>\n" +
    "      </div>\n" +
    "\n" +
    "      <div ng-switch-when=\"<\">\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"field.upperBound\"/>\n" +
    "      </div>\n" +
    "\n" +
    "      <div ng-switch-when=\"><\">\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"field.lowerBound\"/>\n" +
    "        <span>tot</span>\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"field.upperBound\"/>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-md-2 col-xs-8\">\n" +
    "    <div class=\"form-group\">\n" +
    "      <div class=\"btn-group btn-group-justified\" role=\"group\">\n" +
    "        <a type=\"button\" class=\"btn btn-default\" ng-click=\"addSubGroup($index)\"\n" +
    "           ng-disabled=\"isSubGroup() && !$last\">\n" +
    "          AND\n" +
    "        </a>\n" +
    "        <a type=\"button\" class=\"btn btn-default\" ng-click=\"addField($index)\">\n" +
    "          OR\n" +
    "        </a>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-md-1 col-xs-4\">\n" +
    "    <button type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"removeField($index)\"\n" +
    "            ng-show=\"canRemoveField()\">\n" +
    "      <span aria-hidden=\"true\">×</span>\n" +
    "    </button>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/query-editor-modal.html',
    "<div class=\"modal-header\">\n" +
    "  <h2 class=\"modal-title\" translate-once=\"search.advancedQueryBuilder.title\"></h2>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"modal-body\">\n" +
    "\n" +
    "  <div>\n" +
    "    <p><span translate-once=\"search.advancedQueryBuilder.header.info\"></span>\n" +
    "      <a \n" +
    "        href='https://helpdesk.publiq.be/hc/nl/articles/360008632440-Hoe-kan-ik-activiteiten-zoeken-op-basis-van-verschillende-parameters' \n" +
    "        target='_blank'>\n" +
    "        <span translate-once=\"search.advancedQueryBuilder.header.link\"></span>\n" +
    "      </a>.\n" +
    "    </p>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"udb-query-editor\">\n" +
    "    <div class=\"panel panel-default\" ng-repeat=\"rootGroup in qe.groupedQueryTree.nodes\">\n" +
    "\n" +
    "      <div class=\"panel-heading\">\n" +
    "        <div class=\"row\">\n" +
    "          <div class=\"col-sm-3\">\n" +
    "            <h3 class=\"panel-title\"><span translate-once=\"search.advancedQueryBuilder.group\"></span><span ng-bind=\"$index + 1\"></span></h3>\n" +
    "          </div>\n" +
    "          <div class=\"col-sm-7\">\n" +
    "            <div class=\"btn-group control-in-uitsluiten\" role=\"group\" aria-label=\"...\">\n" +
    "              <button type=\"button\" class=\"btn btn-default btn-sm\" ng-click=\"qe.toggleExcludeGroup(rootGroup)\">\n" +
    "                <span ng-hide=\"rootGroup.excluded\" class=\"fa fa-check-circle\"></span>\n" +
    "                <span translate-once=\"search.advancedQueryBuilder.include\"></span>\n" +
    "              </button>\n" +
    "              <button type=\"button\" class=\"btn btn-default btn-sm\" ng-click=\"qe.toggleExcludeGroup(rootGroup)\">\n" +
    "                <span ng-show=\"rootGroup.excluded\" class=\"fa fa-check-circle\"></span>\n" +
    "                <span translate-once=\"search.advancedQueryBuilder.exclude\"></span>\n" +
    "              </button>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "          <div class=\"col-sm-2\">\n" +
    "            <button type=\"button\" class=\"close\" aria-label=\"Close\"\n" +
    "                ng-show=\"qe.canRemoveGroup()\" ng-click=\"qe.removeGroup($index)\">\n" +
    "              <span aria-hidden=\"true\">×</span>\n" +
    "            </button>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"panel-body\">\n" +
    "        <div ng-repeat=\"field in rootGroup.nodes\" ng-switch=\"field.type\">\n" +
    "          <div ng-switch-default>\n" +
    "            <udb-query-editor-field></udb-query-editor-field>\n" +
    "          </div>\n" +
    "\n" +
    "          <div ng-switch-when=\"group\">\n" +
    "            <udb-query-editor-field ng-repeat=\"field in field.nodes\"></udb-query-editor-field>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <p>\n" +
    "      <a type=\"button\" class=\"btn btn-link\" ng-click=\"qe.addGroup()\">\n" +
    "        <i class=\"fa fa-plus-circle\"></i> <span translate-once=\"search.advancedQueryBuilder.addGroup\"></span>\n" +
    "      </a>\n" +
    "    </p>\n" +
    "\n" +
    "    <div class=\"modal-footer\">\n" +
    "      <div class=\"row\">\n" +
    "\n" +
    "        <div class=\"pull-right\">\n" +
    "          <a type=\"button\" class=\"btn btn-default\" ng-click=\"qe.stopEditing()\">\n" +
    "            <span translate-once=\"search.advancedQueryBuilder.cancel\"></span>\n" +
    "          </a>\n" +
    "          <button type=\"button\" class=\"btn btn-primary\" ng-click=\"qe.updateQueryString()\" translate-once=\"search.search\">\n" +
    "            <span translate-once=\"search.advancedQueryBuilder.search\"></span>    \n" +
    "          </button>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/query-editor.directive.html',
    "<div class=\"udb-query-editor\">\n" +
    "  <div class=\"panel panel-default\" ng-repeat=\"rootGroup in qe.groupedQueryTree.nodes\">\n" +
    "\n" +
    "    <div class=\"panel-heading\">\n" +
    "      <div class=\"row\">\n" +
    "        <div class=\"col-sm-3\">\n" +
    "          <h3 class=\"panel-title\"><span translate-once=\"search.advancedQueryBuilder.group\"></span><span ng-bind=\"$index + 1\"></span></h3>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-7\">\n" +
    "          <div class=\"btn-group control-in-uitsluiten\" role=\"group\" aria-label=\"...\">\n" +
    "            <button type=\"button\" class=\"btn btn-default btn-sm\" ng-click=\"qe.toggleExcludeGroup(rootGroup)\">\n" +
    "              <span ng-hide=\"rootGroup.excluded\" class=\"fa fa-check-circle\"></span>\n" +
    "              <span translate-once=\"search.advancedQueryBuilder.include\"></span>\n" +
    "            </button>\n" +
    "            <button type=\"button\" class=\"btn btn-default btn-sm\" ng-click=\"qe.toggleExcludeGroup(rootGroup)\">\n" +
    "              <span ng-show=\"rootGroup.excluded\" class=\"fa fa-check-circle\"></span>\n" +
    "              <span translate-once=\"search.advancedQueryBuilder.exclude\"></span>\n" +
    "            </button>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-2\">\n" +
    "          <button type=\"button\" class=\"close\" aria-label=\"Close\"\n" +
    "                  ng-show=\"qe.canRemoveGroup()\" ng-click=\"qe.removeGroup($index)\">\n" +
    "            <span aria-hidden=\"true\">×</span>\n" +
    "          </button>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"panel-body\">\n" +
    "      <div ng-repeat=\"field in rootGroup.nodes\" ng-switch=\"field.type\">\n" +
    "        <div ng-switch-default>\n" +
    "          <udb-query-editor-field></udb-query-editor-field>\n" +
    "        </div>\n" +
    "\n" +
    "        <div ng-switch-when=\"group\">\n" +
    "          <udb-query-editor-field ng-repeat=\"field in field.nodes\"></udb-query-editor-field>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"qe.addGroup()\">\n" +
    "    <i class=\"fa fa-plus-circle\"></i> <span translate-once=\"search.advancedQueryBuilder.addGroup\"></span>\n" +
    "  </button>\n" +
    "  <div class=\"pull-right\">\n" +
    "    <a type=\"button\" class=\"btn btn-default\" ng-click=\"qe.stopEditing()\">\n" +
    "      <span translate-once=\"search.advancedQueryBuilder.cancel\"></span>\n" +
    "    </a>\n" +
    "    <button type=\"button\" class=\"btn btn-primary\" ng-click=\"qe.updateQueryString()\" translate-once=\"search.search\">\n" +
    "      <span translate-once=\"search.advancedQueryBuilder.search\"></span>\n" +
    "    </button>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/search-bar.directive.html',
    "\n" +
    "<form class=\"navbar-form navbar-left udb-header-search\" role=\"search\"\n" +
    "      ng-class=\"{'has-errors': sb.hasErrors, 'is-editing': sb.isEditing}\">\n" +
    "  <div class=\"form-group has-warning has-feedback\">\n" +
    "    <input type=\"text\" class=\"form-control\" ng-model=\"sb.queryString\" ng-change=\"sb.queryChanged()\">\n" +
    "    <span class=\"dropdown saved-search-icon\" uib-dropdown>\n" +
    "      <i class=\"fa fa-bookmark\" class=\"dropdown-toggle\" uib-dropdown-toggle></i>\n" +
    "      <ul class=\"dropdown-menu\" uib-dropdown-menu role=\"menu\">\n" +
    "        <li role=\"presentation\" class=\"dropdown-header\" translate-once=\"search.savedSearches.savedSearches\"></li>\n" +
    "        <li ng-repeat=\"savedSearch in sb.savedSearches\">\n" +
    "          <a ng-bind=\"::savedSearch.name\"\n" +
    "             ng-click=\"sb.find(savedSearch.query)\">\n" +
    "          </a>\n" +
    "        </li>\n" +
    "        <li class=\"divider\"></li>\n" +
    "        <li><a href=\"saved-searches\" translate-once=\"search.manage\">Beheren</a></li>\n" +
    "      </ul>\n" +
    "    </span>\n" +
    "    <i ng-show=\"sb.hasErrors\" class=\"fas fa-exclamation-triangle warning-icon\"></i>\n" +
    "  </div>\n" +
    "  <button type=\"submit\" class=\"btn udb-search-button\" ng-click=\"sb.find()\">\n" +
    "    <i class=\"fa fa-search\"></i>\n" +
    "  </button>\n" +
    "</form>\n" +
    "\n" +
    "<ul class=\"nav navbar-nav\">\n" +
    "  <li>\n" +
    "    <a href=\"#\" ng-click=\"sb.editQuery()\" class=\"advanced-search\" ng-class=\"{'is-editing': sb.isEditing}\"\n" +
    "       translate-once=\"search.advanced\">Geavanceerd</a>\n" +
    "  </li>\n" +
    "</ul>\n" +
    "\n" +
    "<ul class=\"alert alert-warning list-unstyled\" style=\"clear: both; margin: 0 10px\" ng-if=\"sb.errors.length\">\n" +
    "  <li ng-repeat=\"(index,error) in sb.errors track by index\" ng-bind-html=\"error\" />\n" +
    "</ul>\n"
  );


  $templateCache.put('templates/event.directive.html',
    "<div class=\"event-content\">\n" +
    "  <div class=\"col-sm-5 rv-first-column\">\n" +
    "    <div class=\"rv-item-sidebar\">\n" +
    "      <div class=\"rv-selection-state\" ng-class=\"{'disabled': resultViewer.querySelected}\"\n" +
    "           ng-click=\"resultViewer.toggleSelect(event)\">\n" +
    "        <span ng-class=\"resultViewer.isOfferSelected(event) ? 'fas fa-check-square' : 'far fa-square'\"></span>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"udb-short-info\">\n" +
    "      <span class=\"udb-category\" ng-bind=\"event.type.label\"></span>\n" +
    "      <span class=\"udb-short-info-seperator\" ng-show=\"event.type && event.theme\"> • </span>\n" +
    "      <span class=\"udb-theme\" ng-bind=\"event.theme.label\"></span>\n" +
    "    </div>\n" +
    "    <div class=\"udb-title\">\n" +
    "      <a ng-href=\"{{ event.url + '/preview' }}\" ng-bind=\"event.name\"></a>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-2\">\n" +
    "    <div class=\"udb-place-name\" ng-bind=\"event.location.name\"></div>\n" +
    "    <div class=\"udb-place-city\" ng-hide=\"event.location.isDummyPlaceForEducationEvents || event.attendanceMode == 'online'\" ng-bind=\"event.location.address.addressLocality\"></div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-2\" ng-switch=\"event.calendarType\">\n" +
    "    <span ng-switch-when=\"permanent\">permanent</span>\n" +
    "    <span ng-switch-when=\"single\">\n" +
    "        <span class=\"udb-start-date\" ng-bind=\"event.startDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "        <span ng-if=\"resultViewer.isDifferentDate(event.startDate, event.endDate)\">\n" +
    "          <span class=\"udb-end-date\" ng-bind=\"event.endDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "        </span>\n" +
    "    </span>\n" +
    "    <span ng-switch-when=\"periodic\" class=\"udb-date-range\">\n" +
    "      <span class=\"udb-start-date\" ng-bind=\"event.startDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "        <i class=\"fa fa-long-arrow-right\"></i>\n" +
    "        <span class=\"udb-end-date\" ng-bind=\"event.endDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "    </span>\n" +
    "    <span ng-switch-when=\"multiple\" class=\"udb-date-range\">\n" +
    "        <span class=\"udb-start-date\" ng-bind=\"event.startDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "        ,…,\n" +
    "        <span class=\"udb-end-date\" ng-bind=\"event.endDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "    </span>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-3 rv-specific-event-info\">\n" +
    "    <div class=\"rv-event-info-input udb-organizer\"\n" +
    "         ng-show=\"resultViewer.activeSpecific.id === 'input'\">\n" +
    "      <div>\n" +
    "        <span class=\"far fa-clock\"></span>&nbsp;\n" +
    "        <span ng-bind=\"event.modified | date : 'dd/MM/yyyy • HH:mm'\"></span>\n" +
    "      </div>\n" +
    "      <div ng-if=\"::eventCtrl.isGodUser\" class=\"udb-email\">\n" +
    "        <span class=\"fa fa-user\"></span>&nbsp;\n" +
    "        <span>\n" +
    "          <a href=\"{{ eventCtrl.uitId + event.creator }}\"><span ng-bind=\"event.creator\"></span></a>\n" +
    "        </span>\n" +
    "      </div>\n" +
    "      <div ng-if=\"event.organizer\" class=\"udb-organizer-name\">\n" +
    "        <span class=\"far fa-building\"></span>&nbsp;\n" +
    "        <span ng-bind=\"event.organizer.name\"></span>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-if=\"resultViewer.activeSpecific.id === 'accessibility'\" class=\"rv-event-info-accessibility\">\n" +
    "      <udb-offer-accessibility-info offer=\"event\" offer-type=\"offerType\"></udb-offer-accessibility-info>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-12\" ng-show=\"eventCtrl.translation\">\n" +
    "    <div class=\"udb-details row\">\n" +
    "\n" +
    "      <button type=\"button\" class=\"close\" ng-click=\"eventCtrl.stopTranslating()\">\n" +
    "        <span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span>\n" +
    "      </button>\n" +
    "\n" +
    "      <div class=\"col-sm-12\">\n" +
    "        <div ng-switch=\"eventCtrl.hasActiveTranslation()\">\n" +
    "          <div ng-switch-when=\"false\" class=\"udb-translation-info\">\n" +
    "            Voer een {{ eventCtrl.activeLanguage.toUpperCase()+'_ADJECTIVE' | translate }} vertaling in\n" +
    "          </div>\n" +
    "\n" +
    "          <div ng-switch-default class=\"udb-translation-info\">\n" +
    "            Wijzig de {{ eventCtrl.activeLanguage.toUpperCase()+'_ADJECTIVE'  | translate }} vertaling\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"row udb-property-translation\">\n" +
    "          <div class=\"col-sm-6\">\n" +
    "            <div class=\"form-group\">\n" +
    "              <label>Titel</label>\n" +
    "              <input type=\"text\" class=\"form-control\" ng-model=\"eventCtrl.translation.name\"/>\n" +
    "            </div>\n" +
    "            <div ng-show=\"eventCtrl.hasPropertyChanged('name') && eventCtrl.hasActiveTranslation()\">\n" +
    "              <button ng-disabled=\"!eventCtrl.translation.name\" class=\"btn btn-danger\" ng-click=\"eventCtrl.applyPropertyChanges('name')\">\n" +
    "                Opslaan\n" +
    "              </button>\n" +
    "              <button class=\"btn btn-default\" ng-click=\"eventCtrl.undoPropertyChanges('name')\">Annuleren</button>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "          <div class=\"col-sm-6\">\n" +
    "            <strong>Basis-titel</strong>\n" +
    "            <div ng-bind-html=\"::event.name\"></div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "\n" +
    "        <div class=\"row udb-property-translation\">\n" +
    "          <div class=\"col-sm-6\">\n" +
    "            <div class=\"form-group\">\n" +
    "              <label>Beschrijving</label>\n" +
    "              <textarea class=\"form-control resize-vertical\" rows=\"3\" ng-model=\"eventCtrl.translation.description\"></textarea>\n" +
    "            </div>\n" +
    "            <div ng-show=\"eventCtrl.hasPropertyChanged('description') && eventCtrl.hasActiveTranslation()\">\n" +
    "              <button ng-disabled=\"!eventCtrl.translation.description\" class=\"btn btn-danger\" ng-click=\"eventCtrl.applyPropertyChanges('description')\">\n" +
    "                Opslaan\n" +
    "              </button>\n" +
    "              <button class=\"btn btn-default\" ng-click=\"eventCtrl.undoPropertyChanges('description')\">Annuleren</button>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "          <div class=\"col-sm-6\">\n" +
    "            <strong>Basis-beschrijving</strong>\n" +
    "            <div ng-bind-html=\"event.description\"></div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div ng-hide=\"eventCtrl.hasActiveTranslation()\">\n" +
    "          <button ng-disabled=\"!eventCtrl.translation.name\" class=\"btn btn-danger\" ng-click=\"eventCtrl.translate()\">Opslaan</button>\n" +
    "          <button class=\"btn btn-default\" ng-click=\"eventCtrl.stopTranslating()\">Annuleren</button>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-12\" ng-show=\"resultViewer.isShowingProperties()\">\n" +
    "    <div class=\"udb-details row\">\n" +
    "      <div class=\"col-sm-2\" ng-if=\"resultViewer.eventProperties.image.visible\">\n" +
    "        <img ng-if=\"event.image\" ng-src=\"{{event.image + '?maxwidth=150&maxheight=150'}}\" alt=\"{{event.name}}\" class=\"img-responsive\">\n" +
    "      </div>\n" +
    "      <div ng-class=\"resultViewer.eventProperties.image.visible ? 'col-sm-10' : 'col-sm-12'\">\n" +
    "        <div ng-if=\"resultViewer.eventProperties.description.visible\">\n" +
    "          <div ng-bind-html=\"event.description\" class=\"udb-description\"></div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div ng-if=\"resultViewer.eventProperties.labels.visible && event.labels\" class=\"udb-labels\">\n" +
    "          <span ng-hide=\"event.labels.length\">Dit evenement is nog niet gelabeld.</span>\n" +
    "          <udb-label-select labels=\"event.labels\"\n" +
    "                            label-added=\"eventCtrl.labelAdded(label)\"\n" +
    "                            label-removed=\"eventCtrl.labelRemoved(label)\"></udb-label-select>\n" +
    "          <div ng-if=\"eventCtrl.labelResponse === 'error'\" class=\"alert alert-danger\">\n" +
    "            Het toevoegen van het label '{{eventCtrl.addedLabel}}' is niet gelukt.\n" +
    "          </div>\n" +
    "          <div ng-if=\"eventCtrl.labelResponse === 'success'\" class=\"alert alert-success\">\n" +
    "            Het label '{{eventCtrl.addedLabel}}' werd succesvol toegevoegd.\n" +
    "          </div>\n" +
    "          <div ng-if=\"eventCtrl.labelResponse === 'unlabelError'\" class=\"alert alert-danger\">\n" +
    "            <span ng-if=\"eventCtrl.labelsError !== 'Label not allowed'\" ng-bind=\"eventCtrl.labelsError\"></span>\n" +
    "            <span ng-if=\"eventCtrl.labelsError === 'Label not allowed'\" translate-once=\"errors.labelNotAllowed\"></span>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/place.directive.html',
    "<div class=\"place-content\">\n" +
    "  <div class=\"col-sm-5 rv-first-column\">\n" +
    "    <div class=\"rv-item-sidebar\">\n" +
    "      <div class=\"rv-selection-state\" ng-class=\"{'disabled': resultViewer.querySelected}\"\n" +
    "           ng-click=\"resultViewer.toggleSelect(event)\">\n" +
    "        <span ng-class=\"resultViewer.isOfferSelected(event) ? 'fas fa-check-square' : ' far fa-square'\"></span>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"udb-short-info\">\n" +
    "      <span class=\"udb-category\" ng-bind=\"event.type.label\"></span>\n" +
    "      <span class=\"udb-short-info-seperator\" ng-show=\"event.type && event.theme\"> • </span>\n" +
    "      <span class=\"udb-theme\" ng-bind=\"event.theme.label\"></span>\n" +
    "    </div>\n" +
    "    <div class=\"udb-title\">\n" +
    "      <a ng-href=\"{{ event.url + '/preview' }}\" ng-bind=\"event.name\"></a>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-2\">\n" +
    "    <div class=\"udb-place-city\" ng-bind=\"event.address.addressLocality\"></div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-2\" ng-switch=\"event.calendarType\">\n" +
    "    <span ng-switch-when=\"permanent\">permanent</span>\n" +
    "    <span ng-switch-when=\"periodic\" class=\"udb-date-range\">\n" +
    "      <span class=\"udb-start-date\" ng-bind=\"event.startDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "        <i class=\"fa fa-long-arrow-right\"></i>\n" +
    "        <span class=\"udb-end-date\" ng-bind=\"event.endDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "    </span>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-3 rv-specific-event-info\">\n" +
    "    <div class=\"rv-event-info-input udb-organizer\"\n" +
    "         ng-show=\"resultViewer.activeSpecific.id === 'input'\">\n" +
    "      <div>\n" +
    "        <span class=\"far fa-clock\"></span>&nbsp;\n" +
    "        <span ng-bind=\"event.modified | date : 'dd/MM/yyyy • HH:mm'\"></span>\n" +
    "      </div>\n" +
    "      <div ng-if=\"::placeCtrl.isGodUser\" class=\"udb-email\">\n" +
    "        <span class=\"fa fa-user\"></span>&nbsp;\n" +
    "        <span>\n" +
    "          <a href=\"{{ placeCtrl.uitId + event.creator }}\"><span ng-bind=\"event.creator\"></span></a>\n" +
    "        </span>\n" +
    "      </div>\n" +
    "      <div class=\"udb-organizer-name\">\n" +
    "        <span class=\"far fa-building\"></span>&nbsp;\n" +
    "        <span ng-bind=\"event.organizer ? event.organizer.name : '-'\"></span>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"rv-event-info-price\"\n" +
    "         ng-show=\"resultViewer.activeSpecific.id === 'price'\" ng-switch=\"event.pricing\">\n" +
    "      <span ng-switch-when=\"free\">gratis</span>\n" +
    "      <span ng-switch-when=\"payed\">\n" +
    "          <i class=\"fa fa-eur meta icon\"></i><span ng-if=\"event.price\" ng-bind=\"event.price | currency\"></span>\n" +
    "      </span>\n" +
    "      <span ng-switch-when=\"unknown\">niet ingevoerd</span>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"rv-event-info-translation btn-toolbar\"\n" +
    "         ng-show=\"resultViewer.activeSpecific.id === 'translation'\">\n" +
    "      <button type=\"button\" ng-repeat=\"language in ::placeCtrl.languageSelector\"\n" +
    "              ng-class=\"{active: placeCtrl.activeLanguage === language.lang}\"\n" +
    "              class=\"btn btn-default\" ng-click=\"placeCtrl.toggleLanguage(language.lang)\">\n" +
    "        <span class=\"fa {{placeCtrl.getLanguageTranslationIcon(language.lang)}}\"></span>\n" +
    "        {{language.lang}}\n" +
    "      </button>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-if=\"resultViewer.activeSpecific.id === 'accessibility'\" class=\"rv-event-info-accessibility\">\n" +
    "      <udb-offer-accessibility-info offer=\"event\" offer-type=\"offerType\"></udb-offer-accessibility-info>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-12\" ng-show=\"placeCtrl.translation\">\n" +
    "    <div class=\"udb-details row\">\n" +
    "\n" +
    "      <button type=\"button\" class=\"close\" ng-click=\"placeCtrl.stopTranslating()\">\n" +
    "        <span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span>\n" +
    "      </button>\n" +
    "\n" +
    "      <div class=\"col-sm-12\">\n" +
    "        <div ng-switch=\"placeCtrl.hasActiveTranslation()\">\n" +
    "          <div ng-switch-when=\"false\" class=\"udb-translation-info\">\n" +
    "            Voer een {{ placeCtrl.activeLanguage.toUpperCase()+'_ADJECTIVE' | translate }} vertaling in\n" +
    "          </div>\n" +
    "\n" +
    "          <div ng-switch-default class=\"udb-translation-info\">\n" +
    "            Wijzig de {{ placeCtrl.activeLanguage.toUpperCase()+'_ADJECTIVE'  | translate }} vertaling\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"row udb-property-translation\">\n" +
    "          <div class=\"col-sm-6\">\n" +
    "            <div class=\"form-group\">\n" +
    "              <label>Titel</label>\n" +
    "              <input type=\"text\" class=\"form-control\" ng-model=\"placeCtrl.translation.name\"/>\n" +
    "            </div>\n" +
    "            <div ng-show=\"placeCtrl.hasPropertyChanged('name') && placeCtrl.hasActiveTranslation()\">\n" +
    "              <button ng-disabled=\"!placeCtrl.translation.name\" class=\"btn btn-danger\" ng-click=\"placeCtrl.applyPropertyChanges('name')\">\n" +
    "                Opslaan\n" +
    "              </button>\n" +
    "              <button class=\"btn btn-default\" ng-click=\"placeCtrl.undoPropertyChanges('name')\">Annuleren</button>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "          <div class=\"col-sm-6\">\n" +
    "            <strong>Basis-titel</strong>\n" +
    "            <div ng-bind-html=\"::event.name\"></div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "\n" +
    "        <div class=\"row udb-property-translation\">\n" +
    "          <div class=\"col-sm-6\">\n" +
    "            <div class=\"form-group\">\n" +
    "              <label>Beschrijving</label>\n" +
    "              <textarea class=\"form-control resize-vertical\" rows=\"3\" ng-model=\"placeCtrl.translation.description\"></textarea>\n" +
    "            </div>\n" +
    "            <div ng-show=\"placeCtrl.hasPropertyChanged('description') && placeCtrl.hasActiveTranslation()\">\n" +
    "              <button ng-disabled=\"!placeCtrl.translation.description\" class=\"btn btn-danger\" ng-click=\"placeCtrl.applyPropertyChanges('description')\">\n" +
    "                Opslaan\n" +
    "              </button>\n" +
    "              <button class=\"btn btn-default\" ng-click=\"placeCtrl.undoPropertyChanges('description')\">Annuleren</button>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "          <div class=\"col-sm-6\">\n" +
    "            <strong>Basis-beschrijving</strong>\n" +
    "            <div ng-bind-html=\"event.description\"></div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div ng-hide=\"placeCtrl.hasActiveTranslation()\">\n" +
    "          <button ng-disabled=\"!placeCtrl.translation.name\" class=\"btn btn-danger\" ng-click=\"placeCtrl.translate()\">Opslaan</button>\n" +
    "          <button class=\"btn btn-default\" ng-click=\"placeCtrl.stopTranslating()\">Annuleren</button>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-12\" ng-show=\"resultViewer.isShowingProperties()\">\n" +
    "    <div class=\"udb-details row\">\n" +
    "      <div class=\"col-sm-2\" ng-if=\"resultViewer.eventProperties.image.visible\">\n" +
    "        <img ng-if=\"event.image\" ng-src=\"{{event.image + '?maxwidth=150&maxheight=150'}}\" alt=\"{{event.name}}\" class=\"img-responsive\">\n" +
    "      </div>\n" +
    "      <div ng-class=\"resultViewer.eventProperties.image.visible ? 'col-sm-10' : 'col-sm-12'\">\n" +
    "        <div ng-if=\"resultViewer.eventProperties.description.visible\">\n" +
    "          <div ng-bind-html=\"event.description\" class=\"udb-description\"></div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div ng-if=\"resultViewer.eventProperties.labels.visible && event.labels\" class=\"udb-labels\">\n" +
    "          <span ng-hide=\"event.labels.length\">Deze plaats is nog niet gelabeld.</span>\n" +
    "          <udb-label-select labels=\"event.labels\"\n" +
    "                            label-added=\"placeCtrl.labelAdded(label)\"\n" +
    "                            label-removed=\"placeCtrl.labelRemoved(label)\"></udb-label-select>\n" +
    "          <div ng-if=\"placeCtrl.labelResponse === 'error'\" class=\"alert alert-danger\">\n" +
    "            Het toevoegen van het label '{{placeCtrl.labelsError.name}}' is niet gelukt.\n" +
    "          </div>\n" +
    "          <div ng-if=\"placeCtrl.labelResponse === 'success'\" class=\"alert alert-success\">\n" +
    "            Het label '{{placeCtrl.addedLabel}}' werd succesvol toegevoegd.\n" +
    "          </div>\n" +
    "          <div ng-if=\"placeCtrl.labelResponse === 'unlabelError'\" class=\"alert alert-danger\">\n" +
    "            <span ng-if=\"placeCtrl.labelsError !== 'Label not allowed'\" ng-bind=\"placeCtrl.labelsError\"></span>\n" +
    "            <span ng-if=\"placeCtrl.labelsError === 'Label not allowed'\" translate-once=\"errors.labelNotAllowed\"></span>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/search-facilities-modal.html',
    "<div class=\"modal-header\">\n" +
    "  <h4 class=\"modal-title\">Toegankelijkheidsinformatie</h4>\n" +
    "  <a href=\"https://documentatie.uitdatabank.be/content/uitdatabank/latest/categorisatie/voorzieningen.html\" target=\"_blank\" rel=\"noopener noreferrer\">Meer info</a>\n" +
    "</div>\n" +
    "<div class=\"modal-body\">\n" +
    "\n" +
    "  <div ng-repeat=\"(type, facilitiesForType) in facilities\">\n" +
    "    <label ng-bind=\"::('facilityLabel.' + type) | translate\"></label>\n" +
    "    <div class=\"checkbox\" ng-repeat=\"facility in ::facilitiesForType\">\n" +
    "      <label>\n" +
    "        <input type=\"checkbox\" ng-model=\"facility.selected\">\n" +
    "        <span ng-bind=\"::facility.label\"></span>\n" +
    "      </label>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"alert alert-danger\" ng-show=\"error\">\n" +
    "    Er ging iets fout tijdens het opslaan van de voorzieningen.\n" +
    "  </div>\n" +
    "\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"cancel()\">Annuleren</button>\n" +
    "  <button type=\"button\" class=\"btn btn-primary\" ng-click=\"saveFacilities()\">\n" +
    "    Bevestigen <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "  </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/search.html',
    "<div class=\"row rv-result-viewer\">\n" +
    "  <div class=\"col-sm-12 rv-search-results\" ng-class=\"{loading: resultViewer.loading}\">\n" +
    "\n" +
    "      <div class=\"rv-controls\" ng-show=\"resultViewer.totalItems\">\n" +
    "          <div class=\"row\">\n" +
    "              <div class=\"col-xs-12\">\n" +
    "                  <ul class=\"nav nav-pills\" role=\"tablist\">\n" +
    "                      <li udb-save-search ng-show=\"activeQuery.queryString\"\n" +
    "                              udb-query-string=\"activeQuery.queryString\">\n" +
    "                      </li>\n" +
    "                      <li>\n" +
    "                          <p class=\"rv-item-counter\">\n" +
    "                              <span ng-if=\"resultViewer.totalItems === 1\" translate-once=\"search.oneResult\"></span>\n" +
    "                              <span ng-if=\"resultViewer.totalItems > 1\" translate=\"search.multipleResults\" translate-values=\"{count: resultViewer.totalItems}\"></span>\n" +
    "                          </p>\n" +
    "                      </li>\n" +
    "                      <li>\n" +
    "                          <label for=\"rv-event-{{propertyKey}}\" class=\"rv-control-toggle\"\n" +
    "                                 ng-class=\"{active: resultViewer.eventProperties[propertyKey].visible}\"\n" +
    "                                 ng-repeat=\"propertyKey in ['description', 'labels', 'image']\">\n" +
    "                              <input type=\"checkbox\" id=\"rv-event-{{propertyKey}}\"\n" +
    "                                     ng-model=\"resultViewer.eventProperties[propertyKey].visible\"/>\n" +
    "                              <span ng-bind=\"resultViewer.eventProperties[propertyKey].name\"></span>\n" +
    "                          </label>\n" +
    "                      </li>\n" +
    "                  </ul>\n" +
    "              </div>\n" +
    "          </div>\n" +
    "      </div>\n" +
    "\n" +
    "    <p class=\"rv-no-result-notice\" ng-show=\"!resultViewer.loading && resultViewer.totalItems === 0\" ng-cloak translate-once=\"search.noEventsFound\">\n" +
    "        Geen evenementen gevonden, probeer een andere zoekopdracht.\n" +
    "    </p>\n" +
    "\n" +
    "    <div ng-show=\"resultViewer.totalItems\">\n" +
    "        <div class=\"rv-item-info\">\n" +
    "\n" +
    "            <div class=\"row\" ng-hide=\"resultViewer.selectedOffers.length\">\n" +
    "                <div class=\"col-sm-5 rv-first-column\" translate-once=\"search.what\">Wat</div>\n" +
    "                <div class=\"col-sm-2\" translate-once=\"search.where\">Waar</div>\n" +
    "                <div class=\"col-sm-2\" translate-once=\"search.when\">Wanneer</div>\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <div role=\"presentation\" class=\"dropdown\">\n" +
    "                        <span class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n" +
    "                            <span class=\"selectedField\" ng-bind=\"resultViewer.activeSpecific.name\"></span> <span class=\"caret\"></span>\n" +
    "                        </span>\n" +
    "                        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"rv-event-specific\">\n" +
    "                            <li role=\"presentation\" ng-repeat=\"specific in resultViewer.eventSpecifics\">\n" +
    "                                <a role=\"menuitem\" tabindex=\"-1\" href=\"#\" ng-bind=\"specific.name\"\n" +
    "                                   ng-click=\"resultViewer.activateSpecific(specific)\"></a>\n" +
    "                            </li>\n" +
    "                        </ul>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"row\" ng-show=\"resultViewer.selectedOffers.length\">\n" +
    "                <div class=\"col-sm-12 rv-first-column\">\n" +
    "                    <ng-pluralize count=\"resultViewer.querySelected ? resultViewer.totalItems : resultViewer.selectedOffers.length\"\n" +
    "                                  when=\"{'1': '1 item geselecteerd',\n" +
    "                                         'other': '{} items geselecteerd'}\">\n" +
    "                    </ng-pluralize>\n" +
    "\n" +
    "                    <button class=\"btn btn-default rv-action\" ng-click=\"label()\">\n" +
    "                        <i class=\"fa fa-tag\"></i> <span translate-once=\"search.label\"></span>\n" +
    "                    </button>\n" +
    "                    <button class=\"btn btn-default rv-action\" ng-click=\"addLanguageIcons()\" ng-if=\"language === 'nl'\">\n" +
    "                      <i class=\"fa fa-comment-alt\"></i> <span translate-once=\"search.languageIcons\"></span>\n" +
    "                    </button>\n" +
    "                    <button class=\"btn btn-default rv-action\" ng-click=\"exportEvents()\">\n" +
    "                        <i class=\"fa fa-cloud-download\"></i> <span translate-once=\"search.exportButton\"></span>\n" +
    "                    </button>\n" +
    "                    <a href=\"#\" class=\"alert-link rv-action\" ng-click=\"resultViewer.deselectAll()\"><span translate-once=\"search.deselect\"></span></a>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"rv-item-sidebar\">\n" +
    "                <div class=\"rv-selection-state\">\n" +
    "                    <span class=\"dropdown\" uib-dropdown ng-hide=\"resultViewer.selectedOffers.length\">\n" +
    "                      <span class=\"dropdown-toggle {{resultViewer.selectionState.icon}}\" uib-dropdown-toggle>\n" +
    "                      </span>\n" +
    "                      <ul class=\"dropdown-menu\">\n" +
    "                          <li role=\"presentation\" class=\"dropdown-header\">Selecteer</li>\n" +
    "                          <li ng-click=\"resultViewer.toggleSelection()\">\n" +
    "                              <a href>Alles op deze pagina <ng-pluralize count=\"resultViewer.events.length\" when=\"{'0': '(0 items)','one': '(1 item)','other': '({} items)'}\"></ng-pluralize></a>\n" +
    "                          </li>\n" +
    "                          <li ng-click=\"resultViewer.selectQuery()\">\n" +
    "                              <a href>Alle resultaten <ng-pluralize count=\"resultViewer.totalItems\" when=\"{'0': '(0 items)','one': '(1 item)','other': '({} items)'}\"></ng-pluralize></a>\n" +
    "                          </li>\n" +
    "                      </ul>\n" +
    "                    </span>\n" +
    "\n" +
    "                    <span ng-show=\"resultViewer.selectedOffers.length\" ng-click=\"resultViewer.toggleSelection()\"\n" +
    "                          class=\" fa {{resultViewer.selectionState.icon}}\"></span>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div ng-repeat=\"event in resultViewer.events\">\n" +
    "            <udb-event class=\"row rv-item\" ng-hide=\"eventCtrl.fetching\" ng-if=\"event['@type'] == 'Event'\"\n" +
    "                       ng-class=\"{selected: resultViewer.isOfferSelected(event)}\">\n" +
    "            </udb-event>\n" +
    "\n" +
    "            <udb-place class=\"row rv-item\" ng-hide=\"placeCtrl.fetching\" ng-if=\"event['@type'] == 'Place'\"\n" +
    "                       ng-class=\"{selected: resultViewer.isOfferSelected(event)}\">\n" +
    "            </udb-place>\n" +
    "        </div>\n" +
    "\n" +
    "\n" +
    "      <uib-pagination total-items=\"resultViewer.totalItems\" ng-model=\"currentPage\" items-per-page=\"resultViewer.pageSize\"\n" +
    "                  ng-show=\"resultViewer.totalItems > 0\" max-size=\"10\" ng-change=\"pageChanged()\"></uib-pagination>\n" +
    "\n" +
    "    <div class=\"col-sm-12\" ng-show=\"realQuery\">\n" +
    "        <span class=\"help-block\">\n" +
    "          uitgevoerde query: <strong>{{realQuery}}</strong>\n" +
    "        </span>\n" +
    "    </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "    <div class=\"rv-loading-overlay\" ng-show=\"resultViewer.loading\">\n" +
    "        <i class=\"fa fa-circle-o-notch fa-spin\"></i> <span translate-once=\"search.search\">Zoeken</span>…\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/card-systems.html',
    "<div class=\"form-group\">\n" +
    "    <div class=\"card-system\">\n" +
    "        <label translate=\"uitpas.cardSystems.card_systems\"></label>\n" +
    "        <span ng-hide=\"cardSystemSelector.uitpasUnavailableType || (cardSystemSelector.availableCardSystems !== undefined)\">\n" +
    "            <i class=\"fa fa-circle-o-notch fa-spin\"></i> Loading...\n" +
    "        </span>\n" +
    "        <span ng-show=\"cardSystemSelector.persistingCardSystems\">\n" +
    "            <i class=\"fa fa-circle-o-notch fa-spin\"></i> Saving...\n" +
    "        </span>\n" +
    "\n" +
    "        <div class=\"card-systems\" ng-if=\"::cardSystemSelector.availableCardSystems\">\n" +
    "            <div class=\"uitpas-card-system row\" ng-repeat=\"cardSystem in cardSystemSelector.availableCardSystems\">\n" +
    "                <div class=\"col-sm-6\">\n" +
    "                    <div class=\"checkbox\">\n" +
    "                        <label>\n" +
    "                            <input type=\"checkbox\"\n" +
    "                                   ng-disabled=\"cardSystemSelector.persistingCardSystems\"\n" +
    "                                   ng-model=\"cardSystem.active\"\n" +
    "                                   ng-change=\"cardSystemSelector.activeCardSystemsChanged(cardSystem)\">\n" +
    "                                <span ng-bind=\"::cardSystem.name\"></span>\n" +
    "                        </label>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "\n" +
    "\n" +
    "                <div class=\"col-sm-6\" ng-if=\"cardSystem.distributionKeys.length\">\n" +
    "                    <select ng-model=\"cardSystem.assignedDistributionKey\"\n" +
    "                            ng-disabled=\"cardSystemSelector.persistingCardSystems || !cardSystem.active\"\n" +
    "                            ng-options=\"key as key.name for key in cardSystem.distributionKeys track by key.id\"\n" +
    "                            ng-change=\"cardSystemSelector.distributionKeyAssigned(cardSystem)\">\n" +
    "                    </select>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"alert alert-danger\" role=\"alert\" ng-show=\"cardSystemSelector.uitpasUnavailableType\">\n" +
    "            <p translate=\"uitpas.cardSystems.{{cardSystemSelector.uitpasUnavailableType}}\"></p>\n" +
    "            <button ng-if=\"cardSystemSelector.uitpasUnavailableType === 'not_found'\" class=\"btn btn-default\" ng-click=\"cardSystemSelector.refresh()\" translate=\"uitpas.cardSystems.retry\"></button>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>"
  );


  $templateCache.put('templates/uitpasInfo.html',
    "<div class=\"row extra-uitpas\" ng-if=\"showUitpasInfo\">\n" +
    "    <div class=\"extra-task\">\n" +
    "        <div class=\"col-sm-3\">\n" +
    "            <em class=\"extra-task-label\" translate-once=\"uitpas.uitpasInfo.uitpas\"></em>\n" +
    "            <span> </span>\n" +
    "            <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"savingUitpas\"></i>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-9\">\n" +
    "            <div class=\"alert alert-info\" ng-show=\"!upic.showCardSystems\">\n" +
    "                <p translate-once=\"uitpas.uitpasInfo.uitpas_alert\"></p>\n" +
    "            </div>\n" +
    "\n" +
    "            <div ng-if=\"upic.showCardSystems\">\n" +
    "                <div class=\"alert alert-info\"\n" +
    "                     role=\"alert\" translate-once=\"uitpas.uitpasInfo.uitpas_info\">\n" +
    "                </div>\n" +
    "\n" +
    "                <card-system-selector organisation=\"upic.organizer\" offer-data=\"upic.eventFormData\">\n" +
    "                </card-system-selector>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>"
  );


  $templateCache.put('templates/organisation-suggestion.directive.html',
    "<span class=\"organisation-name\" ng-bind-html=\"os.organisation.name | uibTypeaheadHighlight:os.query\"></span>\n" +
    "<small ng-if=\"os.organisation.isUitpas\" class=\"label label-default uitpas-tag\">UiTPAS</small>"
  );


  $templateCache.put('templates/organisation-uitpas-typeahead-template.html',
    "<a>\n" +
    "    <span class=\"organisation-name\" ng-bind-html=\"match.model.name | uibTypeaheadHighlight:query\"></span>\n" +
    "    <small ng-if=\"match.model.isUitpas\" class=\"label label-default uitpas-tag\">UiTPAS</small>\n" +
    "</a>"
  );

}]);
})();
